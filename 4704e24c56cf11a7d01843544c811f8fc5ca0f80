{
  "comments": [
    {
      "key": {
        "uuid": "3d369d1e_bf1faa47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2020-08-13T10:20:27Z",
      "side": 1,
      "message": "LGTM with one nit. Thanks for making the change.",
      "revId": "4704e24c56cf11a7d01843544c811f8fc5ca0f80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed9553e_e91477ae",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-08-13T12:13:40Z",
      "side": 1,
      "message": "It might be a bit tedious to handle errors from PerfStatOpts (while we don\u0027t have to do so for PerfRecordOpts/PerfStatRecordOpts). We can avoid this by checking pid in newPerf later. Actually, since callers can construct PerfOpts by themselves, I suppose we still need to check the validity of pid in newPerf.",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 74,
        "endChar": 1
      },
      "revId": "4704e24c56cf11a7d01843544c811f8fc5ca0f80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "527aaaa5_5b9d425b",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2020-08-13T10:20:27Z",
      "side": 1,
      "message": "nit: please wrap this part in a function to denote that this is for processing the output.",
      "range": {
        "startLine": 220,
        "startChar": 0,
        "endLine": 227,
        "endChar": 25
      },
      "revId": "4704e24c56cf11a7d01843544c811f8fc5ca0f80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb0adc00_4cfe6bba",
        "filename": "src/chromiumos/tast/local/profiler/profiler.go",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-08-13T12:13:40Z",
      "side": 1,
      "message": "Profilers of different types may have different structured outputs. I guess you tried to cover them by using map[string]interface{}, but then we lose type safety.\n\nTo be type-safe, you can add a pointer to an output variable in the constructor options, and fill it at the end of profiling, just like:\n\n type PerfStatOutput struct {\n   CyclesPerSecond float64\n }\n\n func PerfStatOpts(out *PerfStatOutput, pid int) *PerfOpts // out is filled in RunningProf.End",
      "range": {
        "startLine": 28,
        "startChar": 5,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "4704e24c56cf11a7d01843544c811f8fc5ca0f80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}