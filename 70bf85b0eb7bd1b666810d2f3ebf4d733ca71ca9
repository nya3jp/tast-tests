{
  "comments": [
    {
      "key": {
        "uuid": "7bc3316a_c9882323",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-12-17T16:29:29Z",
      "side": 1,
      "message": "This is package scope, so \"param\" is now reserved for all tests in this package.\nHow about give a bit more specific name in this case?\nE.g.: ccaUISanityParams. Or, you can just set bool directly to Val.",
      "range": {
        "startLine": 16,
        "startChar": 5,
        "endLine": 16,
        "endChar": 10
      },
      "revId": "70bf85b0eb7bd1b666810d2f3ebf4d733ca71ca9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acaa263d_b5435612",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2019-12-18T03:38:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bc3316a_c9882323",
      "range": {
        "startLine": 16,
        "startChar": 5,
        "endLine": 16,
        "endChar": 10
      },
      "revId": "70bf85b0eb7bd1b666810d2f3ebf4d733ca71ca9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d59f1518_07b56382",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-12-17T16:29:29Z",
      "side": 1,
      "message": "nit/style: How about\n\nParams: []testing.Param{{\n  Name: ...\n}, {\n  ...\n}},\n\nto reduce the redundant indents? (I often see in this style in Tast, so it\u0027s nice for consistency, too).",
      "revId": "70bf85b0eb7bd1b666810d2f3ebf4d733ca71ca9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68906c5f_22b462a6",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2019-12-18T03:38:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d59f1518_07b56382",
      "revId": "70bf85b0eb7bd1b666810d2f3ebf4d733ca71ca9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f729c2c4_f96d5dc0",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2019-12-17T10:18:06Z",
      "side": 1,
      "message": "It is not very clear why we need |cr2| here. Could you add some comments here?",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "70bf85b0eb7bd1b666810d2f3ebf4d733ca71ca9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36a68a2f_f8627111",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2019-12-17T10:28:20Z",
      "side": 1,
      "message": "golang is lexically block scoped, so if we use |cr, err :\u003d ...| in L55, it will just make a new shadowed var in the if {} scope.\n\nWe cannot use |cr, err \u003d ...| in L55 because |err| is a new var. We cannot use a helper function to return the correctly Chrome instance because we only want to run the deferred Closed() when using fake devices, but not the Chrome from precondition.",
      "parentUuid": "f729c2c4_f96d5dc0",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "70bf85b0eb7bd1b666810d2f3ebf4d733ca71ca9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d96a4073_a8acc569",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-12-17T16:29:29Z",
      "side": 1,
      "message": "style: in this case:\n\nif ... {\n  cr, err :\u003d chrome.New(...)\n  if err !\u003d nil {\n    ...\n  }\n  defer cr.Close(ctx)\n} else {\n  ...\n}\n\nshould work.",
      "parentUuid": "36a68a2f_f8627111",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "70bf85b0eb7bd1b666810d2f3ebf4d733ca71ca9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5edc7d2_ee8a2f45",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2019-12-18T03:38:40Z",
      "side": 1,
      "message": "Using |cr, err :\u003d ...| will \"not\" write the value into the |var cr| above, that\u0027s why I have to use a temporary |cr2| variable. Please see this example: https://play.golang.org/p/YTOGsS1A7Ea",
      "parentUuid": "d96a4073_a8acc569",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "70bf85b0eb7bd1b666810d2f3ebf4d733ca71ca9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dc2a038_9c868648",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2019-12-18T03:45:28Z",
      "side": 1,
      "message": "How about declaring |err| in the inner scope and use \"\u003d\" instead of \":\u003d\"? \nSo it will be like:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nvar cr *chrome.Chrome\n\nif s.Param().(param).useFakeDeviceInChrome {\n\t\tvar err error\n\t\tcr, err \u003d chrome.New(ctx, chrome.ExtraArgs(\n\t\t\t\"--use-fake-ui-for-media-stream\",\n\t\t\t// The default fps of fake device is 20, but CCA requires fps \u003e\u003d 24.\n\t\t\t// Set the fps to 30 to avoid OverconstrainedError.\n\t\t\t\"--use-fake-device-for-media-stream\u003dfps\u003d30\"))\n\t\tif err !\u003d nil {\n\t\t\ts.Fatal(\"Failed to open chrome: \", err)\n\t\t}\n\t\tdefer cr.Close(ctx)\n} else {\n  ...\n}\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nWill it work?",
      "parentUuid": "c5edc7d2_ee8a2f45",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "70bf85b0eb7bd1b666810d2f3ebf4d733ca71ca9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}