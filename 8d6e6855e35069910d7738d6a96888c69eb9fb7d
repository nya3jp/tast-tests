{
  "comments": [
    {
      "key": {
        "uuid": "ba05fd95_b3f182fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2020-09-16T06:45:37Z",
      "side": 1,
      "message": "I don\u0027t think it makes sense for me to review just this CL in isolation, and it looks like there are plenty of eyes on the precursor CL, so maybe just recycle the same reviewers from there?\nIf you do want me to review, I think I\u0027m missing a link to the tast-test-private CL that explains why this three-step process is required.\n\nFor example, is it not possible to submit a pair of CLs to tast-tests-private and tast-tests (Cq-Depends) at the same time (by CQ-Depending the changes)?",
      "revId": "8d6e6855e35069910d7738d6a96888c69eb9fb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "767ef88b_188c8573",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1375928
      },
      "writtenOn": "2020-09-16T06:51:44Z",
      "side": 1,
      "message": "Unfortunately, it is not possible to submit two commits in different repositories at the same time. I\u0027ll add you as reviewer to the other CLs. (The reviewers in the dependent CL are mostly the original authors of the modified files, not Tast reviewers. They already +1\u0027ed the CL, but for some reason the score disappeared when I made the CL a dependent CL.)",
      "parentUuid": "ba05fd95_b3f182fe",
      "revId": "8d6e6855e35069910d7738d6a96888c69eb9fb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51e23f46_cd5464f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2020-09-16T06:58:17Z",
      "side": 1,
      "message": "I have seen this done regularly in other repositories without any real issues... (see crrev.com/i/3259084 and crrev.com/i/3261091 which are co-dependent). While the transactions are notionally not atomic, I believe in any builds (snapshot, postsubmit, release etc.) they should grab a consistent set of changes.\nhttps://chromium.googlesource.com/chromiumos/docs/+/master/contributing.md#cq-depend\n\nAnyway, your way works as well so no real issue here.",
      "parentUuid": "767ef88b_188c8573",
      "revId": "8d6e6855e35069910d7738d6a96888c69eb9fb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6abb5a5b_39f0770a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1375928
      },
      "writtenOn": "2020-09-16T07:02:23Z",
      "side": 1,
      "message": "Interesting, I did not know about `cq-depend`.\n\nIn my case, I would need to submit two CLs (one in `tast-tests`, one in `tast-tests-private`) at the same time. Then I could put everything in a single CL. I\u0027m not sure if that is possible with `cq-depend`.",
      "parentUuid": "51e23f46_cd5464f9",
      "revId": "8d6e6855e35069910d7738d6a96888c69eb9fb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b58b19_a6ecaacb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2020-09-16T07:07:33Z",
      "side": 1,
      "message": "I\u0027m pretty sure it should work, as noted we have tried Cq-Depend loops before and the document I link to explicitly permits them.\nThis CL would depend upon e.g. chromium-internal:3272172 and crrev.com/i/3272172 would depend upon this CL (chromium:2412064).",
      "parentUuid": "6abb5a5b_39f0770a",
      "revId": "8d6e6855e35069910d7738d6a96888c69eb9fb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}