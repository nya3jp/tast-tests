{
  "comments": [
    {
      "key": {
        "uuid": "5772ad0e_919d1bb4",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 120,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-04-17T18:21:04Z",
      "side": 1,
      "message": "Change this to say we skip preallocation when we\u0027re not using zram.",
      "range": {
        "startLine": 120,
        "startChar": 19,
        "endLine": 120,
        "endChar": 68
      },
      "revId": "7a3a8ae4cc6009289d9727c18f2265d1b5cedc97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afd51947_de8fdd08",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 120,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-17T18:45:37Z",
      "side": 1,
      "message": "But that\u0027s not the idea.  Why should we preallocate with zram, and not preallocate without?",
      "parentUuid": "5772ad0e_919d1bb4",
      "range": {
        "startLine": 120,
        "startChar": 19,
        "endLine": 120,
        "endChar": 68
      },
      "revId": "7a3a8ae4cc6009289d9727c18f2265d1b5cedc97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50dd4604_b673cdb6",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 120,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-04-17T19:12:43Z",
      "side": 1,
      "message": "I\u0027ll be straightforward -- I\u0027m not a big fan of pre-allocation.  I understand the desire to make the test run faster, but the implementation is apparently complex enough that it didn\u0027t work properly the first time and took several tries to get one that does.  Right now what people are actually doing to test these different configurations is disabling preallocation and it works fine, it just takes longer to run the test.  You stated in the comment that you\u0027re assuming zram and that\u0027s baked into the calculations.  I think you\u0027re being excessively clever by doing things like setting the compression ratio to 0.0001 and it reduces the value of the test by making it harder to understand what is happening.",
      "parentUuid": "afd51947_de8fdd08",
      "range": {
        "startLine": 120,
        "startChar": 19,
        "endLine": 120,
        "endChar": 68
      },
      "revId": "7a3a8ae4cc6009289d9727c18f2265d1b5cedc97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15a3a47e_bad0fb5d",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 120,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-17T19:26:42Z",
      "side": 1,
      "message": "There are two issues.  The first is preallocation, the second the automated calculation of the preallocation amount.  The following CL (https://crrev.com/c/1572304) removes the automated calculation.  If you prefer, I can merge the CLs.  If you want to completely remove preallocation, I can make another CL.  If you want to preallocate with zram, and not without, then we have to discuss more.",
      "parentUuid": "50dd4604_b673cdb6",
      "range": {
        "startLine": 120,
        "startChar": 19,
        "endLine": 120,
        "endChar": 68
      },
      "revId": "7a3a8ae4cc6009289d9727c18f2265d1b5cedc97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02d20f3a_45a5843e",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 120,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-04-17T19:44:07Z",
      "side": 1,
      "message": "preallocation is a solution to a problem not an issue by itself, nor is the amount of preallocation an issue.  Given how complex this solution has become, it\u0027s certainly tempting to just remove it altogether and increase the test timeout for those large systems as a far simpler solution.",
      "parentUuid": "15a3a47e_bad0fb5d",
      "range": {
        "startLine": 120,
        "startChar": 19,
        "endLine": 120,
        "endChar": 68
      },
      "revId": "7a3a8ae4cc6009289d9727c18f2265d1b5cedc97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f6ea1e8_8a4ddf3e",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 120,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-17T21:12:28Z",
      "side": 1,
      "message": "Are you saying that the preallocation is too complex?  I agree that the automated calculation is.\n\nAnyway, it\u0027s fine to remove preallocation.  The test will take over 1 hour and 1/2 for 16GB, which may be OK for the nightlies.  Unfortunately it is going to impact future test development.  Take a look at the following CL (https://crrev.com/c/1572304).  With that CL, we pick different sizes of the initial tab set depending on total RAM, with the goal of triggering swap-ins on the larger systems.  Right now there are no swap-ins on those, because the initial set is small enough and is never swapped out.  Calculating a meaningful size for the initial test would be even worse than the calculations in here, so I figured it out experimentally.  Each experiment now takes 10-15 minutes, so it\u0027s a lot faster.\n\nOr perhaps we don\u0027t care about triggering swap-ins on the 16GB devices?  Just the number of tabs?",
      "parentUuid": "02d20f3a_45a5843e",
      "range": {
        "startLine": 120,
        "startChar": 19,
        "endLine": 120,
        "endChar": 68
      },
      "revId": "7a3a8ae4cc6009289d9727c18f2265d1b5cedc97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cd9b08c_303d75ab",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 202,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-04-17T18:21:04Z",
      "side": 1,
      "message": "This is very non-intuitive behavior.  Instead do the simplest thing and skip preallocation and return 0 here.",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 202,
        "endChar": 16
      },
      "revId": "7a3a8ae4cc6009289d9727c18f2265d1b5cedc97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cb8c403_a486826a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 202,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-17T18:45:37Z",
      "side": 1,
      "message": "See above comment.",
      "parentUuid": "0cd9b08c_303d75ab",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 202,
        "endChar": 16
      },
      "revId": "7a3a8ae4cc6009289d9727c18f2265d1b5cedc97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}