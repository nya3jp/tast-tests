{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c455c98_8ad009ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1273510
      },
      "writtenOn": "2022-05-12T18:26:38Z",
      "side": 1,
      "message": "nit: I think it\u0027s the reverse based on the logs. The \u003cvideo\u003e feeds may use up instances that are needed for the PeerConnection decoders. When I say \"needed,\" I mean it in the sense that the test doesn\u0027t care what kind of decoding (sw vs. hw) is done for the \u003cvideo\u003es, but it does care about the PeerConnection main decoder using hw.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 64
      },
      "revId": "27a1accf1ed6cf24218f244b05868c3336a2a9d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed29e892_24015f4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2022-05-12T23:11:22Z",
      "side": 1,
      "message": "\"Normal\" \u003cvideo\u003e playback should never instantiate more than the\ndecoder it\u0027s going to use. RTCPeerConnection is known to create\nHW video decoders to make sure they can indeed be created. In \nthe past this was even worse because it created e.g. a VP8, a\nVP9.0, a VP9.2, and a number of H.264 (b/177851868), and TTBOMK\nthis was fixed, but it seems like it isn\u0027t fully so. So I\u0027d \nexpect WebRTC to be the root cause of the flake, and not \u003cvideo\u003e.",
      "parentUuid": "6c455c98_8ad009ca",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 64
      },
      "revId": "27a1accf1ed6cf24218f244b05868c3336a2a9d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "929b6c45_42735a6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1115680
      },
      "writtenOn": "2022-05-12T14:37:22Z",
      "side": 1,
      "message": "andrescj/hiroh: I haven\u0027t had the chance to verify this CL but WDYT?\n\n(I\u0027m marking it as Verified so that I can have a dry-run).",
      "revId": "27a1accf1ed6cf24218f244b05868c3336a2a9d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28c407fd_46dda64e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1273510
      },
      "writtenOn": "2022-05-12T18:26:38Z",
      "side": 1,
      "message": "LGTM % nit. Thanks!",
      "revId": "27a1accf1ed6cf24218f244b05868c3336a2a9d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}