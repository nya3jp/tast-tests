{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1cbdf3b9_2dfb3312",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "Looks better API :-). My initial scan.",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f5c436b_095dec62",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "Nit: The existing comments in this file all terminate with a period.\n\nYou should probably do the same where it makes sense. (applies to all the comments you added, I just didn\u0027t want to mark each of them up)",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a665b2d0_dcbfde6e",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f5c436b_095dec62",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7b2daed_32970e1e",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "Since this is public Chromium source, let\u0027s make the links reference public AOSP sources.\n\nhttps://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/app/WindowConfiguration.java;l\u003d133;drc\u003d6d5082d3a593d34b413067a3cc30069aa2b78818\n\nor:\n\nhttps://android.googlesource.com/platform/frameworks/base/+/6d5082d3a593d34b413067a3cc30069aa2b78818/core/java/android/app/WindowConfiguration.java#133",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b372628f_ad354c7c",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7b2daed_32970e1e",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64f5d824_dd8a150f",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "Ditto on using equivalent public links.",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51efaadb_e5969cf8",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64f5d824_dd8a150f",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c81433f8_d8af4301",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "could you keep these types package private?",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "031a2cc5_c1584966",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c81433f8_d8af4301",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35fd872b_d28f632f",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 189,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "Too bad generics aren\u0027t in go1.17.\n\nWith go1.18 (releasing soon) I would recommend using them. It would condense things:\n\n  type AllowedExtraArgTypes interface {\n    int | string | []string | bool\n  }\n\n  type ExtraArg[ExtraArgType AllowedExtraArgTypes] struct {\n    key string\n    val ExtraArgType\n  }\n\n  type ActivityStartOptions struct {\n    // ...\n    extraInts []ExtraArg[int]\n    extraBools []ExtraArg[bool]\n    // (etc)\n  }",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "489cdb3a_3f85329d",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "optional: I\u0027d call this as \"activityStartCmdBuilder\"",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd84d4f9_3680b443",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Good call. Made the change.",
      "parentUuid": "489cdb3a_3f85329d",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a7d9a10_416d7b98",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "optional: and so this is just \"build()\".",
      "range": {
        "startLine": 209,
        "startChar": 33,
        "endLine": 209,
        "endChar": 50
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89c67f82_5f81e6a6",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "5a7d9a10_416d7b98",
      "range": {
        "startLine": 209,
        "startChar": 33,
        "endLine": 209,
        "endChar": 50
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f44181fe_76f86f3e",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 245,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "Shouldn\u0027t this be a \"--ei \u003ckey\u003e \u003cvalue\u003e\" for each extraInt entry?",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 245,
        "endChar": 3
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "141cb518_3dfec4a6",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 245,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "good catch.",
      "parentUuid": "f44181fe_76f86f3e",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 245,
        "endChar": 3
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a95b9a5f_0c3392c5",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "\",\" in each val needs to be escaped.",
      "range": {
        "startLine": 254,
        "startChar": 52,
        "endLine": 254,
        "endChar": 56
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bfac0ae_8c442404",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "No existing code does this yet. I will leave a TODO and use a followup CL.",
      "parentUuid": "a95b9a5f_0c3392c5",
      "range": {
        "startLine": 254,
        "startChar": 52,
        "endLine": 254,
        "endChar": 56
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45e26fdc_32100f32",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "While Go doesn\u0027t seem to have some kind of switch/case expression, this pattern might be better, and should also catch cases where not all values are specified (for enums values):\n\n  valStr string\n  switch e.val {\n  case false:\n    valStr \u003d \"false\"\n  case true:\n    valStr \u003d \"true\"\n  }\n  \nYou could make it a function and use return to avoid creating an explicit and default initialized local.\n\n(In some language that did have switches/cases as expressions, it might look like:\n\n  valStr :\u003d switch e.val {\n    case false: \"false\"\n    case true:  \"true\"\n  }\n)\n  \n... BUT, for this case, you can do something even simpler:\n\n  valStr :\u003d strconv.FormatBool(e.val)\n  \n(And you can probably just inline the conversion call in the next line)",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 262,
        "endChar": 4
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d7eb0e0_a97c0ed5",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "\u003e While Go doesn\u0027t seem to have some kind of switch/case expression, this pattern might be better, and should also catch cases where not all values are specified (for enums values):\n\u003e \n\u003e   valStr string\n\u003e   switch e.val {\n\u003e   case false:\n\u003e     valStr \u003d \"false\"\n\u003e   case true:\n\u003e     valStr \u003d \"true\"\n\u003e   }\n\nThis is bool so it\u0027s kind of special, but AFAIK, if case does not cover everything, valStr will be kept as default value (empty string), right?\n\n\u003e   \n\u003e You could make it a function and use return to avoid creating an explicit and default initialized local.\n\u003e \n\u003e (In some language that did have switches/cases as expressions, it might look like:\n\u003e \n\u003e   valStr :\u003d switch e.val {\n\u003e     case false: \"false\"\n\u003e     case true:  \"true\"\n\u003e   }\n\u003e )\n\u003e   \n\nFYI: I agreed your comments in general in other language,\nbut I think the current code is common style in go.\n\n\u003e ... BUT, for this case, you can do something even simpler:\n\u003e \n\u003e   valStr :\u003d strconv.FormatBool(e.val)\n\u003e   \n\u003e (And you can probably just inline the conversion call in the next line)\n\nFYI: I\u0027m ok with this, too, but we need to be careful of the detailed diff between string representation on each domain. This specific case is not problematic, though.",
      "parentUuid": "45e26fdc_32100f32",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 262,
        "endChar": 4
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db392027_6f623969",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-12T20:05:09Z",
      "side": 1,
      "message": "\u003e This is bool so it\u0027s kind of special, but AFAIK, if case does not cover\n\u003e everything, valStr will be kept as default value (empty string), right?\n\nSorry, I guess I need to write more Go code and actually test my assumptions about the language. I assumed that the compiler would catch incomplete value coverage by default, just like a C++ compiler (with the appropriate warnings enabled).",
      "parentUuid": "9d7eb0e0_a97c0ed5",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 262,
        "endChar": 4
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "831436a7_d4a89e25",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Thanks for the tip. I\u0027ll do that.",
      "parentUuid": "45e26fdc_32100f32",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 262,
        "endChar": 4
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05b061d6_6d48a68a",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 269,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "optional/style: we often use \"new\" as the prefix of this kind of stuff?",
      "range": {
        "startLine": 269,
        "startChar": 5,
        "endLine": 269,
        "endChar": 9
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "417848d2_add0d8b4",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 269,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "The idiom in golang is to use make... if the returned value is not a pointer. And I see no reason to return a pointer since this object only has to live in the ac.Start method.",
      "parentUuid": "05b061d6_6d48a68a",
      "range": {
        "startLine": 269,
        "startChar": 5,
        "endLine": 269,
        "endChar": 9
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e763454_7c32b237",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "These made me want to suggest using a nullable (aka optional) type, but Go doesn\u0027t have something built-in at this type.",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 280,
        "endChar": 19
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "348e6881_67ef4c0f",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "And this is the \"Option\" from outside of the package. Maybe\ntype ActivityStartOption func(*activityStartCmdBuilder)",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4487eef9_9f13f78d",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Makes sense. I\u0027ll make the change.",
      "parentUuid": "348e6881_67ef4c0f",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5aa307f5_9bb7e995",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 415,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "To keep the semantics as simple as possible, I\u0027d recommend to drop the default options.",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "403f7dae_4e8ba0f5",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 415,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Agreed. I\u0027ve dropped them.",
      "parentUuid": "5aa307f5_9bb7e995",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aaa10ca4_7d633eb4",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "If these are appended, are they really defaults?\n\nFor example, what happens if the caller looks like:\n\n  act.Start(ctx, tconn, arc.WithDisplayId(42))\n\nMaybe default values should be set in makeActivityStartOptions()? Or a makeActivityOptionsWithDefaults() or similar if the former should construct an \"empty\" options structure?",
      "range": {
        "startLine": 415,
        "startChar": 0,
        "endLine": 417,
        "endChar": 53
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bef0af2_c9ac8712",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "I\u0027m not sure WaitForLaunch should be a default. How do you turn it off for cases that might not want it?",
      "range": {
        "startLine": 417,
        "startChar": 33,
        "endLine": 417,
        "endChar": 50
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a50d85d8_d0a952cc",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "I\u0027ve removed the defaults and just have the tast tests set all the flags.",
      "parentUuid": "aaa10ca4_7d633eb4",
      "range": {
        "startLine": 415,
        "startChar": 0,
        "endLine": 417,
        "endChar": 53
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "342fb10f_7714a181",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "I\u0027m removing defaults.",
      "parentUuid": "2bef0af2_c9ac8712",
      "range": {
        "startLine": 417,
        "startChar": 33,
        "endLine": 417,
        "endChar": 50
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db30dcb7_2384a6d8",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 424,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "It bugs me that \"opts\" is purely a structure used internally to this function (other than type safety for the setters), and that converting the optSetters to arg strings requires two very different passes, and most of the values stored in ActivityStartOptions are very temporary.\n\nI think you would be better served making the setter functions set string arguments directly into ActivityStartOptions, and have that structure just contain arrays of strings.\n\n  type ActivityStartOptions struct {\n    // single-value settings look like this:\n    enableDebugging       []string\n\t\n    // All the extras arguments just go in a single common array\n    extraArgs             []string\n  }\n  \nThe single-value setters can then just set the single-value string fragments directly, and they ALSO encapsulate all knowledge of the command line argument details.\n\n  func WithEnableDebugging() ActivityStartOptionSetter {\n    return func(opts *ActivityStartOptions) {\n      opts.enableDebugging \u003d []string(\"--D\")\n    }\n  }\n  \nWithExtraString/WithExtraInt/etc would just append to extraArgs.  \n\nWDYT?",
      "range": {
        "startLine": 419,
        "startChar": 0,
        "endLine": 424,
        "endChar": 49
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "900997ad_0035a53a",
        "filename": "src/chromiumos/tast/local/arc/activity.go",
        "patchSetId": 3
      },
      "lineNbr": 424,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "I don\u0027t like it because it then we have know control over how the args are built. Mainly it will be an issue if a caller passes more than one of an option that must be a singleton (like SetDisplayID).",
      "parentUuid": "db30dcb7_2384a6d8",
      "range": {
        "startLine": 419,
        "startChar": 0,
        "endLine": 424,
        "endChar": 49
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "761f522e_f99d41e6",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/deqp.go",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "nit/optional/style: I\u0027d break lines per options, if it becomes longer.\n\nif err :\u003d act.Start(...,\n    arc.WithForceStop(),\n    arc.WithExtraString(...),\n); err !\u003d nil {\n  ....\n}",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "032da721_055be423",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/deqp.go",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "761f522e_f99d41e6",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da0affff_626919a2",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/deqp.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "This line is too long. Perhaps compute fmt.Sprintf() before using it in WithExtraString?",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbf2289b_aa4148b8",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/deqp.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "this is not the regression, but need escaping.\nE.g., if |name| is \"abc def\", the cmdLine value will be \"deqp --deqp-log-filename\u003d/sdcard/abc def-results.qpa ...\"\nso, and parsed as \"/sdcard/abc\".",
      "range": {
        "startLine": 79,
        "startChar": 120,
        "endLine": 79,
        "endChar": 134
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18050bbd_816f2252",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/deqp.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "I\u0027ll leave a TODO",
      "parentUuid": "dbf2289b_aa4148b8",
      "range": {
        "startLine": 79,
        "startChar": 120,
        "endLine": 79,
        "endChar": 134
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a6c2bf5_32ac3e04",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/deqp.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da0affff_626919a2",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b48246e_871463ab",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/download_manager.go",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "Pointing out that the code here didn\u0027t set a default value for the display id (etc) before, and it will now. Not sure that is a problem.",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "745e62ae_c2c37db2",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/download_manager.go",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "I\u0027m removing the concept of defaults.",
      "parentUuid": "0b48246e_871463ab",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43dfef4f_923e9709",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/surface_orientation.go",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1127931
      },
      "writtenOn": "2022-01-11T03:25:26Z",
      "side": 1,
      "message": "screeshot -\u003e screenshot?",
      "range": {
        "startLine": 207,
        "startChar": 40,
        "endLine": 207,
        "endChar": 56
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc909e75_b53d2593",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/surface_orientation.go",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Good catch.",
      "parentUuid": "43dfef4f_923e9709",
      "range": {
        "startLine": 207,
        "startChar": 40,
        "endLine": 207,
        "endChar": 56
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b810e900_71ecdd76",
        "filename": "src/chromiumos/tast/local/graphics/patrace/paretrace.go",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "nit/style: I\u0027d name \"opts\" to prefer shorter name.",
      "range": {
        "startLine": 126,
        "startChar": 1,
        "endLine": 126,
        "endChar": 11
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04d70513_eb39c689",
        "filename": "src/chromiumos/tast/local/graphics/patrace/paretrace.go",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Okay.",
      "parentUuid": "b810e900_71ecdd76",
      "range": {
        "startLine": 126,
        "startChar": 1,
        "endLine": 126,
        "endChar": 11
      },
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce2d8df2_b0ff5bf2",
        "filename": "src/chromiumos/tast/local/power/setup/setup_app.go",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-01-12T02:57:47Z",
      "side": 1,
      "message": "ditto for naming.",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "067eff42_29a8f6aa",
        "filename": "src/chromiumos/tast/local/power/setup/setup_app.go",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1504533
      },
      "writtenOn": "2022-01-12T21:38:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce2d8df2_b0ff5bf2",
      "revId": "931945166485fd1dff892bce6c03705c482128c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}