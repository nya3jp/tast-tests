{
  "comments": [
    {
      "key": {
        "uuid": "24b33439_217e1c7b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 775,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-24T00:18:12Z",
      "side": 1,
      "message": "nit: please reword this to make it clearer how the two channels are used. in particular, please mention that the caller must close stop rather than writing to it, as there\u0027s a potential deadlock otherwise",
      "revId": "320585df678a6394e2d66933cc7b250e2c911dcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e51f0c_1de97bb3",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 775,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-24T01:02:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24b33439_217e1c7b",
      "revId": "320585df678a6394e2d66933cc7b250e2c911dcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c4f9ec1_72bb396f",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 778,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-24T00:18:12Z",
      "side": 1,
      "message": "\"discard \u003c-chan struct{}, stop chan\u003c- struct{}\" to both document how the caller should use the channels and prevent them from doing the wrong thing\n\n(but man the syntax is painful)",
      "range": {
        "startLine": 778,
        "startChar": 60,
        "endLine": 778,
        "endChar": 64
      },
      "revId": "320585df678a6394e2d66933cc7b250e2c911dcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24153ef2_180a1729",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 778,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-24T01:02:14Z",
      "side": 1,
      "message": "Ah---that was a little tricky, had to introduce some temp variables.",
      "parentUuid": "3c4f9ec1_72bb396f",
      "range": {
        "startLine": 778,
        "startChar": 60,
        "endLine": 778,
        "endChar": 64
      },
      "revId": "320585df678a6394e2d66933cc7b250e2c911dcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300a1363_3ac61f4a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 778,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-24T01:49:51Z",
      "side": 1,
      "message": "oh yeah, that\u0027s one downside. i guess go won\u0027t let you shadow return values?",
      "parentUuid": "24153ef2_180a1729",
      "range": {
        "startLine": 778,
        "startChar": 60,
        "endLine": 778,
        "endChar": 64
      },
      "revId": "320585df678a6394e2d66933cc7b250e2c911dcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c15a4eaa_1734b307",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 778,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-24T04:41:04Z",
      "side": 1,
      "message": "Not sure what you mean by shadowing here---the problem is that I am returning a read-only channel (discard) but it\u0027s write-only on my side, so I can\u0027t assign it to the return variable and also use it locally.",
      "parentUuid": "300a1363_3ac61f4a",
      "range": {
        "startLine": 778,
        "startChar": 60,
        "endLine": 778,
        "endChar": 64
      },
      "revId": "320585df678a6394e2d66933cc7b250e2c911dcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f4b96_ace2ec02",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 778,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-24T04:46:42Z",
      "side": 1,
      "message": "i meant just doing \"discard :\u003d ...\" and \"stop :\u003d ...\" to declare bidirectional channels with the same names, and then returning them later (they\u0027d be automatically converted to unidirectional, i think). but i\u0027m guessing it won\u0027t let you since it\u0027s still in the same scope.",
      "parentUuid": "c15a4eaa_1734b307",
      "range": {
        "startLine": 778,
        "startChar": 60,
        "endLine": 778,
        "endChar": 64
      },
      "revId": "320585df678a6394e2d66933cc7b250e2c911dcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae9a1fe3_66b37266",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 9
      },
      "lineNbr": 778,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-24T04:55:59Z",
      "side": 1,
      "message": "Oh right of course, thanks.",
      "parentUuid": "5a3f4b96_ace2ec02",
      "range": {
        "startLine": 778,
        "startChar": 60,
        "endLine": 778,
        "endChar": 64
      },
      "revId": "320585df678a6394e2d66933cc7b250e2c911dcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}