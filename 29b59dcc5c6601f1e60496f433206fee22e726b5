{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "90420c33_d4f2541f",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 101,
      "author": {
        "id": 1527433
      },
      "writtenOn": "2022-09-20T23:12:02Z",
      "side": 1,
      "message": "This is a bug, resolved in patchset 11. err was passed to suspendErr on L101/153, before checking the wakesource printed out by powerd_dbus_suspend. So, if there was a regex mismatch, it would not be caught by the \"err !\u003d nil\" checks on L126/L178 because those errors are never passed though the suspendErr channel. In earlier patchsets, I had checked that changing the regex broke the test. But, that check broke somewhere along the way. In patchset 11, changing the regex will cause the test to fail as expected.",
      "range": {
        "startLine": 101,
        "startChar": 2,
        "endLine": 101,
        "endChar": 19
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a2bffbd_e19821e3",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 1181774
      },
      "writtenOn": "2022-09-16T18:09:29Z",
      "side": 1,
      "message": "nit: Collapse this into 1 statement:\n```\n  if match, err :\u003d regexp.MatchString(...); err !\u003d nil {\n     ...\n  } else if !match {\n     ...\n  }\n```",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 110,
        "endChar": 3
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "242b69ad_ea694213",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 1527433
      },
      "writtenOn": "2022-09-20T23:12:02Z",
      "side": 1,
      "message": "Done in attemptSuspendAndWake.",
      "parentUuid": "9a2bffbd_e19821e3",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 110,
        "endChar": 3
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88b860b2_debee9a0",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 129,
      "author": {
        "id": 1181774
      },
      "writtenOn": "2022-09-16T18:09:29Z",
      "side": 1,
      "message": "I wonder if it is possible to factor this out into a function which returns :\n\"wakeup source, err\", like the following:\n```\nfunc attemptSuspendAndWake(ctx context.Context, ...) (string, error) {\n```\n\nThis code seems almost exactly the same as (L148-L181), and any concurrent execution is self-contained within this block.",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 129,
        "endChar": 0
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7529e67e_cf0e31aa",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 129,
      "author": {
        "id": 1527433
      },
      "writtenOn": "2022-09-20T23:12:02Z",
      "side": 1,
      "message": "We can refactor this into a function, but I don\u0027t think it\u0027s possible with the prototype you\u0027ve given. We need to call powerd_dbus_suspend in a go routine to run in parallel with checks on power state and key presses. But, go routines cannot return values like string/error (https://stackoverflow.com/questions/20945069/catching-return-values-from-goroutines). \n\n\nI looked at doing this a couple ways. The first option, closest to what you are suggesting, is to create two channels and pass those to attemptSuspendAndWake. We can then return the err and string output of the powerd_dbus_suspend call back through those channels and check them in the main test function, similar to how we would check them with the function you\u0027re suggesting.\n\n\nBut, checking the result of the first and second suspend is pretty similar, so that would then get refactored into another function. It seemed unnecessary to open a second channel to pass the printed output of powerd_dbus_suspend through func HidWake to another function to check it against a regular expression. So, this patchset creates a new function (attemptSuspendAndWake) which both calls powerd_dbus_suspend and checks its output.  If anything unexpected happens (CommandContext error, MatchString error, regex mismatch) it passes an error to suspendErr and returns.",
      "parentUuid": "88b860b2_debee9a0",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 129,
        "endChar": 0
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fef2b79d_317f36f3",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 156,
      "author": {
        "id": 1181774
      },
      "writtenOn": "2022-09-16T18:09:29Z",
      "side": 1,
      "message": "second",
      "range": {
        "startLine": 156,
        "startChar": 61,
        "endLine": 156,
        "endChar": 67
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0bfa0c2_31ffcd64",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 156,
      "author": {
        "id": 1527433
      },
      "writtenOn": "2022-09-20T23:12:02Z",
      "side": 1,
      "message": "This is moved to attemptSuspendAndWake which doesn\u0027t reference suspend count.",
      "parentUuid": "fef2b79d_317f36f3",
      "range": {
        "startLine": 156,
        "startChar": 61,
        "endLine": 156,
        "endChar": 67
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a1e2347_c5c9a87e",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 218,
      "author": {
        "id": 1181774
      },
      "writtenOn": "2022-09-16T18:09:29Z",
      "side": 1,
      "message": "These two if clauses have the same code within the block, so we can collapse them into a single if statement.\n\nActually, even vid is not being used outside of this check, so it can be coalesced into a single statement\n\n```\nif vid, err:\u003d fs.ReadFile(...); err !\u003d nil || strings.TrimSpace(string(vid)) !\u003d servoKeyboardVid {\n   continue\n}\n```",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 218,
        "endChar": 57
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc3e4ef8_50bacd98",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 218,
      "author": {
        "id": 1527433
      },
      "writtenOn": "2022-09-20T23:12:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a1e2347_c5c9a87e",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 218,
        "endChar": 57
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39087243_fde41d87",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 229,
      "author": {
        "id": 1181774
      },
      "writtenOn": "2022-09-16T18:09:29Z",
      "side": 1,
      "message": "Ditto L218",
      "range": {
        "startLine": 223,
        "startChar": 0,
        "endLine": 229,
        "endChar": 0
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12277d54_e19655e5",
        "filename": "src/chromiumos/tast/remote/bundles/cros/power/hid_wake.go",
        "patchSetId": 10
      },
      "lineNbr": 229,
      "author": {
        "id": 1527433
      },
      "writtenOn": "2022-09-20T23:12:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39087243_fde41d87",
      "range": {
        "startLine": 223,
        "startChar": 0,
        "endLine": 229,
        "endChar": 0
      },
      "revId": "29b59dcc5c6601f1e60496f433206fee22e726b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}