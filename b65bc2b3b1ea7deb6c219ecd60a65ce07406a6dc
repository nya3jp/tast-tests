{
  "comments": [
    {
      "key": {
        "uuid": "3099c838_b28b8d14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-22T11:51:31Z",
      "side": 1,
      "message": "This is the first CL of series providing support for conductive attenuator roaming tests.\nI tried as much as possible to keep backwards-compatibility to facilitate code rebasing.",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce664678_2447754d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "Partial review.",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4d5cad4_72799e79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "some comments might already mentioned by Dean.",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "496f565d_4a57b42a",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "As the function adds a router to the test fixture with the given hostname, we shall change its name to AddTFRouter. Otherwise, it is easily to get confused that it merely update the hostname of the only router of the test fixture.",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93a0e0b1_5c6fa289",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "I wonder if it might be easier for the caller to use with:\n\n  func TFRouter(targets ...string) TFOption {\n    return func(tf *TestFixture) {\n      tf.routers \u003d make([]routerData, len(targets)\n      for i :\u003d range targets {\n        tf.routers[i].target \u003d targets[i]\n      }\n    }\n  }\n\nSo the caller don\u0027t have to write multiple TFRouter options. WDYT?",
      "parentUuid": "496f565d_4a57b42a",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "183ae6cb_63e3cfd6",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Yes, I like the idea of varargs. I\u0027m expecting router list to be passed as comma-separated string, thus passing hostnames slice would shorten the code.",
      "parentUuid": "93a0e0b1_5c6fa289",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15aeaa45_72a77c22",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "Given the current usage of this member, I wonder if map[*APIface]struct{} might be easier to use. If the order matters, then we might also prefer deconfig in reverse order in DeconfigAllAPs?",
      "range": {
        "startLine": 87,
        "startChar": 1,
        "endLine": 87,
        "endChar": 5
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a43cd1fd_21d29979",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "No, order should not matter, as any BSSID should be removable randomly.\nIn fact, I see we can get rid of TestFixture.apis entirely and use only map instead.",
      "parentUuid": "15aeaa45_72a77c22",
      "range": {
        "startLine": 87,
        "startChar": 1,
        "endLine": 87,
        "endChar": 5
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "325d85dc_4d70adbf",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "is the reverse map of apis for AP removal.",
      "range": {
        "startLine": 97,
        "startChar": 16,
        "endLine": 97,
        "endChar": 71
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99742913_6a80b94a",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Yes, we need to store this mapping for two purposes:\n1) We need to know which router the APIface belongs to deconfigure AP on correct device;\n2) We need to know (?) a complete list of APIfaces to deconfigure all APs, which some tests (e.g. VerifyAttenuator) require.",
      "parentUuid": "325d85dc_4d70adbf",
      "range": {
        "startLine": 97,
        "startChar": 16,
        "endLine": 97,
        "endChar": 71
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "443f1bc1_97cca8d4",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-10-02T07:40:22Z",
      "side": 1,
      "message": "Please briefly address the reason why this is needed in the comment.",
      "parentUuid": "99742913_6a80b94a",
      "range": {
        "startLine": 97,
        "startChar": 16,
        "endLine": 97,
        "endChar": 71
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7595996_297785e8",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-10-05T10:38:54Z",
      "side": 1,
      "message": "There is already a brief comment there, but I can extend it.",
      "parentUuid": "443f1bc1_97cca8d4",
      "range": {
        "startLine": 97,
        "startChar": 16,
        "endLine": 97,
        "endChar": 71
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "376a664a_d8284517",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "default router",
      "range": {
        "startLine": 192,
        "startChar": 58,
        "endLine": 192,
        "endChar": 64
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df0472fa_3a60d9b8",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "376a664a_d8284517",
      "range": {
        "startLine": 192,
        "startChar": 58,
        "endLine": 192,
        "endChar": 64
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "988eddc3_d2ebb4b4",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "As golang range copies value instead of giving reference, how about:\n\nfor i :\u003d range tf.routers {\n  r :\u003d \u0026tf.routers[i]\n  ...\n  r.host \u003d routerHost\n}",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22f281a2_04e72266",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "Or just use pointers? []*routerData instead. WDYT?",
      "parentUuid": "988eddc3_d2ebb4b4",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24ac9e22_2ec0faa9",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "I thought about storing pointers, but decided against it. Maybe it\u0027s just a leftover from C, but I kinda avoid juggling raw pointers whenever I can.",
      "parentUuid": "22f281a2_04e72266",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15a703ea_11dfe0f6",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "Same here:\n\nfor i :\u003d range tf.routers {\n  r :\u003d \u0026tf.routers[i]\n  router, err :\u003d NewRouter(...)\n  ...\n  r.object \u003d router\n}",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "919d2972_a39440a7",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15a703ea_11dfe0f6",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f01c97f_5ee7f6b9",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "Exit the loop if the condition is met.",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11c4c14a_ce362a29",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "This error is overwritten in line 241 and never used. I think maybe we can just return here as the wrap in line244 is mainly for connection failure.",
      "range": {
        "startLine": 238,
        "startChar": 4,
        "endLine": 238,
        "endChar": 7
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92e80846_2b21ee04",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Lack of return is obviously error on my part.",
      "parentUuid": "11c4c14a_ce362a29",
      "range": {
        "startLine": 238,
        "startChar": 4,
        "endLine": 238,
        "endChar": 7
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d220cc2f_6c307979",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f01c97f_5ee7f6b9",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5f1fcdb_7102adcd",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "If tf.pcapTarget \u003d\u003d one of routers\u0027 target, we don\u0027t set tf.pcapHost.\n\nCombined the comment above, we may just \n\nreturn nil, errors.New(\"failed to set up pcap: same target for router and pcap: %s\", tf.pcapTarget)",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab4a33c0_57b3496a",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5f1fcdb_7102adcd",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0b2b609_38599806",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 248,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "This is valid only when default pcap is not reachable, i.e. line 232 is executed, right? If so, how about having a flag\n\nuseRouterAsPcap :\u003d false\nif tf.pcapTarget \u003d\u003d \"\" {\n  ...\n  tf.pcapHost \u003d tf.routers[0].host\n  useRouterAsPcap \u003d true\n}\n...\nif useRouterAsPcap {\n  tf.pcap \u003d tf.routers[0].object\n} else {\n  tf.pcap, err \u003d NewRouter...\n  ...\n}",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cbddaa8_289787e9",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 248,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Resolved according to the suggestion of Yen-lin.",
      "parentUuid": "a0b2b609_38599806",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c96c6908_e127c876",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "nit: Probably simpler if we move this assignment after \"tf.pcapHost \u003d tf.routers[0].host\", so we don\u0027t have to traverse the array again?",
      "range": {
        "startLine": 249,
        "startChar": 3,
        "endLine": 249,
        "endChar": 26
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f646bf_c917c36c",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c96c6908_e127c876",
      "range": {
        "startLine": 249,
        "startChar": 3,
        "endLine": 249,
        "endChar": 26
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30f55c12_b1f17d8d",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "Is multiple routers\u0027 log collection verified?",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c1a6100_07aeaed5",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "I think they\u0027ll save it to the same path now... Might also need to update the logic there.",
      "parentUuid": "30f55c12_b1f17d8d",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cfb7a40_b35d29f6",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "It seems enough to set router name somewhat properly, as its name becomes part of path. Fixed.",
      "parentUuid": "9c1a6100_07aeaed5",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c43875d3_2dc7cba4",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-25T03:25:05Z",
      "side": 1,
      "message": "Oh, yes, that should work. One minor problem of using target as name is: some filesystems don\u0027t allow \u0027:\u0027. e.g. NTFS, FAT32. Not sure if we need to take care of this case.\n\nOr maybe simply let name \u003d fmt.Sprintf(router%d, idx)? It might be simpler to find corresponding logs as we use idx to specify routers in code. WDYT?",
      "parentUuid": "5cfb7a40_b35d29f6",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d73e15a2_bad35a29",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-28T20:45:45Z",
      "side": 1,
      "message": "Good point. I\u0027d rather remove all `:` but keep names as were given instead of artificial ones, to simplify debugging (\u003dfinding out proper logs).",
      "parentUuid": "c43875d3_2dc7cba4",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1d5db8a_1571543f",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-09-23T03:18:22Z",
      "side": 1,
      "message": "To change the list content, you shall\n\nfor i :\u003d range tf.routers {\n  r :\u003d \u0026tf.routers[i]\n  ...\n}",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb9bacf8_67f1d917",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1d5db8a_1571543f",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efc56fa3_35b13264",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 314,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-22T11:51:31Z",
      "side": 1,
      "message": "This rather has no effect",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af081c1a_2e9bc819",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 314,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efc56fa3_35b13264",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e73eb793_8227938d",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 354,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "nit: I think it is more common to use int as slice indices instead of uint although negative values are not allowed. For example, the language itself use int type [1]. But I don\u0027t have strong opinion.\n\n[1] https://golang.org/ref/spec#Index_expressions",
      "range": {
        "startLine": 354,
        "startChar": 63,
        "endLine": 354,
        "endChar": 67
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41071f24_c4adeab4",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 354,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "uint seem to guarantee `the index x is in range if 0 \u003c\u003d x \u003c len(a)` predicate. But I have not too strong opinion, too.\nLooking throughout the code, I\u0027ve seen a lot of int indexes, but I regarded them as leftover habit from POSIX programming. I think I\u0027d rather rely on your experience as to what is a general rule for golang.",
      "parentUuid": "e73eb793_8227938d",
      "range": {
        "startLine": 354,
        "startChar": 63,
        "endLine": 354,
        "endChar": 67
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a07bcd5f_87a06551",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 354,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-25T03:25:05Z",
      "side": 1,
      "message": "Let\u0027s ask Dean if he has some other thoughts. :)\n\nDean@: WDYT about the usage here?",
      "parentUuid": "41071f24_c4adeab4",
      "range": {
        "startLine": 354,
        "startChar": 63,
        "endLine": 354,
        "endChar": 67
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90ae2e99_f4f3c891",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 354,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-10-02T07:40:22Z",
      "side": 1,
      "message": "I checked that Golang range keyword returns index of type int. Let\u0027s follow the convention.",
      "parentUuid": "a07bcd5f_87a06551",
      "range": {
        "startLine": 354,
        "startChar": 63,
        "endLine": 354,
        "endChar": 67
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eea1cc37_bff05a23",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 354,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-10-05T10:38:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "90ae2e99_f4f3c891",
      "range": {
        "startLine": 354,
        "startChar": 63,
        "endLine": 354,
        "endChar": 67
      },
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73c61c71_60c30977",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "nit: might be nice to have an empty line after this block as it is unrelated to InstallRouterCredentials.",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17b1d69f_ca0d7076",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "73c61c71_60c30977",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1f2f4e0_ad81296c",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 466,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-09-23T03:35:34Z",
      "side": 1,
      "message": "This seems incorrect, as you\u0027re modifying the content of the tf.apis slice in DeconfigAP.\n\nAn example: https://play.golang.org/p/Xn3MiKlPQ7O. If you run it, there should be some numbers that is not removed.\n\nIf we have tf.apis as map[*APIface], one example usage can be found in Effective Go [1], so it is probably safe. (I didn\u0027t find the exact statement in language spec though...)\n\n[1] https://golang.org/doc/effective_go.html#for",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2883f1b8_cb84fcc0",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 466,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-09-23T20:04:03Z",
      "side": 1,
      "message": "Nice catch. It is probably unwise in any language to carelessly remove elements form collection you\u0027re iterating on.\nAlternatively, in this case we could iterate backwards, this should not disturb the iterator. Or, don\u0027t use this slice at all...(see above).",
      "parentUuid": "c1f2f4e0_ad81296c",
      "revId": "b65bc2b3b1ea7deb6c219ecd60a65ce07406a6dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}