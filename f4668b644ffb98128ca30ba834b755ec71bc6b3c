{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e46b9bd0_eb9e90d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-14T14:38:01Z",
      "side": 1,
      "message": "The test still fails in the unallowed_by_policy case, but works in all others. Can you check the logic there as I\u0027m not sure it\u0027s doing the right thing.",
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "989c9bf2_0286477e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1466712
      },
      "writtenOn": "2021-09-15T07:26:02Z",
      "side": 1,
      "message": "The logic seems good to me if I\u0027m understanding it correctly. All test cases were failing because of unallowed_by_policy case was failing and it was blocking the other test-cases. Your clean-up will solve this. Thanks for making the test better!",
      "parentUuid": "e46b9bd0_eb9e90d4",
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51a2287a_bdfe3310",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-15T07:49:03Z",
      "side": 1,
      "message": "Should we merge this as is to clean up the test and it can be fixed later?",
      "parentUuid": "989c9bf2_0286477e",
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ded606d6_067c453c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1466712
      },
      "writtenOn": "2021-09-15T07:59:23Z",
      "side": 1,
      "message": "Yes, sounds good.",
      "parentUuid": "51a2287a_bdfe3310",
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "934d4acb_6c4367a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1466712
      },
      "writtenOn": "2021-09-15T07:59:23Z",
      "side": 1,
      "message": "LGTM, thanks for the clean up!",
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6fb1cafd_3ff01cde",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2021-09-15T08:53:49Z",
      "side": 1,
      "message": "Thanks for making this better!",
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ef0c053_f38a9912",
        "filename": "src/chromiumos/tast/local/bundles/cros/debugd/packet_capture.go",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2021-09-15T08:53:49Z",
      "side": 1,
      "message": "I think the intention of this is to impose a deadline on the blocking io.Copy call further down by closing the readPipe while the io.Copy is still in progress after 15 seconds.\n\nCould this be done in a simpler + easier to understand way by using set(Read)Deadline on the readPipe?\n\ni.e.\n \nreadPipe.setReadDeadline(time.Now().Add(15 * time.Second));\nif _, err :\u003d io.Copy(\u0026buf, readPipe); err !\u003d nil {\n\ts.Fatal(\"Failed to read error: \", err)\n}\n\nIIUC this will also make the io.Copy operation fail with a timeout error after 15 seconds.\n-\u003e https://pkg.go.dev/net#Conn.SetDeadline",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 63
      },
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16114815_19a67f24",
        "filename": "src/chromiumos/tast/local/bundles/cros/debugd/packet_capture.go",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1466712
      },
      "writtenOn": "2021-09-15T07:26:02Z",
      "side": 1,
      "message": "I am asking just to make sure I understand correctly, the code here waits for the context to be cancelled or function to end to close the readPipe right? And this will stop the code from waiting for reading the error until the test time-outs and fails for all?",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 168,
        "endChar": 5
      },
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2f6009a_1961d80f",
        "filename": "src/chromiumos/tast/local/bundles/cros/debugd/packet_capture.go",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-15T07:49:03Z",
      "side": 1,
      "message": "It waits for 15 seconds before closing the pipe, not until the context expires.",
      "parentUuid": "16114815_19a67f24",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 168,
        "endChar": 5
      },
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebcf33fc_3e7dae78",
        "filename": "src/chromiumos/tast/local/bundles/cros/debugd/packet_capture.go",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1466712
      },
      "writtenOn": "2021-09-15T07:59:23Z",
      "side": 1,
      "message": "Right. Sorry, don\u0027t know why I thought there\u0027s a loop there for a second. Thanks for explaining, now I understand the logic well!",
      "parentUuid": "b2f6009a_1961d80f",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 168,
        "endChar": 5
      },
      "revId": "f4668b644ffb98128ca30ba834b755ec71bc6b3c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}