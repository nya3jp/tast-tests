{
  "comments": [
    {
      "key": {
        "uuid": "723d1f81_410e1503",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "please name this test MIDIClient instead: https://github.com/golang/go/wiki/CodeReviewComments#initialisms",
      "range": {
        "startLine": 24,
        "startChar": 16,
        "endLine": 24,
        "endChar": 26
      },
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e47b029c_153b4165",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "i initially interpreted this as being a normal tcp/udp port and wondered why it wasn\u0027t an int instead. looking at the example output, it seems like it might be e.g. \"14:0\" instead. mind describing the format here to make it clearer?",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "264ca265_f1bcbf11",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "please pass ctx to this function instead and make it return (int, error). then errors can be handled (e.g. by failing the test) from your main test function.",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f05ad2a_1c333825",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: please use testexec.CommandContext instead (which handles test timeouts properly)",
      "range": {
        "startLine": 37,
        "startChar": 13,
        "endLine": 37,
        "endChar": 25
      },
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7f84446_cbcda299",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: can just do this:\n\n  for _, line :\u003d range strings.Split(...)",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eddb7b66_c7fb0fe7",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "can you use a regular expression here instead? based on the example output above, something like the following seems like it might work for capturing the port and client name:\n\n  ^(\\d+:\\d+)\\s\\s+(.+)\\s\\s+",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "466aa983_32eb6918",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "see above regexp comment, but otherwise, please continue if len(fields) \u003c 2 here to avoid crashes on unexpected output",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8270a056_3f32038e",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: \u003d\u003d 0? lengths can\u0027t be negative",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3aad3298_b8bd5151",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: no trailing periods in log/error messages:\n\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Formatting",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79684d00_660aeb67",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: i think that a tast-specific base is already used here, so something like \"arc.MIDIClient.\" may be better",
      "range": {
        "startLine": 74,
        "startChar": 31,
        "endLine": 74,
        "endChar": 46
      },
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2674da2d_54dcda08",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "i suspect that you don\u0027t need this chmod call",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a8c1483_48ef9e52",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: please use testexec.CommandContext here too",
      "range": {
        "startLine": 85,
        "startChar": 8,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f97dd13f_0f0d4038",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "instead of sleeping, which is likely to result in a flaky test (because sometimes it will take longer), can you make the test wait just as long as in necessary?\n\nfor example, can you use testing.Poll to repeatedly stat the file and wait for it to have a nonzero size?",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beb32b58_405de4bc",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: remove trailing period",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e89afc71_ba36cd4c",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "does this actually do anything? i\u0027d expect any buffering to be happening in arecordmidi, so i\u0027m not sure that opening and syncing from the test helps.",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c96f612b_0be626f9",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "in select statements, please also include a \"case \u003c-ctx.Done\" case to handle test timeouts",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86fed135_47172e1a",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 139,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: slightly shorter with as single constant:\n\n  const minLen \u003d 43 // ...",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd20dbb1_03bb653e",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: how about using Fatalf and including the path?",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "264a8c97_b4aa0794",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: delete trailing period; please also add spaces before \u0027(\u0027",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "340d1c94_6f3a7f02",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/midi_client.go",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-26T03:48:32Z",
      "side": 1,
      "message": "nit: please include space after \u0027expected:\u0027, but i\u0027d also follow the usual go style:\n\n  \"Got MIDI message %v; want %v\"",
      "revId": "33615daa7f10845529b25102177a07aa81bb7af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}