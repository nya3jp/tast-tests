{
  "comments": [
    {
      "key": {
        "uuid": "60b8b4e4_7c2b219d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-06-18T19:14:32Z",
      "side": 1,
      "message": "nit: is the goal of the test to verify the contents of the video\nor the screenshot tool?",
      "range": {
        "startLine": 7,
        "startChar": 37,
        "endLine": 7,
        "endChar": 53
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2385e329_1ef95ad8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-06-18T19:14:32Z",
      "side": 1,
      "message": "Optional:\nThat\u0027s probably because the CTM is applied on the Framebuffer contents\nas they are travelling to the screen, and the screenshot tool captures\nthe FB content? This might not hold true in the future if the hardware\ndoesn\u0027t support CTM and we need to implement night light as a full\nscreen blit in the compositor, so perhaps leave a note. \n\nCTM \u003d Color Transformation Matrix.",
      "range": {
        "startLine": 28,
        "startChar": 23,
        "endLine": 29,
        "endChar": 22
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7196cd18_fe0877ea",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/data/video.html",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-06-18T19:14:32Z",
      "side": 1,
      "message": "It seems like |keyCode| is deprecated:\nhttps://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\nthat page instructs using |code|, and then we can just use \u0027KeyF\u0027 for\ncomparison ISO the constant.",
      "range": {
        "startLine": 11,
        "startChar": 8,
        "endLine": 11,
        "endChar": 15
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8dad51a_085c3ec5",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-06-18T19:14:32Z",
      "side": 1,
      "message": "Ugh that\u0027s very unexpected and it took me a while to find the docs for\nthis (https://blog.golang.org/image) :\u0027(\n\n-- could we just scale up the tolerance and operate directly as if\neach channel was in uint16? Less operations IIUC.",
      "range": {
        "startLine": 187,
        "startChar": 0,
        "endLine": 189,
        "endChar": 0
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21638e36_6b5493e9",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-06-18T19:14:32Z",
      "side": 1,
      "message": "nit: Alternative formulation: \"requestFullScreen() needs user gesture.\"",
      "range": {
        "startLine": 291,
        "startChar": 59,
        "endLine": 292,
        "endChar": 45
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5503e723_8dda5bfa",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-06-18T20:09:01Z",
      "side": 1,
      "message": "When the video loops, are we sure there will be no different frame between end and beginning?",
      "range": {
        "startLine": 301,
        "startChar": 28,
        "endLine": 301,
        "endChar": 40
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "236820b1_68cf8381",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-06-18T20:09:01Z",
      "side": 1,
      "message": "Would it make sense to invert this. Say play the video for at most a minute, capture the screenshot once per second, return with success if the colors match, if not fail after a minute with the screenshot copied to results proving why the test failed? That way this somewhat arbitrary sleep is avoided.",
      "range": {
        "startLine": 305,
        "startChar": 0,
        "endLine": 310,
        "endChar": 2
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4b72eba_a35c3a57",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-06-18T20:09:01Z",
      "side": 1,
      "message": "I don\u0027t understand why you would look at the corners which could be affected by anti-aliasing, blending, etc. Why not look at the 25% and 75% of the width (center of the colored rectangles of the video). That way presumably you are surrounded by the right colors. You could also use this (later) to analyze larger video areas.",
      "range": {
        "startLine": 362,
        "startChar": 0,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c08cb155_47275155",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-06-18T20:09:01Z",
      "side": 1,
      "message": "254?\nOne issue about the very arbitrary colors is that it is hard to judge what the original intent was. Looks like random numbers. And why these and not others? Can you encode the video with \"nice\" colors/numbers?",
      "range": {
        "startLine": 372,
        "startChar": 56,
        "endLine": 372,
        "endChar": 59
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5cb167d_22cebbda",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/video_screenshot.go",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-06-18T19:15:34Z",
      "side": 1,
      "message": "Forgot: s/VideoScreenshot/VideoContents/ ? The Screenshot is just ways\nto an end, right? It could be done via DRM writeback if we had it.",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b5eff7_df6e6360",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/video_screenshot.go",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-06-18T19:14:32Z",
      "side": 1,
      "message": "Unless we\u0027re sure that the external displays work fine with the screenshot tool\nI\u0027d add here\n  ExtraHardwareDeps: hwdep.D(hwdep.InternalDisplay()),",
      "revId": "4b8d5c9957b08e6f1807d074b1d3515aa228d666",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}