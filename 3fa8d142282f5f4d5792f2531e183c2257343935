{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5c62b14d_aa1c32fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-08-05T02:22:06Z",
      "side": 1,
      "message": "Hi,\n\nYeah it looks better. I feel like this can probably be simplified further though - I guess you only really need the function that runs the scenario and the function that stores the histograms. WDYT?",
      "revId": "3fa8d142282f5f4d5792f2531e183c2257343935",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de76b0d2_3a1600cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1520127
      },
      "writtenOn": "2022-08-10T20:16:41Z",
      "side": 1,
      "message": "Ah yes, that makes sense. Thanks for the suggestion again and PTAL in the next patchset Eliot.",
      "parentUuid": "5c62b14d_aa1c32fa",
      "revId": "3fa8d142282f5f4d5792f2531e183c2257343935",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b574b9b4_85bbef79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-08-16T06:38:55Z",
      "side": 1,
      "message": "Is there a reason we can\u0027t put the functionality of RunSubtest inside RunMultiple and only pass in the scenario and store functions?",
      "parentUuid": "de76b0d2_3a1600cb",
      "revId": "3fa8d142282f5f4d5792f2531e183c2257343935",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9644e96f_06293818",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1520127
      },
      "writtenOn": "2022-08-16T18:06:28Z",
      "side": 1,
      "message": "In the original code, scenario and store are executed within the s.Run fn func:\n\n\u003e               if !s.Run(ctx, fmt.Sprintf(\"%s-%d\", runPrefix, i), func(ctx context.Context, s *testing.State) {\n\u003e                       hists, err :\u003d scenario(ctx)\n\u003e                       if err !\u003d nil {\n\u003e                               s.Fatal(\"Failed to run the test scenario: \", err)\n\u003e                       }\n\u003e                       if err \u003d store(ctx, r.pv, hists); err !\u003d nil {\n\u003e                               s.Fatal(\"Failed to store the histogram data: \", err)\n\u003e                       }\n\u003e               }) {\n\u003e                       return false\n\u003e               }\n\nYour suggestion changes the behavior a bit, bringing the same snip to be executed in another context, after run (s.Run fn in practice) is returned:\n\n\u003e               run(ctx, fmt.Sprintf(\"%s-%d\", runPrefix, i))\n\u003e               hists, err :\u003d scenario(ctx)\n\u003e               if err !\u003d nil {\n\u003e                       return errors.Wrap(err, \"failed to run the test scenario\")\n\u003e               }\n\u003e               if err :\u003d store(ctx, r.pv, hists); err !\u003d nil {\n\u003e                       return errors.Wrap(err, \"failed to store the histogram data\")\n\u003e               }\n\nI haven\u0027t done like this before because I was trying to be extra careful, but I don\u0027t see any problems in tests in doing that. In fact I\u0027ve now changed like this in the latest patchset. PTAL.\n\nAnd I don\u0027t know how to \"only pass in the scenario and store functions\" as you also mentioned though.\n\nThanks for reviewing!",
      "parentUuid": "b574b9b4_85bbef79",
      "revId": "3fa8d142282f5f4d5792f2531e183c2257343935",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3bf143e_0286b4ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-08-17T02:54:00Z",
      "side": 1,
      "message": "Maybe we can have a VC about this?\n\nI\u0027m not sure what the function of this RunFunc in the current CL is. Previously, the scenario was executed inside s.Run. Now, it looks like s.Run is run with nothing inside it, and the scenario is executed afterwards, which I think is broken.\n\nIt should be possible to have a \u0027scenario\u0027 function which just runs the test, including s.Run if necessary, and a store function as well, and completely get rid of this RunFunc, unless I\u0027m misunderstanding something.\n\nI guess it\u0027s also possible to fold store into the scenario func as well but not sure if that\u0027s a good idea.",
      "parentUuid": "9644e96f_06293818",
      "revId": "3fa8d142282f5f4d5792f2531e183c2257343935",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8fea4b2_43702fb3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1520127
      },
      "writtenOn": "2022-08-18T21:00:23Z",
      "side": 1,
      "message": "\u003e Previously, the scenario was executed inside s.Run. Now, it looks like s.Run is run with nothing inside it, and the scenario is executed afterwards, which I think is broken.\n\nCorrect. Taking a closer look now, the scenario fn being executed afterwards indeed doesn\u0027t look correct. I made it like that because that\u0027s how I understood what you were suggesting, but I didn\u0027t pay attention to the fact that s.Run was basically doing nothing :-) So I\u0027ll need to change that again.\n\n\n\u003e It should be possible to have a \u0027scenario\u0027 function which just runs the test, including s.Run if necessary, and a store function as well, and completely get rid of this RunFunc\n\nIt seems doable to get rid of run totally (and RunFunc) inside RunMultiple, which then would pretty much take care of iterating and doing the trace if needed. Its signature becomes like this then: \n`func (r *Runner) RunMultiple(ctx context.Context, scenario ScenarioFunc, store StoreFunc) error` \n\nBut are we okay with tests not running s.Run at all, thus not harnessing subtests states and execution?\n\nAlso, I don\u0027t understand about the \"including s.Run if necessary\" you mentioned, sorry. Do you mean to tests call s.Run directly instead RunMultiple? Or to have a RunMultiple overloading with s.Run passing in, using RunFunc and so on? \n\n\n\u003e I guess it\u0027s also possible to fold store into the scenario func as well but not sure if that\u0027s a good idea.\n\nYup. IMHO one idea we could follow is to get this CL simple enough containing only the original motivation merged (to move perfutil package out of the ui dir and unlock potential work in other bundles) and after that we can keep up the work related to these interesting simplifications on perfutil.\n\nThank you very much for reviewing, Eliot!",
      "parentUuid": "b3bf143e_0286b4ef",
      "revId": "3fa8d142282f5f4d5792f2531e183c2257343935",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d139bd0_cca30774",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-08-19T03:26:27Z",
      "side": 1,
      "message": "I mean can\u0027t we just put s.Run inside of ScenarioFunc. e.g. uiperf would have a Run function that takes the testing.State and construct a closure that captures it. We need to preserve those tests using s.Run to create subtests, but we don\u0027t need the perfutil library to handle that itself.\n\nThere are maybe some ergonomics benefits to keeping StoreFunc separate (extra parameters in the ScenarioFunc / easy to use some of the boilerplate StoreFuns). hidehiko@ originally suggested merging StoreFunc as well so I\u0027ll defer to him on that.",
      "parentUuid": "b8fea4b2_43702fb3",
      "revId": "3fa8d142282f5f4d5792f2531e183c2257343935",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2cdba67d_5eb7f98e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1520127
      },
      "writtenOn": "2022-08-22T14:31:02Z",
      "side": 1,
      "message": "\u003e I mean can\u0027t we just put s.Run inside of ScenarioFunc. e.g. uiperf would have a Run function that takes the testing.State and construct a closure that captures it. We need to preserve those tests using s.Run to create subtests, but we don\u0027t need the perfutil library to handle that itself.\n\nI see. Thanks again for the comments, Eliot. I think I have now made the necessary changes based on your idea. PTAL.",
      "parentUuid": "1d139bd0_cca30774",
      "revId": "3fa8d142282f5f4d5792f2531e183c2257343935",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}