{
  "comments": [
    {
      "key": {
        "uuid": "2c5347da_85e98b2f",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 150,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-25T13:59:48Z",
      "side": 1,
      "message": "Thanks for cleanup :)",
      "range": {
        "startLine": 150,
        "startChar": 22,
        "endLine": 150,
        "endChar": 36
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07066af4_a6bd3efe",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 150,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2019-11-25T17:23:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2c5347da_85e98b2f",
      "range": {
        "startLine": 150,
        "startChar": 22,
        "endLine": 150,
        "endChar": 36
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64753ea7_e252cfc6",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-25T13:59:48Z",
      "side": 1,
      "message": "hmm, why this change? I think it\u0027s natural to return no error when histogramNames is empty.",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f8cab49_009d139d",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2019-11-25T17:23:25Z",
      "side": 1,
      "message": "It is a no-op when GetHistograms() is called with an empty name list. Do we want to allow that? It feels more like a bug/error when it happens.",
      "parentUuid": "64753ea7_e252cfc6",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2db0b0fe_20f32bb2",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-26T09:34:57Z",
      "side": 1,
      "message": "Yes, no-op is the expected behavior to me.\n\nIt might be indeed a bug of the caller to call this function with empty names, but it is the caller to decide if it\u0027s okay or not. This function should not try to guess the intention of callers.\n\nGetHistograms returns an error if it fails on any histogram. So if there\u0027s no histogram to take, it is supposed to succeed. This is like a variable-argument function to compute a logical OR of booleans:\n\n- OR([false, false, false]) \u003d false\n- OR([false, true, true]) \u003d true\n\nThen what is an expected value for OR([])? The most authentic answer is false. \n\nhttps://docs.python.org/3/library/functions.html#any\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some",
      "parentUuid": "1f8cab49_009d139d",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2d8afdb_366695fc",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2019-11-26T16:10:26Z",
      "side": 1,
      "message": "Okay. I removed the empty check here. But added it in recorder.wait() since we should not be waiting for update of an empty histogram list.",
      "parentUuid": "2db0b0fe_20f32bb2",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ca270e2_39543b16",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 247,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-25T13:59:48Z",
      "side": 1,
      "message": "style: Would you mind appending a period?\nhttps://github.com/golang/go/wiki/CodeReviewComments#comment-sentences",
      "range": {
        "startLine": 247,
        "startChar": 59,
        "endLine": 247,
        "endChar": 67
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90325c8b_4566000d",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 247,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2019-11-25T17:23:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ca270e2_39543b16",
      "range": {
        "startLine": 247,
        "startChar": 59,
        "endLine": 247,
        "endChar": 67
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61a91d89_37087fe7",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 268,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-25T13:59:48Z",
      "side": 1,
      "message": "This method combines two orthogonal operations: getting a diff and updating the base snapshot. I\u0027d rather recommend separating the two. And actually updating the base snapshot can be done with StartSnapshot already, so in the end I recommend keeping this method to getting a diff only.",
      "range": {
        "startLine": 268,
        "startChar": 19,
        "endLine": 268,
        "endChar": 28
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0208a452_2ac326e4",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 268,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2019-11-25T17:23:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61a91d89_37087fe7",
      "range": {
        "startLine": 268,
        "startChar": 19,
        "endLine": 268,
        "endChar": 28
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10dcd4b5_7265bbfa",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 291,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-25T13:59:48Z",
      "side": 1,
      "message": "s in the outer scope is not updated if we use :\u003d here.\n\nInstead we should do:\n\n var err error\n s, err \u003d GetHistograms(...)",
      "range": {
        "startLine": 291,
        "startChar": 9,
        "endLine": 291,
        "endChar": 11
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c8809f0_13991346",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 291,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2019-11-25T17:23:25Z",
      "side": 1,
      "message": "Good catch. I missed that.\n\nI have changed the logic to only capture snapshot in StartRecorder. So my change here is to get rid of the |s| in outer scope.",
      "parentUuid": "10dcd4b5_7265bbfa",
      "range": {
        "startLine": 291,
        "startChar": 9,
        "endLine": 291,
        "endChar": 11
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3b46c56_cd95118f",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 314,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-25T13:59:48Z",
      "side": 1,
      "message": "This condition should not be check when all \u003d\u003d false.\n\nChecks here would be more readable if we check the condition at once, e.g.\n\n cnt :\u003d 0\n for _, diff :\u003d range diffs {\n   if len(diff.Buckets) !\u003d 0 {\n     cnt++\n   }\n }\n\n if all {\n   if cnt !\u003d len(s) {\n     return errors.New(\"not all histogram changed\")\n   }\n } else {\n   if cnt \u003d\u003d 0 {\n     return errors.New(\"histograms unchanged\")\n   }\n }",
      "range": {
        "startLine": 314,
        "startChar": 5,
        "endLine": 314,
        "endChar": 20
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96f7393e_465eb03b",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 314,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2019-11-25T17:23:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3b46c56_cd95118f",
      "range": {
        "startLine": 314,
        "startChar": 5,
        "endLine": 314,
        "endChar": 20
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75396599_dec14e90",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 332,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-25T13:59:48Z",
      "side": 1,
      "message": "Rather than annotating arguments with comments, introducing a type is safer and clearer.\n\n type waitMode int\n const (\n   waitAny waitMode \u003d iota\n   waitAll\n )",
      "range": {
        "startLine": 332,
        "startChar": 35,
        "endLine": 332,
        "endChar": 36
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dd2ab28_2dc264cd",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 332,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2019-11-25T17:23:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75396599_dec14e90",
      "range": {
        "startLine": 332,
        "startChar": 35,
        "endLine": 332,
        "endChar": 36
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02bebca2_496cba5d",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 343,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-25T13:59:48Z",
      "side": 1,
      "message": "This signature prevents the callers from getting histograms when returning errors. I\u0027m not sure if that\u0027s really the case with all callers interested in this helper function.",
      "range": {
        "startLine": 343,
        "startChar": 58,
        "endLine": 343,
        "endChar": 63
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ffde25f_aca3cb96",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 343,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2019-11-25T17:23:25Z",
      "side": 1,
      "message": "The caller implements |f| so has full control of what to return. If the caller is interested in histograms under an error, it could return nil instead of an error.\n\nIMO, returning an error means something is wrong in most cases. The test fails and there is no point to collect histograms when it happens.\n\nDid I address your concern?",
      "parentUuid": "02bebca2_496cba5d",
      "range": {
        "startLine": 343,
        "startChar": 58,
        "endLine": 343,
        "endChar": 63
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bb70b8e_3fcafd4d",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 5
      },
      "lineNbr": 343,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-11-26T09:34:57Z",
      "side": 1,
      "message": "I\u0027m not sure if \"there is no point to collect histograms\" when there was an error. A test might record histograms only for debugging purpose; for example, a test to play back a video may record video decode error metrics so that test authors can debug what kind of errors it encountered when the test fails.\n\nThat said, this is not a blocker for this change.",
      "parentUuid": "3ffde25f_aca3cb96",
      "range": {
        "startLine": 343,
        "startChar": 58,
        "endLine": 343,
        "endChar": 63
      },
      "revId": "9bf25adb29e777e88d14c2d01fe12fffcb687a77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}