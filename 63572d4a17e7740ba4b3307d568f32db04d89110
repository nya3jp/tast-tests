{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8e5a4668_8f1da873",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-09-20T10:08:22Z",
      "side": 1,
      "message": "PTAL",
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eb9dc9e_911d54bd",
        "filename": "src/chromiumos/tast/common/policy/defs.go",
        "patchSetId": 1
      },
      "lineNbr": 19957,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-20T10:29:31Z",
      "side": 1,
      "message": "nit: regenerate the file without the change in a separate CL to make the change obvious.",
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bda7e1d1_877703dd",
        "filename": "src/chromiumos/tast/common/policy/defs.go",
        "patchSetId": 1
      },
      "lineNbr": 19957,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-09-20T12:42:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2eb9dc9e_911d54bd",
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "702f9168_baefc27a",
        "filename": "src/chromiumos/tast/common/policy/defs.go",
        "patchSetId": 1
      },
      "lineNbr": 19957,
      "author": {
        "id": 1365228
      },
      "writtenOn": "2021-09-20T13:50:53Z",
      "side": 1,
      "message": "This change is still included in the new patchset. You probably need to use a chain of CLs, instead of using the Cq-Depend label.",
      "parentUuid": "bda7e1d1_877703dd",
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "931f7213_2f30239c",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 1
      },
      "lineNbr": 554,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-20T10:29:31Z",
      "side": 1,
      "message": "nit: also add a comment on why this is needed",
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6924eac_30988ce5",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 1
      },
      "lineNbr": 554,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-09-20T12:42:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "931f7213_2f30239c",
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99f67e06_21e6632c",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-20T10:29:31Z",
      "side": 1,
      "message": "This will only allow us to test the case with the string missing, is it possible to also support an empty array?",
      "range": {
        "startLine": 559,
        "startChar": 38,
        "endLine": 559,
        "endChar": 47
      },
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71eee7df_4be4a27f",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-09-20T12:42:01Z",
      "side": 1,
      "message": "Empty arrays are already supported unless I\u0027m missing something.\nI tried it out and the policy gets properly served to the device with an empty array.",
      "parentUuid": "99f67e06_21e6632c",
      "range": {
        "startLine": 559,
        "startChar": 38,
        "endLine": 559,
        "endChar": 47
      },
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9886072_f47bfec9",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-20T12:48:02Z",
      "side": 1,
      "message": "I\u0027m asking if we can support both an empty array and no array in some way for testing.",
      "parentUuid": "71eee7df_4be4a27f",
      "range": {
        "startLine": 559,
        "startChar": 38,
        "endLine": 559,
        "endChar": 47
      },
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d1b7481_b3a9c812",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-09-20T13:42:05Z",
      "side": 1,
      "message": "Sorry but I still don\u0027t understand it.\nWith the changes made we can have both no array for krb5conf and a krb5conf with an empty array, so we can test both cases.",
      "parentUuid": "c9886072_f47bfec9",
      "range": {
        "startLine": 559,
        "startChar": 38,
        "endLine": 559,
        "endChar": 47
      },
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "443fe347_fd3bc391",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-20T13:57:30Z",
      "side": 1,
      "message": "Doesn\u0027t omitempty drop an empty slice as well?",
      "parentUuid": "1d1b7481_b3a9c812",
      "range": {
        "startLine": 559,
        "startChar": 38,
        "endLine": 559,
        "endChar": 47
      },
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b91c46e6_c7458865",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-09-20T14:42:11Z",
      "side": 1,
      "message": "You\u0027re right. I checked it before and it worked but now it gets dropped in both cases. Not sure what exactly happened before.\nI\u0027ll take a look if I can change it to support both cases.",
      "parentUuid": "443fe347_fd3bc391",
      "range": {
        "startLine": 559,
        "startChar": 38,
        "endLine": 559,
        "endChar": 47
      },
      "revId": "63572d4a17e7740ba4b3307d568f32db04d89110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}