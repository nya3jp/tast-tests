{
  "comments": [
    {
      "key": {
        "uuid": "26d3ba41_69f33ed9",
        "filename": "src/chromiumos/tast/local/arc/README_dumpsys.md",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-09-24T07:36:28Z",
      "side": 1,
      "message": "Usually protocol buffer messages should be designed so that messages can be understood without knowledge of their producer version. Hopefully we can fallback to old fields without relying on SDKVersion...",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "e36cb3b0afec9d4bafda7a6305157bdf30fc9556",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1f3ff8d_287b0456",
        "filename": "src/chromiumos/tast/local/arc/README_dumpsys.md",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-09-24T07:36:28Z",
      "side": 1,
      "message": "This is really unexpected in normal usage of protocol buffers; as long as we don\u0027t design protocol buffer messages critically wrongly (go/protodosdonts), messages generated by a newer producer should be parsable with an older consumer.\n\nHave you encountered this case in reality?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 69,
        "endChar": 72
      },
      "revId": "e36cb3b0afec9d4bafda7a6305157bdf30fc9556",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}