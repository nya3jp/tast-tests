{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c085ebf_b820c85a",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/cros_to_phone_high_vis.go",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2021-03-09T07:15:21Z",
      "side": 1,
      "message": "I realise this isn\u0027t in your CL but might be worth following up with a cleanupCtx here and in any other deferred methods that take a context to ensure they\u0027re run\n```\ncleanupCtx :\u003d ctx\nctx, cancel :\u003d ctxutil.Shorten(ctx, 30*time.Second)\ndefer cancel()\n```",
      "range": {
        "startLine": 87,
        "startChar": 33,
        "endLine": 87,
        "endChar": 36
      },
      "revId": "ce14c357fc84b388c62ef4804469e9a36b1293a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73ac9690_c3470842",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/cros_to_phone_high_vis.go",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-03-09T17:10:33Z",
      "side": 1,
      "message": "+1 https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Reserve-time-for-clean_up-task",
      "parentUuid": "6c085ebf_b820c85a",
      "range": {
        "startLine": 87,
        "startChar": 33,
        "endLine": 87,
        "endChar": 36
      },
      "revId": "ce14c357fc84b388c62ef4804469e9a36b1293a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b136e987_27d808d8",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/cros_to_phone_high_vis.go",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2021-03-08T23:47:21Z",
      "side": 1,
      "message": "Looking at this again. It is weird that we wait for so much time here (the entire context\u0027s timeout) but then small times for subsequent actions. What is this rpc doing?",
      "range": {
        "startLine": 91,
        "startChar": 79,
        "endLine": 91,
        "endChar": 90
      },
      "revId": "ce14c357fc84b388c62ef4804469e9a36b1293a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "888997e5_2d242d40",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/cros_to_phone_high_vis.go",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-03-09T00:09:55Z",
      "side": 1,
      "message": "The receiveFile and sendFile RPCs take a timeout for the entire sharing flow, but they are async and return pretty much immediately. There\u0027ll be an error on the Android side if the timeout is reached, so we need to give it long enough for everything in the test to finish. Realistically we\u0027ll probably never hit this, since we\u0027ll either time out earlier if one of the subsequent step fails or the share will finish. If the test exits without cleaning up for some reason, though, then at least the Android side will time out and shut things down after the timeout expires.",
      "parentUuid": "b136e987_27d808d8",
      "range": {
        "startLine": 91,
        "startChar": 79,
        "endLine": 91,
        "endChar": 90
      },
      "revId": "ce14c357fc84b388c62ef4804469e9a36b1293a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4e5fa0c_10059a3c",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/cros_to_phone_high_vis.go",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2021-03-09T07:15:21Z",
      "side": 1,
      "message": "If the cleanupCtx gets implemented, make sure to pass it to this function to ensure it\u0027s used here as well.",
      "range": {
        "startLine": 96,
        "startChar": 11,
        "endLine": 96,
        "endChar": 13
      },
      "revId": "ce14c357fc84b388c62ef4804469e9a36b1293a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9a368b5_bda567dd",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/cros_to_phone_high_vis.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2021-03-09T07:15:21Z",
      "side": 1,
      "message": "Given the var is quite self explanatory, might be worth just inlining it seeing as you don\u0027t reuse it later on.",
      "range": {
        "startLine": 133,
        "startChar": 1,
        "endLine": 133,
        "endChar": 44
      },
      "revId": "ce14c357fc84b388c62ef4804469e9a36b1293a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ff457d9_8ad99ae1",
        "filename": "src/chromiumos/tast/local/chrome/nearbyshare/constants.go",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2021-03-09T07:15:21Z",
      "side": 1,
      "message": "nit: vice-versa",
      "range": {
        "startLine": 20,
        "startChar": 92,
        "endLine": 20,
        "endChar": 102
      },
      "revId": "ce14c357fc84b388c62ef4804469e9a36b1293a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe86a665_cf1da3db",
        "filename": "src/chromiumos/tast/local/chrome/nearbyshare/constants.go",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-03-09T17:10:33Z",
      "side": 1,
      "message": "It\u0027s unclear to me whether this timeout is long enough for both the sender and receiver to detect each other, or only long enough for one. Based on the 2* below, I *think* it is only long enough for one. If that\u0027s true, then I recommend clarifying this by changing \"and vice-versa\" to \"or vice-versa\"",
      "range": {
        "startLine": 20,
        "startChar": 88,
        "endLine": 20,
        "endChar": 91
      },
      "revId": "ce14c357fc84b388c62ef4804469e9a36b1293a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}