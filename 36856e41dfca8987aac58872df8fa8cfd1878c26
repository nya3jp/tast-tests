{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f2548b42_9ad47f53",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-08T23:05:11Z",
      "side": 1,
      "message": "Please review my redesign for DesksCUJ, thank you!",
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc3daa59_27d881fc",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/desks_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-09T18:19:25Z",
      "side": 1,
      "message": "If the timeout is the same for all test variants, consider using `Timeout` directly in `testing.Test` instead.\n\t\tTimeout:      30 * time.Minute,\n\t\tParams: []testing.Param{{\n\t\t\tVal:     browser.TypeAsh,\n\t\t\tFixture: \"loggedInToCUJUser\",\n\t\t}, {\n\t\t\tName:              \"lacros\",\n\t\t\tVal:               browser.TypeLacros,\n\t\t\tExtraSoftwareDeps: []string{\"lacros\"},\n\t\t\tFixture:           \"loggedInToCUJUserLacros\",\n\t\t}},",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 36,
        "endChar": 5
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c65debd6_90b9c9da",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/desks_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-12T16:13:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc3daa59_27d881fc",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 36,
        "endChar": 5
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e6c6d55_e8fc29ad",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-09T18:19:25Z",
      "side": 1,
      "message": "This function uses the `desk` parameter only for `desk.urls`, so it should have simply a `urls` parameter instead.",
      "range": {
        "startLine": 31,
        "startChar": 78,
        "endLine": 31,
        "endChar": 91
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8760b423_fe97e941",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-12T16:13:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e6c6d55_e8fc29ad",
      "range": {
        "startLine": 31,
        "startChar": 78,
        "endLine": 31,
        "endChar": 91
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03ec83d9_931c0520",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-09T18:19:25Z",
      "side": 1,
      "message": "Remove this space.",
      "range": {
        "startLine": 37,
        "startChar": 60,
        "endLine": 37,
        "endChar": 61
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a00eaf0_25f66279",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-12T16:13:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03ec83d9_931c0520",
      "range": {
        "startLine": 37,
        "startChar": 60,
        "endLine": 37,
        "endChar": 61
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfa76f7d_b7177de0",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-09T18:19:25Z",
      "side": 1,
      "message": "desks_cuj.go uses this only for the `onVisitAction` field, so it should be simply `[]action.Action`. You can write `onVisitActions :\u003d make([]action.Action, 0, len(desks))` and `onVisitActions \u003d append(onVisitActions, desk.onVisitAction)`.",
      "range": {
        "startLine": 83,
        "startChar": 208,
        "endLine": 83,
        "endChar": 218
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4e5a093_6877755a",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-12T16:13:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cfa76f7d_b7177de0",
      "range": {
        "startLine": 83,
        "startChar": 208,
        "endLine": 83,
        "endChar": 218
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bab9c5f4_1f34b9ff",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-09T18:19:25Z",
      "side": 1,
      "message": "Inline the `deskInfo` type definition here. For each of the four elements, you can just leave out the `deskInfo` type because it is implied by the type of the whole slice.",
      "range": {
        "startLine": 91,
        "startChar": 12,
        "endLine": 91,
        "endChar": 20
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4232482_0fabc66a",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-12T16:13:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bab9c5f4_1f34b9ff",
      "range": {
        "startLine": 91,
        "startChar": 12,
        "endLine": 91,
        "endChar": 20
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42e7460c_ea41f9d2",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-09T18:19:25Z",
      "side": 1,
      "message": "Run this: https://go.dev/play/p/ugkE9_B0EyC",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 51
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec2c63f9_f63fd1f2",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-12T16:13:59Z",
      "side": 1,
      "message": "Very subtle, thanks for showing me this!(Done)",
      "parentUuid": "42e7460c_ea41f9d2",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 51
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87a42e12_7f27331f",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-09T18:19:25Z",
      "side": 1,
      "message": "nit: I would inline this even though it is used three times. `desks` is a local slice, and therefore the length will be cached so there is no performance penalty in writing `len(desks)` repeatedly.",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 23
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53109e04_94fb2e7d",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-12T16:13:59Z",
      "side": 1,
      "message": "I changed the variable `desks` to `onVisitActions` as per your other comment. B/c of this, I feel better using `numDesks :\u003d len(onVisitActions)`, because `numDesks` would be more descriptive than `len(onVisitActions)` in place of the number of desks.",
      "parentUuid": "87a42e12_7f27331f",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 23
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a2aa671_faa36025",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/deskswitcher.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-09T18:19:25Z",
      "side": 1,
      "message": "This logic is repeated three times, it constitutes most of the code complexity of the first two desk switch workflows, and it also seems like an unnecessarily complicated use of a closure. How about this:\n1. `deskSwitchWorkflow.run` has type `func(context.Context, int, int) error` where the two `int` parameters will be `fromDesk` and `toDesk`.\n2. `getKeyboardSearchBracketWorkflow` does something like this:\n\tswitch toDesk {\n\tcase fromDesk - 1:\n\t\treturn kw.Accel(ctx, \"Search+[\")\n\tcase fromDesk + 1:\n\t\treturn kw.Accel(ctx, \"Search+]\")\n\tdefault:\n\t\treturn errors.Errorf(\"invalid Search+Bracket desk switch: from %d to %d\", fromDesk, toDesk)\n\t}\n3. The other two desk switch workflows use `fromDesk` for nothing except maybe this:\n\tif fromDesk \u003d\u003d toDesk {\n\t\treturn errors.Errorf(\"supposed to switch from desk %d to itself\", fromDesk)\n\t}\n4. desks_cuj.go does something like this:\n\tdesksItinerary :\u003d []int{0, 1, 2, 3, 2, 1}\n\ti :\u003d 0\n\tfor endTime :\u003d time.Now().Add(deskSwitchingDuration); time.Now().Before(endTime); {\n\t\tfromDesk :\u003d desksItinerary[i]\n\t\ti \u003d (i + 1) % len(desksItinerary)\n\t\ttoDesk :\u003d desksItinerary[i]\n\n\t\t...\n\t}",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1068f01_60962802",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/deskswitcher.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-09T18:43:07Z",
      "side": 1,
      "message": "This is a very interesting idea. One potential limitation for this idea, which maybe you have a solution to:\n\nWhat if we, in the future, wanted to add the 4 finger desk swipes? Where the ordering of the \"deskItinerary\" might be different for each workflow, because it\u0027d go from 1 -\u003e 4 -\u003e 1? It appears that each workflow would have its own itinerary, which at that point, would be more code than just having the closure to keep track of what desk we are on and what desk is \"next.\n\nOne other option is to make a helper function that factors out the logic, using the \"desksItinerary\" idea, but within `deskswitcher.go`. I guess my preference is to keep desks_cuj as dumb as possible, so it doesn\u0027t have to actually keep track of the nuances between the desk switching workflow. Maybe we instead of \n\n```\nif activeDesk \u003d\u003d 0 || activeDesk \u003d\u003d numDesks-1 {\n\tnextDeskIncrement *\u003d -1\n}\nactiveDesk +\u003d nextDeskIncrement\n```\n\nI can replace that with a function that takes in the unique desk itinerary for each workflow inside of `deskswitcher.go`:\n\n```\nfunc GetNextDesk(deskItinerary []int, i int) {\n     return deskItinerary[(i+1)%len(deskItinerary)]\n} \n```\n\n...which in retrospect might be even more lines of code, so not sure if it makes sense.",
      "parentUuid": "6a2aa671_faa36025",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2347415c_4a130c9d",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/deskswitcher.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-09T18:54:00Z",
      "side": 1,
      "message": "deskswitcher.go:\n\ttype deskSwitchWorkflow struct {\n\t\tname        string\n\t\tdescription string\n\t\titinerary   []int\n\t\tswitchDesks func(context.Context, int, int) error\n\t}\n\ndesks_cuj.go:\n\t\tfor _, deskSwitcher :\u003d range deskSwitchers {\n\t\t\t...\n\n\t\t\ti :\u003d 0\n\t\t\tfor endTime :\u003d time.Now().Add(deskSwitchingDuration); time.Now().Before(endTime); {\n\t\t\t\tfromDesk :\u003d deskSwitcher.itinerary[i]\n\t\t\t\ti \u003d (i + 1) % len(deskSwitcher.itinerary)\n\t\t\t\ttoDesk :\u003d deskSwitcher.itinerary[i]\n\n\t\t\t\t...\n\t\t\t}\n\t\t\ts.Logf(\"Switched desk by %s %d times\", deskSwitcher.name, cycles)\n\t\t}",
      "parentUuid": "e1068f01_60962802",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6831ce5b_54ac9d13",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/deskswitcher.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-12T16:13:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2347415c_4a130c9d",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "36856e41dfca8987aac58872df8fa8cfd1878c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}