{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2a6d2147_b3f2dc2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-12-01T15:21:41Z",
      "side": 1,
      "message": "nit: Actually",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 20
      },
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20a12a23_14c9f269",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-12-01T15:58:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a6d2147_b3f2dc2d",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 20
      },
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0b5733a_b3b675d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-12-01T15:44:18Z",
      "side": 1,
      "message": "Looks good, let\u0027s maybe add someone from automation UI team?",
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b0437c_7e041367",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-12-01T15:21:41Z",
      "side": 1,
      "message": "Exists() can return with a context timeout as well. If you PollBreak() with a timeout error, the Poll() return with this error, and not the last useful error (ErrNodeDoesNotExist in this case).",
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e72c577d_03a0c862",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-12-01T15:58:19Z",
      "side": 1,
      "message": "If the context expires we should fail the test in this case. Not sure if it\u0027s worth to make the function more complex to return a different error.",
      "parentUuid": "85b0437c_7e041367",
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "441fd4b0_1284ae18",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-12-01T16:21:01Z",
      "side": 1,
      "message": "But the inside fuinction in Poll() will always run until the context expires. And at that point it is a coin toss if it expires inside Exists() or outside.",
      "parentUuid": "e72c577d_03a0c862",
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1a043a1_2d4ced35",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-12-01T16:52:46Z",
      "side": 1,
      "message": "I check for both cases below on line 667.",
      "parentUuid": "441fd4b0_1284ae18",
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a10a1cc_737ec3f2",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-12-01T18:49:24Z",
      "side": 1,
      "message": "Wait, I thought that \"err \u003d\u003d context.DeadlineExceeded\" should never happen in the normal path.\n\nVictor, you said `If the context expires we should fail the test in this case`, but `if err \u003d\u003d context.DeadlineExceeded` you actually return `nil`",
      "parentUuid": "f1a043a1_2d4ced35",
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93f9bb6d_bb2cf833",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-12-01T18:57:16Z",
      "side": 1,
      "message": "testing.Poll creates an internal context that expires when the timeout is reached. That\u0027s the one generating the error, not the outside context.",
      "parentUuid": "5a10a1cc_737ec3f2",
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e655392f_075eb0d1",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-12-01T19:06:36Z",
      "side": 1,
      "message": "Then there is a problem that testing.Poll may run much less then timeout if we just don\u0027t have enough time.",
      "parentUuid": "93f9bb6d_bb2cf833",
      "revId": "5e883b968d97b7a370cd5d4a997b0e47ced7ad28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}