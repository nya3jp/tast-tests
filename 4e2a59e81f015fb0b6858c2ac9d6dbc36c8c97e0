{
  "comments": [
    {
      "key": {
        "uuid": "bcf26e47_efea274a",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play.go",
        "patchSetId": 16
      },
      "lineNbr": 197,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-12T23:49:56Z",
      "side": 1,
      "message": "Can we file a bug for this TODO?\n\nIs this something we can solve with SoftwareDeps? (i.e. one that succeeds when the platform is guarnateed to have i915 present)",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70e7b88a_98d50a2b",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play.go",
        "patchSetId": 16
      },
      "lineNbr": 197,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-02-13T21:10:20Z",
      "side": 1,
      "message": "I think it\u0027s better to implement it for AMD as well, and leave the amd64 as\ndependency. I reused crbug.com/1047514. Note that AMD already provides this\ninfo (https://paste.googleplex.com/5168363204509696) but in a more verbose\nformat, so it makes sense to land it in another CL.",
      "parentUuid": "bcf26e47_efea274a",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7b9f0a0_22ce49fd",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play.go",
        "patchSetId": 16
      },
      "lineNbr": 197,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-14T18:24:21Z",
      "side": 1,
      "message": "OK, thanks.",
      "parentUuid": "70e7b88a_98d50a2b",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1342f8c_2463aee8",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play.go",
        "patchSetId": 16
      },
      "lineNbr": 205,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-12T23:49:56Z",
      "side": 1,
      "message": "Seems like these are really two separate tests?",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 205,
        "endChar": 2
      },
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95ed735b_9c7d8871",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play.go",
        "patchSetId": 16
      },
      "lineNbr": 205,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-02-13T21:10:20Z",
      "side": 1,
      "message": "I thought about it and it might be better long term, since the next\nidea we had was to use a different Play()ed file that changes resolution\nand monitor memory consumption during the played back (there\u0027s an active\nleak that could have been caught with such a test: crbug.com/1051107).",
      "parentUuid": "e1342f8c_2463aee8",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 205,
        "endChar": 2
      },
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0990800_fe569496",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-12T23:49:56Z",
      "side": 1,
      "message": "You might also want to look at https://godoc.org/golang.org/x/sync/errgroup for this purpose -- then play.TestPlay could return errors normally instead of fataling, and we don\u0027t have to drop the error from the second function on the floor.",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84334c78_fa3a16d1",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-02-13T21:10:20Z",
      "side": 1,
      "message": "Hmm see my idea below -- which might make no sense: we\u0027re interested in payload(),\nwhile the second part is supposed to run only until it measures something different\nfrom 0, we don\u0027t need to wait for this second part to finish. The second part is\nbasically a sanity check. Happy to iterate on this more if you have suggestions.",
      "parentUuid": "c0990800_fe569496",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1b3a312_0245fc3d",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-14T18:24:21Z",
      "side": 1,
      "message": "AFAICT the \"sanity check\" doesn\u0027t do much though, since the error it returns gets dropped... Would it be much different if readStableObjectCount just errored out on 0 on L124?",
      "parentUuid": "84334c78_fa3a16d1",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8abff9ca_e5d56a08",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 122,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-12T23:49:56Z",
      "side": 1,
      "message": "The waitgroup only waits for the function that calls payload(). Where do we wait for the one that is polling for the framebuffer count?",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d23fe83_586eff8a",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 122,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-02-13T21:10:20Z",
      "side": 1,
      "message": "My idea here was to run in parallel the payload() (i.e. \u003cvideo\u003e play for 1.5 seconds)\nand the ReadFramebufferCount(); but only wanted to wait for the payload() to finish.\nMakes sense?",
      "parentUuid": "8abff9ca_e5d56a08",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6d9394e_c75788f9",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 122,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-14T18:24:21Z",
      "side": 1,
      "message": "OK, then I think we can just use a channel to signal the completion of one goroutine. You can also propagate errors from play.TestPlay this way.\n\n c :\u003d make(chan err)\n go func(c chan err) {\n   c \u003c- payload()\n }\n err :\u003d \u003c-c",
      "parentUuid": "3d23fe83_586eff8a",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb947179_975a2dd6",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 190,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-12T23:49:56Z",
      "side": 1,
      "message": "nit:\n\n \"(got: %d, want %d)\"",
      "range": {
        "startLine": 190,
        "startChar": 43,
        "endLine": 190,
        "endChar": 64
      },
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "436e031c_92812e30",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 190,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-02-13T21:10:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb947179_975a2dd6",
      "range": {
        "startLine": 190,
        "startChar": 43,
        "endLine": 190,
        "endChar": 64
      },
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f72ef661_29f845d5",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 195,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-12T23:49:56Z",
      "side": 1,
      "message": "are these too verbose?",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b340943e_133af0ce",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 198,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-02-12T23:49:56Z",
      "side": 1,
      "message": "ditto re: verbosity",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fa567ed_5c843bb1",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 16
      },
      "lineNbr": 198,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-02-13T21:10:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b340943e_133af0ce",
      "revId": "4e2a59e81f015fb0b6858c2ac9d6dbc36c8c97e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}