{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "47a339e5_1d6f5207",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1364246
      },
      "writtenOn": "2022-08-03T03:48:19Z",
      "side": 1,
      "message": "+tast-owners@ directly since this patch is only related to specific features. Thanks!",
      "revId": "ad49043ab281a510ff66b73cea2a36b1f14eed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fffbd33a_1b07e27e",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/routing/routing.go",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-08-03T04:30:33Z",
      "side": 1,
      "message": "This will not reserve anytime from ctx. The suggested solution is as below:\n\ncleanupCtx :\u003d ctx\nctx, cancel :\u003d ctxutil.Shorten(ctx, 5*time.Second)\ndefer cancel()\n\n...\n\ndefer func(ctx context.Context) {\n    if retErr !\u003d nil {\n        dumpNetworkInfoAfterPingFailure(ctx)\n    }\n}(cleanupCtx)",
      "range": {
        "startLine": 96,
        "startChar": 1,
        "endLine": 97,
        "endChar": 45
      },
      "revId": "ad49043ab281a510ff66b73cea2a36b1f14eed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1745bfaf_1a1f3602",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/routing/routing.go",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1364246
      },
      "writtenOn": "2022-08-03T06:30:48Z",
      "side": 1,
      "message": "Thanks for the suggestion! A few questions:\n\n1) Maybe I missed something but I suppose that the current code actually reserve some time from ctx, since ctx in the defer func on L87 is not captured, the longer ctx will be used there and shorter ctx will be used outside that defer func. \n\nI\u0027m happy to change to the cleanupCtx style (actually I prefer that), but I got a suggestion from another tast-reviewer to change the code to the current way in https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/3780752/comment/687c1cea_909333fe/\n\nDo we have a preference here?\n\n2) Is `defer cancel()` a must? We don\u0027t really want to cancel the ctx here as the reason mentioned in the commit msg.",
      "parentUuid": "fffbd33a_1b07e27e",
      "range": {
        "startLine": 96,
        "startChar": 1,
        "endLine": 97,
        "endChar": 45
      },
      "revId": "ad49043ab281a510ff66b73cea2a36b1f14eed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "608381ca_551f6528",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/routing/routing.go",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-08-03T07:32:53Z",
      "side": 1,
      "message": "My bad. This code works, because `ctx, _ \u003d ctxutil.Shorten(ctx, 5*time.Second)` creates a new ctx and the old one was passed into the defer function registered earlier.\n\nHowever, it is not good for readability.\ncleanupCtx makes clearer that it has larger timeout, and should be used in any further defer functions if you do not want to create it for each cleanup.\n\n2. cancel is not a must, just a common practice. So I used to copy and paste it everywhere.",
      "parentUuid": "1745bfaf_1a1f3602",
      "range": {
        "startLine": 96,
        "startChar": 1,
        "endLine": 97,
        "endChar": 45
      },
      "revId": "ad49043ab281a510ff66b73cea2a36b1f14eed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}