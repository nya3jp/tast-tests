{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af26adf5_6bc8adc3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2022-10-21T07:17:58Z",
      "side": 1,
      "message": "Bohdan, is this a test for the LURS CUJ?",
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39a74da1_d10d2dd4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1528608
      },
      "writtenOn": "2022-10-21T11:45:22Z",
      "side": 1,
      "message": "Yes, looks like it corresponds to the \"1.2.7 Test signin screen with lots of users\" from the LURS test tracker. Adding Anastasiia and tast owners to take a look.",
      "parentUuid": "af26adf5_6bc8adc3",
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e54c6404_debf1e86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2022-10-21T15:53:00Z",
      "side": 1,
      "message": "LGTM",
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe773183_df654c5f",
        "filename": "src/chromiumos/tast/local/bundles/cros/login/sign_in_with_lots_of_users.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1528608
      },
      "writtenOn": "2022-10-21T11:45:22Z",
      "side": 1,
      "message": "I guess we could logout manually in the same way as it done in the https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/login/logout.go rather than create new chrome. Though, I\u0027m not sure whether it would perform better than the current implementation. anastasiian@ what do you think?",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 88,
        "endChar": 4
      },
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca687090_9ba9bdf6",
        "filename": "src/chromiumos/tast/local/bundles/cros/login/sign_in_with_lots_of_users.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1349779
      },
      "writtenOn": "2022-10-24T12:07:24Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion, but I think just restarting Chrome with chrome.New should be less flaky",
      "parentUuid": "fe773183_df654c5f",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 88,
        "endChar": 4
      },
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb24dc40_20f04513",
        "filename": "src/chromiumos/tast/local/bundles/cros/login/sign_in_with_lots_of_users.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1528608
      },
      "writtenOn": "2022-10-24T13:55:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca687090_9ba9bdf6",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 88,
        "endChar": 4
      },
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f892dd50_6ea8f523",
        "filename": "src/chromiumos/tast/local/bundles/cros/login/sign_in_with_lots_of_users.go",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2022-10-21T15:53:00Z",
      "side": 1,
      "message": "Maybe use DumpUITreeWithScreenshotOnError instead to make debugging easier when an error occurs.",
      "range": {
        "startLine": 98,
        "startChar": 17,
        "endLine": 98,
        "endChar": 34
      },
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a242691c_1c385fae",
        "filename": "src/chromiumos/tast/local/bundles/cros/login/sign_in_with_lots_of_users.go",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1528608
      },
      "writtenOn": "2022-10-21T16:29:26Z",
      "side": 1,
      "message": "I believe we have a screenshot `screenshot_chrome.png` even if we use `faillog.DumpUITreeOnError`. I looked into our code a bit and seems like the key difference is what method we use to capture a screenshot. For `DumpUITreeWithScreenshotOnError` we use https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/screenshot/capture.go;l\u003d125-148?q\u003dCaptureChromeForDisplay%20package:chromeos\u0026type\u003dcs and default screenshot is created with the https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/screenshot/capture.go;l\u003d94-104?q\u003dCaptureChromeForDisplay%20package:chromeos\u0026type\u003dcs. There is a comment about the difference between those two methods:\n```\n// CaptureCDP takes a screenshot and saves it as a PNG image at path, similar to\n// CaptureChrome.\n// The diff from CaptureChrome is that this function takes *cdputil.Conn, which\n// is used by chrome.Conn. Thus, CaptureChrome records logs in case of error,\n// while this does not. XXX\n```\n\nIt is unclear to me which logs we will capture with the `CaptureChrome`? Also, do you think it would be beneficial to replace `DumpUITreeOnError` with the `DumpUITreeWithScreenshotOnError` inside all login/oobe tests?",
      "parentUuid": "f892dd50_6ea8f523",
      "range": {
        "startLine": 98,
        "startChar": 17,
        "endLine": 98,
        "endChar": 34
      },
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e0dd549_d906b4ab",
        "filename": "src/chromiumos/tast/local/bundles/cros/login/sign_in_with_lots_of_users.go",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1477974
      },
      "writtenOn": "2022-10-25T04:36:40Z",
      "side": 1,
      "message": "Actually we are not able to use the `DumpUITreeWithScreenshotOnError` since the function uses TestAPI: `extension.TestExtensionID` and here only the TestAPI: `extension.SigninProfileTestExtensionID` is available before logged in.\n\nShould we improve the `faillog` to provide a different interface that uses TestAPI : `extension.SigninProfileTestExtensionID`?",
      "parentUuid": "a242691c_1c385fae",
      "range": {
        "startLine": 98,
        "startChar": 17,
        "endLine": 98,
        "endChar": 34
      },
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84cd40fb_dc6ed687",
        "filename": "src/chromiumos/tast/local/bundles/cros/login/sign_in_with_lots_of_users.go",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2022-10-26T12:37:08Z",
      "side": 1,
      "message": "Sorry for the late reply. This is fine then, it isn\u0027t anything critical anyway so it shouldn\u0027t block the submission.",
      "parentUuid": "6e0dd549_d906b4ab",
      "range": {
        "startLine": 98,
        "startChar": 17,
        "endLine": 98,
        "endChar": 34
      },
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50393dbe_5c15916c",
        "filename": "src/chromiumos/tast/local/bundles/cros/login/sign_in_with_lots_of_users.go",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1477974
      },
      "writtenOn": "2022-10-27T01:26:44Z",
      "side": 1,
      "message": "Thank you very much!",
      "parentUuid": "84cd40fb_dc6ed687",
      "range": {
        "startLine": 98,
        "startChar": 17,
        "endLine": 98,
        "endChar": 34
      },
      "revId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "937bb877eb7df889908d372a03f5c3b1b5600cc1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}