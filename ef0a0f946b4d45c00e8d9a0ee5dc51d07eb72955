{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d7653d25_81554b3f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-11-01T18:06:37Z",
      "side": 1,
      "message": "Do you know why it fails for about 5% of times? If it\u0027s out of our control (e.g. server side failure, etc), I think it\u0027s okay to deflake this with retries. If it\u0027s caused by our code, I think it\u0027s better to try to fix it on our end.",
      "range": {
        "startLine": 10,
        "startChar": 39,
        "endLine": 11,
        "endChar": 27
      },
      "revId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e24d36dd_e65e7553",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1537587
      },
      "writtenOn": "2022-11-01T18:12:03Z",
      "side": 1,
      "message": "I cannot reproduce this bug on my end. According to [tastboard](http://tastboard/test/personalization.SelectAvatarFromFile) this error happens pretty randomly and doesn\u0027t just hit certain boards. Based on my prior experience it might be caused by the asynchronous behavior between the clicking and the verification.",
      "parentUuid": "d7653d25_81554b3f",
      "range": {
        "startLine": 10,
        "startChar": 39,
        "endLine": 11,
        "endChar": 27
      },
      "revId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2bfdbe7_236ac3ea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-11-01T18:33:02Z",
      "side": 1,
      "message": "How about adding logging as the first step? Does the personalization app write logs if it fails to set profile image after a click? I don\u0027t remember which flag was it. But I think there was a flag to enable `console.log` to write its output to chrome log.",
      "parentUuid": "e24d36dd_e65e7553",
      "range": {
        "startLine": 10,
        "startChar": 39,
        "endLine": 11,
        "endChar": 27
      },
      "revId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a385d08_ee7b8989",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1537587
      },
      "writtenOn": "2022-11-01T18:50:30Z",
      "side": 1,
      "message": "Thank you for the suggestion! I\u0027ll try to add a log",
      "parentUuid": "d2bfdbe7_236ac3ea",
      "range": {
        "startLine": 10,
        "startChar": 39,
        "endLine": 11,
        "endChar": 27
      },
      "revId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a2090ff_e601dc21",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1537587
      },
      "writtenOn": "2022-11-01T22:34:57Z",
      "side": 1,
      "message": "Sorry but I thought you were referring to the tast test log.txt. To add console.log() to chrome.log we will need to update the chromium side.",
      "parentUuid": "5a385d08_ee7b8989",
      "range": {
        "startLine": 10,
        "startChar": 39,
        "endLine": 11,
        "endChar": 27
      },
      "revId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b53c917_0aad9976",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-11-01T22:37:06Z",
      "side": 1,
      "message": "Yes. Also we have to update Chrome flags passed by tast tests if we are not enabling console.log output in Chrome log for now.",
      "parentUuid": "3a2090ff_e601dc21",
      "range": {
        "startLine": 10,
        "startChar": 39,
        "endLine": 11,
        "endChar": 27
      },
      "revId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79197c29_4ef99537",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-11-01T18:06:37Z",
      "side": 1,
      "message": "Thank you! One high-level comment. Even if the 5% failures are caused by our code, I think it\u0027s okay to deflake this test with retries if it\u0027s too difficult/complicated to fix. I think the reason matters in this case.",
      "revId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "ef0a0f946b4d45c00e8d9a0ee5dc51d07eb72955",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}