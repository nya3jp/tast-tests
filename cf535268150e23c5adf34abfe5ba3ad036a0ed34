{
  "comments": [
    {
      "key": {
        "uuid": "cd2ebfc0_687e280e",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-12-13T23:32:42Z",
      "side": 1,
      "message": "when i don\u0027t set this, it seems like crash dumps often don\u0027t get written at all. the breakpad code in chrome is hard to trace through, but i think it may be related to using an unofficial build. there are also a few flags related to forcing crash dumps, but they don\u0027t appear to work.",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97e95698_5e2b2bd9",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1196209
      },
      "writtenOn": "2017-12-15T04:26:40Z",
      "side": 1,
      "message": "https://chromium.googlesource.com/chromium/src/+/lkcr/docs/linux_crash_dumping.md#how-to-test-breakpad-support-in-chromium",
      "parentUuid": "cd2ebfc0_687e280e",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09342f7e_cc90fdae",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-12-15T20:31:11Z",
      "side": 1,
      "message": "i think i was mostly confused because the --enable-crash-reporter and --enable-crash-reporter-for-testing flags (which i would\u0027ve liked to use, because then i wouldn\u0027t have needed to change session_manager to support setting environment variables) didn\u0027t appear to make chrome write crash dumps. i spent some time looking at the code and got confused, but on further reflection, i suspect that this is expected, i.e. the flags control reporting, not dumping.",
      "parentUuid": "97e95698_5e2b2bd9",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "681cfc6c_0db0f336",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-12-13T23:32:42Z",
      "side": 1,
      "message": "i\u0027m not sure if this dependency makes sense or if it\u0027s backwards and the crash package should be getting this path from the chrome package.",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58ed3c8e_799a29d4",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1196209
      },
      "writtenOn": "2017-12-15T04:26:40Z",
      "side": 1,
      "message": "Does any other Autotest have special handling for any other software package besides Chrome? If not, this seems fine. If so, maybe having those specialization encapsulated by the struct that implements their details would be better design.",
      "parentUuid": "681cfc6c_0db0f336",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a641b71_cbb0c260",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-12-15T20:31:11Z",
      "side": 1,
      "message": "makes sense. i think that chrome is always going to be a special snowflake, so i\u0027m sticking with this.",
      "parentUuid": "58ed3c8e_799a29d4",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4ac92aa_5e36a2e9",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1196209
      },
      "writtenOn": "2017-12-15T20:35:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2a641b71_cbb0c260",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27199a7f_bd2cf30c",
        "filename": "src/chromiumos/tast/local/chrome/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1196209
      },
      "writtenOn": "2017-12-15T04:26:40Z",
      "side": 1,
      "message": "Are you certain Chrome is only 2 levels deep? I see many more levels on my Linux system.",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 67,
        "endChar": 3
      },
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "feac9518_cc9d9975",
        "filename": "src/chromiumos/tast/local/chrome/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-12-15T20:31:11Z",
      "side": 1,
      "message": "i don\u0027t think that the number of levels matters here, right? i\u0027m building up a set of all chrome PIDs, and then doing a second pass to find the (hopefully) one PID that has a parent not in the set. children that are further down in the tree should still have parents in the set.",
      "parentUuid": "27199a7f_bd2cf30c",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 67,
        "endChar": 3
      },
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1299d97_65491b02",
        "filename": "src/chromiumos/tast/local/chrome/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1196209
      },
      "writtenOn": "2017-12-15T20:35:01Z",
      "side": 1,
      "message": "Your method is named \u0027GetRootPID\u0027 though so not just any parent will work, right? You want *the* parent of all parents?",
      "parentUuid": "feac9518_cc9d9975",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 67,
        "endChar": 3
      },
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31f92372_f05f520b",
        "filename": "src/chromiumos/tast/local/chrome/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-12-15T20:48:37Z",
      "side": 1,
      "message": "yes, but maybe i\u0027m misunderstanding. i think that the way that chrome\u0027s always worked (and will in the servicification future, too) is that the initially-executed process is the browser process (or service manager, in the future), and it fork-execs all other chrome processes. that process will have session_manager as its parent rather than another chrome process. (it\u0027d be possible to identify using that instead, i guess, although i don\u0027t know if there\u0027d be any benefit to doing so.)\n\nthat\u0027s the process that i\u0027m interested in killing here, because it\u0027s not sandboxed and should get a crash dump when killed. if that makes sense, i\u0027ll add a comment to the test code that calls this.",
      "parentUuid": "e1299d97_65491b02",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 67,
        "endChar": 3
      },
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d6abc02_99ae7b86",
        "filename": "src/chromiumos/tast/local/crash/crash.go",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1196209
      },
      "writtenOn": "2017-12-15T04:26:40Z",
      "side": 1,
      "message": "yuk",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "024abd41_5e0849d0",
        "filename": "src/chromiumos/tast/local/crash/crash.go",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-12-15T20:31:11Z",
      "side": 1,
      "message": "yeah. :-/ i don\u0027t see any obvious way to tell chrome to put a prefix on its minidumps like the kernel does for other processes, though.",
      "parentUuid": "1d6abc02_99ae7b86",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "729263e5_1d97f22b",
        "filename": "src/chromiumos/tast/local/crash/crash.go",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1196209
      },
      "writtenOn": "2017-12-15T20:35:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "024abd41_5e0849d0",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5412605_6f8129bb",
        "filename": "src/chromiumos/tast/local/tests/ui/chrome_crash_dumps.go",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-12-13T23:32:42Z",
      "side": 1,
      "message": "i suspect that this approach is wrong, and that i need to be waiting longer since other chrome processes can still be dumping. (right now, i saw a gpu minidump still get collected after running this test, for instance.)\n\ni don\u0027t know how to tell when dumping is complete, though -- maybe i need to wait for all the PIDs to exit?",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d17d52a0_03f69aa5",
        "filename": "src/chromiumos/tast/local/tests/ui/chrome_crash_dumps.go",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1196209
      },
      "writtenOn": "2017-12-15T04:26:40Z",
      "side": 1,
      "message": "Can you have chrome.New return a channel that sends an event when the exec\u0027d PID of the root exits?",
      "parentUuid": "d5412605_6f8129bb",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d9906a7_25b4bfaa",
        "filename": "src/chromiumos/tast/local/tests/ui/chrome_crash_dumps.go",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2017-12-15T20:31:11Z",
      "side": 1,
      "message": "i think there are a few problems with that:\n\n- chrome.New doesn\u0027t exec chrome; session_manager does that\n- i don\u0027t think there\u0027s any guarantee that the root exits last; it may exit before renderers to speed up exit, for example\n\ni\u0027ve reworked this code to instead collect chrome PIDs beforehand and then wait for all of them to go away. i think that that should work as long as we\u0027re not worried about PIDs getting recycled.",
      "parentUuid": "d17d52a0_03f69aa5",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "670648f0_55f57412",
        "filename": "src/chromiumos/tast/local/tests/ui/chrome_crash_dumps.go",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1196209
      },
      "writtenOn": "2017-12-15T20:35:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9d9906a7_25b4bfaa",
      "revId": "cf535268150e23c5adf34abfe5ba3ad036a0ed34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}