{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d3762d26_301e7732",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-07T06:18:37Z",
      "side": 1,
      "message": "Only minor comments.",
      "revId": "e69e3cb0d39ad2eeda5a32b8bba7069728d6bff5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "089d79fc_eca519e9",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/regdb/regdb.go",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-07T06:18:37Z",
      "side": 1,
      "message": "nit: perhaps DB? as it is abbrev. of database, and according to https://github.com/golang/go/wiki/CodeReviewComments#initialisms",
      "range": {
        "startLine": 31,
        "startChar": 15,
        "endLine": 31,
        "endChar": 17
      },
      "revId": "e69e3cb0d39ad2eeda5a32b8bba7069728d6bff5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d103e330_b7d07ab2",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/regdb/regdb.go",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-12-07T20:07:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "089d79fc_eca519e9",
      "range": {
        "startLine": 31,
        "startChar": 15,
        "endLine": 31,
        "endChar": 17
      },
      "revId": "e69e3cb0d39ad2eeda5a32b8bba7069728d6bff5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0722998b_facc7bd8",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/regdb/regdb.go",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-07T06:18:37Z",
      "side": 1,
      "message": "range-ing string is kind of tricky. Range will try to decode it as UTF-8 string and looping the runes instead of bytes, while len still returns length in bytes. As a result, something like \"Ö\" (0xD6), a 2 bytes UTF-8 rune, will pass the checking here. (example: https://play.golang.org/p/ifhAg4v_TZY) But, IIUC, alpha2 country should be two ascii letters?\n\nI guess one quick fix might be counting length in the loop instead of len(str) in line78.\n\nAbout range-ing string: https://blog.golang.org/strings (\"Range loops\" section)\nAbout len(string): https://golang.org/ref/spec#Length_and_capacity",
      "revId": "e69e3cb0d39ad2eeda5a32b8bba7069728d6bff5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ff17e3c_6fdf4edb",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/regdb/regdb.go",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-12-07T20:07:26Z",
      "side": 1,
      "message": "Good catch. I kinda struggled on which way I wanted to write this, and this suggests I\u0027d be better off just validating each byte before doing the string() conversion. PTAL at version 3.",
      "parentUuid": "0722998b_facc7bd8",
      "revId": "e69e3cb0d39ad2eeda5a32b8bba7069728d6bff5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6456e0d_2c8c25bb",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/regdb/regdb.go",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-08T00:35:47Z",
      "side": 1,
      "message": "Yeah, it is kind of awkward here that golang don\u0027t have built-in \"ascii\" package. :P\n\nPatchset3 LGTM % one minor case that might not matter much: As rune is just int32, when 256 \u003e b \u003e 127, it might still be a valid rune+letter. e.g. \"Ö\" (0xD6) again. Not sure if we want to also assert \"b \u003c 128\".",
      "parentUuid": "2ff17e3c_6fdf4edb",
      "revId": "e69e3cb0d39ad2eeda5a32b8bba7069728d6bff5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c60c72d_468864be",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/regdb/regdb.go",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-12-08T01:08:12Z",
      "side": 1,
      "message": "Ugh, yes, you\u0027re right. Technically, we probably don\u0027t actually care that much to validate the country codes here at all, but to avoid appearing to be doing a check that I\u0027m not doing all that well, I\u0027ll take your suggestion.",
      "parentUuid": "f6456e0d_2c8c25bb",
      "revId": "e69e3cb0d39ad2eeda5a32b8bba7069728d6bff5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be84d1b8_cce9f2b2",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/regdb/regdb_test.go",
        "patchSetId": 2
      },
      "lineNbr": 554,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-07T06:18:37Z",
      "side": 1,
      "message": "nit: Not sure if we should also fail when db.Countries is shorted than countries.\n\nIf so, maybe we can:\n  var dbCountries []string\n  for _, c :\u003d range db.Countries {\n    dbCountries \u003d append(dbCountries, c.Alpha)\n  }\n  if diff :\u003d cmp.Diff(dbCountries, countries); diff !\u003d \"\" {\n    t.Errorf(\"Countries do not match, diff: %s\", diff)\n  }\n\nWDYT?",
      "revId": "e69e3cb0d39ad2eeda5a32b8bba7069728d6bff5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d352415_1d0678b7",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/regdb/regdb_test.go",
        "patchSetId": 2
      },
      "lineNbr": 554,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-12-07T20:07:26Z",
      "side": 1,
      "message": "Yeah, definitely should check both shorter and longer. Don\u0027t know why I missed that...\n\nNice tip, done.",
      "parentUuid": "be84d1b8_cce9f2b2",
      "revId": "e69e3cb0d39ad2eeda5a32b8bba7069728d6bff5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}