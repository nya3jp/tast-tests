{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f231325a_67e83cca",
        "filename": "src/chromiumos/tast/common/perf/perf.go",
        "patchSetId": 13
      },
      "lineNbr": 199,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T22:56:05Z",
      "side": 1,
      "message": "I don\u0027t think this CUJPerf is a good idea.  I\u0027ll provide my comments on recorder.go.",
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4ac84f4_d267d263",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/battery_info_tracker.go",
        "patchSetId": 13
      },
      "lineNbr": 53,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "I don\u0027t think the use of \"timeline\" is a good idea for this purpose.  Consider creating your own goroutine by yourself.  Within the goroutine, you can make waiting and calculation of Joule.",
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cb9505f_6f53ce43",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/battery_info_tracker.go",
        "patchSetId": 13
      },
      "lineNbr": 108,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "nit:\n  var joules float64",
      "range": {
        "startLine": 108,
        "startChar": 1,
        "endLine": 108,
        "endChar": 21
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "119866ad_8bbee0b0",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/battery_info_tracker.go",
        "patchSetId": 13
      },
      "lineNbr": 132,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "Remove this cast",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 132,
        "endChar": 11
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "766cbb58_968b8934",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/battery_info_tracker.go",
        "patchSetId": 13
      },
      "lineNbr": 137,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "Remove this cast",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 11
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5d49bce_b7118aab",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/battery_info_tracker.go",
        "patchSetId": 13
      },
      "lineNbr": 142,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "Remove this cast",
      "range": {
        "startLine": 142,
        "startChar": 4,
        "endLine": 142,
        "endChar": 11
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ee4bee0_aa1b70f1",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/battery_info_tracker.go",
        "patchSetId": 13
      },
      "lineNbr": 145,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "Some metrics uses t.prefix while some metrics use \u0027metricPrefix\u0027. That seems wrong to me. Can you keep the consistency?",
      "range": {
        "startLine": 145,
        "startChar": 16,
        "endLine": 145,
        "endChar": 22
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80a8e26c_9f500e83",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/battery_info_tracker.go",
        "patchSetId": 13
      },
      "lineNbr": 148,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "Remove this cast",
      "range": {
        "startLine": 148,
        "startChar": 5,
        "endLine": 148,
        "endChar": 12
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fea70e33_136295f2",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/battery_info_tracker.go",
        "patchSetId": 13
      },
      "lineNbr": 160,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "Remove this cast",
      "range": {
        "startLine": 160,
        "startChar": 5,
        "endLine": 160,
        "endChar": 12
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79c6b880_2613be7b",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/recorder.go",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "nit:\n  const metricsPrefix \u003d \"TPS.\"\n\n(no need the parenthesis)",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 29,
        "endChar": 1
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d206668_e3bade2c",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/recorder.go",
        "patchSetId": 13
      },
      "lineNbr": 327,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "We agreed that the histograms are stored into a different JSON file, not perf.Values.  Please fix this.",
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ed92225_3d56d937",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/recorder.go",
        "patchSetId": 13
      },
      "lineNbr": 327,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T22:56:05Z",
      "side": 1,
      "message": "Sorry this was my misunderstanding.\n\nStill, I don\u0027t think use of perf.Values is a good format to encode those histograms.  Why not simply using json.Marshal?   Once you have something like map[string]*Histogram, then:\n  data, err :\u003d json.Marshal(hists)\n  if err !\u003d nil {\n    return errors.Wrap(err, \"failed to marshal\")\n  }\n  return ioutil.SaveFile(output, data, 0644)\n\nThat will store sufficient data in much more natural format.",
      "parentUuid": "7d206668_e3bade2c",
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4973e2a7_cd5a818c",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/recorder.go",
        "patchSetId": 13
      },
      "lineNbr": 371,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "Please remove this.  Rather, it\u0027s better to create a new method, such as \u0027Merge\u0027 to Histogram struct;\n  // Merge merges the data from other.\n  func (h *Histogram) Merge(other *Histogram) error",
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f65f2626_820af04d",
        "filename": "src/chromiumos/tast/local/power/rapl_power_metrics.go",
        "patchSetId": 13
      },
      "lineNbr": 34,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "this seems no longer used.  Please remove.",
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fccfa97e_abd14757",
        "filename": "src/chromiumos/tast/local/power/sysfs_battery_metrics.go",
        "patchSetId": 13
      },
      "lineNbr": 99,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "- can you move this to where it\u0027s used? (i.e. cuj package)\n- drop \u0027Int64\u0027, it\u0027s clearer.  Also, it returns float64, which seems a wrong naming\n- stop using \u0027devPaths\u0027 list, just accept a single string \u0027devPath\u0027",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 99,
        "endChar": 1
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42267c76_3f23a485",
        "filename": "src/chromiumos/tast/local/power/sysfs_battery_metrics.go",
        "patchSetId": 13
      },
      "lineNbr": 105,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "I don\u0027t think making this to change to a sum is a good idea.  Can you revert the changes of this function?\n\nRather, upon the use of the ReadSystemPower, it is quite easy and straightforward to iterate over multiple devPaths, and make the required computation.",
      "range": {
        "startLine": 105,
        "startChar": 21,
        "endLine": 105,
        "endChar": 62
      },
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6db1ba57_9d1cab2d",
        "filename": "src/chromiumos/tast/local/power/sysfs_battery_metrics.go",
        "patchSetId": 13
      },
      "lineNbr": 235,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-01-19T21:50:56Z",
      "side": 1,
      "message": "This changes the behavior of SysfsBatteryMetrics. What are the other power sources and why do they need to be aggregated as a sum?",
      "revId": "7bf4264d0120dcdc78ba18efb00bd81dd02e3e9e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}