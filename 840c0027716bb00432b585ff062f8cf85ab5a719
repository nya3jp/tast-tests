{
  "comments": [
    {
      "key": {
        "uuid": "a0e8a8a6_8f777d09",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 212,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-07-10T23:53:10Z",
      "side": 1,
      "message": "This function returns an error. Consider return an error instead calling s.Fatal inside the function.",
      "range": {
        "startLine": 212,
        "startChar": 3,
        "endLine": 212,
        "endChar": 10
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01b488a9_ea1c1c9d",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 240,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-07-10T23:53:10Z",
      "side": 1,
      "message": "The function returns an error, consider not calling s.Error inside the function and let the callee calls s.Error/s.Fatal if error is returned.",
      "range": {
        "startLine": 240,
        "startChar": 5,
        "endLine": 240,
        "endChar": 10
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54a4a4f4_96204395",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 240,
      "author": {
        "id": 1363554
      },
      "writtenOn": "2020-07-15T14:24:33Z",
      "side": 1,
      "message": "I can change that, but I think it would make it less clear the reason for the failure?  I\u0027m not sure if that is better.",
      "parentUuid": "01b488a9_ea1c1c9d",
      "range": {
        "startLine": 240,
        "startChar": 5,
        "endLine": 240,
        "endChar": 10
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7692a977_0e3263e8",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 240,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-07-15T15:58:03Z",
      "side": 1,
      "message": "I\u0027m fine with it. However, |err| returns by ew.Type represents the underlying failure and we should not ignore it. If the function returns an error, please makes the callee handles/logs it. Otherwise, please use s.Error to log |err|.",
      "parentUuid": "54a4a4f4_96204395",
      "range": {
        "startLine": 240,
        "startChar": 5,
        "endLine": 240,
        "endChar": 10
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae627308_8a8edfb6",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-07-10T23:53:10Z",
      "side": 1,
      "message": "Consider to use s.Logf with printf style format string.\ns.Logf(\"%s failed on the %dth iteration\", name, n)\n\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#log_error_fatal-vs_logf_errorf_fatalf",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 249,
        "endChar": 9
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47ea9e6b_7a7274bc",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1363554
      },
      "writtenOn": "2020-07-15T14:24:33Z",
      "side": 1,
      "message": "I\u0027ll change this",
      "parentUuid": "ae627308_8a8edfb6",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 249,
        "endChar": 9
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76b1d77c_7adb136e",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-07-10T23:53:10Z",
      "side": 1,
      "message": "Shouldn\u0027t it return an error?",
      "range": {
        "startLine": 263,
        "startChar": 2,
        "endLine": 263,
        "endChar": 8
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a046fd7f_c0a220fd",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1363554
      },
      "writtenOn": "2020-07-15T14:24:33Z",
      "side": 1,
      "message": "testGeneratedScreenshot() itself does not currently return an error..",
      "parentUuid": "76b1d77c_7adb136e",
      "range": {
        "startLine": 263,
        "startChar": 2,
        "endLine": 263,
        "endChar": 8
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c2c8b8c_2a6b57d1",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-07-15T15:58:03Z",
      "side": 1,
      "message": "Oops Sorry, I mean s.Error\n\nSomething like \ns.Error(\"Unexpected diff for screenshot 1: \", err);",
      "parentUuid": "a046fd7f_c0a220fd",
      "range": {
        "startLine": 263,
        "startChar": 2,
        "endLine": 263,
        "endChar": 8
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3a585a5_2dc9a99b",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1363554
      },
      "writtenOn": "2020-07-15T16:27:47Z",
      "side": 1,
      "message": "we do already s.Error() for all the cases where testOneScreenshot() would return an error.",
      "parentUuid": "2c2c8b8c_2a6b57d1",
      "range": {
        "startLine": 263,
        "startChar": 2,
        "endLine": 263,
        "endChar": 8
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efb5e0ba_e8168545",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-07-16T17:02:34Z",
      "side": 1,
      "message": "The testOneScreenshot should either return an error or s.Error/return. \nIn tast, support function/library is recommended to return an error and let the test decide how to response to it.\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#support-packages\n\n\n\ntestOneScreenshot :\u003d func(name string, key string) {\n    if err :\u003d ew.Type(ctx, key); err !\u003d nil {\n        s.Errorf(\"failed to inject the \u0027%s\u0027 key: %s\", key, err)\n        return\n    }\n...\n}\n\ntestOneScreenshot(\"screenshot1\", \"w\")\ntestOneScreenshot(\"screenshot2\", \"w\")\n\nor \n\ntestOneScreenshot :\u003d func(name string, key string) error {\n    if err :\u003d ew.Type(ctx, key); err !\u003d nil {\n        return err\n    }\n...\n}\n\nif err :\u003d testOneScreenshot(\"screenshot1\", \"w\"); err !\u003d nil {\n    return s.Errorf(\"Unexpected diff for screenshot1:\" err)\n}\nif err :\u003d testOneScreenshot(\"screenshot2\", \"w\"); err !\u003d nil {\n    return s.Errorf(\"Unexpected diff for screenshot2:\" err)\n}",
      "parentUuid": "c3a585a5_2dc9a99b",
      "range": {
        "startLine": 263,
        "startChar": 2,
        "endLine": 263,
        "endChar": 8
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "785fbd20_7ef187af",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1363554
      },
      "writtenOn": "2020-07-22T20:20:15Z",
      "side": 1,
      "message": "We can\u0027t quite do that, because of how it (in response to Ilja\u0027s suggestions) polls 5 times until it gets a correct screenshot.  But you\u0027re comment made me realize that for the perceptualdiff step, I should use s.Logf() instead of s.Errorf() and leave the decision of how to handle to the loop in testOneScreenshot().  I\u0027ve fixed this now.  (The other error cases in testScreenshotResult() are not related to the webgl having not yet responded to the keypress.)\n\nI suppose technically testOneScreenshot() does not need to itself return an error.  I only did that to skip the 2nd screenshot in the case the first one fails.",
      "parentUuid": "efb5e0ba_e8168545",
      "range": {
        "startLine": 263,
        "startChar": 2,
        "endLine": 263,
        "endChar": 8
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6d52c4d_de4cd103",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/sanity.go",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-07-10T23:53:10Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 266,
        "startChar": 2,
        "endLine": 266,
        "endChar": 8
      },
      "revId": "840c0027716bb00432b585ff062f8cf85ab5a719",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}