{
  "comments": [
    {
      "key": {
        "uuid": "bd7fe264_6cf23c6e",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-05-12T10:22:32Z",
      "side": 1,
      "message": "I\u0027m not very familiar with UI area, so please correct me if I\u0027m wrong.\n\nIIUC this function returns if the tablet mode is enabled currently, and it depends on the device placement. For example, in the case of an Eve device, it returns true if the lid is open more than 180 degrees. I don\u0027t think we have strict policy on placement of devices in lab, so I\u0027m afraid that some Eve devices return TabletModeEnabled \u003d false while other Eve devices return TabletModeEnabled \u003d true, leading to test flakiness.\n\nLooking at other tests, it rather looks like they\u0027re testing both modes, i.e. TabletModeEnabled \u003d false and true.\nhttps://cs.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/arc/pip.go?type\u003dcs\u0026q\u003dfile:tast-tests+%22+TabletModeEnabled%22\u0026g\u003d0\u0026l\u003d156",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4663e442_b930c446",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-05-12T12:54:29Z",
      "side": 1,
      "message": "Hi Shuhei, thanks for the comment first. My intention is to get current tablet mode status, and then use it for testing visibility. I know ideally it should test all boards in both mode, and current approach might cause uncertainity. HelpApp is a SWA, so less likely to break on different boards. Any suggestions here?",
      "parentUuid": "bd7fe264_6cf23c6e",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6026212_4cfdc7ab",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-12T14:27:18Z",
      "side": 1,
      "message": "+1 for nya\u0027s suggestion.\n\nAnother possibility would be to have two tests using the parameterized option: one that forces tablet mode, and the other that forces clamshell mode.\n\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Parameterized-tests",
      "parentUuid": "4663e442_b930c446",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a4e5bc8_b1b55611",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2020-05-13T00:13:01Z",
      "side": 1,
      "message": "Do all boards support both modes?  How would we limit the parameterized tests to run only on the boards that support that mode?  I only see hw/sw deps for touchscreen support, not for tablet mode directly.",
      "parentUuid": "d6026212_4cfdc7ab",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c5ec53a_30b3d085",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-13T00:58:09Z",
      "side": 1,
      "message": "From a testing point of view, yes: you can enable both tablet mode and clamshell mode in all chromebooks, including the ones that don\u0027t advertise it.",
      "parentUuid": "4a4e5bc8_b1b55611",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d63feff_d2dec713",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-05-13T02:00:25Z",
      "side": 1,
      "message": "Good to know this. Honestly I am facing a challenge to force ui mode in OOBE stage. Seems test conn / autolib is not available yet. I failed to find a system level api to do this. Really appreicate if you know any approach to do this.\n\nBtw, if currently no api available and you do not mind, can we merge this code first? Since it fails on tablet now. I will raise a bug to change this to run on both mode.",
      "parentUuid": "7c5ec53a_30b3d085",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "160ec978_62f1b79d",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-05-13T02:04:46Z",
      "side": 1,
      "message": "Sure, please go ahead after filing a tracking bug. Thank you!",
      "parentUuid": "8d63feff_d2dec713",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0ee0ee9_e35c379a",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-05-13T03:14:27Z",
      "side": 1,
      "message": "b/156433022 created. Thanks for review.",
      "parentUuid": "160ec978_62f1b79d",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "139042ae_ba451be4",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-05-12T10:22:32Z",
      "side": 1,
      "message": "style nit: Please end comment sentences with a period.\nhttps://github.com/golang/go/wiki/CodeReviewComments#comment-sentences",
      "range": {
        "startLine": 52,
        "startChar": 56,
        "endLine": 52,
        "endChar": 60
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abbbfd62_a3741e1e",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-05-12T12:54:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "139042ae_ba451be4",
      "range": {
        "startLine": 52,
        "startChar": 56,
        "endLine": 52,
        "endChar": 60
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bcc9bec_c5b74201",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-05-12T10:22:32Z",
      "side": 1,
      "message": "style nit: mind inserting a space between // and Verify?",
      "range": {
        "startLine": 67,
        "startChar": 3,
        "endLine": 67,
        "endChar": 5
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "892be60f_851fde53",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/launch_help_app.go",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-05-12T12:54:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5bcc9bec_c5b74201",
      "range": {
        "startLine": 67,
        "startChar": 3,
        "endLine": 67,
        "endChar": 5
      },
      "revId": "f23ebfd04c4639fe82ee22fb2cd64be596b39ee8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}