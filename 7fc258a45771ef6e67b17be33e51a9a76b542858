{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cfc27681_58fc9c4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2021-01-21T04:53:49Z",
      "side": 1,
      "message": "Awesome. The new layout looks better.",
      "revId": "7fc258a45771ef6e67b17be33e51a9a76b542858",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f09bc27_f37233cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2021-01-21T07:04:25Z",
      "side": 1,
      "message": "It\u0027s new to me that other services are using the similar functions. I had a wrong impression that the design is only used in shill and others are using the more common DBus.Properties: https://dbus.freedesktop.org/doc/dbus-java/api/org/freedesktop/DBus.Properties.html. It\u0027s probably because I see that shill/property_store* is under shill dir and that we have a copy of \u0027const char kGetPropertiesFunction[] \u003d \"GetProperties\";\u0027 in system_api/dbus/shill/dbus-constants.h.\n\nIs there a doc for the dbus APIs that you\u0027re going to use? I\u0027d like to take a glance out of curiosity.",
      "revId": "7fc258a45771ef6e67b17be33e51a9a76b542858",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05a168a9_790c0995",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2021-01-21T18:05:24Z",
      "side": 1,
      "message": "You are correct in that other services use DBus.Properties instead. However, when working on modemmanager tests I found that PropertyHolder is still a convenient abstraction with the addition of a \u0027GetDBusProperties\u0027 function instead of \u0027GetProperties\u0027 (and a corresponding NewDBusProperties function in properties.go).\n\nI will put that CL up sometime today.",
      "parentUuid": "8f09bc27_f37233cd",
      "revId": "7fc258a45771ef6e67b17be33e51a9a76b542858",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50aaff1c_73b502f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2021-01-21T20:06:42Z",
      "side": 1,
      "message": "nit: I think having both functions NewProperties() \u0026 NewDbusProperties() is confusing. IIUC, NewProperties is only for shill and NewDbusProperties is general, so other services can use it.\n\nMaybe, change NewProperties()/GetProperties() to NewShillProperties()/GetShillProperties(), WDYT?",
      "parentUuid": "05a168a9_790c0995",
      "revId": "7fc258a45771ef6e67b17be33e51a9a76b542858",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "078005a0_0dfbae35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000191
      },
      "writtenOn": "2021-01-21T22:05:39Z",
      "side": 1,
      "message": "I made Get/NewProperties use the conventional form and renamed the existing functions to Get/NewShillProperties in the follow-up CL (extracted from the modemmanager changes).",
      "parentUuid": "50aaff1c_73b502f0",
      "revId": "7fc258a45771ef6e67b17be33e51a9a76b542858",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31edcd7a_4af76bb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2021-01-22T02:17:41Z",
      "side": 1,
      "message": "Thanks for the clarification. Along with the next CL, the code sharing still makes sense in the case.",
      "parentUuid": "078005a0_0dfbae35",
      "revId": "7fc258a45771ef6e67b17be33e51a9a76b542858",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}