{
  "comments": [
    {
      "key": {
        "uuid": "5ee45722_ee666753",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-30T01:03:46Z",
      "side": 1,
      "message": "nit: please add a brief comment describing what this does, e.g. \" // collects JS console output\"",
      "revId": "d2fb51a8e4e75d3199ecfec288d2e3f8c46b9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68ea996b_0dda0519",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-30T01:03:46Z",
      "side": 1,
      "message": "should we just pass *devtool.Target to newConn? it looks like we\u0027re passing the same fields from it in all calls, if i\u0027m not mistaken",
      "range": {
        "startLine": 335,
        "startChar": 27,
        "endLine": 335,
        "endChar": 62
      },
      "revId": "d2fb51a8e4e75d3199ecfec288d2e3f8c46b9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bde1350_b60471ab",
        "filename": "src/chromiumos/tast/local/chrome/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-30T01:03:46Z",
      "side": 1,
      "message": "can this go in a subpackage, e.g. \"jslog\"? i don\u0027t think it has any dependencies on other code in the chrome package, right?",
      "revId": "d2fb51a8e4e75d3199ecfec288d2e3f8c46b9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76503402_80843419",
        "filename": "src/chromiumos/tast/local/chrome/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-10-29T14:17:51Z",
      "side": 1,
      "message": "unused?",
      "revId": "d2fb51a8e4e75d3199ecfec288d2e3f8c46b9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd7d6a56_eb361581",
        "filename": "src/chromiumos/tast/local/chrome/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-30T01:03:46Z",
      "side": 1,
      "message": "s/stop/close/?",
      "range": {
        "startLine": 63,
        "startChar": 49,
        "endLine": 63,
        "endChar": 53
      },
      "revId": "d2fb51a8e4e75d3199ecfec288d2e3f8c46b9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "978ff39d_0033321d",
        "filename": "src/chromiumos/tast/local/chrome/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-10-29T14:17:51Z",
      "side": 1,
      "message": "This \"pause \u0026 resume\" looks not used?\nHow about dropping this, and letting clients close() the master before calling save?",
      "range": {
        "startLine": 84,
        "startChar": 1,
        "endLine": 90,
        "endChar": 0
      },
      "revId": "d2fb51a8e4e75d3199ecfec288d2e3f8c46b9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d80f1733_747afc6e",
        "filename": "src/chromiumos/tast/local/chrome/logger.go",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-10-29T14:32:53Z",
      "side": 1,
      "message": "Initial implementation was in such way (close then save), but I thought twice considering upcoming precondition.",
      "parentUuid": "978ff39d_0033321d",
      "range": {
        "startLine": 84,
        "startChar": 1,
        "endLine": 90,
        "endChar": 0
      },
      "revId": "d2fb51a8e4e75d3199ecfec288d2e3f8c46b9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}