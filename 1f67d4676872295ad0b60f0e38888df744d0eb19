{
  "comments": [
    {
      "key": {
        "uuid": "56ae090c_d3674ab0",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/hotseat_animation.go",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-02-27T04:52:27Z",
      "side": 1,
      "message": "Could you use chrome.TestConn, instead of chrome.Conn?\n(Currently it is synonym, but will be different type).",
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e8e4030_7fab89e0",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/hotseat_animation.go",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-02-26T22:43:50Z",
      "side": 1,
      "message": "nit: \"at least\"",
      "range": {
        "startLine": 42,
        "startChar": 41,
        "endLine": 42,
        "endChar": 48
      },
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adc33634_53ac1aad",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/hotseat_animation.go",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-02-26T22:43:50Z",
      "side": 1,
      "message": "It is hard to follow the logic here; do we really have to wait for all window animations to be finished?  I guess simply ash.WaitForOverviewToFinishAnimating is fine, and then check if no windows are animating.\n\ni.e.\n\nif err :\u003d ash.WaitForOverviewToFinishAnimating(...); err !\u003d nil { ... }\n// Sanity check of no animating windows.\nif w, err :\u003d ash.FindWindow(ctx, tconn, func(w *Window) bool { return w.IsAnimating }); err \u003d\u003d nil {\n  return errors.Errorf(\"window %s (%d) is still animating\", w.Name, w.ID)\n}",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 75,
        "endChar": 2
      },
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c2687ac_12b18308",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/hotseat_animation.go",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1189880
      },
      "writtenOn": "2020-02-26T22:59:20Z",
      "side": 1,
      "message": "Oh, let me try to explain, and then I will add comments in the code if you agree.\n\nWhen the user drags up from the bottom of the screen to show overview, the window animates from fullscreen to a smaller size, then follows the finger upwards. Right as the drag begins, the Overview animation has already completed.\n\nThe only remaining animation when releasing the upwards drag to go to overview is to animate all windows to their final positions in overview. \n\nSo we drag, then wait for window animations to stop, and then call WaitForOverviewToFinishAnimating to verify that overview is actually showing.",
      "parentUuid": "adc33634_53ac1aad",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 75,
        "endChar": 2
      },
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca26594d_7ea68e5a",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/hotseat_animation.go",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-02-26T23:03:03Z",
      "side": 1,
      "message": "Ah, got it. I also tried the operation by myself to make sure the visual effect.\nThen the current code makes sense. Adding more comments would be much appreciated.",
      "parentUuid": "9c2687ac_12b18308",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 75,
        "endChar": 2
      },
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22d7dcc7_6330c5a2",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/hotseat_animation.go",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-02-27T04:52:27Z",
      "side": 1,
      "message": "You don\u0027t need? You can just use tconn, instead.",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 134,
        "endChar": 3
      },
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cf9db33_41645bd9",
        "filename": "src/chromiumos/tast/local/chrome/ash/wm.go",
        "patchSetId": 5
      },
      "lineNbr": 328,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-02-26T22:43:50Z",
      "side": 1,
      "message": "nit: somehow we use \u0027tconn\u0027 with lower-c all the time, so it would be better to follow that style here.",
      "range": {
        "startLine": 328,
        "startChar": 59,
        "endLine": 328,
        "endChar": 64
      },
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "314e170e_c9f4cf23",
        "filename": "src/chromiumos/tast/local/chrome/ash/wm.go",
        "patchSetId": 5
      },
      "lineNbr": 328,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-02-27T04:52:27Z",
      "side": 1,
      "message": "nit/recommendation: will just \"state\" work for you?",
      "range": {
        "startLine": 328,
        "startChar": 79,
        "endLine": 328,
        "endChar": 92
      },
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fc20f19_b727b8b3",
        "filename": "src/chromiumos/tast/local/chrome/ash/wm.go",
        "patchSetId": 5
      },
      "lineNbr": 328,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-02-27T04:52:27Z",
      "side": 1,
      "message": "Maybe: WaitForOverviewState to prefer shorter name?",
      "range": {
        "startLine": 328,
        "startChar": 5,
        "endLine": 328,
        "endChar": 37
      },
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b39a583_c83d6008",
        "filename": "src/chromiumos/tast/local/chrome/ash/wm.go",
        "patchSetId": 5
      },
      "lineNbr": 328,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-02-27T04:52:27Z",
      "side": 1,
      "message": "ditto: TestConn",
      "range": {
        "startLine": 328,
        "startChar": 73,
        "endLine": 328,
        "endChar": 77
      },
      "revId": "1f67d4676872295ad0b60f0e38888df744d0eb19",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}