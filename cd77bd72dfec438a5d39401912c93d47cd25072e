{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a5c20cb6_3d225eef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-10-18T13:15:55Z",
      "side": 1,
      "message": "Tast LGTM",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52bac210_27aa5f16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-10-18T14:48:40Z",
      "side": 1,
      "message": "+vsavu@ for owner\u0027s review on `policyutil.go`. Is it okay to move on with this workaround for test coverage and let us work on a long term solution separately at b/254067263? Any thoughts?",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23eb4917_5e7a6df2",
        "filename": "src/chromiumos/tast/local/policyutil/policyutil.go",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-10-20T15:29:21Z",
      "side": 1,
      "message": "This function also seems pretty unrelated to the rest of the file, maybe move it to its own file. Can also be done in a separate CL.",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57cc9f65_47be6a8b",
        "filename": "src/chromiumos/tast/local/policyutil/policyutil.go",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-10-20T16:10:29Z",
      "side": 1,
      "message": "Victor, sounds reasonable to me, but is it okay for you or someone on your team who knows better about the policyutil structure than me to follow up on that in a separate CL if if is unrelated to this change?",
      "parentUuid": "23eb4917_5e7a6df2",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bc36cf0_98bf5dd3",
        "filename": "src/chromiumos/tast/local/policyutil/policyutil.go",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-10-21T06:40:59Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "57cc9f65_47be6a8b",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99bacb40_3e3de11d",
        "filename": "src/chromiumos/tast/local/policyutil/policyutil.go",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-10-20T15:29:21Z",
      "side": 1,
      "message": "Use a testing.Poll starting here.\n\nIf installation is flaky, do everything again reliably.",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18e1135e_af30c87f",
        "filename": "src/chromiumos/tast/local/policyutil/policyutil.go",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-10-20T16:10:29Z",
      "side": 1,
      "message": "I can do polling to get around it for now, but is there any chance to investigate a root cause (b/254067263) and fix it for Lacros if available? I could probably leave a TODO on the polling if it makes sense.",
      "parentUuid": "99bacb40_3e3de11d",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ad9c7d3_e337eb3d",
        "filename": "src/chromiumos/tast/local/policyutil/policyutil.go",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-10-21T06:40:59Z",
      "side": 1,
      "message": "BugBash is coming üòä. Unfortunately I\u0027m not sure we can cover all corner cases here.\n\nPolicy invalidations for FakeDMS are coming, which will change how we refresh policies anyway.",
      "parentUuid": "18e1135e_af30c87f",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78c83d64_945365c2",
        "filename": "src/chromiumos/tast/local/policyutil/policyutil.go",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-10-20T15:29:21Z",
      "side": 1,
      "message": "Use the following pattern for calling cleanUp on error:\n\nok :\u003d false\ndefer func() {\n if !ok {\n   ...Do cleanup\n }\n}\n\nok \u003d true\nreturn id, name, cleanUp, nil\n\nIt will make sure all cases are covered even if the code changes in the future. Remembering to add calls before a return is not maintainable.",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fcb71a9_ccf1182a",
        "filename": "src/chromiumos/tast/local/policyutil/policyutil.go",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-10-20T16:10:29Z",
      "side": 1,
      "message": "Looks like the existing pattern returns `cleanUp` to a caller so the suggestion may not be what it was trying to do here. I might be misunderstanding though since this snippet has existed even before I made this CL for Tast migration.",
      "parentUuid": "78c83d64_945365c2",
      "revId": "cd77bd72dfec438a5d39401912c93d47cd25072e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}