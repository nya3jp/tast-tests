{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d9d2d539_2ebf421c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-11-03T23:02:56Z",
      "side": 1,
      "message": "Thanks for doing this! Do you mind explaining why configuring the network this way allows the ping to go through (for me and for posterity)? In particular, what part of the autotest network setup was preventing it?",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b39b7a09_1641819b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-11-02T05:45:00Z",
      "side": 1,
      "message": "only a few nits.\n\nI\u0027m not very familiar with FT, but the test flow looks correct.",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d9af77f_45478cb7",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-11-02T05:45:00Z",
      "side": 1,
      "message": "not sure but looks like this can be inferred by \"mixedSecConfFac !\u003d nil\"?",
      "range": {
        "startLine": 33,
        "startChar": 1,
        "endLine": 33,
        "endChar": 21
      },
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86a4624f_48311735",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 114,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-11-03T23:02:56Z",
      "side": 1,
      "message": "nit: bound",
      "range": {
        "startLine": 114,
        "startChar": 62,
        "endLine": 114,
        "endChar": 68
      },
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abccb025_b32cd290",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-11-02T05:45:00Z",
      "side": 1,
      "message": "nit: as this is a long function, might be nice to have some comment for it.",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29b782eb_8a67b7f4",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 146,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-11-02T05:45:00Z",
      "side": 1,
      "message": "nit: maybe use shorten-ed context for this call? See: https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Reserve-time-for-clean_up-task\n\nIn WiFi tests, we\u0027re using mixed pattern as context for daemons is a problem... However, I think it is still nice to start using the suggested pattern for non-daemon cases.",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67063dc1_b7bcc6bb",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 146,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-11-02T06:20:31Z",
      "side": 1,
      "message": "I thought the suggested pattern again. Object constructor, i.e. NewSomething(), should be responsible to clean itself up when the creation process fails. So we don\u0027t need to reserve time for its associate defer call as it is never called in such case. To sum up, the pattern in this CL looks reasonable to me.",
      "parentUuid": "29b782eb_8a67b7f4",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "092fcb3a_d8b3fee0",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 146,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-11-02T09:11:37Z",
      "side": 1,
      "message": "If New properly handles it, I\u0027m also OK with the it.\n\n(But we still don\u0027t have a proper guideline for when to use each pattern, might need to discuss this in some other place, perhaps a bug?)",
      "parentUuid": "67063dc1_b7bcc6bb",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "517c9a8e_18902b4d",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 229,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-11-02T06:20:31Z",
      "side": 1,
      "message": "Is this correct?",
      "range": {
        "startLine": 229,
        "startChar": 52,
        "endLine": 229,
        "endChar": 56
      },
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "518061d2_6d4af6d2",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 229,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-11-03T23:02:56Z",
      "side": 1,
      "message": "Should be: https://source.corp.google.com/chromeos_public/src/third_party/autotest/files/server/site_tests/network_WiFi_RoamFT/network_WiFi_RoamFT.py;l\u003d128\n\nI forget the details (you can find them documented in the example hostapd.conf file), but you\u0027re supposed to include the keys of the APs you intend to roam to in one of the fields.",
      "parentUuid": "517c9a8e_18902b4d",
      "range": {
        "startLine": 229,
        "startChar": 52,
        "endLine": 229,
        "endChar": 56
      },
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bcc1487_eef201fa",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 296,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-11-03T23:02:56Z",
      "side": 1,
      "message": "Can we leave a TODO(b/171086223) somewhere here? We still have the same problem as with RoamDbus where the BSSID changing only really means we\u0027ve initiated the roam attempt as opposed to actually connecting.",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a761f051_ac2ab2e4",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 335,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-11-02T05:45:00Z",
      "side": 1,
      "message": "I think this part of logic is for this comment in Autotest:\n\n# Check that we don\u0027t disconnect along the way here, in case we\u0027re\n# ping-ponging around APs -- and after the first (failed) roam, the\n# second re-connection will not be testing FT at all.\n\nMight be nice to also have the same comment here.",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f70ea511_8455453a",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 382,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-11-02T05:45:00Z",
      "side": 1,
      "message": "According to [1], a corner case is that SetXXX takes almost all time in context and cleanup will not really have enough time.\n\nThe pattern in [1] is a little complicated as it needs two context variable. For the usage here, I wonder if it is simpler to re-order the logic to have deferred restore first:\n\n  oldSetting, err :\u003d getXXX(ctx)\n  if err !\u003d nil {\n    s.Fatal(...)\n  }\n  // Restore on leaving.\n  defer func(ctx context.Context) {\n    if err :\u003d setXXX(ctx, oldSetting); err !\u003d nil {\n      s.Error(...)\n    }\n  }(ctx)\n  ctx, cancel \u003d ctxutil.Shorten(ctx, time.Second)\n  defer cancel()\n  // Apply required setting.\n  if err :\u003d setXXX(ctx, requiredSetting); err !\u003d nil {\n    s.Fatal(...)\n  }\n\nWDYT?\n\n[1] https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Reserve-time-for-clean_up-task",
      "range": {
        "startLine": 372,
        "startChar": 1,
        "endLine": 382,
        "endChar": 15
      },
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5024e42b_d7c961f2",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 392,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-11-02T05:45:00Z",
      "side": 1,
      "message": "nit: perhaps also shorten a little bit here.",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f40bb3e_54ea4f07",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam_ft.go",
        "patchSetId": 9
      },
      "lineNbr": 401,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-11-02T06:20:31Z",
      "side": 1,
      "message": "Shall we also expect that test will fail if global FT is unset and APs are not in mixed mode?",
      "revId": "312293f8fc9681c4eeaa6255fef50b0797fb7a90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}