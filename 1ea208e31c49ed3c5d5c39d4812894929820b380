{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "42c2f8d8_e9646eb3",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-05-28T13:33:31Z",
      "side": 1,
      "message": "Is there a specific reason to change password, username from \"\" to \"********\"?\nIf this cl just moves the test to another repo. It should keep as less changes as possible.\n\nbtw, I did not find anywhere using this structure, except SystemProxyEnabled true / false. Can it be Val: bool? I hope I have not missed anything.",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 51,
        "endChar": 6
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "622cffb7_bf73a06c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1316063
      },
      "writtenOn": "2021-05-31T12:51:57Z",
      "side": 1,
      "message": "\u003e Is there a specific reason to change password, username from \"\" to \"********\"?\n \nYes, the `Verify` part in policyutil.ServeAndVerify checks the value of the policy against the *text* in the chrome://policy page :(. Since the credentials are secret data, they\u0027re display in the UI as \"********\", regardless of the value.\n\n\u003e I did not find anywhere using this structure, except SystemProxyEnabled true / false. Can it be Val: bool? I hope I have not missed anything.\nI\u0027m not sure what you mean, but the definition of the policy here is consistent with the policy structure in defs.go.[1]\n\n[1]http://cs/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/common/policy/defs.go?l\u003d14117\u0026rcl\u003d67adef240adfe1fcc5174e85455268ca7a493f49",
      "parentUuid": "42c2f8d8_e9646eb3",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 51,
        "endChar": 6
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11d7d614_7b14c72b",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-06-01T06:57:34Z",
      "side": 1,
      "message": "My point is that these data are not differentiated between tests. You can provide \u0027true\u0027 / \u0027false\u0027 in the Val, and instantiates a struct with the val inside the test.\n\n//Test Params\nVal: true / false\n//\n\n//Test script\nproxySetting :\u003d \u0026policy.SystemProxySettingsValue{\n\tSystemProxyEnabled:           s.Param().(bool),\n\tSystemServicesPassword:       \"********\",\n\tSystemServicesUsername:       \"********\",\n\tPolicyCredentialsAuthSchemes: []string{},\n}\n\nAnyway, it is up to you.",
      "parentUuid": "622cffb7_bf73a06c",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 51,
        "endChar": 6
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfe579ea_82398ca6",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1316063
      },
      "writtenOn": "2021-06-01T09:58:48Z",
      "side": 1,
      "message": "Got it, sorry for the misunderstanding!\n\nMuch better, thanks for this suggestion!",
      "parentUuid": "11d7d614_7b14c72b",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 51,
        "endChar": 6
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1baa2bc1_bf99c55d",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-27T21:04:51Z",
      "side": 1,
      "message": "I haven\u0027t seen this pattern before, is there a reason for doing it this way over using the parameterized test construction?\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#parameterized-tests",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 65,
        "endChar": 4
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6779ae0b_08d229ee",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-27T21:09:23Z",
      "side": 1,
      "message": "Nvm! I forgot about table-driven tests, disregard",
      "parentUuid": "1baa2bc1_bf99c55d",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 65,
        "endChar": 4
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ce3bfaa_67561fe2",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1316063
      },
      "writtenOn": "2021-06-01T09:58:48Z",
      "side": 1,
      "message": "I changed to parametrized tests, Thanks for the suggestions!",
      "parentUuid": "6779ae0b_08d229ee",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 65,
        "endChar": 4
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "247d9c13_be5d6c11",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-27T21:04:51Z",
      "side": 1,
      "message": "If you use parameterized tests, this could be taken care of in the fixture\u0027s PreTest/PostTest/Reset perhaps",
      "range": {
        "startLine": 67,
        "startChar": 3,
        "endLine": 70,
        "endChar": 4
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d79f168_49a9d432",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-27T21:09:23Z",
      "side": 1,
      "message": "Nvm, forgot about the table-driven pattern",
      "parentUuid": "247d9c13_be5d6c11",
      "range": {
        "startLine": 67,
        "startChar": 3,
        "endLine": 70,
        "endChar": 4
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "089c7dd6_1ac6e86e",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-27T21:04:51Z",
      "side": 1,
      "message": "Are there any conditions we can poll for instead of sleeping?",
      "range": {
        "startLine": 77,
        "startChar": 3,
        "endLine": 78,
        "endChar": 36
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bad145e6_de6cb617",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-05-28T13:33:31Z",
      "side": 1,
      "message": "+1.",
      "parentUuid": "089c7dd6_1ac6e86e",
      "range": {
        "startLine": 77,
        "startChar": 3,
        "endLine": 78,
        "endChar": 36
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f3a4de1_b12f6864",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1316063
      },
      "writtenOn": "2021-05-31T12:51:57Z",
      "side": 1,
      "message": "For SystemProxyEnabled\u003dtrue, the test can wait for a D-Bus signal which notifies that the daemon is running, but for SystemProxyEnabled\u003dfalse we would still need to wait 5 seconds to make sure the daemon is not accidentally started.\n\nFYI: This feature was approved to be enabled behind a chrome flag (for M92). Once we have enough data, system-proxy will always be running and this test can be removed.",
      "parentUuid": "bad145e6_de6cb617",
      "range": {
        "startLine": 77,
        "startChar": 3,
        "endLine": 78,
        "endChar": 36
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c52893ab_4ab21c09",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-27T21:04:51Z",
      "side": 1,
      "message": "spelling nit: determine",
      "range": {
        "startLine": 87,
        "startChar": 25,
        "endLine": 87,
        "endChar": 33
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adca1fa8_1df819b9",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-05-28T13:33:31Z",
      "side": 1,
      "message": "These s.Errorf() will not stop execution. For example, if processRunning returns error, then isRunning is false. It continuous to throw the next error and keep running.\n\nIf you want to test mainBinPath and workerBinPath, you can probably do below:\n\nif isRunning, err :\u003d processRunning(mainBinPath); err !\u003d nil {\n    s.Errorf(\"Failed to determin if %s is running: %v\", mainBinPath, err)\n} else if !isRunning {\n    s.Error(\"Main process is not running\")\n}",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 74
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03cee2f9_9df3b3c7",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1316063
      },
      "writtenOn": "2021-05-31T12:51:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c52893ab_4ab21c09",
      "range": {
        "startLine": 87,
        "startChar": 25,
        "endLine": 87,
        "endChar": 33
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5423fe25_0ff9ab8d",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1316063
      },
      "writtenOn": "2021-05-31T12:51:57Z",
      "side": 1,
      "message": "Good point!",
      "parentUuid": "adca1fa8_1df819b9",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 74
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e3e783b_903fd997",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-05-28T13:33:31Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 93,
        "startChar": 4,
        "endLine": 99,
        "endChar": 5
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e163d9e_77417a6a",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1316063
      },
      "writtenOn": "2021-05-31T12:51:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e3e783b_903fd997",
      "range": {
        "startLine": 93,
        "startChar": 4,
        "endLine": 99,
        "endChar": 5
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eb8cd98_ed6bd1e3",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-05-28T13:33:31Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 107,
        "endChar": 5
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4e1be67_7e8fcc2b",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1316063
      },
      "writtenOn": "2021-05-31T12:51:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8eb8cd98_ed6bd1e3",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 107,
        "endChar": 5
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "773f35ba_3773e8b1",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-05-28T13:33:31Z",
      "side": 1,
      "message": "nit:\n\nif n, err :\u003d p.Name(); err \u003d\u003d nil \u0026\u0026 n \u003d\u003d procName {\n    return true, nil\n}",
      "range": {
        "startLine": 120,
        "startChar": 2,
        "endLine": 126,
        "endChar": 3
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c184f8b_5a5568c6",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/system_proxy_settings.go",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1316063
      },
      "writtenOn": "2021-05-31T12:51:57Z",
      "side": 1,
      "message": "Thanks for this suggestion!",
      "parentUuid": "773f35ba_3773e8b1",
      "range": {
        "startLine": 120,
        "startChar": 2,
        "endLine": 126,
        "endChar": 3
      },
      "revId": "1ea208e31c49ed3c5d5c39d4812894929820b380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}