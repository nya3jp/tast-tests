{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c5ee45e3_04f46e43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-05-31T21:07:24Z",
      "side": 1,
      "message": "What should we do about SurfaceName obtainment for games like Minecraft, where the SurfaceName does not start with \"SurfaceView - ...\"? \n\nIf we have to pass in the app package name, would I have to do a `cq-depend` or something?",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92c4c635_159bd3a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-05-31T21:26:52Z",
      "side": 1,
      "message": "Where you have `do second regex here` should emulate https://source.corp.google.com/sc-dev/tools/vendor/google_prebuilts/arc/frame_latency.py;l\u003d121?q\u003dregex\u0026ss\u003dpiper%2FGoogle%2Fsc-dev:tools%2Fvendor%2Fgoogle_prebuilts%2Farc%2F which addresses the issue.",
      "parentUuid": "c5ee45e3_04f46e43",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71bab57d_e2b1800f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-06-02T22:19:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92c4c635_159bd3a2",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff85136f_50012a93",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-05-31T21:26:52Z",
      "side": 1,
      "message": "This would be removed",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2231c7f7_baee9c05",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-06-02T22:19:01Z",
      "side": 1,
      "message": "See below",
      "parentUuid": "ff85136f_50012a93",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "536ad300_727e137f",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-05-31T21:26:52Z",
      "side": 1,
      "message": "In order to merge this properly across public/private repository without breaking anything, you\u0027ll need to do the following:\n\n[cl 1 in tast-tests/] (this cl):\n\n1. Remove `surfaceName` from `SurfaceFlingerMetrics`.\n2. Get the automatic detection working correctly.\n3. Test it on all our existing tests.\n4. Add a new function named `NewDefault` which mimics this function but only takes `a *arc.ARC`. It will temporarily go unused.\n\n[cl 2 in tast-tests-private]:\n\n1. Update all tests to instantiate surface flinger using `NewDefault` rather than `NewSurfaceFlingerMetrics`. \n2. Have this cq-depend `cl 1`\n\n[cl 3 in tast-tests]:\n1. Remove `NewSurfaceFlingerMetrics`\n2. cq-depend `cl 2`",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8908f8bd_86eb220f",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-05-31T21:35:48Z",
      "side": 1,
      "message": "Wouldn\u0027t `NewDefault` need to take in the app package name, since I still need the caller to provide that? \n\nAnd in that case, can I just go ahead and modify `NewSurfaceFlingerMetrics` so that the string taken in is `appPkgName` instead of `surfaceName`?",
      "parentUuid": "536ad300_727e137f",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be246072_d82998a7",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-05-31T21:44:48Z",
      "side": 1,
      "message": "The existing code is split across two repositories and the expectation with `NewSurfaceFlingerMetrics` is that it passes in a full `surfaceName`, i.e. `SurfaceView - com.innersloth.spacemafia/com.innersloth.spacemafia.EosUnityPlayerActivity#0` that it will directly read from. If `NewDefault` needs package name instead, than it can accept that.\n\nThe above is just an outline for how you can ensure tests don\u0027t fail while you work through changing the implementation. It may need more/less depending on your specific needs but until `cl 3`, `NewSurfaceFlingerMetrics` must be available, and work for all existing tests. That said, it sounds like you may need this CL to introduce a few new methods for instantiating a `SurfaceFlingerMetric` that performs automatic detection, while still supporting the manual detection in the short term.",
      "parentUuid": "8908f8bd_86eb220f",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9398285_29425364",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-06-02T22:19:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be246072_d82998a7",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a25cf29_d3ab0ac1",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-05-31T21:26:52Z",
      "side": 1,
      "message": "Few things:\n\n1. nit: `get` shouldn\u0027t be used in a name in go. `surfaceName` as the function  name is enough.\n2. A `get` type function shouldn\u0027t have side-effects. In this case, you\u0027re setting the `surfaceName` field directly. I believe that field can be completely removed, and this function can just return a `string` or error instead.",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c3778ca_0facde95",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-06-02T22:19:01Z",
      "side": 1,
      "message": "Wouldn\u0027t I still want to keep `surfaceName` around so that the tests can still run as normal",
      "parentUuid": "1a25cf29_d3ab0ac1",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a165664_56b99b2c",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-05-31T21:26:52Z",
      "side": 1,
      "message": "This should match: https://source.corp.google.com/sc-dev/tools/vendor/google_prebuilts/arc/frame_latency.py;l\u003d121?q\u003dregex\u0026ss\u003dpiper%2FGoogle%2Fsc-dev:tools%2Fvendor%2Fgoogle_prebuilts%2Farc%2F\n\nalso it seems the logic from here: https://source.corp.google.com/sc-dev/tools/vendor/google_prebuilts/arc/frame_latency.py;l\u003d125?q\u003dregex\u0026ss\u003dpiper%2FGoogle%2Fsc-dev:tools%2Fvendor%2Fgoogle_prebuilts%2Farc%2F is missing.",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c87e02d_903f55cb",
        "filename": "src/chromiumos/tast/local/perf/surfaceflinger_metrics_tracker.go",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-06-02T22:19:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a165664_56b99b2c",
      "revId": "68682a42be23d551f73cc63c8e5e11f040548647",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}