{
  "comments": [
    {
      "key": {
        "uuid": "48385cf7_ff6425ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1334957
      },
      "writtenOn": "2019-04-08T20:41:03Z",
      "side": 1,
      "message": "One thing I wanted to ask about was considering dropping /sys/kernel/mm/chromeos-low_mem/margin(s) during test runs. If the goal is to get the system into a state where it\u0027s swapping heavily it\u0027s seems like our only option on 16gb systems where this value is likely much higher than the low watermark. What do you think?",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 33,
        "endChar": 50
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f50bd017_e8780800",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-10T21:05:16Z",
      "side": 1,
      "message": "Also in this case, we want to test with a configuration that\u0027s as close as possible to  what we normally run with.\n\nIncidentally, we discovered that the \"available\" computation is not working quite as intended for the larger systems, and we will need to review it (crbug.com/950224)",
      "parentUuid": "48385cf7_ff6425ed",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 33,
        "endChar": 50
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f503a2ff_79f6f39b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/memory_pressure_preallocator.sh",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-11T00:48:50Z",
      "side": 1,
      "message": "nit: uglily",
      "range": {
        "startLine": 36,
        "startChar": 38,
        "endLine": 36,
        "endChar": 44
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a63389b_f67d8baf",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 4
      },
      "lineNbr": 291,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-11T00:48:50Z",
      "side": 1,
      "message": "nit: mimics",
      "range": {
        "startLine": 291,
        "startChar": 51,
        "endLine": 291,
        "endChar": 58
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ffc6278_3c5b2741",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 4
      },
      "lineNbr": 293,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-11T00:48:50Z",
      "side": 1,
      "message": "what are the units? i\u0027d recommend naming the return values so this is clear to callers.",
      "range": {
        "startLine": 293,
        "startChar": 22,
        "endLine": 293,
        "endChar": 28
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99e91b03_85237aa1",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-11T00:48:50Z",
      "side": 1,
      "message": "nit: delete extra blank line",
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff3f41da_28dcf13b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 4
      },
      "lineNbr": 307,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-11T00:48:50Z",
      "side": 1,
      "message": "don\u0027t need to test this; it\u0027s already guaranteed by regexp",
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a0eed40_a20a7f59",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 4
      },
      "lineNbr": 320,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-11T00:48:50Z",
      "side": 1,
      "message": "don\u0027t need to test this; it\u0027s already guaranteed by regexp",
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4051b10_16c5fa9e",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 4
      },
      "lineNbr": 397,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-11T00:48:50Z",
      "side": 1,
      "message": "any reason not to use bytes throughout? that seems less likely to cause unit bugs in the future.",
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b43f01c2_d847a039",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1334957
      },
      "writtenOn": "2019-04-08T20:41:03Z",
      "side": 1,
      "message": "I believe these calculations may be overly complicated, I\u0027ll throw this out there: I\u0027ll use a 4GB system as an example here, suppose we want to consume all ram and swap such that we only have enough ram/swap available for 1GB worth of allocations if we neglect the intermediate behavior and instead picture the system as it would be assuming swap was fully utilized and you had just 1GB worth of free physical memory, I know this isn\u0027t realistic but it would represent what the system would look like when you theoretically could still allocate 1GB without OOMing.\n\n[ available ram 1.6gb | swap  \u003d 6gb uncomrpessed -\u003e 2.4gb of physical ram ]\n\nIn this situation we should attempt to allocate 6gb of compressible data to consume 2.4gb of physical ram plus an additional .6GB for a total of 6.6GB. Does this idea make sense? After allocating 6.6GB we should still be able to allocate an additional 1GB assuming these compression ratios held.",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 231,
        "endChar": 33
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f36b78f3_2625fad3",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-10T21:05:16Z",
      "side": 1,
      "message": "Yes, that looks simpler.  You still have to worry about the case in which we don\u0027t fill up the swap.  It\u0027s likely that the explanation is still simpler but it would be good to see it.  Maybe as a CL? ;)",
      "parentUuid": "b43f01c2_d847a039",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 231,
        "endChar": 33
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ad89e4e_bac16f44",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 4
      },
      "lineNbr": 911,
      "author": {
        "id": 1334957
      },
      "writtenOn": "2019-04-08T20:41:03Z",
      "side": 1,
      "message": "I also don\u0027t see what the harm would be in just using syscall.Mmap? This would prevent having to create multiple processes all of which we have to keep track of. Once this test process dies these mappings will be free\u0027d even if we forget to munmap them.\n\nAdditionally, if we use syscall.Mmap then it becomes very easy to just dynamically allocate memory until we hit the desired pressure level and we fully can avoid pre-allocation.",
      "range": {
        "startLine": 911,
        "startChar": 0,
        "endLine": 911,
        "endChar": 69
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbd7751b_03cf9db9",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 4
      },
      "lineNbr": 911,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-04-10T21:05:16Z",
      "side": 1,
      "message": "\"Once this test process dies\" yes, but one problem is that Tast runs multiple test sequentially in the same process, so we may affect later tests.  I proposed something similar earlier on, but the Tast maintainers (Dan) didn\u0027t like it.  However, I did not suggest using mmap directly.\n\nIn any case, at this point I am pretty happy with the auxiliary process, even if it\u0027s not the best option.",
      "parentUuid": "9ad89e4e_bac16f44",
      "range": {
        "startLine": 911,
        "startChar": 0,
        "endLine": 911,
        "endChar": 69
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccda479e_94be6875",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/mempressure/mempressure.go",
        "patchSetId": 4
      },
      "lineNbr": 911,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-04-11T00:48:50Z",
      "side": 1,
      "message": "yes, i think that a separate process is preferable based on the current design where all tests are running in the same process.",
      "parentUuid": "dbd7751b_03cf9db9",
      "range": {
        "startLine": 911,
        "startChar": 0,
        "endLine": 911,
        "endChar": 69
      },
      "revId": "f721528647e0499f7c95e14aca72c7b121936fee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}