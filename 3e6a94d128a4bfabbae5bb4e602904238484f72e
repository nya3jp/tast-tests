{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "03cec3ab_fea6a827",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2022-03-11T02:42:16Z",
      "side": 1,
      "message": "jchinlee@, PTAL (since this CL is meaty, not calling tast-owners yet).\n\n\nOthers FYI",
      "revId": "3e6a94d128a4bfabbae5bb4e602904238484f72e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd2e2b9a_a33e6d77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2022-03-12T05:37:06Z",
      "side": 1,
      "message": "nit, didn\u0027t see other issues.",
      "revId": "3e6a94d128a4bfabbae5bb4e602904238484f72e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dd25a6a_0e4cff79",
        "filename": "src/chromiumos/tast/local/media/devtools/devtools.go",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2022-03-12T05:37:06Z",
      "side": 1,
      "message": "Any chance to terminate the loop after 2 minutes with a meaningful error message?",
      "range": {
        "startLine": 100,
        "startChar": 3,
        "endLine": 101,
        "endChar": 76
      },
      "revId": "3e6a94d128a4bfabbae5bb4e602904238484f72e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5af7663_38ed7018",
        "filename": "src/chromiumos/tast/local/media/devtools/devtools.go",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2022-03-16T01:50:16Z",
      "side": 1,
      "message": "Hmm actually when I was working on that I found out some weirdness.\nThis testing.Poll() should timeout after 5 seconds, given l.127,\nbut in fact it doesn\u0027t, waiting in the Recv() call in l.103 until\nit\u0027s signalled, which takes a good amount of time (larger than 5\nseconds, in any case).\n\nWhen I went to the GitHub project we use for this observer I saw\nthat this recv-wait-forever behaviour is intended [1]. They also\nprovide a Ready() method to poll if the channel has any data \navailable. Sadly, this _also_ seems to be blocking, so it works\nin the same way :( \n\nAll in all, this whole polling block is needed because DevTools\nMedia might have data different from the kVideoPlaybackRoughness\nkey, and we want to try until that key is updated. But it \ndoesn\u0027t \"timeout\" per se. I think Tast would have to intervene\nand stop the whole thing, and we would lose the information as\nto where was the execution blocked.\n\nWhile working on this I also changed a bit the execution of this\nfunction to be in parallel with the other measurements in \nplayback.go. What I could do is to have a timeout in parallel\nwith the call to GetVideoPlaybackRoughness() and if it expires,\nreturn an error with a nice message. WDYT?\n\n\n[1] https://github.com/mafredri/cdp/blob/75c683f87449e022185c9b72371ecb82a442e817/rpcc/stream.go#L88-L109",
      "parentUuid": "0dd25a6a_0e4cff79",
      "range": {
        "startLine": 100,
        "startChar": 3,
        "endLine": 101,
        "endChar": 76
      },
      "revId": "3e6a94d128a4bfabbae5bb4e602904238484f72e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae1d83df_e2c592ca",
        "filename": "src/chromiumos/tast/local/media/devtools/devtools.go",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-03-21T23:13:05Z",
      "side": 1,
      "message": "Looking at testing.Poll[1], it assumes f() honors the ctx timeout.\nIf Recv is not honoring the ctx timeout, it may running longer than 5 minutes. It\u0027s better to put it into another goroutine and kill it if timeout is occurred. \nYour plan sounds great to me. \n\n[1] https://source.corp.google.com/chromeos_public/src/platform/tast/src/chromiumos/tast/internal/testingutil/poll.go;l\u003d44?q\u003df:tast%20testingutil%20Poll",
      "parentUuid": "d5af7663_38ed7018",
      "range": {
        "startLine": 100,
        "startChar": 3,
        "endLine": 101,
        "endChar": 76
      },
      "revId": "3e6a94d128a4bfabbae5bb4e602904238484f72e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}