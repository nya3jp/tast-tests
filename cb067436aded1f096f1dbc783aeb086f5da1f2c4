{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fa6e0fa9_20bd294f",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1398801
      },
      "writtenOn": "2022-02-14T22:31:51Z",
      "side": 1,
      "message": "It seems that I could not compose such fixture as I got this error: \n\nError at usercode.go:28: Panic: interface conversion: crostini.FixtureData is not lacrosfixt.FixtValue: missing method Chrome\n2022-02-14T22:20:37.609406Z [22:20:37.293] Stack trace:\nPanic\n\tat chromiumos/tast/internal/planner.runTestWithConfig.func3.2 (usercode.go:28)\n\tat chromiumos/tast/internal/usercode.SafeCall.func2.1.1 (usercode.go:101)\n\tat chromiumos/tast/internal/usercode.SafeCall.func2.1 (usercode.go:107)\n\tat runtime.gopanic (panic.go:1038)\n\tat runtime.getitab (iface.go:91)\n\tat runtime.assertE2I (iface.go:482)\n\tat chromiumos/tast/local/chrome/browser/browserfixt.SetUpWithURL (browserfixt.go:60)\n\tat chromiumos/tast/local/bundles/cros/crostini.TestFixture2 (test_fixture2.go:86)",
      "range": {
        "startLine": 171,
        "startChar": 20,
        "endLine": 171,
        "endChar": 46
      },
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a89efe38_d15692b4",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1398801
      },
      "writtenOn": "2022-02-15T09:11:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fa6e0fa9_20bd294f",
      "range": {
        "startLine": 171,
        "startChar": 20,
        "endLine": 171,
        "endChar": 46
      },
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d573fad_f1647085",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-02-15T03:31:16Z",
      "side": 1,
      "message": "Try something like this:\n\n```\nfd :\u003d FixtureData{f.cr, f.tconn, f.cont, f.kb, f.postData}\nif lv, ok :\u003d s.ParentValue().(lacrosfixt.FixtValue); ok {\n\t\t\treturn \u0026struct {\n\t\t\t\tFixtureData\n\t\t\t\tlacrosfixt.FixtValue\n\t\t\t}{\n\t\t\t\tfd,\n\t\t\t\tlv,\n\t\t\t}\n} else {\n   return fv\n}\n```\n\nYou might have to define an interface for FixtureData, but let\u0027s see if we can avoid it.\n\nWe want to create a type which can do everything lacrosfixt.FixtValue can do. Using structure embedding we should be able to avoid having to redefine everything manually.",
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0d964cf_bdb017d4",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1398801
      },
      "writtenOn": "2022-02-15T05:32:06Z",
      "side": 1,
      "message": "Then how to access the return value since it could return a different interface in different cases?\n\nCurrently this is the way to access:\n\ntconn :\u003d s.FixtValue().(crostini.FixtureData).Tconn",
      "parentUuid": "1d573fad_f1647085",
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd4bd6c8_2ded5e22",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-02-15T05:41:27Z",
      "side": 1,
      "message": "That should work since it typecasts to (crostini.FixtureData)",
      "parentUuid": "b0d964cf_bdb017d4",
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc220d59_d5199c4c",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1398801
      },
      "writtenOn": "2022-02-15T07:54:37Z",
      "side": 1,
      "message": "It does not, there is error:\n\nError at usercode.go:28: Panic: interface conversion: interface {} is *struct { crostini.FixtureData; lacrosfixt.FixtValue }, not crostini.FixtureData\n2022-02-15T05:20:35.711530Z [05:20:35.776] Stack trace:\nPanic\n\tat chromiumos/tast/internal/planner.runTestWithConfig.func3.2 (usercode.go:28)\n\tat chromiumos/tast/internal/usercode.SafeCall.func2.1.1 (usercode.go:101)\n\tat chromiumos/tast/internal/usercode.SafeCall.func2.1 (usercode.go:107)\n\tat runtime.gopanic (panic.go:1038)\n\tat runtime.panicdottypeE (iface.go:261)\n\tat chromiumos/tast/local/bundles/cros/crostini.TestFixture (test_fixture.go:84)\n\tat chromiumos/tast/internal/planner.runTestWithConfig.func3.1 (run.go:824)\n\tat chromiumos/tast/internal/usercode.SafeCall.func2 (usercode.go:112)\n\t...\ninterface conversion: interface {} is *struct { crostini.FixtureData; lacrosfixt.FixtValue }, not crostini.FixtureData",
      "parentUuid": "fd4bd6c8_2ded5e22",
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67528853_741b61fe",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-02-15T07:56:47Z",
      "side": 1,
      "message": "Hrm, what if you cast it to struct { crostini.FixtureData; lacrosfixt.FixtValue } then?\n\nhidehiko@, feel free to comment. If the cast doesn\u0027t work we will have to define a crostini.FixtureData wrapper interface.",
      "parentUuid": "dc220d59_d5199c4c",
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecd7ae30_f05cc7f3",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1398801
      },
      "writtenOn": "2022-02-15T08:08:47Z",
      "side": 1,
      "message": "This would not work in the case it only return crostini.FixtureData.",
      "parentUuid": "67528853_741b61fe",
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd505f28_06005428",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-02-15T08:10:23Z",
      "side": 1,
      "message": "Yerp but you can check if the type cast succeeds and do something different in the else.",
      "parentUuid": "ecd7ae30_f05cc7f3",
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f11c7d6_57ef6799",
        "filename": "src/chromiumos/tast/local/crostini/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1398801
      },
      "writtenOn": "2022-02-15T08:40:24Z",
      "side": 1,
      "message": "It does not work:\n\ninterface conversion: struct { crostini.FixtureData; lacrosfixt.FixtValue } is not lacrosfixt.FixtValue: missing method Chrome\n\nIt seems that we will need to wrap interface.",
      "parentUuid": "bd505f28_06005428",
      "revId": "cb067436aded1f096f1dbc783aeb086f5da1f2c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}