{
  "comments": [
    {
      "key": {
        "uuid": "72a0b0de_81f9fcc2",
        "filename": "src/chromiumos/tast/local/uhid/device_nodes.go",
        "patchSetId": 30
      },
      "lineNbr": 55,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-01T21:55:40Z",
      "side": 1,
      "message": "nit, optional: probably hidRaw ? (",
      "range": {
        "startLine": 55,
        "startChar": 27,
        "endLine": 55,
        "endChar": 33
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8604d697_1537b93f",
        "filename": "src/chromiumos/tast/local/uhid/device_nodes.go",
        "patchSetId": 30
      },
      "lineNbr": 55,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-01T22:53:07Z",
      "side": 1,
      "message": "I call them hidraw nodes because the file names corresponding to them are always /dev/hidraw\u003ci\u003e with i being a number. It just felt reasonable that what I call the nodes and their corresponding files be the same name.\n\nIf you prefer it being called hidRaw though then we can do that as well.",
      "parentUuid": "72a0b0de_81f9fcc2",
      "range": {
        "startLine": 55,
        "startChar": 27,
        "endLine": 55,
        "endChar": 33
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5ecdf69_12822507",
        "filename": "src/chromiumos/tast/local/uhid/device_nodes.go",
        "patchSetId": 30
      },
      "lineNbr": 55,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-05-01T23:22:40Z",
      "side": 1,
      "message": "The Linux documentation always uses hidraw AFAIK, so I\u0027d prefer we stick with that.",
      "parentUuid": "8604d697_1537b93f",
      "range": {
        "startLine": 55,
        "startChar": 27,
        "endLine": 55,
        "endChar": 33
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b03f75bd_a8edcf2e",
        "filename": "src/chromiumos/tast/local/uhid/device_nodes.go",
        "patchSetId": 30
      },
      "lineNbr": 55,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-01T23:31:05Z",
      "side": 1,
      "message": "would you prefer we change the function names from hidRaw to hidraw as well? I would be in favor of that. It gets even iffier when you consider public functions given this: https://github.com/golang/go/wiki/CodeReviewComments#initialisms. Should they be HIDraw, Hidraw or HIDRaw?",
      "parentUuid": "e5ecdf69_12822507",
      "range": {
        "startLine": 55,
        "startChar": 27,
        "endLine": 55,
        "endChar": 33
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a5c9949_a3f9e1fb",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 29,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-01T21:55:40Z",
      "side": 1,
      "message": "sorry I missed these ones before:\n\ntwo things: on Go, Uppercase means \"public\". lowercase means \"private\".\n\nRule-of-thumb: \n  - it is better to do everything private first, and them make them public as needed.\n    in this case, the error messages shouldn\u0027t be public.\n\n\nbut I think the error message shouldn\u0027t be a constant.\nIn practice, I think it makes sense to reuse the messages.\n\nBut in this case the are not used that much. I think you can \"inline\" them.\n(In Tast, I haven\u0027t seen error messages defines as const... but if you had, please, LMK).",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 29,
        "endChar": 50
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b762311b_47111eb5",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 29,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-01T22:53:07Z",
      "side": 1,
      "message": "I\u0027m pretty sure UninitializedDeviceError can be made private. However, the point of making the NoEventError public is that users can handle it accordingly. For example, in the dualshock 3 test you have this:\n\n```\nfor condition {\n    if err :\u003d d.Dispatch(ctx); err !\u003d nil {\n        // If no event was caught the kernel does not require a\n        // GetReportReply, we can proceed with the test.\n        if err.Error() \u003d\u003d uhid.NoEventError {\n            s.Log(\"No get report requests made by kernel\")\n            break\n        }\n        s.Fatal(\"Failed during kernel communication: \", err)\n    }\n}\n```\n\nAnd, since it is used outside of the library, I think it\u0027s a good idea to keep it as a constant.",
      "parentUuid": "2a5c9949_a3f9e1fb",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 29,
        "endChar": 50
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61831432_f54c5917",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 35,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-01T21:55:40Z",
      "side": 1,
      "message": "ditto above: \nnit: the pattern is \"got; want\"  (and not \"got; wanted\")\n\n\n(side note, to take into account in the future: group consts by type.. in this case all error messages should be together)",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 73
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6ec949a_b69228b6",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 35,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-01T22:53:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61831432_f54c5917",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 73
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a50a1f35_1f84dfd8",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 52,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-01T21:55:40Z",
      "side": 1,
      "message": "I think you already mentioned this in some of the previous review (sorry I\u0027m asking the same question).\ndouble-check that all these must be public.",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 52,
        "endChar": 8
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7714a77c_5054fa1f",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 52,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-01T22:53:07Z",
      "side": 1,
      "message": "To keep it consisten I made public all of the uhid constants defined here: https://source.chromium.org/chromiumos/chromiumos/codesearch/+/master:src/third_party/kernel/v4.4/include/uapi/linux/uhid.h;l\u003d26?q\u003duhid%5C.h\u0026ss\u003dchromiumos%2Fchromiumos%2Fcodesearch\n\nIn reality though, a lot of them could be made private since they probably shouldn\u0027t be used by the user, Destroy is one example. So I will do as you say and make private as many as possible.",
      "parentUuid": "a50a1f35_1f84dfd8",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 52,
        "endChar": 8
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49de57a1_b6869294",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 137,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-01T21:55:40Z",
      "side": 1,
      "message": "ditto: please, double-check that they must be public.",
      "range": {
        "startLine": 137,
        "startChar": 1,
        "endLine": 137,
        "endChar": 5
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c420421_df794f4a",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 137,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-01T22:53:07Z",
      "side": 1,
      "message": "The user would probably be interested in using the variables here for manipulation of the device. For example, in the ds3 test the uniq needs to be accessed in order to reply to certain get report requests by the kernel. While as of right now many of these don\u0027t need to be used they are mundane and common enough that they will probably be accessed often.\n\nIf we\u0027re sticking with the rule of \"only make public if necessary\" then only the Uniq field needs to be public. It is my opinion, however, that they should all be public. I will leave the final word to you though.",
      "parentUuid": "49de57a1_b6869294",
      "range": {
        "startLine": 137,
        "startChar": 1,
        "endLine": 137,
        "endChar": 5
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3785c6e_8c3d5d9e",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 151,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-01T21:55:40Z",
      "side": 1,
      "message": "ditto above: double check if here and below what should be public and what private.\n\ndoes \"Data\", \"File\" and \"EventHandlers\" should be public?\n\njust in case: files that belong to the same package (in this case \"package uhid\") can access private members.",
      "range": {
        "startLine": 151,
        "startChar": 1,
        "endLine": 151,
        "endChar": 5
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aed3453_4099197d",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 30
      },
      "lineNbr": 151,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-01T22:53:07Z",
      "side": 1,
      "message": "Data needs to remain public for access to the uniq. EventHandlers needs to be public so that the user can assign the necessary handlers for kernel events. File can be made private though and I think that would be a good idea.",
      "parentUuid": "e3785c6e_8c3d5d9e",
      "range": {
        "startLine": 151,
        "startChar": 1,
        "endLine": 151,
        "endChar": 5
      },
      "revId": "b2e8065d381f1016e3dd5f1433b07d6ad8ff56ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}