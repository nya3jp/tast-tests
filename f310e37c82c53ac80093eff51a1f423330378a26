{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bdb9b7b9_7c536087",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-11-10T22:46:20Z",
      "side": 1,
      "message": "These midline comments obfuscate more than they clarify. The meaning of the bool is apparent from context, and easier to skim without the comments in the way.\n\nIf you want to clarify the meaning of the field, the usual way to do so is by explicitly naming field-value pairs:\n\n    for _, tc :\u003d range []struct {\n        name                    string\n        run                     func(context.Context, *cc.App) error\n        timer                   cca.TimerState\n        shouldRunThroughCameras bool\n    }{\n        {\n            name:                    \"testRecordVideoWithTimer\",\n            run:                     testRecordVideoWithTimer,\n            timer:                   cca.TimerOn,\n            shouldRunThroughCameras: true,\n        }, {\n            // other test cases\n        }\n    } {\n        // loop body\n    }\n\nBut in this case, I think it\u0027s sufficiently clear without naming each field.",
      "range": {
        "startLine": 66,
        "startChar": 86,
        "endLine": 66,
        "endChar": 114
      },
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30aab16e_63fefe67",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-11-11T08:31:06Z",
      "side": 1,
      "message": "I would say it\u0027s a very weird to have a single field just for distinguish the |shouldRunThroughCameras \u003d\u003d false| case.\nCan you come up with a better way to integrate this new test?\nMay be try not to integrate the test in the loop here and spawn the subtest separately somewhere else?",
      "parentUuid": "bdb9b7b9_7c536087",
      "range": {
        "startLine": 66,
        "startChar": 86,
        "endLine": 66,
        "endChar": 114
      },
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dd81112_fe65c4e2",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-11-10T22:46:20Z",
      "side": 1,
      "message": "Here and L90, there is a special exception based on the test name. This is prone to error by typo or by the test-name changing, and it also does not precisely describe why this scenario is different. Is there some underlying reason that makes testConfirmDialog different? Would it make sense to capture that in a separate variable? It looks like testConfirmDialog is the only one with shouldRunThroughCameras\u003dfalse; would it make sense to change this condition to \"if !useSWA \u0026\u0026 !shouldRunThroughCameras\"?",
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c45ac42f_9e23976f",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-11-10T22:27:17Z",
      "side": 1,
      "message": "Optional: Is it better to move condition check before registering defer function?",
      "range": {
        "startLine": 89,
        "startChar": 5,
        "endLine": 92,
        "endChar": 5
      },
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9192d5d_e6d8ff5d",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-11-10T22:46:20Z",
      "side": 1,
      "message": "If this param is unused in the function body (which I think it is), then cleaner to leave it unnamed with _:\n\n    if err :\u003d app.RunThroughCameras(ctx, func(_ cca.Facing) error {\n        return runTest()\n    }); err !\u003d nil {",
      "range": {
        "startLine": 116,
        "startChar": 46,
        "endLine": 116,
        "endChar": 52
      },
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d05bfaef_3112af10",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-11-10T22:27:17Z",
      "side": 1,
      "message": "Optional: In comparison to RunThroughCameras, runTest is very generic. Maybe add some comments to help understanding.",
      "range": {
        "startLine": 122,
        "startChar": 14,
        "endLine": 122,
        "endChar": 21
      },
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4c1cc3e_15e990db",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-11-10T22:46:20Z",
      "side": 1,
      "message": "I also found this confusing, especially since this whole function-body is inside an argument to s.Run().",
      "parentUuid": "d05bfaef_3112af10",
      "range": {
        "startLine": 122,
        "startChar": 14,
        "endLine": 122,
        "endChar": 21
      },
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b964c0bd_91cbb002",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-11-10T22:46:20Z",
      "side": 1,
      "message": "nit/style: \"Try\"",
      "range": {
        "startLine": 364,
        "startChar": 4,
        "endLine": 364,
        "endChar": 9
      },
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa829bc5_070c5c1e",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 370,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-11-10T22:27:17Z",
      "side": 1,
      "message": "Please use polling instead of a hard sleep. Otherwise it wastes a lot of time.",
      "range": {
        "startLine": 370,
        "startChar": 1,
        "endLine": 370,
        "endChar": 34
      },
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5682738c_a08c65bf",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 1
      },
      "lineNbr": 390,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-11-10T22:46:20Z",
      "side": 1,
      "message": "nit/style: \"Try\"",
      "range": {
        "startLine": 390,
        "startChar": 4,
        "endLine": 390,
        "endChar": 9
      },
      "revId": "f310e37c82c53ac80093eff51a1f423330378a26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}