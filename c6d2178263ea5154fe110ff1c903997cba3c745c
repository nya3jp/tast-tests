{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "64869045_12690309",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1310429
      },
      "writtenOn": "2021-09-15T22:39:24Z",
      "side": 1,
      "message": "Thanks Katie, this looks great. LGTM with comments addressed, giving a +1 so you\u0027re not blocked.",
      "revId": "c6d2178263ea5154fe110ff1c903997cba3c745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "172d304c_e8678c35",
        "filename": "src/chromiumos/tast/local/a11y/a11y.go",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1310429
      },
      "writtenOn": "2021-09-15T22:39:24Z",
      "side": 1,
      "message": "Nit: update this variable name to \"expectation\" so that it matches the comment description",
      "range": {
        "startLine": 381,
        "startChar": 1,
        "endLine": 381,
        "endChar": 20
      },
      "revId": "c6d2178263ea5154fe110ff1c903997cba3c745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5cb9c37_87851cad",
        "filename": "src/chromiumos/tast/local/a11y/a11y.go",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 1310429
      },
      "writtenOn": "2021-09-15T22:39:24Z",
      "side": 1,
      "message": "Thanks for adding errors if the various options don\u0027t match. The one thing I\u0027m noticing is that we\u0027ll only ever log one of the mismatching properties, even if there are multiple that don\u0027t match.\n\nCan we append to an error each time we detect a mismatch, then return that error at the end? We can use error.Wrap() [1] to help us. Maybe something like below?\n\nerr :\u003d errors.New(\"\")\nhasError :\u003d false\n\nif oe.expectedUtterance !\u003d utteranceData.Utterance {\n    err \u003d errors.Wrap(err, \"utterance error message\")\n    hasError \u003d true\n}\n\nif oe.expectedOptions.Lang !\u003d utteranceData.Options.Lang {\n    err \u003d errors.Wrap(err, \"lang error message\")\n    hasError \u003d true\n}\n\n// ...\n\nif hasError {\n    return err\n}\n\nreturn nil\n\n[1] https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast/src/chromiumos/tast/errors/errors.go;l\u003d19",
      "revId": "c6d2178263ea5154fe110ff1c903997cba3c745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25e91fc1_45f4a7e8",
        "filename": "src/chromiumos/tast/local/a11y/a11y.go",
        "patchSetId": 2
      },
      "lineNbr": 434,
      "author": {
        "id": 1310429
      },
      "writtenOn": "2021-09-15T22:39:24Z",
      "side": 1,
      "message": "Super nit: a -\u003e an",
      "range": {
        "startLine": 434,
        "startChar": 62,
        "endLine": 434,
        "endChar": 63
      },
      "revId": "c6d2178263ea5154fe110ff1c903997cba3c745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b829392_d750cdde",
        "filename": "src/chromiumos/tast/local/bundles/cros/a11y/chromevox_tts_processing_characters.go",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1310429
      },
      "writtenOn": "2021-09-15T22:39:24Z",
      "side": 1,
      "message": "Wondering if we should combine these with the above test steps? I realize that we\u0027d have to add a \"keyCommands\" field to testSteps, and that all of them will be nextObject, but I think overall it would be nice to have all test steps in a single array.\n\nWhat do you think?",
      "range": {
        "startLine": 149,
        "startChar": 1,
        "endLine": 149,
        "endChar": 14
      },
      "revId": "c6d2178263ea5154fe110ff1c903997cba3c745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df60599b_be06b609",
        "filename": "src/chromiumos/tast/local/bundles/cros/a11y/chromevox_tts_processing_characters.go",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1310429
      },
      "writtenOn": "2021-09-15T22:39:24Z",
      "side": 1,
      "message": "Nit: can you assign this to a variable, e.g. cyclePunctuationMode, and use it here and elsewhere?",
      "range": {
        "startLine": 182,
        "startChar": 13,
        "endLine": 182,
        "endChar": 26
      },
      "revId": "c6d2178263ea5154fe110ff1c903997cba3c745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}