// Copyright 2021 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Source: google3/google/chromeos/uidetection/v1/ui_detection.proto

syntax = "proto3";

package google.chromeos.uidetection.v1;

option go_package = "chromiumos/tast/local/uidetection/api";

// Provides image-based UI detection service.
service UiDetectionService {
  // Runs the detection.
  rpc ExecuteDetection(UiDetectionRequest) returns (UiDetectionResponse);
}

// Request message for UI detection.
message UiDetectionRequest {
  // Required field that represents a PNG image.
  bytes image_png = 1;
  // Required field indicating the detection type.
  DetectionRequest request = 2;
}

// Detection type specifies what to detect in the image.
message DetectionRequest {
  oneof detection_request_type {
    // Detection type for word detection.
    WordDetectionRequest word_detection_request = 1;
    // Detection type for text block detection.
    TextBlockDetectionRequest text_block_detection_request = 2;
    // Detection type for custom icon detection.
    CustomIconDetectionRequest custom_icon_detection_request = 3;
  }
}

// Detection type for word detection.
message WordDetectionRequest {
  // Required. The word to locate in the image.
  string word = 1;
}

// Detection type for text block detection.
message TextBlockDetectionRequest {
  // Required. The text block consisting a list of words to locate im the image.
  repeated string words = 1;
}

// Detection type for custom icon detection.
message CustomIconDetectionRequest {
  // Required field that represents an icon in PNG format.
  bytes icon_png = 1;
}

// Response message for UI detection.
message UiDetectionResponse {
  // Locations of matching UI elements.
  repeated BoundingBox bounding_boxes = 1;
}

// The location of a UI element.
// A bounding box is reprensented by its top-left point [left, top]
// and its bottom-right point [right, bottom].
message BoundingBox {
  // The text found in the bounding box.
  string text = 1;
  // The y-coordinate of the top-left point.
  int32 top = 2;
  // The x-coordinate of the top-left point.
  int32 left = 3;
  // The y-coordinate of the bottom-right point.
  int32 bottom = 4;
  // The x-coordinate of the bottom-right point.
  int32 right = 5;
}
