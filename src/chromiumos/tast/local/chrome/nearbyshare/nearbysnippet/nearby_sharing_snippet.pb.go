// nearby_sharing_snippets.proto
// Definition of the Nearby Mobly snippets protocol buffer

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: nearby_sharing_snippet.proto

package nearbysnippet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the data usage preference.
type NearbySharingDataUsage int32

const (
	NearbySharingDataUsage_DATA_USAGE_UNKNOWN NearbySharingDataUsage = 0
	// User is never willing to use the Internet
	NearbySharingDataUsage_DATA_USAGE_OFFLINE NearbySharingDataUsage = 1
	// User is always willing to use the Internet
	NearbySharingDataUsage_DATA_USAGE_ONLINE NearbySharingDataUsage = 2
	// User is willing to use the Internet on an un-metered connection.
	// NOTE: This matches Android Nearby Share's naming for now.
	NearbySharingDataUsage_DATA_USAGE_WIFI_ONLY NearbySharingDataUsage = 3
)

// Enum value maps for NearbySharingDataUsage.
var (
	NearbySharingDataUsage_name = map[int32]string{
		0: "DATA_USAGE_UNKNOWN",
		1: "DATA_USAGE_OFFLINE",
		2: "DATA_USAGE_ONLINE",
		3: "DATA_USAGE_WIFI_ONLY",
	}
	NearbySharingDataUsage_value = map[string]int32{
		"DATA_USAGE_UNKNOWN":   0,
		"DATA_USAGE_OFFLINE":   1,
		"DATA_USAGE_ONLINE":    2,
		"DATA_USAGE_WIFI_ONLY": 3,
	}
)

func (x NearbySharingDataUsage) Enum() *NearbySharingDataUsage {
	p := new(NearbySharingDataUsage)
	*p = x
	return p
}

func (x NearbySharingDataUsage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NearbySharingDataUsage) Descriptor() protoreflect.EnumDescriptor {
	return file_nearby_sharing_snippet_proto_enumTypes[0].Descriptor()
}

func (NearbySharingDataUsage) Type() protoreflect.EnumType {
	return &file_nearby_sharing_snippet_proto_enumTypes[0]
}

func (x NearbySharingDataUsage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NearbySharingDataUsage) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NearbySharingDataUsage(num)
	return nil
}

// Deprecated: Use NearbySharingDataUsage.Descriptor instead.
func (NearbySharingDataUsage) EnumDescriptor() ([]byte, []int) {
	return file_nearby_sharing_snippet_proto_rawDescGZIP(), []int{0}
}

// Represents the visibility of the device's advertisement.
type NearbySharingVisibility int32

const (
	NearbySharingVisibility_VISIBILITY_UNKNOWN NearbySharingVisibility = 0
	NearbySharingVisibility_VISIBILITY_HIDDEN  NearbySharingVisibility = 1
	// The user is visible to all contacts.
	NearbySharingVisibility_VISIBILITY_ALL_CONTACTS NearbySharingVisibility = 2
	// The user is only visible to selected contacts.
	NearbySharingVisibility_VISIBILITY_SELECTED_CONTACTS NearbySharingVisibility = 3
	// The user is visible to everyone.
	NearbySharingVisibility_VISIBILITY_EVERYONE NearbySharingVisibility = 4
	// The user is visible to devices signed in with the same account.
	NearbySharingVisibility_VISIBILITY_SELF_SHARE NearbySharingVisibility = 5
)

// Enum value maps for NearbySharingVisibility.
var (
	NearbySharingVisibility_name = map[int32]string{
		0: "VISIBILITY_UNKNOWN",
		1: "VISIBILITY_HIDDEN",
		2: "VISIBILITY_ALL_CONTACTS",
		3: "VISIBILITY_SELECTED_CONTACTS",
		4: "VISIBILITY_EVERYONE",
		5: "VISIBILITY_SELF_SHARE",
	}
	NearbySharingVisibility_value = map[string]int32{
		"VISIBILITY_UNKNOWN":           0,
		"VISIBILITY_HIDDEN":            1,
		"VISIBILITY_ALL_CONTACTS":      2,
		"VISIBILITY_SELECTED_CONTACTS": 3,
		"VISIBILITY_EVERYONE":          4,
		"VISIBILITY_SELF_SHARE":        5,
	}
)

func (x NearbySharingVisibility) Enum() *NearbySharingVisibility {
	p := new(NearbySharingVisibility)
	*p = x
	return p
}

func (x NearbySharingVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NearbySharingVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_nearby_sharing_snippet_proto_enumTypes[1].Descriptor()
}

func (NearbySharingVisibility) Type() protoreflect.EnumType {
	return &file_nearby_sharing_snippet_proto_enumTypes[1]
}

func (x NearbySharingVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NearbySharingVisibility) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NearbySharingVisibility(num)
	return nil
}

// Deprecated: Use NearbySharingVisibility.Descriptor instead.
func (NearbySharingVisibility) EnumDescriptor() ([]byte, []int) {
	return file_nearby_sharing_snippet_proto_rawDescGZIP(), []int{1}
}

// Represents settings for Nearby Sharing.
type NearbySharingSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A human readable name for this device.
	DeviceName *string `protobuf:"bytes,1,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	// Sets the data usage preference.
	DataUsage *NearbySharingDataUsage `protobuf:"varint,2,opt,name=data_usage,json=dataUsage,enum=nearbysnippet.NearbySharingDataUsage" json:"data_usage,omitempty"`
	// Sets the visibility preference.
	Visibility *NearbySharingVisibility `protobuf:"varint,3,opt,name=visibility,enum=nearbysnippet.NearbySharingVisibility" json:"visibility,omitempty"`
}

func (x *NearbySharingSettings) Reset() {
	*x = NearbySharingSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nearby_sharing_snippet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearbySharingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearbySharingSettings) ProtoMessage() {}

func (x *NearbySharingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_nearby_sharing_snippet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearbySharingSettings.ProtoReflect.Descriptor instead.
func (*NearbySharingSettings) Descriptor() ([]byte, []int) {
	return file_nearby_sharing_snippet_proto_rawDescGZIP(), []int{0}
}

func (x *NearbySharingSettings) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *NearbySharingSettings) GetDataUsage() NearbySharingDataUsage {
	if x != nil && x.DataUsage != nil {
		return *x.DataUsage
	}
	return NearbySharingDataUsage_DATA_USAGE_UNKNOWN
}

func (x *NearbySharingSettings) GetVisibility() NearbySharingVisibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return NearbySharingVisibility_VISIBILITY_UNKNOWN
}

var File_nearby_sharing_snippet_proto protoreflect.FileDescriptor

var file_nearby_sharing_snippet_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x22, 0xc6, 0x01,
	0x0a, 0x15, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6e,
	0x65, 0x61, 0x72, 0x62, 0x79, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x4e, 0x65, 0x61,
	0x72, 0x62, 0x79, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46,
	0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x73, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2a, 0x79, 0x0a, 0x16, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79,
	0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4f,
	0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10,
	0x03, 0x2a, 0xbb, 0x01, 0x0a, 0x17, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x53, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x12, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x48, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17,
	0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x53, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x56, 0x49, 0x53,
	0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x53, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x56,
	0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x52, 0x59, 0x4f,
	0x4e, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x05, 0x42,
	0x38, 0x5a, 0x36, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x6f, 0x73, 0x2f, 0x74, 0x61,
	0x73, 0x74, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x2f,
	0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x6e, 0x65, 0x61, 0x72,
	0x62, 0x79, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
}

var (
	file_nearby_sharing_snippet_proto_rawDescOnce sync.Once
	file_nearby_sharing_snippet_proto_rawDescData = file_nearby_sharing_snippet_proto_rawDesc
)

func file_nearby_sharing_snippet_proto_rawDescGZIP() []byte {
	file_nearby_sharing_snippet_proto_rawDescOnce.Do(func() {
		file_nearby_sharing_snippet_proto_rawDescData = protoimpl.X.CompressGZIP(file_nearby_sharing_snippet_proto_rawDescData)
	})
	return file_nearby_sharing_snippet_proto_rawDescData
}

var file_nearby_sharing_snippet_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nearby_sharing_snippet_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_nearby_sharing_snippet_proto_goTypes = []interface{}{
	(NearbySharingDataUsage)(0),   // 0: nearbysnippet.NearbySharingDataUsage
	(NearbySharingVisibility)(0),  // 1: nearbysnippet.NearbySharingVisibility
	(*NearbySharingSettings)(nil), // 2: nearbysnippet.NearbySharingSettings
}
var file_nearby_sharing_snippet_proto_depIdxs = []int32{
	0, // 0: nearbysnippet.NearbySharingSettings.data_usage:type_name -> nearbysnippet.NearbySharingDataUsage
	1, // 1: nearbysnippet.NearbySharingSettings.visibility:type_name -> nearbysnippet.NearbySharingVisibility
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_nearby_sharing_snippet_proto_init() }
func file_nearby_sharing_snippet_proto_init() {
	if File_nearby_sharing_snippet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nearby_sharing_snippet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearbySharingSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nearby_sharing_snippet_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nearby_sharing_snippet_proto_goTypes,
		DependencyIndexes: file_nearby_sharing_snippet_proto_depIdxs,
		EnumInfos:         file_nearby_sharing_snippet_proto_enumTypes,
		MessageInfos:      file_nearby_sharing_snippet_proto_msgTypes,
	}.Build()
	File_nearby_sharing_snippet_proto = out.File
	file_nearby_sharing_snippet_proto_rawDesc = nil
	file_nearby_sharing_snippet_proto_goTypes = nil
	file_nearby_sharing_snippet_proto_depIdxs = nil
}
