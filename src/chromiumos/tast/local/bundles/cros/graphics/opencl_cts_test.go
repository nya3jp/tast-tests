// Copyright 2022 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package graphics

// To update test parameters after modifying this file, run:
// TAST_GENERATE_UPDATE=1 ~/trunk/src/platform/tast/tools/go.sh test -count=1 chromiumos/tast/local/bundles/cros/graphics

import (
	"fmt"
	"os"
	"strings"
	"testing"

	"chromiumos/tast/common/genparams"
)

type paramData struct {
	Name         string   // The test name.
	Executable   string   // The test executable name.
	Args         string   // The list of args for the executable.
	ExpectedPass bool     // Whether the test is expected to pass or to fail.
	Buganizer    string   // Buganizer issue tracking the test.
	ExtraAttr    []string // The extra group attribute for when to run the test.
	Timeout      int      // The timeout for the test.
}

var oclCtsParams []paramData

func addTest(suite, args, additionalArgs, status, bug string, timeout int, extraAttr []string) {
	argsAggregate := strings.Replace(args, " ", "_", -1)
	expectedPass := status == "pass"
	name := strings.ToLower(suite + "_" + argsAggregate)
	if !expectedPass && bug == "" {
		fmt.Fprintf(os.Stderr, "error: %q is expected to fail but do not have a bug associated with it\n", name)
		os.Exit(1)
	}
	oclCtsParams = append(oclCtsParams,
		paramData{
			Name:         name,
			Executable:   "test_" + suite,
			Args:         strings.Trim(strings.Join([]string{args, additionalArgs}, " "), " "),
			ExpectedPass: expectedPass,
			Buganizer:    bug,
			ExtraAttr:    extraAttr,
			Timeout:      timeout,
		})
}

func TestOpenclCtsParamsAreGenerated(t *testing.T) {
	addTest("allocations", "multiple 1 buffer_non_blocking", "", "pass", "", 1, nil)
	addTest("allocations", "multiple 1 buffer", "", "pass", "", 1, nil)
	addTest("allocations", "multiple 1 image2d_read_non_blocking", "", "pass", "", 1, nil)
	addTest("allocations", "multiple 1 image2d_read", "", "pass", "", 1, nil)
	addTest("allocations", "multiple 1 image2d_write_non_blocking", "", "pass", "", 1, nil)
	addTest("allocations", "multiple 1 image2d_write", "", "pass", "", 1, nil)
	addTest("allocations", "single 1 buffer_non_blocking", "", "pass", "", 1, nil)
	addTest("allocations", "single 1 buffer", "", "pass", "", 1, nil)
	addTest("allocations", "single 1 image2d_read_non_blocking", "", "pass", "", 1, nil)
	addTest("allocations", "single 1 image2d_read", "", "pass", "", 1, nil)
	addTest("allocations", "single 1 image2d_write_non_blocking", "", "pass", "", 1, nil)
	addTest("allocations", "single 1 image2d_write", "", "pass", "", 1, nil)
	addTest("api", "binary_create", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "binary_get", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "bool_type", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "buffer_properties_queries", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "clone_kernel", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_2d_image_from_buffer", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_3d_image_writes", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_depth_images", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_device_and_host_timer", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_device_enqueue", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_il_programs", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_memory_model", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_non_uniform_work_group", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_pipes", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_prog_ctor_dtor", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_progvar", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_read_write_images", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_subgroups", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "consistency_svm", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "context_destructor_callback", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "create_context_from_type", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "create_kernels_in_program", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "enqueue_task", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "execute_kernel_local_sizes", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_buffer_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_command_queue_info_compatibility", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_command_queue_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_context_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_device_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_image1d_array_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_image1d_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_image2d_array_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_image2d_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_image3d_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_kernel_arg_info_compatibility", "", "fail", "b/227134903", 1, nil)
	addTest("api", "get_kernel_arg_info", "", "fail", "b/227134903", 1, nil)
	addTest("api", "get_kernel_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_platform_ids", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_platform_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_program_info_kernel_names", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_sampler_info_compatibility", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "get_sampler_info", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "image_properties_queries", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "kernel_arg_changes", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "kernel_arg_multi_setup_random", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("api", "kernel_global_constant", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "kernel_private_memory_size", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "kernel_required_group_size", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "load_single_kernel", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "load_two_kernels_in_one", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "load_two_kernels_manually", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "load_two_kernels", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "mem_object_destructor_callback", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_data_type_align_size_alignment", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_image_formats", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_address_bits", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_compute_units", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_constant_args", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_constant_buffer_size", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_device_version", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_double_fp_config", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_execution_capabilities", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_image_2d_height", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_image_2d_width", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_image_3d_depth", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_image_3d_height", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_image_3d_width", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_image_array_size", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_image_buffer_size", "", "fail", "b/227133131", 1, nil)
	addTest("api", "min_max_kernel_preferred_work_group_size_multiple", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_language_version", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_local_mem_size", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_mem_alloc_size", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_parameter_size", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_queue_properties", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_read_image_args", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_samplers", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_single_fp_config", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_thread_dimensions", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_work_group_size", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_work_items_sizes", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "min_max_write_image_args", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "native_kernel", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "null_buffer_arg", "", "fail", "b/27134903", 1, nil)
	addTest("api", "pipe_properties_queries", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "platform_extensions", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "queue_flush_on_release", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "queue_hint", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "queue_properties", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "queue_properties_queries", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "release_during_execute", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "release_kernel_order", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "repeated_setup_cleanup", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("api", "retain_mem_object_multiple", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "retain_mem_object_set_kernel_arg", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "retain_mem_object_single", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "retain_queue_multiple", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "retain_queue_single", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "set_kernel_arg_by_index", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "set_kernel_arg_constant", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "set_kernel_arg_struct_array", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "sub_group_dispatch", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("api", "zero_sized_enqueue", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("atomics", "atomic_add_index_bin", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_add_index", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_add", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_and", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_cmpxchg", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_dec", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_inc", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_max", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_min", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_or", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_sub", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_xchg", "", "pass", "", 1, nil)
	addTest("atomics", "atomic_xor", "", "pass", "", 1, nil)
	addTest("basic", "arraycopy", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "arrayimagecopy3d", "", "pass", "", 1, nil)
	addTest("basic", "arrayimagecopy", "", "pass", "", 1, nil)
	addTest("basic", "arrayreadwrite", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "astype", "", "fail", "b/27134903", 1, nil)
	addTest("basic", "async_copy_global_to_local", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "async_copy_local_to_global", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "async_strided_copy_global_to_local", "", "pass", "", 10, nil)
	addTest("basic", "async_strided_copy_local_to_global", "", "pass", "", 10, nil)
	addTest("basic", "barrier", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "bufferreadwriterect", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "constant", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "constant_source", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "createkernelsinprogram", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "enqueued_local_size", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "enqueue_map_buffer", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "enqueue_map_image", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_char", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_double", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_float", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_int", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_long", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_short", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_uchar", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_uint", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_ulong", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "explicit_s2v_ushort", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "float2int", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "fpmath_float2", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "fpmath_float4", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "fpmath_float", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "get_global_offset", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "get_linear_ids", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "global_linear_id", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "global_work_offsets", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "hiloeo", "", "pass", "", 10, nil)
	addTest("basic", "host_numeric_constants", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "hostptr", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "if", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "imagearraycopy3d", "", "pass", "", 1, nil)
	addTest("basic", "imagearraycopy", "", "pass", "", 1, nil)
	addTest("basic", "imagecopy3d", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "imagecopy", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "imagedim_non_pow2", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "imagedim_pow2", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "image_multipass_float_coord", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "image_multipass_integer_coord", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "imagenpot", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "image_param", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "image_r8", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "imagerandomcopy", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "imagereadwrite3d", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "imagereadwrite", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "int2float", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "intmath_int2", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "intmath_int4", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "intmath_int", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "intmath_long2", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "intmath_long4", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "intmath_long", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "kernel_call_kernel_function", "", "fail", "b/	227134178", 1, nil)
	addTest("basic", "kernel_limit_constants", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "kernel_memory_alignment_constant", "", "fail", "b/27134903", 1, nil)
	addTest("basic", "kernel_memory_alignment_global", "", "fail", "b/27134903", 1, nil)
	addTest("basic", "kernel_memory_alignment_local", "", "fail", "b/27134903", 1, nil)
	addTest("basic", "kernel_memory_alignment_private", "", "fail", "b/27134903", 1, nil)
	addTest("basic", "kernel_numeric_constants", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "kernel_preprocessor_macros", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "local_arg_def", "", "fail", "b/227133185", 1, nil)
	addTest("basic", "local_kernel_def", "", "fail", "b/227133185", 1, nil)
	addTest("basic", "local_kernel_scope", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "local_linear_id", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "loop", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "mri_multiple", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "mri_one", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "parameter_types", "", "fail", "b/227134906", 1, nil)
	addTest("basic", "pointer_cast", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "prefetch", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "progvar_func_scope", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "progvar_prog_scope_init", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "progvar_prog_scope_misc", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "progvar_prog_scope_uninit", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "readimage3d_fp32", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "readimage3d_int16", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "readimage3d", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "readimage_fp32", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "readimage_int16", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "readimage", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "rw_image_access_qualifier", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "simple_read_image_pitch", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "simple_write_image_pitch", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "sizeof", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "vector_creation", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "vector_swizzle", "", "pass", "", 5, nil)
	addTest("basic", "vec_type_hint", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "vload_constant", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "vload_global", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "vload_local", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "vload_private", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "vstore_global", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "vstore_local", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "vstore_private", "", "pass", "", 10, []string{"graphics_nightly"})
	addTest("basic", "wg_barrier", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "work_item_functions", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "writeimage_fp32", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "writeimage_int16", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("basic", "writeimage", "", "pass", "", 1, []string{"graphics_nightly"})
	addTest("bruteforce", "acosh", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "acospi", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "acos", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "add", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "asinh", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "asinpi", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "asin", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "assignment", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "atan2pi", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "atan2", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "atanh", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "atanpi", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "atan", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "cbrt", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "ceil", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "copysign", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "cosh", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "cospi", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "cos", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "divide_cr", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "divide", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "exp10", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "exp2", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "expm1", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "exp", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "fabs", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "fdim", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "floor", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "fma", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "fmax", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "fmin", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "fmod", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "fract", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "frexp", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_cos", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "half_divide", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "half_exp10", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_exp2", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_exp", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_log10", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_log2", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_log", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_powr", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_recip", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_rsqrt", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_sin", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "half_sqrt", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "half_tan", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "hypot", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "ilogb", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isequal", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isfinite", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isgreaterequal", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isgreater", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isinf", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "islessequal", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "islessgreater", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isless", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isnan", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isnormal", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isnotequal", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isordered", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "isunordered", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "ldexp", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "lgamma_r", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "lgamma", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "log10", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "log1p", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "log2", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "logb", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "log", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "mad", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "maxmag", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "minmag", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "modf", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "multiply", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "nan", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "nextafter", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "not", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "pown", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "powr", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "pow", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "remainder", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "remquo", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "rint", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "rootn", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "round", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "rsqrt", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "signbit", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "sincos", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "sinh", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "sinpi", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "sin", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "sqrt_cr", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "sqrt", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "subtract", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "tanh", "-w -1", "pass", "", 1, nil)
	addTest("bruteforce", "tanpi", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "tan", "-w -1", "fail", "b/227133190", 1, nil)
	addTest("bruteforce", "trunc", "-w -1", "pass", "", 1, nil)
	addTest("buffers", "array_info_size", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_copy", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_char", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_float", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_int", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_long", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_short", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_struct", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_uchar", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_uint", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_ulong", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_fill_ushort", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_char", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_float", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_int", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_long", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_short", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_struct", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_uchar", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_uint", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_ulong", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_read_ushort", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_char", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_float", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_int", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_long", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_short", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_struct", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_uchar", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_uint", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_ulong", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_map_write_ushort", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_migrate", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_partial_copy", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_array_barrier_char", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_array_barrier_float", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_array_barrier_int", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_array_barrier_long", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_array_barrier_short", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_array_barrier_uchar", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_array_barrier_uint", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_array_barrier_ulong", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_array_barrier_ushort", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_async_char", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_async_float", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_async_int", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_async_long", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_async_short", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_async_uchar", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_async_uint", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_async_ulong", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_async_ushort", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_char", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_float", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_half", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_int", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_long", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_random_size", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_short", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_struct", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_uchar", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_uint", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_ulong", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_read_ushort", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_async_char", "", "pass", "", 10, nil)
	addTest("buffers", "buffer_write_async_float", "", "pass", "", 10, nil)
	addTest("buffers", "buffer_write_async_int", "", "pass", "", 10, nil)
	addTest("buffers", "buffer_write_async_long", "", "pass", "", 10, nil)
	addTest("buffers", "buffer_write_async_short", "", "pass", "", 10, nil)
	addTest("buffers", "buffer_write_async_uchar", "", "pass", "", 10, nil)
	addTest("buffers", "buffer_write_async_uint", "", "pass", "", 10, nil)
	addTest("buffers", "buffer_write_async_ulong", "", "pass", "", 10, nil)
	addTest("buffers", "buffer_write_async_ushort", "", "pass", "", 10, nil)
	addTest("buffers", "buffer_write_char", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_float", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_half", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_int", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_long", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_short", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_struct", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_uchar", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_uint", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_ulong", "", "pass", "", 1, nil)
	addTest("buffers", "buffer_write_ushort", "", "pass", "", 1, nil)
	addTest("buffers", "image_migrate", "", "pass", "", 1, nil)
	addTest("buffers", "mem_alloc_ref_flags", "", "pass", "", 1, nil)
	addTest("buffers", "mem_copy_host_flags", "", "pass", "", 1, nil)
	addTest("buffers", "mem_read_only_flags", "", "pass", "", 1, nil)
	addTest("buffers", "mem_read_write_flags", "", "pass", "", 1, nil)
	addTest("buffers", "mem_write_only_flags", "", "pass", "", 1, nil)
	addTest("buffers", "sub_buffers_overlapping", "", "pass", "", 1, nil)
	addTest("buffers", "sub_buffers_read_write_dual_devices", "", "pass", "", 1, nil)
	addTest("buffers", "sub_buffers_read_write", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "1D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto2D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Darrayto3D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto2Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "2Dto3D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_copy_images", "3Dto2D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "1D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "2D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_fill_images", "3D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "1D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "2D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_get_info", "3D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "1D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "2D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("cl_read_write_images", "3D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("commonfns", "clamp", "", "pass", "", 1, nil)
	addTest("commonfns", "degrees", "", "pass", "", 1, nil)
	addTest("commonfns", "fmaxf", "", "pass", "", 1, nil)
	addTest("commonfns", "fmax", "", "pass", "", 1, nil)
	addTest("commonfns", "fminf", "", "pass", "", 1, nil)
	addTest("commonfns", "fmin", "", "pass", "", 1, nil)
	addTest("commonfns", "maxf", "", "pass", "", 1, nil)
	addTest("commonfns", "max", "", "pass", "", 1, nil)
	addTest("commonfns", "minf", "", "pass", "", 1, nil)
	addTest("commonfns", "min", "", "pass", "", 1, nil)
	addTest("commonfns", "mix", "", "pass", "", 1, nil)
	addTest("commonfns", "radians", "", "pass", "", 1, nil)
	addTest("commonfns", "sign", "", "pass", "", 1, nil)
	addTest("commonfns", "smoothstepf", "", "pass", "", 1, nil)
	addTest("commonfns", "smoothstep", "", "pass", "", 1, nil)
	addTest("commonfns", "stepf", "", "pass", "", 1, nil)
	addTest("commonfns", "step", "", "pass", "", 1, nil)
	addTest("compiler", "async_build", "", "pass", "", 1, nil)
	addTest("compiler", "compile_and_link_status_options_log", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "compiler_defines_for_extensions", "", "pass", "", 1, nil)
	addTest("compiler", "execute_after_embedded_header_link", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "execute_after_included_header_link", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "execute_after_serialize_reload_library", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "execute_after_serialize_reload_object", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "execute_after_simple_compile_and_link_no_device_info", "", "pass", "", 1, nil)
	addTest("compiler", "execute_after_simple_compile_and_link", "", "pass", "", 1, nil)
	addTest("compiler", "execute_after_simple_compile_and_link_with_callbacks", "", "pass", "", 1, nil)
	addTest("compiler", "execute_after_simple_compile_and_link_with_defines", "", "pass", "", 1, nil)
	addTest("compiler", "execute_after_simple_library_with_link", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "execute_after_two_file_link", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "features_macro", "", "pass", "", 1, nil)
	addTest("compiler", "get_program_build_info", "", "pass", "", 1, nil)
	addTest("compiler", "get_program_info", "", "pass", "", 1, nil)
	addTest("compiler", "get_program_source", "", "pass", "", 1, nil)
	addTest("compiler", "image_macro", "", "pass", "", 1, nil)
	addTest("compiler", "large_compile", "", "pass", "", 1, nil)
	addTest("compiler", "load_discreet_length_source", "", "pass", "", 1, nil)
	addTest("compiler", "load_multistring_source", "", "pass", "", 1, nil)
	addTest("compiler", "load_null_terminated_multi_line_source", "", "pass", "", 1, nil)
	addTest("compiler", "load_null_terminated_partial_multi_line_source", "", "pass", "", 1, nil)
	addTest("compiler", "load_null_terminated_source", "", "pass", "", 1, nil)
	addTest("compiler", "load_program_source", "", "pass", "", 1, nil)
	addTest("compiler", "load_two_kernel_source", "", "pass", "", 1, nil)
	addTest("compiler", "multi_file_libraries", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "multiple_embedded_headers", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "multiple_files", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "multiple_files_multiple_libraries", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "multiple_libraries", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "opencl_c_versions", "", "pass", "", 1, nil)
	addTest("compiler", "options_build_macro_existence", "", "pass", "", 1, nil)
	addTest("compiler", "options_build_macro", "", "pass", "", 1, nil)
	addTest("compiler", "options_build_optimizations", "", "pass", "", 1, nil)
	addTest("compiler", "options_denorm_cache", "", "pass", "", 1, nil)
	addTest("compiler", "options_include_directory", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "pragma_unroll", "", "pass", "", 1, nil)
	addTest("compiler", "preprocessor_define_udef", "", "pass", "", 1, nil)
	addTest("compiler", "preprocessor_include", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "preprocessor_line_error", "", "pass", "", 1, nil)
	addTest("compiler", "preprocessor_pragma", "", "pass", "", 1, nil)
	addTest("compiler", "program_binary_type", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "simple_compile_only", "", "pass", "", 1, nil)
	addTest("compiler", "simple_compile_with_callback", "", "pass", "", 1, nil)
	addTest("compiler", "simple_embedded_header_compile", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "simple_embedded_header_link", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "simple_extern_compile_only", "", "pass", "", 1, nil)
	addTest("compiler", "simple_library_only", "", "pass", "", 1, nil)
	addTest("compiler", "simple_library_with_callback", "", "pass", "", 1, nil)
	addTest("compiler", "simple_library_with_link", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "simple_link_only", "", "pass", "", 1, nil)
	addTest("compiler", "simple_link_with_callback", "", "pass", "", 1, nil)
	addTest("compiler", "simple_static_compile_only", "", "pass", "", 1, nil)
	addTest("compiler", "two_file_link", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "two_file_regular_function_access", "", "pass", "", 1, nil)
	addTest("compiler", "two_file_regular_struct_access", "", "pass", "", 1, nil)
	addTest("compiler", "two_file_regular_variable_access", "", "pass", "", 1, nil)
	addTest("compiler", "unload_build_info", "", "pass", "", 1, nil)
	addTest("compiler", "unload_build_threaded", "", "pass", "", 1, nil)
	addTest("compiler", "unload_build_unload_create_kernel", "", "pass", "", 1, nil)
	addTest("compiler", "unload_compile_unload_link", "", "pass", "", 1, nil)
	addTest("compiler", "unload_link_different", "", "fail", "b/227136133", 1, nil)
	addTest("compiler", "unload_program_binaries", "", "pass", "", 1, nil)
	addTest("compiler", "unload_repeated", "", "pass", "", 1, nil)
	addTest("compiler", "unload_valid", "", "pass", "", 1, nil)
	addTest("computeinfo", "computeinfo", "", "pass", "", 1, nil)
	addTest("computeinfo", "conformance_version", "", "pass", "", 1, nil)
	addTest("computeinfo", "device_uuid", "", "pass", "", 1, nil)
	addTest("computeinfo", "extended_versioning", "", "pass", "", 1, nil)
	addTest("contractions", "contractions_double_0", "", "pass", "", 1, nil)
	addTest("contractions", "contractions_double_1", "", "pass", "", 1, nil)
	addTest("contractions", "contractions_double_2", "", "pass", "", 1, nil)
	addTest("contractions", "contractions_double_3", "", "pass", "", 1, nil)
	addTest("contractions", "contractions_double_4", "", "pass", "", 1, nil)
	addTest("contractions", "contractions_double_5", "", "pass", "", 1, nil)
	addTest("contractions", "contractions_double_6", "", "pass", "", 1, nil)
	addTest("contractions", "contractions_double_7", "", "pass", "", 1, nil)
	addTest("contractions", "contractions_float_0", "", "fail", "b/227134187", 1, nil)
	addTest("contractions", "contractions_float_1", "", "fail", "b/227134187", 1, nil)
	addTest("contractions", "contractions_float_2", "", "fail", "b/227134187", 1, nil)
	addTest("contractions", "contractions_float_3", "", "fail", "b/227134187", 1, nil)
	addTest("contractions", "contractions_float_4", "", "fail", "b/227134187", 1, nil)
	addTest("contractions", "contractions_float_5", "", "fail", "b/227134187", 1, nil)
	addTest("contractions", "contractions_float_6", "", "fail", "b/227134187", 1, nil)
	addTest("contractions", "contractions_float_7", "", "fail", "b/227134187", 1, nil)
	addTest("conversions", "char_char", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "char_float", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "char_int", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "char_long", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "char_short", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "char_uchar", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "char_uint", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "char_ulong", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "char_ushort", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "float_char", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "float_float", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "float_int", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "float_long", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "float_short", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "float_uchar", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "float_uint", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "float_ulong", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "float_ushort", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "int_char", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "int_float", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "int_int", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "int_long", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "int_short", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "int_uchar", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "int_uint", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "int_ulong", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "int_ushort", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "long_char", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "long_float", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "long_int", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "long_long", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "long_short", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "long_uchar", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "long_uint", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "long_ulong", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "long_ushort", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "short_char", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "short_float", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "short_int", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "short_long", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "short_short", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "short_uchar", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "short_uint", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "short_ulong", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "short_ushort", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uchar_char", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uchar_float", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uchar_int", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uchar_long", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uchar_short", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uchar_uchar", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uchar_uint", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uchar_ulong", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uchar_ushort", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uint_char", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uint_float", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uint_int", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uint_long", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uint_short", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uint_uchar", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uint_uint", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uint_ulong", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "uint_ushort", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ulong_char", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ulong_float", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ulong_int", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ulong_long", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ulong_short", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ulong_uchar", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ulong_uint", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ulong_ulong", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ulong_ushort", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ushort_char", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ushort_float", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ushort_int", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ushort_long", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ushort_short", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ushort_uchar", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ushort_uint", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ushort_ulong", "-w -1", "pass", "", 1, nil)
	addTest("conversions", "ushort_ushort", "-w -1", "pass", "", 1, nil)
	addTest("events", "callbacks", "", "pass", "", 1, nil)
	addTest("events", "callbacks_simultaneous", "", "pass", "", 1, nil)
	addTest("events", "event_enqueue_barrier_with_event_list", "", "pass", "", 1, nil)
	addTest("events", "event_enqueue_marker", "", "pass", "", 1, nil)
	addTest("events", "event_enqueue_marker_with_event_list", "", "pass", "", 1, nil)
	addTest("events", "event_finish_array", "", "pass", "", 1, nil)
	addTest("events", "event_finish_execute", "", "pass", "", 1, nil)
	addTest("events", "event_flush", "", "pass", "", 1, nil)
	addTest("events", "event_get_execute_status", "", "pass", "", 1, nil)
	addTest("events", "event_get_info", "", "pass", "", 1, nil)
	addTest("events", "event_get_read_array_status", "", "pass", "", 1, nil)
	addTest("events", "event_get_write_array_status", "", "pass", "", 1, nil)
	addTest("events", "event_release_before_done", "", "pass", "", 1, nil)
	addTest("events", "event_wait_for_array", "", "pass", "", 1, nil)
	addTest("events", "event_wait_for_execute", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_enqueue_barrier_single_queue", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_enqueue_marker_multi_queue_multi_device", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_enqueue_marker_multi_queue", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_enqueue_marker_single_queue", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_enqueue_wait_for_events_multi_queue_multi_device", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_enqueue_wait_for_events_multi_queue", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_enqueue_wait_for_events_single_queue", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_waitlist_multi_queue_multi_device", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_waitlist_multi_queue", "", "pass", "", 1, nil)
	addTest("events", "out_of_order_event_waitlist_single_queue", "", "pass", "", 1, nil)
	addTest("events", "userevents_multithreaded", "", "pass", "", 1, nil)
	addTest("events", "userevents", "", "pass", "", 1, nil)
	addTest("events", "waitlists", "", "pass", "", 1, nil)
	addTest("geometrics", "geom_cross", "", "pass", "", 1, nil)
	addTest("geometrics", "geom_distance", "", "pass", "", 1, nil)
	addTest("geometrics", "geom_dot", "", "pass", "", 1, nil)
	addTest("geometrics", "geom_fast_distance", "", "pass", "", 1, nil)
	addTest("geometrics", "geom_fast_length", "", "pass", "", 1, nil)
	addTest("geometrics", "geom_fast_normalize", "", "pass", "", 1, nil)
	addTest("geometrics", "geom_length", "", "pass", "", 1, nil)
	addTest("geometrics", "geom_normalize", "", "pass", "", 1, nil)
	addTest("half", "roundTrip", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vloada_half", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vload_half", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstorea_half_rte", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstorea_half_rtn", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstorea_half_rtp", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstorea_half_rtz", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstorea_half", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstore_half_rte", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstore_half_rtn", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstore_half_rtp", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstore_half_rtz", "-w", "fail", "b/227136713", 1, nil)
	addTest("half", "vstore_half", "-w", "fail", "b/227136713", 1, nil)
	addTest("image_streams", "1Darray CL_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "1Darray CL_HALF_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "1Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("image_streams", "1Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("image_streams", "1Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("image_streams", "1Darray CL_SNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "1Darray CL_SNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "1Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("image_streams", "1Darray CL_UNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "1Darray CL_UNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "1Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("image_streams", "1Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("image_streams", "1Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("image_streams", "1Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("image_streams", "1Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("image_streams", "1D CL_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "1D CL_HALF_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "1D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("image_streams", "1D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("image_streams", "1D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("image_streams", "1D CL_SNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "1D CL_SNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "1D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("image_streams", "1D CL_UNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "1D CL_UNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "1D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("image_streams", "1D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("image_streams", "1D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("image_streams", "1D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("image_streams", "1D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("image_streams", "2Darray CL_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_HALF_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_SIGNED_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_SIGNED_INT32", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_SIGNED_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_SNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_SNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("image_streams", "2Darray CL_UNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_UNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("image_streams", "2Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("image_streams", "2Darray CL_UNSIGNED_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_UNSIGNED_INT32", "", "pass", "", 10, nil)
	addTest("image_streams", "2Darray CL_UNSIGNED_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_HALF_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_SIGNED_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_SIGNED_INT32", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_SIGNED_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_SNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_SNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("image_streams", "2D CL_UNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_UNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("image_streams", "2D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("image_streams", "2D CL_UNSIGNED_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_UNSIGNED_INT32", "", "pass", "", 10, nil)
	addTest("image_streams", "2D CL_UNSIGNED_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_HALF_FLOAT", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_SIGNED_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_SIGNED_INT32", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_SIGNED_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_SNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_SNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("image_streams", "3D CL_UNORM_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_UNORM_INT8", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("image_streams", "3D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("image_streams", "3D CL_UNSIGNED_INT16", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_UNSIGNED_INT32", "", "pass", "", 10, nil)
	addTest("image_streams", "3D CL_UNSIGNED_INT8", "", "pass", "", 10, nil)
	addTest("integer_ops", "char_compare", "", "pass", "", 5, nil)
	addTest("integer_ops", "char_logic", "", "pass", "", 5, nil)
	addTest("integer_ops", "char_math", "", "pass", "", 5, nil)
	addTest("integer_ops", "char_shift", "", "pass", "", 5, nil)
	addTest("integer_ops", "int_compare", "", "pass", "", 5, nil)
	addTest("integer_ops", "integer_abs", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_abs_diff", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_addAssign", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_add_sat", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_andAssign", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_clamp", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_clz", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_ctz", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_divideAssign", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_exclusiveOrAssign", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_hadd", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_mad24", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_mad_hi", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_mad_sat", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_max", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_min", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_moduloAssign", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_mul24", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_mul_hi", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_multiplyAssign", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_orAssign", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_rhadd", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_rotate", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_sub_sat", "", "fail", "b/227136800", 1, nil)
	addTest("integer_ops", "integer_subtractAssign", "", "pass", "", 1, nil)
	addTest("integer_ops", "integer_upsample", "", "pass", "", 1, nil)
	addTest("integer_ops", "int_logic", "", "pass", "", 5, nil)
	addTest("integer_ops", "int_math", "", "pass", "", 5, nil)
	addTest("integer_ops", "int_shift", "", "pass", "", 5, nil)
	addTest("integer_ops", "long_compare", "", "pass", "", 5, nil)
	addTest("integer_ops", "long_logic", "", "pass", "", 5, nil)
	addTest("integer_ops", "long_math", "", "pass", "", 5, nil)
	addTest("integer_ops", "long_shift", "", "pass", "", 5, nil)
	addTest("integer_ops", "popcount", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_char_compare", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_char_logic", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_char_math", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_char_shift", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_int_compare", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_int_logic", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_int_math", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_int_shift", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_long_compare", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_long_logic", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_long_math", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_long_shift", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_short_compare", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_short_logic", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_short_math", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_short_shift", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_uchar_compare", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_uchar_logic", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_uchar_math", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_uchar_shift", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_uint_compare", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_uint_logic", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_uint_math", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_uint_shift", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_ulong_compare", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_ulong_logic", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_ulong_math", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_ulong_shift", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_ushort_compare", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_ushort_logic", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_ushort_math", "", "pass", "", 1, nil)
	addTest("integer_ops", "quick_ushort_shift", "", "pass", "", 1, nil)
	addTest("integer_ops", "short_compare", "", "pass", "", 5, nil)
	addTest("integer_ops", "short_logic", "", "pass", "", 5, nil)
	addTest("integer_ops", "short_math", "", "pass", "", 5, nil)
	addTest("integer_ops", "short_shift", "", "pass", "", 5, nil)
	addTest("integer_ops", "uchar_compare", "", "pass", "", 5, nil)
	addTest("integer_ops", "uchar_logic", "", "pass", "", 5, nil)
	addTest("integer_ops", "uchar_math", "", "pass", "", 5, nil)
	addTest("integer_ops", "uchar_shift", "", "pass", "", 5, nil)
	addTest("integer_ops", "uint_compare", "", "pass", "", 5, nil)
	addTest("integer_ops", "uint_logic", "", "pass", "", 5, nil)
	addTest("integer_ops", "uint_math", "", "pass", "", 5, nil)
	addTest("integer_ops", "uint_shift", "", "pass", "", 5, nil)
	addTest("integer_ops", "ulong_compare", "", "pass", "", 5, nil)
	addTest("integer_ops", "ulong_logic", "", "pass", "", 5, nil)
	addTest("integer_ops", "ulong_math", "", "pass", "", 5, nil)
	addTest("integer_ops", "ulong_shift", "", "pass", "", 5, nil)
	addTest("integer_ops", "unary_ops_decrement", "", "pass", "", 1, nil)
	addTest("integer_ops", "unary_ops_full", "", "pass", "", 1, nil)
	addTest("integer_ops", "unary_ops_increment", "", "pass", "", 1, nil)
	addTest("integer_ops", "ushort_compare", "", "pass", "", 5, nil)
	addTest("integer_ops", "ushort_logic", "", "pass", "", 5, nil)
	addTest("integer_ops", "ushort_math", "", "pass", "", 5, nil)
	addTest("integer_ops", "ushort_shift", "", "pass", "", 5, nil)
	addTest("integer_ops", "vector_scalar", "", "pass", "", 10, nil)
	addTest("kernel_image_methods", "1Darray CL_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_HALF_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_SIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_SIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_SIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_SNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_SNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_UNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_UNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_UNORM_SHORT_565", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_UNSIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_UNSIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1Darray CL_UNSIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_HALF_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_SIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_SIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_SIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_SNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_SNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "1D CL_UNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_UNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "1D CL_UNORM_SHORT_565", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_UNSIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_UNSIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "1D CL_UNSIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_HALF_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_SIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_SIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_SIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_SNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_SNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_UNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_UNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_UNORM_SHORT_565", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_UNSIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_UNSIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2Darray CL_UNSIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_HALF_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_SIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_SIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_SIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_SNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_SNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "2D CL_UNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_UNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "2D CL_UNORM_SHORT_565", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_UNSIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_UNSIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "2D CL_UNSIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_HALF_FLOAT", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_SIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_SIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_SIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_SNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_SNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "3D CL_UNORM_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_UNORM_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("kernel_image_methods", "3D CL_UNORM_SHORT_565", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_UNSIGNED_INT16", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_UNSIGNED_INT32", "", "fail", "b/227136800", 1, nil)
	addTest("kernel_image_methods", "3D CL_UNSIGNED_INT8", "", "fail", "b/227136800", 1, nil)
	addTest("mem_host_flags", "mem_host_no_access_buffer", "", "pass", "", 1, nil)
	addTest("mem_host_flags", "mem_host_no_access_image", "", "pass", "", 1, nil)
	addTest("mem_host_flags", "mem_host_no_access_subbuffer", "", "pass", "", 1, nil)
	addTest("mem_host_flags", "mem_host_read_only_buffer", "", "pass", "", 1, nil)
	addTest("mem_host_flags", "mem_host_read_only_image", "", "fail", "b/227134903", 1, nil)
	addTest("mem_host_flags", "mem_host_read_only_subbuffer", "", "pass", "", 1, nil)
	addTest("mem_host_flags", "mem_host_write_only_buffer", "", "pass", "", 1, nil)
	addTest("mem_host_flags", "mem_host_write_only_image", "", "fail", "b/227134903", 1, nil)
	addTest("mem_host_flags", "mem_host_write_only_subbuffer", "", "pass", "", 1, nil)
	addTest("multiples", "context_four_contexts_same_device", "", "pass", "", 1, nil)
	addTest("multiples", "context_multiple_contexts_same_device", "", "pass", "", 20, nil)
	addTest("multiples", "context_three_contexts_same_device", "", "pass", "", 1, nil)
	addTest("multiples", "context_two_contexts_same_device", "", "pass", "", 1, nil)
	addTest("multiples", "hundred_queues", "", "pass", "", 1, nil)
	addTest("multiples", "max_devices", "", "pass", "", 1, nil)
	addTest("multiples", "two_devices", "", "pass", "", 1, nil)
	addTest("profiling", "copy_array", "", "pass", "", 1, nil)
	addTest("profiling", "copy_array_to_image", "", "pass", "", 1, nil)
	addTest("profiling", "copy_image", "", "pass", "", 1, nil)
	addTest("profiling", "copy_partial_array", "", "pass", "", 1, nil)
	addTest("profiling", "execute", "", "fail", "b/227133185", 1, nil)
	addTest("profiling", "read_array_char", "", "pass", "", 1, nil)
	addTest("profiling", "read_array_float", "", "pass", "", 1, nil)
	addTest("profiling", "read_array_int", "", "pass", "", 1, nil)
	addTest("profiling", "read_array_long", "", "pass", "", 1, nil)
	addTest("profiling", "read_array_short", "", "pass", "", 1, nil)
	addTest("profiling", "read_array_struct", "", "pass", "", 1, nil)
	addTest("profiling", "read_array_uchar", "", "pass", "", 1, nil)
	addTest("profiling", "read_array_uint", "", "pass", "", 1, nil)
	addTest("profiling", "read_array_ulong", "", "pass", "", 1, nil)
	addTest("profiling", "read_array_ushort", "", "pass", "", 1, nil)
	addTest("profiling", "read_image_char", "", "pass", "", 1, nil)
	addTest("profiling", "read_image_float", "", "pass", "", 1, nil)
	addTest("profiling", "read_image_uchar", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_char", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_float", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_int", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_long", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_short", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_struct", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_uchar", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_uint", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_ulong", "", "pass", "", 1, nil)
	addTest("profiling", "write_array_ushort", "", "pass", "", 1, nil)
	addTest("profiling", "write_image_char", "", "pass", "", 1, nil)
	addTest("profiling", "write_image_float", "", "pass", "", 1, nil)
	addTest("profiling", "write_image_uchar", "", "pass", "", 1, nil)
	addTest("relationals", "relational_all", "", "pass", "", 1, nil)
	addTest("relationals", "relational_any", "", "pass", "", 1, nil)
	addTest("relationals", "relational_bitselect", "", "pass", "", 1, nil)
	addTest("relationals", "relational_isequal", "", "pass", "", 1, nil)
	addTest("relationals", "relational_isgreaterequal", "", "pass", "", 1, nil)
	addTest("relationals", "relational_isgreater", "", "pass", "", 1, nil)
	addTest("relationals", "relational_islessequal", "", "pass", "", 1, nil)
	addTest("relationals", "relational_islessgreater", "", "pass", "", 1, nil)
	addTest("relationals", "relational_isless", "", "pass", "", 1, nil)
	addTest("relationals", "relational_isnotequal", "", "pass", "", 1, nil)
	addTest("relationals", "relational_select_signed", "", "pass", "", 1, nil)
	addTest("relationals", "relational_select_unsigned", "", "pass", "", 1, nil)
	addTest("relationals", "shuffle_array_cast", "", "fail", "b/227136136", 1, nil)
	addTest("relationals", "shuffle_built_in_dual_input", "", "pass", "", 10, nil)
	addTest("relationals", "shuffle_built_in", "", "pass", "", 10, nil)
	addTest("relationals", "shuffle_copy", "", "pass", "", 10, nil)
	addTest("relationals", "shuffle_function_call", "", "pass", "", 10, nil)
	addTest("samplerless_reads", "1Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1D CL_FLOAT", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_HALF_FLOAT", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_SIGNED_INT16", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_SIGNED_INT32", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_SIGNED_INT8", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_SNORM_INT16", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_SNORM_INT8", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "1D CL_UNORM_INT16", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_UNORM_INT8", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_UNORM_SHORT_555", "", "pass", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_UNORM_SHORT_565", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_UNSIGNED_INT16", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_UNSIGNED_INT32", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "1D CL_UNSIGNED_INT8", "", "fail", "b/227136137", 1, nil)
	addTest("samplerless_reads", "2Darray CL_FLOAT", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2Darray CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "2D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_FLOAT", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_HALF_FLOAT", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_SIGNED_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_SIGNED_INT32", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_SIGNED_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_SNORM_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_SNORM_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_UNORM_INT_101010", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_UNORM_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_UNORM_INT8", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_UNORM_SHORT_555", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_UNORM_SHORT_565", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_UNSIGNED_INT16", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_UNSIGNED_INT32", "", "pass", "", 1, nil)
	addTest("samplerless_reads", "3D CL_UNSIGNED_INT8", "", "pass", "", 1, nil)
	addTest("select", "select_char_char", "-w", "pass", "", 1, nil)
	addTest("select", "select_char_uchar", "-w", "pass", "", 1, nil)
	addTest("select", "select_double_long", "-w", "pass", "", 1, nil)
	addTest("select", "select_double_ulong", "-w", "pass", "", 1, nil)
	addTest("select", "select_float_int", "-w", "pass", "", 1, nil)
	addTest("select", "select_float_uint", "-w", "pass", "", 1, nil)
	addTest("select", "select_int_int", "-w", "pass", "", 1, nil)
	addTest("select", "select_int_uint", "-w", "pass", "", 1, nil)
	addTest("select", "select_long_long", "-w", "pass", "", 1, nil)
	addTest("select", "select_long_ulong", "-w", "pass", "", 1, nil)
	addTest("select", "select_short_short", "-w", "pass", "", 1, nil)
	addTest("select", "select_short_ushort", "-w", "pass", "", 1, nil)
	addTest("select", "select_uchar_char", "-w", "pass", "", 1, nil)
	addTest("select", "select_uchar_uchar", "-w", "pass", "", 1, nil)
	addTest("select", "select_uint_int", "-w", "pass", "", 1, nil)
	addTest("select", "select_uint_uint", "-w", "pass", "", 1, nil)
	addTest("select", "select_ulong_long", "-w", "pass", "", 1, nil)
	addTest("select", "select_ulong_ulong", "-w", "pass", "", 1, nil)
	addTest("select", "select_ushort_short", "-w", "pass", "", 1, nil)
	addTest("select", "select_ushort_ushort", "-w", "pass", "", 1, nil)
	addTest("thread_dimensions", "full_1d_explicit_local", "", "pass", "", 1, nil)
	addTest("thread_dimensions", "full_1d_implicit_local", "", "pass", "", 1, nil)
	addTest("thread_dimensions", "full_2d_explicit_local", "", "pass", "", 10, nil)
	addTest("thread_dimensions", "full_2d_implicit_local", "", "pass", "", 10, nil)
	addTest("thread_dimensions", "full_3d_explicit_local", "", "pass", "", 20, nil)
	addTest("thread_dimensions", "full_3d_implicit_local", "", "pass", "", 10, nil)
	addTest("thread_dimensions", "quick_1d_explicit_local", "", "pass", "", 1, nil)
	addTest("thread_dimensions", "quick_1d_implicit_local", "", "pass", "", 1, nil)
	addTest("thread_dimensions", "quick_2d_explicit_local", "", "pass", "", 1, nil)
	addTest("thread_dimensions", "quick_2d_implicit_local", "", "pass", "", 1, nil)
	addTest("thread_dimensions", "quick_3d_explicit_local", "", "pass", "", 1, nil)
	addTest("thread_dimensions", "quick_3d_implicit_local", "", "pass", "", 1, nil)
	addTest("vectors", "step_typedef_type", "", "pass", "", 1, nil)
	addTest("vectors", "step_typedef_var", "", "pass", "", 1, nil)
	addTest("vectors", "step_type", "", "pass", "", 1, nil)
	addTest("vectors", "step_var", "", "pass", "", 1, nil)
	addTest("vectors", "vec_align_array", "", "fail", "b/227134903", 1, nil)
	addTest("vectors", "vec_align_packed_struct_arr", "", "fail", "b/227134903", 1, nil)
	addTest("vectors", "vec_align_packed_struct", "", "fail", "b/227134903", 1, nil)
	addTest("vectors", "vec_align_struct_arr", "", "fail", "b/227134903", 1, nil)
	addTest("vectors", "vec_align_struct", "", "fail", "b/227134903", 1, nil)

	code := genparams.Template(t, `{{ range . }}{
        Name: "{{ .Name }}",
        Val: oclctsTest{
            executable: "{{ .Executable }}",
            args: "{{ .Args }}",
            expectedPass: {{ .ExpectedPass }},
            {{ if .Buganizer }}
            buganizer: "{{ .Buganizer }}",
            {{ end }}
        },
        {{ if .ExtraAttr }}
        ExtraAttr: {{ .ExtraAttr | fmt }},
        {{ end }}
        Timeout: {{ .Timeout }} * time.Minute,
    },
    {{ end }}`, oclCtsParams)
	genparams.Ensure(t, "opencl_cts.go", code)
}
