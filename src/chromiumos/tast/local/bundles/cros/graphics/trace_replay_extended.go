// Copyright 2020 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package graphics

import (
	"context"
	"time"

	"chromiumos/tast/local/crostini"
	"chromiumos/tast/local/graphics/trace/comm"
	"chromiumos/tast/local/graphics/trace/guestos"
	"chromiumos/tast/testing"
)

func init() {
	testing.AddTest(&testing.Test{
		Func:         TraceReplayExtended,
		LacrosStatus: testing.LacrosVariantUnknown,
		Desc:         "Repeatedly replay a 3D graphics trace file in Crostini VM for a fixed duration",
		Contacts:     []string{"chromeos-gfx@google.com", "ryanneph@google.com", "ddmail@google.com", "tutankhamen@google.com", "ihf@google.com"},
		SoftwareDeps: []string{"chrome", "crosvm_gpu", "vm_host"},
		Attr:         []string{},
		Vars:         []string{"keepState", "ui.gaiaPoolDefault", "PowerTest.resultDir", "PowerTest.signalRunningFile", "PowerTest.signalCheckpointFile"},
		Params: []testing.Param{
			// Parameters generated by trace_replay_extended_test.go. DO NOT EDIT.
			{
				Name:              "glxgears_1minute",
				ExtraData:         []string{crostini.GetContainerMetadataArtifact("buster", false), crostini.GetContainerRootfsArtifact("buster", false)},
				ExtraSoftwareDeps: []string{"dlc"},
				Pre:               crostini.StartedByDlcBuster(),
				Timeout:           45 * time.Minute,
				Val: comm.TestGroupConfig{
					Labels: []string{"short"},
					Repository: comm.RepositoryInfo{
						RootURL: "gs://chromiumos-test-assets-public/tast/cros/graphics/traces/repo",
						Version: 1,
					},
					ExtendedDuration: 1 * 60,
				},
			},
		},
	})
}

// TraceReplayExtended replays a graphics trace repeatedly inside a crostini container.
func TraceReplayExtended(ctx context.Context, s *testing.State) {
	guestos.TraceReplayCrostiniSetup(ctx, s, 0)
}
