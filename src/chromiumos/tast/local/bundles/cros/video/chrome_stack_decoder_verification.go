// Copyright 2020 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package video

import (
	"context"

	"chromiumos/tast/local/media/decoding"
	"chromiumos/tast/testing"
	"chromiumos/tast/testing/hwdep"
)

// chromeStackDecoderVerificationTestParam is used to describe the options used
// to run each test.
type chromeStackDecoderVerificationTestParam struct {
	videoFiles    []string               // The paths of video files to be tested.
	validatorType decoding.ValidatorType // The frame validation type of video_decode_accelerator_tests.
	// If set, verify that MD5SUM verification is not successful.
	mustFail bool
}

func init() {
	testing.AddTest(&testing.Test{
		Func:         ChromeStackDecoderVerification,
		LacrosStatus: testing.LacrosVariantUnneeded,
		Desc:         "Verifies video decoding using Chrome's stack (via the video_decode_accelerator_tests binary) and either MD5 or SSIM criteria",
		Contacts: []string{
			"mcasas@chromium.org",
			"hiroh@chromium.org", // Underlying binary author.
			"chromeos-gfx-video@google.com",
		},
		Fixture:      "graphicsNoChrome",
		SoftwareDeps: []string{"chrome"},
		Params: []testing.Param{
			// Parameters generated by chrome_stack_decoder_verification_test.go. DO NOT EDIT.
			{
				Name:              "av1_files_from_bugs",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_av1_1080_30"},
				ExtraData:         []string{"test_vectors/av1/files_from_bugs/b_235138734_test-25fps-one-to-four-tiles.av1.ivf", "test_vectors/av1/files_from_bugs/b_235138734_test-25fps-one-to-four-tiles.av1.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/av1/files_from_bugs/b_235138734_test-25fps-one-to-four-tiles.av1.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "av1_common",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_av1_1080_30"},
				ExtraData:         []string{"test_vectors/av1/8-bit/00000527.ivf", "test_vectors/av1/8-bit/00000527.ivf.json", "test_vectors/av1/8-bit/00000535.ivf", "test_vectors/av1/8-bit/00000535.ivf.json", "test_vectors/av1/8-bit/00000548.ivf", "test_vectors/av1/8-bit/00000548.ivf.json", "test_vectors/av1/8-bit/48_delayed.ivf", "test_vectors/av1/8-bit/48_delayed.ivf.json", "test_vectors/av1/8-bit/av1-1-b8-02-allintra.ivf", "test_vectors/av1/8-bit/av1-1-b8-02-allintra.ivf.json", "test_vectors/av1/8-bit/av1-1-b8-03-sizeup.ivf", "test_vectors/av1/8-bit/av1-1-b8-03-sizeup.ivf.json", "test_vectors/av1/8-bit/frames_refs_short_signaling.ivf", "test_vectors/av1/8-bit/frames_refs_short_signaling.ivf.json", "test_vectors/av1/8-bit/non_uniform_tiling.ivf", "test_vectors/av1/8-bit/non_uniform_tiling.ivf.json", "test_vectors/av1/8-bit/test-25fps-192x288-only-tile-cols-is-power-of-2.ivf", "test_vectors/av1/8-bit/test-25fps-192x288-only-tile-cols-is-power-of-2.ivf.json", "test_vectors/av1/8-bit/test-25fps-192x288-only-tile-rows-is-power-of-2.ivf", "test_vectors/av1/8-bit/test-25fps-192x288-only-tile-rows-is-power-of-2.ivf.json", "test_vectors/av1/8-bit/test-25fps-192x288-tile-rows-3-tile-cols-3.ivf", "test_vectors/av1/8-bit/test-25fps-192x288-tile-rows-3-tile-cols-3.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/av1/8-bit/00000527.ivf", "test_vectors/av1/8-bit/00000535.ivf", "test_vectors/av1/8-bit/00000548.ivf", "test_vectors/av1/8-bit/48_delayed.ivf", "test_vectors/av1/8-bit/av1-1-b8-02-allintra.ivf", "test_vectors/av1/8-bit/av1-1-b8-03-sizeup.ivf", "test_vectors/av1/8-bit/frames_refs_short_signaling.ivf", "test_vectors/av1/8-bit/non_uniform_tiling.ivf", "test_vectors/av1/8-bit/test-25fps-192x288-only-tile-cols-is-power-of-2.ivf", "test_vectors/av1/8-bit/test-25fps-192x288-only-tile-rows-is-power-of-2.ivf", "test_vectors/av1/8-bit/test-25fps-192x288-tile-rows-3-tile-cols-3.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name: "av1_film_grain",
				// Different decoders may use different film grain synthesis methods while producing a visually correct output (AV1 spec 7.2). Thus we validate the decoding of film-grain streams using SSIM.
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_av1_1080_30"},
				ExtraData:         []string{"test_vectors/av1/8-bit/av1-1-b8-23-film_grain-50.ivf", "test_vectors/av1/8-bit/av1-1-b8-23-film_grain-50.ivf.json", "test_vectors/av1/8-bit/ccvb_film_grain.ivf", "test_vectors/av1/8-bit/ccvb_film_grain.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/av1/8-bit/av1-1-b8-23-film_grain-50.ivf", "test_vectors/av1/8-bit/ccvb_film_grain.ivf"},
					validatorType: 1,
					mustFail:      false,
				},
			},
			{
				Name:              "av1_10bit_common",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_av1_1080_30_10bpp"},
				ExtraData:         []string{"test_vectors/av1/10-bit/00000671.ivf", "test_vectors/av1/10-bit/00000671.ivf.json", "test_vectors/av1/10-bit/00000672.ivf", "test_vectors/av1/10-bit/00000672.ivf.json", "test_vectors/av1/10-bit/00000673.ivf", "test_vectors/av1/10-bit/00000673.ivf.json", "test_vectors/av1/10-bit/00000674.ivf", "test_vectors/av1/10-bit/00000674.ivf.json", "test_vectors/av1/10-bit/00000675.ivf", "test_vectors/av1/10-bit/00000675.ivf.json", "test_vectors/av1/10-bit/00000716.ivf", "test_vectors/av1/10-bit/00000716.ivf.json", "test_vectors/av1/10-bit/00000717.ivf", "test_vectors/av1/10-bit/00000717.ivf.json", "test_vectors/av1/10-bit/00000718.ivf", "test_vectors/av1/10-bit/00000718.ivf.json", "test_vectors/av1/10-bit/00000719.ivf", "test_vectors/av1/10-bit/00000719.ivf.json", "test_vectors/av1/10-bit/00000720.ivf", "test_vectors/av1/10-bit/00000720.ivf.json", "test_vectors/av1/10-bit/00000761.ivf", "test_vectors/av1/10-bit/00000761.ivf.json", "test_vectors/av1/10-bit/00000762.ivf", "test_vectors/av1/10-bit/00000762.ivf.json", "test_vectors/av1/10-bit/00000763.ivf", "test_vectors/av1/10-bit/00000763.ivf.json", "test_vectors/av1/10-bit/00000764.ivf", "test_vectors/av1/10-bit/00000764.ivf.json", "test_vectors/av1/10-bit/00000765.ivf", "test_vectors/av1/10-bit/00000765.ivf.json", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-00.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-00.ivf.json", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-10.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-10.ivf.json", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-20.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-20.ivf.json", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-30.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-30.ivf.json", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-40.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-40.ivf.json", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-50.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-50.ivf.json", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-60.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-60.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/av1/10-bit/00000671.ivf", "test_vectors/av1/10-bit/00000672.ivf", "test_vectors/av1/10-bit/00000673.ivf", "test_vectors/av1/10-bit/00000674.ivf", "test_vectors/av1/10-bit/00000675.ivf", "test_vectors/av1/10-bit/00000716.ivf", "test_vectors/av1/10-bit/00000717.ivf", "test_vectors/av1/10-bit/00000718.ivf", "test_vectors/av1/10-bit/00000719.ivf", "test_vectors/av1/10-bit/00000720.ivf", "test_vectors/av1/10-bit/00000761.ivf", "test_vectors/av1/10-bit/00000762.ivf", "test_vectors/av1/10-bit/00000763.ivf", "test_vectors/av1/10-bit/00000764.ivf", "test_vectors/av1/10-bit/00000765.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-00.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-10.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-20.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-30.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-40.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-50.ivf", "test_vectors/av1/10-bit/av1-1-b10-00-quantizer-60.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name: "av1_10bit_film_grain",
				// Different decoders may use different film grain synthesis methods while producing a visually correct output (AV1 spec 7.2). Thus, for volteer, don't validate the decoding of film-grain streams using MD5. Instead, validate them using SSIM (see the av1_10bit_ssim test).
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_av1_1080_30_10bpp"},
				ExtraData:         []string{"test_vectors/av1/10-bit/av1-1-b10-23-film_grain-50.ivf", "test_vectors/av1/10-bit/av1-1-b10-23-film_grain-50.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/av1/10-bit/av1-1-b10-23-film_grain-50.ivf"},
					validatorType: 1,
					mustFail:      false,
				},
			},
			{
				Name:              "h264_invalid_bitstreams",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_h264_1080_30", "proprietary_codecs"},
				ExtraData:         []string{"test_vectors/h264/files_from_bugs/b_234651916_big_buck_bunny_artifacts_rk3399.h264", "test_vectors/h264/files_from_bugs/b_234651916_big_buck_bunny_artifacts_rk3399.h264.json", "test_vectors/h264/files_from_bugs/b_184041918_Webex_out_of_order_h264_frames.h264", "test_vectors/h264/files_from_bugs/b_184041918_Webex_out_of_order_h264_frames.h264.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/h264/files_from_bugs/b_234651916_big_buck_bunny_artifacts_rk3399.h264", "test_vectors/h264/files_from_bugs/b_184041918_Webex_out_of_order_h264_frames.h264"},
					validatorType: 0,
					mustFail:      true,
				},
			},
			{
				Name:              "h264_baseline",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_h264_1080_30", "proprietary_codecs"},
				ExtraData:         []string{"test_vectors/h264/baseline/AUD_MW_E.h264", "test_vectors/h264/baseline/AUD_MW_E.h264.json", "test_vectors/h264/baseline/BA1_Sony_D.h264", "test_vectors/h264/baseline/BA1_Sony_D.h264.json", "test_vectors/h264/baseline/BA2_Sony_F.h264", "test_vectors/h264/baseline/BA2_Sony_F.h264.json", "test_vectors/h264/baseline/BAMQ1_JVC_C.h264", "test_vectors/h264/baseline/BAMQ1_JVC_C.h264.json", "test_vectors/h264/baseline/BAMQ2_JVC_C.h264", "test_vectors/h264/baseline/BAMQ2_JVC_C.h264.json", "test_vectors/h264/baseline/BANM_MW_D.h264", "test_vectors/h264/baseline/BANM_MW_D.h264.json", "test_vectors/h264/baseline/BA_MW_D.h264", "test_vectors/h264/baseline/BA_MW_D.h264.json", "test_vectors/h264/baseline/CI_MW_D.h264", "test_vectors/h264/baseline/CI_MW_D.h264.json", "test_vectors/h264/baseline/CVSE2_Sony_B.h264", "test_vectors/h264/baseline/CVSE2_Sony_B.h264.json", "test_vectors/h264/baseline/HCBP1_HHI_A.h264", "test_vectors/h264/baseline/HCBP1_HHI_A.h264.json", "test_vectors/h264/baseline/HCBP2_HHI_A.h264", "test_vectors/h264/baseline/HCBP2_HHI_A.h264.json", "test_vectors/h264/baseline/LS_SVA_D.h264", "test_vectors/h264/baseline/LS_SVA_D.h264.json", "test_vectors/h264/baseline/MIDR_MW_D.h264", "test_vectors/h264/baseline/MIDR_MW_D.h264.json", "test_vectors/h264/baseline/MPS_MW_A.h264", "test_vectors/h264/baseline/MPS_MW_A.h264.json", "test_vectors/h264/baseline/MR1_MW_A.h264", "test_vectors/h264/baseline/MR1_MW_A.h264.json", "test_vectors/h264/baseline/MR2_MW_A.h264", "test_vectors/h264/baseline/MR2_MW_A.h264.json", "test_vectors/h264/baseline/NL1_Sony_D.h264", "test_vectors/h264/baseline/NL1_Sony_D.h264.json", "test_vectors/h264/baseline/NL2_Sony_H.h264", "test_vectors/h264/baseline/NL2_Sony_H.h264.json", "test_vectors/h264/baseline/NLMQ1_JVC_C.h264", "test_vectors/h264/baseline/NLMQ1_JVC_C.h264.json", "test_vectors/h264/baseline/NLMQ2_JVC_C.h264", "test_vectors/h264/baseline/NLMQ2_JVC_C.h264.json", "test_vectors/h264/baseline/NRF_MW_E.h264", "test_vectors/h264/baseline/NRF_MW_E.h264.json", "test_vectors/h264/baseline/SVA_BA1_B.h264", "test_vectors/h264/baseline/SVA_BA1_B.h264.json", "test_vectors/h264/baseline/SVA_BA2_D.h264", "test_vectors/h264/baseline/SVA_BA2_D.h264.json", "test_vectors/h264/baseline/SVA_NL1_B.h264", "test_vectors/h264/baseline/SVA_NL1_B.h264.json", "test_vectors/h264/baseline/SVA_NL2_E.h264", "test_vectors/h264/baseline/SVA_NL2_E.h264.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/h264/baseline/AUD_MW_E.h264", "test_vectors/h264/baseline/BA1_Sony_D.h264", "test_vectors/h264/baseline/BA2_Sony_F.h264", "test_vectors/h264/baseline/BAMQ1_JVC_C.h264", "test_vectors/h264/baseline/BAMQ2_JVC_C.h264", "test_vectors/h264/baseline/BANM_MW_D.h264", "test_vectors/h264/baseline/BA_MW_D.h264", "test_vectors/h264/baseline/CI_MW_D.h264", "test_vectors/h264/baseline/CVSE2_Sony_B.h264", "test_vectors/h264/baseline/HCBP1_HHI_A.h264", "test_vectors/h264/baseline/HCBP2_HHI_A.h264", "test_vectors/h264/baseline/LS_SVA_D.h264", "test_vectors/h264/baseline/MIDR_MW_D.h264", "test_vectors/h264/baseline/MPS_MW_A.h264", "test_vectors/h264/baseline/MR1_MW_A.h264", "test_vectors/h264/baseline/MR2_MW_A.h264", "test_vectors/h264/baseline/NL1_Sony_D.h264", "test_vectors/h264/baseline/NL2_Sony_H.h264", "test_vectors/h264/baseline/NLMQ1_JVC_C.h264", "test_vectors/h264/baseline/NLMQ2_JVC_C.h264", "test_vectors/h264/baseline/NRF_MW_E.h264", "test_vectors/h264/baseline/SVA_BA1_B.h264", "test_vectors/h264/baseline/SVA_BA2_D.h264", "test_vectors/h264/baseline/SVA_NL1_B.h264", "test_vectors/h264/baseline/SVA_NL2_E.h264"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "h264_main",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_h264_1080_30", "proprietary_codecs"},
				ExtraData:         []string{"test_vectors/h264/main/CABA1_SVA_B.h264", "test_vectors/h264/main/CABA1_SVA_B.h264.json", "test_vectors/h264/main/CABA1_Sony_D.h264", "test_vectors/h264/main/CABA1_Sony_D.h264.json", "test_vectors/h264/main/CABA2_SVA_B.h264", "test_vectors/h264/main/CABA2_SVA_B.h264.json", "test_vectors/h264/main/CABA2_Sony_E.h264", "test_vectors/h264/main/CABA2_Sony_E.h264.json", "test_vectors/h264/main/CABA3_SVA_B.h264", "test_vectors/h264/main/CABA3_SVA_B.h264.json", "test_vectors/h264/main/CABA3_Sony_C.h264", "test_vectors/h264/main/CABA3_Sony_C.h264.json", "test_vectors/h264/main/CABA3_TOSHIBA_E.h264", "test_vectors/h264/main/CABA3_TOSHIBA_E.h264.json", "test_vectors/h264/main/CACQP3_Sony_D.h264", "test_vectors/h264/main/CACQP3_Sony_D.h264.json", "test_vectors/h264/main/CANL1_SVA_B.h264", "test_vectors/h264/main/CANL1_SVA_B.h264.json", "test_vectors/h264/main/CANL1_Sony_E.h264", "test_vectors/h264/main/CANL1_Sony_E.h264.json", "test_vectors/h264/main/CANL1_TOSHIBA_G.h264", "test_vectors/h264/main/CANL1_TOSHIBA_G.h264.json", "test_vectors/h264/main/CANL2_SVA_B.h264", "test_vectors/h264/main/CANL2_SVA_B.h264.json", "test_vectors/h264/main/CANL2_Sony_E.h264", "test_vectors/h264/main/CANL2_Sony_E.h264.json", "test_vectors/h264/main/CANL3_SVA_B.h264", "test_vectors/h264/main/CANL3_SVA_B.h264.json", "test_vectors/h264/main/CANL3_Sony_C.h264", "test_vectors/h264/main/CANL3_Sony_C.h264.json", "test_vectors/h264/main/CANL4_SVA_B.h264", "test_vectors/h264/main/CANL4_SVA_B.h264.json", "test_vectors/h264/main/CAPCM1_Sand_E.h264", "test_vectors/h264/main/CAPCM1_Sand_E.h264.json", "test_vectors/h264/main/CAPCMNL1_Sand_E.h264", "test_vectors/h264/main/CAPCMNL1_Sand_E.h264.json", "test_vectors/h264/main/CAPM3_Sony_D.h264", "test_vectors/h264/main/CAPM3_Sony_D.h264.json", "test_vectors/h264/main/CAQP1_Sony_B.h264", "test_vectors/h264/main/CAQP1_Sony_B.h264.json", "test_vectors/h264/main/CAWP1_TOSHIBA_E.h264", "test_vectors/h264/main/CAWP1_TOSHIBA_E.h264.json", "test_vectors/h264/main/CAWP5_TOSHIBA_E.h264", "test_vectors/h264/main/CAWP5_TOSHIBA_E.h264.json", "test_vectors/h264/main/CVBS3_Sony_C.h264", "test_vectors/h264/main/CVBS3_Sony_C.h264.json", "test_vectors/h264/main/CVPCMNL1_SVA_C.h264", "test_vectors/h264/main/CVPCMNL1_SVA_C.h264.json", "test_vectors/h264/main/CVPCMNL2_SVA_C.h264", "test_vectors/h264/main/CVPCMNL2_SVA_C.h264.json", "test_vectors/h264/main/CVSE3_Sony_H.h264", "test_vectors/h264/main/CVSE3_Sony_H.h264.json", "test_vectors/h264/main/CVSEFDFT3_Sony_E.h264", "test_vectors/h264/main/CVSEFDFT3_Sony_E.h264.json", "test_vectors/h264/main/CVWP1_TOSHIBA_E.h264", "test_vectors/h264/main/CVWP1_TOSHIBA_E.h264.json", "test_vectors/h264/main/CVWP2_TOSHIBA_E.h264", "test_vectors/h264/main/CVWP2_TOSHIBA_E.h264.json", "test_vectors/h264/main/CVWP3_TOSHIBA_E.h264", "test_vectors/h264/main/CVWP3_TOSHIBA_E.h264.json", "test_vectors/h264/main/CVWP5_TOSHIBA_E.h264", "test_vectors/h264/main/CVWP5_TOSHIBA_E.h264.json", "test_vectors/h264/main/NL3_SVA_E.h264", "test_vectors/h264/main/NL3_SVA_E.h264.json", "test_vectors/h264/main/camp_mot_frm0_full.h264", "test_vectors/h264/main/camp_mot_frm0_full.h264.json", "test_vectors/h264/main/cvmp_mot_frm0_full_B.h264", "test_vectors/h264/main/cvmp_mot_frm0_full_B.h264.json", "test_vectors/h264/main/src19td.IBP.h264", "test_vectors/h264/main/src19td.IBP.h264.json", "test_vectors/h264/main/HCMP1_HHI_A.h264", "test_vectors/h264/main/HCMP1_HHI_A.h264.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/h264/main/CABA1_SVA_B.h264", "test_vectors/h264/main/CABA1_Sony_D.h264", "test_vectors/h264/main/CABA2_SVA_B.h264", "test_vectors/h264/main/CABA2_Sony_E.h264", "test_vectors/h264/main/CABA3_SVA_B.h264", "test_vectors/h264/main/CABA3_Sony_C.h264", "test_vectors/h264/main/CABA3_TOSHIBA_E.h264", "test_vectors/h264/main/CACQP3_Sony_D.h264", "test_vectors/h264/main/CANL1_SVA_B.h264", "test_vectors/h264/main/CANL1_Sony_E.h264", "test_vectors/h264/main/CANL1_TOSHIBA_G.h264", "test_vectors/h264/main/CANL2_SVA_B.h264", "test_vectors/h264/main/CANL2_Sony_E.h264", "test_vectors/h264/main/CANL3_SVA_B.h264", "test_vectors/h264/main/CANL3_Sony_C.h264", "test_vectors/h264/main/CANL4_SVA_B.h264", "test_vectors/h264/main/CAPCM1_Sand_E.h264", "test_vectors/h264/main/CAPCMNL1_Sand_E.h264", "test_vectors/h264/main/CAPM3_Sony_D.h264", "test_vectors/h264/main/CAQP1_Sony_B.h264", "test_vectors/h264/main/CAWP1_TOSHIBA_E.h264", "test_vectors/h264/main/CAWP5_TOSHIBA_E.h264", "test_vectors/h264/main/CVBS3_Sony_C.h264", "test_vectors/h264/main/CVPCMNL1_SVA_C.h264", "test_vectors/h264/main/CVPCMNL2_SVA_C.h264", "test_vectors/h264/main/CVSE3_Sony_H.h264", "test_vectors/h264/main/CVSEFDFT3_Sony_E.h264", "test_vectors/h264/main/CVWP1_TOSHIBA_E.h264", "test_vectors/h264/main/CVWP2_TOSHIBA_E.h264", "test_vectors/h264/main/CVWP3_TOSHIBA_E.h264", "test_vectors/h264/main/CVWP5_TOSHIBA_E.h264", "test_vectors/h264/main/NL3_SVA_E.h264", "test_vectors/h264/main/camp_mot_frm0_full.h264", "test_vectors/h264/main/cvmp_mot_frm0_full_B.h264", "test_vectors/h264/main/src19td.IBP.h264", "test_vectors/h264/main/HCMP1_HHI_A.h264"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "h264_first_mb_in_slice",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraHardwareDeps: hwdep.D(hwdep.SupportsV4L2StatefulVideoDecoding()),
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_h264_1080_30", "proprietary_codecs"},
				ExtraData:         []string{"test_vectors/h264/baseline/BA1_FT_C.h264", "test_vectors/h264/baseline/BA1_FT_C.h264.json", "test_vectors/h264/baseline/BASQP1_Sony_C.h264", "test_vectors/h264/baseline/BASQP1_Sony_C.h264.json", "test_vectors/h264/baseline/CI1_FT_B.h264", "test_vectors/h264/baseline/CI1_FT_B.h264.json", "test_vectors/h264/baseline/SVA_Base_B.h264", "test_vectors/h264/baseline/SVA_Base_B.h264.json", "test_vectors/h264/baseline/SVA_CL1_E.h264", "test_vectors/h264/baseline/SVA_CL1_E.h264.json", "test_vectors/h264/baseline/SVA_FM1_E.h264", "test_vectors/h264/baseline/SVA_FM1_E.h264.json", "test_vectors/h264/baseline/MR1_BT_A.h264", "test_vectors/h264/baseline/MR1_BT_A.h264.json", "test_vectors/h264/main/CABACI3_Sony_B.h264", "test_vectors/h264/main/CABACI3_Sony_B.h264.json", "test_vectors/h264/main/CABAST3_Sony_E.h264", "test_vectors/h264/main/CABAST3_Sony_E.h264.json", "test_vectors/h264/main/CABASTBR3_Sony_B.h264", "test_vectors/h264/main/CABASTBR3_Sony_B.h264.json", "test_vectors/h264/main/SL1_SVA_B.h264", "test_vectors/h264/main/SL1_SVA_B.h264.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/h264/baseline/BA1_FT_C.h264", "test_vectors/h264/baseline/BASQP1_Sony_C.h264", "test_vectors/h264/baseline/CI1_FT_B.h264", "test_vectors/h264/baseline/SVA_Base_B.h264", "test_vectors/h264/baseline/SVA_CL1_E.h264", "test_vectors/h264/baseline/SVA_FM1_E.h264", "test_vectors/h264/baseline/MR1_BT_A.h264", "test_vectors/h264/main/CABACI3_Sony_B.h264", "test_vectors/h264/main/CABAST3_Sony_E.h264", "test_vectors/h264/main/CABASTBR3_Sony_B.h264", "test_vectors/h264/main/SL1_SVA_B.h264"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp8_comprehensive",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp8_1080_30"},
				ExtraData:         []string{"test_vectors/vp8/vp80-00-comprehensive-001.ivf", "test_vectors/vp8/vp80-00-comprehensive-001.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-002.ivf", "test_vectors/vp8/vp80-00-comprehensive-002.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-003.ivf", "test_vectors/vp8/vp80-00-comprehensive-003.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-004.ivf", "test_vectors/vp8/vp80-00-comprehensive-004.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-005.ivf", "test_vectors/vp8/vp80-00-comprehensive-005.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-007.ivf", "test_vectors/vp8/vp80-00-comprehensive-007.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-008.ivf", "test_vectors/vp8/vp80-00-comprehensive-008.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-009.ivf", "test_vectors/vp8/vp80-00-comprehensive-009.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-010.ivf", "test_vectors/vp8/vp80-00-comprehensive-010.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-011.ivf", "test_vectors/vp8/vp80-00-comprehensive-011.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-012.ivf", "test_vectors/vp8/vp80-00-comprehensive-012.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-013.ivf", "test_vectors/vp8/vp80-00-comprehensive-013.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-015.ivf", "test_vectors/vp8/vp80-00-comprehensive-015.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-016.ivf", "test_vectors/vp8/vp80-00-comprehensive-016.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-017.ivf", "test_vectors/vp8/vp80-00-comprehensive-017.ivf.json", "test_vectors/vp8/vp80-00-comprehensive-018.ivf", "test_vectors/vp8/vp80-00-comprehensive-018.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp8/vp80-00-comprehensive-001.ivf", "test_vectors/vp8/vp80-00-comprehensive-002.ivf", "test_vectors/vp8/vp80-00-comprehensive-003.ivf", "test_vectors/vp8/vp80-00-comprehensive-004.ivf", "test_vectors/vp8/vp80-00-comprehensive-005.ivf", "test_vectors/vp8/vp80-00-comprehensive-007.ivf", "test_vectors/vp8/vp80-00-comprehensive-008.ivf", "test_vectors/vp8/vp80-00-comprehensive-009.ivf", "test_vectors/vp8/vp80-00-comprehensive-010.ivf", "test_vectors/vp8/vp80-00-comprehensive-011.ivf", "test_vectors/vp8/vp80-00-comprehensive-012.ivf", "test_vectors/vp8/vp80-00-comprehensive-013.ivf", "test_vectors/vp8/vp80-00-comprehensive-015.ivf", "test_vectors/vp8/vp80-00-comprehensive-016.ivf", "test_vectors/vp8/vp80-00-comprehensive-017.ivf", "test_vectors/vp8/vp80-00-comprehensive-018.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp8_inter",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp8_1080_30"},
				ExtraData:         []string{"test_vectors/vp8/inter/vp80-02-inter-1402.ivf", "test_vectors/vp8/inter/vp80-02-inter-1402.ivf.json", "test_vectors/vp8/inter/vp80-02-inter-1424.ivf", "test_vectors/vp8/inter/vp80-02-inter-1424.ivf.json", "test_vectors/vp8/inter/vp80-02-inter-1418.ivf", "test_vectors/vp8/inter/vp80-02-inter-1418.ivf.json", "test_vectors/vp8/inter/vp80-02-inter-1412.ivf", "test_vectors/vp8/inter/vp80-02-inter-1412.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1442.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1442.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1436.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1436.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1432.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1432.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1427.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1427.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1426.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1426.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1435.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1435.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1403.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1403.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1425.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1425.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1441.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1441.ivf.json", "test_vectors/vp8/inter/vp80-03-segmentation-1437.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1437.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1434.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1434.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1430.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1430.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1443.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1443.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1439.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1439.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1428.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1428.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1438.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1438.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1431.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1431.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1440.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1440.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1433.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1433.ivf.json", "test_vectors/vp8/inter/vp80-05-sharpness-1429.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1429.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp8/inter/vp80-02-inter-1402.ivf", "test_vectors/vp8/inter/vp80-02-inter-1424.ivf", "test_vectors/vp8/inter/vp80-02-inter-1418.ivf", "test_vectors/vp8/inter/vp80-02-inter-1412.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1442.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1436.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1432.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1427.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1426.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1435.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1403.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1425.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1441.ivf", "test_vectors/vp8/inter/vp80-03-segmentation-1437.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1434.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1430.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1443.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1439.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1428.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1438.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1431.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1440.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1433.ivf", "test_vectors/vp8/inter/vp80-05-sharpness-1429.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp8_inter_multi_coeff",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp8_1080_30"},
				ExtraData:         []string{"test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1409.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1409.ivf.json", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1408.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1408.ivf.json", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1410.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1410.ivf.json", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1413.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1413.ivf.json", "test_vectors/vp8/inter_multi_coeff/vp80-04-partitions-1405.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-04-partitions-1405.ivf.json", "test_vectors/vp8/inter_multi_coeff/vp80-04-partitions-1406.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-04-partitions-1406.ivf.json", "test_vectors/vp8/inter_multi_coeff/vp80-04-partitions-1404.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-04-partitions-1404.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1409.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1408.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1410.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-03-segmentation-1413.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-04-partitions-1405.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-04-partitions-1406.ivf", "test_vectors/vp8/inter_multi_coeff/vp80-04-partitions-1404.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp8_inter_segment",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp8_1080_30"},
				ExtraData:         []string{"test_vectors/vp8/inter_segment/vp80-03-segmentation-1407.ivf", "test_vectors/vp8/inter_segment/vp80-03-segmentation-1407.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp8/inter_segment/vp80-03-segmentation-1407.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp8_intra",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp8_1080_30"},
				ExtraData:         []string{"test_vectors/vp8/intra/vp80-01-intra-1416.ivf", "test_vectors/vp8/intra/vp80-01-intra-1416.ivf.json", "test_vectors/vp8/intra/vp80-01-intra-1417.ivf", "test_vectors/vp8/intra/vp80-01-intra-1417.ivf.json", "test_vectors/vp8/intra/vp80-01-intra-1411.ivf", "test_vectors/vp8/intra/vp80-01-intra-1411.ivf.json", "test_vectors/vp8/intra/vp80-01-intra-1400.ivf", "test_vectors/vp8/intra/vp80-01-intra-1400.ivf.json", "test_vectors/vp8/intra/vp80-03-segmentation-1401.ivf", "test_vectors/vp8/intra/vp80-03-segmentation-1401.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp8/intra/vp80-01-intra-1416.ivf", "test_vectors/vp8/intra/vp80-01-intra-1417.ivf", "test_vectors/vp8/intra/vp80-01-intra-1411.ivf", "test_vectors/vp8/intra/vp80-01-intra-1400.ivf", "test_vectors/vp8/intra/vp80-03-segmentation-1401.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp8_intra_multi_coeff",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp8_1080_30"},
				ExtraData:         []string{"test_vectors/vp8/intra_multi_coeff/vp80-03-segmentation-1414.ivf", "test_vectors/vp8/intra_multi_coeff/vp80-03-segmentation-1414.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp8/intra_multi_coeff/vp80-03-segmentation-1414.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp8_intra_segment",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp8_1080_30"},
				ExtraData:         []string{"test_vectors/vp8/intra_segment/vp80-03-segmentation-1415.ivf", "test_vectors/vp8/intra_segment/vp80-03-segmentation-1415.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp8/intra_segment/vp80-03-segmentation-1415.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp9_files_from_bugs",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp9_1080_30"},
				ExtraData:         []string{"test_vectors/vp9/files_from_bugs/b_177839888__rk3399_vp9_artifacts_with_video_decoder_japanews24.ivf", "test_vectors/vp9/files_from_bugs/b_177839888__rk3399_vp9_artifacts_with_video_decoder_japanews24.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp9/files_from_bugs/b_177839888__rk3399_vp9_artifacts_with_video_decoder_japanews24.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp9_0_group1_buf",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp9_1080_30"},
				ExtraData:         []string{"test_vectors/vp9/Profile_0_8bit/buf/crowd_run_256X144_fr15_bd8_8buf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/buf/crowd_run_256X144_fr15_bd8_8buf_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/buf/grass_1_256X144_fr15_bd8_8buf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/buf/grass_1_256X144_fr15_bd8_8buf_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/buf/street1_1_256X144_fr15_bd8_8buf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/buf/street1_1_256X144_fr15_bd8_8buf_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/buf/crowd_run_384X192_fr30_bd8_8buf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/buf/crowd_run_384X192_fr30_bd8_8buf_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/buf/grass_1_384X192_fr30_bd8_8buf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/buf/grass_1_384X192_fr30_bd8_8buf_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/buf/street1_1_384X192_fr30_bd8_8buf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/buf/street1_1_384X192_fr30_bd8_8buf_l11.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp9/Profile_0_8bit/buf/crowd_run_256X144_fr15_bd8_8buf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/buf/grass_1_256X144_fr15_bd8_8buf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/buf/street1_1_256X144_fr15_bd8_8buf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/buf/crowd_run_384X192_fr30_bd8_8buf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/buf/grass_1_384X192_fr30_bd8_8buf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/buf/street1_1_384X192_fr30_bd8_8buf_l11.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp9_0_group1_frm_resize",
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp9_1080_30"},
				ExtraData:         []string{"test_vectors/vp9/Profile_0_8bit/frm_resize/crowd_run_256X144_fr15_bd8_frm_resize_l1.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/crowd_run_256X144_fr15_bd8_frm_resize_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/frm_resize/grass_1_256X144_fr15_bd8_frm_resize_l1.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/grass_1_256X144_fr15_bd8_frm_resize_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/frm_resize/street1_1_256X144_fr15_bd8_frm_resize_l1.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/street1_1_256X144_fr15_bd8_frm_resize_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/frm_resize/crowd_run_384X192_fr30_bd8_frm_resize_l11.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/crowd_run_384X192_fr30_bd8_frm_resize_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/frm_resize/grass_1_384X192_fr30_bd8_frm_resize_l11.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/grass_1_384X192_fr30_bd8_frm_resize_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/frm_resize/street1_1_384X192_fr30_bd8_frm_resize_l11.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/street1_1_384X192_fr30_bd8_frm_resize_l11.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp9/Profile_0_8bit/frm_resize/crowd_run_256X144_fr15_bd8_frm_resize_l1.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/grass_1_256X144_fr15_bd8_frm_resize_l1.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/street1_1_256X144_fr15_bd8_frm_resize_l1.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/crowd_run_384X192_fr30_bd8_frm_resize_l11.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/grass_1_384X192_fr30_bd8_frm_resize_l11.ivf", "test_vectors/vp9/Profile_0_8bit/frm_resize/street1_1_384X192_fr30_bd8_frm_resize_l11.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp9_0_group1_gf_dist",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp9_1080_30"},
				ExtraData:         []string{"test_vectors/vp9/Profile_0_8bit/gf_dist/crowd_run_256X144_fr15_bd8_gf_dist_4_l1.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/crowd_run_256X144_fr15_bd8_gf_dist_4_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/gf_dist/grass_1_256X144_fr15_bd8_gf_dist_4_l1.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/grass_1_256X144_fr15_bd8_gf_dist_4_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/gf_dist/street1_1_256X144_fr15_bd8_gf_dist_4_l1.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/street1_1_256X144_fr15_bd8_gf_dist_4_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/gf_dist/crowd_run_384X192_fr30_bd8_gf_dist_4_l11.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/crowd_run_384X192_fr30_bd8_gf_dist_4_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/gf_dist/grass_1_384X192_fr30_bd8_gf_dist_4_l11.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/grass_1_384X192_fr30_bd8_gf_dist_4_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/gf_dist/street1_1_384X192_fr30_bd8_gf_dist_4_l11.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/street1_1_384X192_fr30_bd8_gf_dist_4_l11.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp9/Profile_0_8bit/gf_dist/crowd_run_256X144_fr15_bd8_gf_dist_4_l1.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/grass_1_256X144_fr15_bd8_gf_dist_4_l1.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/street1_1_256X144_fr15_bd8_gf_dist_4_l1.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/crowd_run_384X192_fr30_bd8_gf_dist_4_l11.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/grass_1_384X192_fr30_bd8_gf_dist_4_l11.ivf", "test_vectors/vp9/Profile_0_8bit/gf_dist/street1_1_384X192_fr30_bd8_gf_dist_4_l11.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp9_0_group1_odd_size",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp9_1080_30"},
				ExtraData:         []string{"test_vectors/vp9/Profile_0_8bit/odd_size/crowd_run_248X144_fr15_bd8_odd_size_l1.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/crowd_run_248X144_fr15_bd8_odd_size_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/odd_size/grass_1_248X144_fr15_bd8_odd_size_l1.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/grass_1_248X144_fr15_bd8_odd_size_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/odd_size/street1_1_248X144_fr15_bd8_odd_size_l1.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/street1_1_248X144_fr15_bd8_odd_size_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/odd_size/crowd_run_376X184_fr30_bd8_odd_size_l11.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/crowd_run_376X184_fr30_bd8_odd_size_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/odd_size/grass_1_376X184_fr30_bd8_odd_size_l11.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/grass_1_376X184_fr30_bd8_odd_size_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/odd_size/street1_1_376X184_fr30_bd8_odd_size_l11.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/street1_1_376X184_fr30_bd8_odd_size_l11.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp9/Profile_0_8bit/odd_size/crowd_run_248X144_fr15_bd8_odd_size_l1.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/grass_1_248X144_fr15_bd8_odd_size_l1.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/street1_1_248X144_fr15_bd8_odd_size_l1.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/crowd_run_376X184_fr30_bd8_odd_size_l11.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/grass_1_376X184_fr30_bd8_odd_size_l11.ivf", "test_vectors/vp9/Profile_0_8bit/odd_size/street1_1_376X184_fr30_bd8_odd_size_l11.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp9_0_group1_sub8x8",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp9_1080_30"},
				ExtraData:         []string{"test_vectors/vp9/Profile_0_8bit/sub8X8/crowd_run_256X144_fr15_bd8_sub8X8_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/crowd_run_256X144_fr15_bd8_sub8X8_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8X8/grass_1_256X144_fr15_bd8_sub8X8_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/grass_1_256X144_fr15_bd8_sub8X8_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8X8/street1_1_256X144_fr15_bd8_sub8X8_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/street1_1_256X144_fr15_bd8_sub8X8_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8X8/crowd_run_384X192_fr30_bd8_sub8X8_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/crowd_run_384X192_fr30_bd8_sub8X8_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8X8/grass_1_384X192_fr30_bd8_sub8X8_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/grass_1_384X192_fr30_bd8_sub8X8_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8X8/street1_1_384X192_fr30_bd8_sub8X8_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/street1_1_384X192_fr30_bd8_sub8X8_l11.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp9/Profile_0_8bit/sub8X8/crowd_run_256X144_fr15_bd8_sub8X8_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/grass_1_256X144_fr15_bd8_sub8X8_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/street1_1_256X144_fr15_bd8_sub8X8_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/crowd_run_384X192_fr30_bd8_sub8X8_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/grass_1_384X192_fr30_bd8_sub8X8_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8X8/street1_1_384X192_fr30_bd8_sub8X8_l11.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp9_0_group1_sub8x8_sf",
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp9_1080_30"},
				ExtraData:         []string{"test_vectors/vp9/Profile_0_8bit/sub8x8_sf/crowd_run_256X144_fr15_bd8_sub8x8_sf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/crowd_run_256X144_fr15_bd8_sub8x8_sf_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/grass_1_256X144_fr15_bd8_sub8x8_sf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/grass_1_256X144_fr15_bd8_sub8x8_sf_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/street1_1_256X144_fr15_bd8_sub8x8_sf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/street1_1_256X144_fr15_bd8_sub8x8_sf_l1.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/crowd_run_384X192_fr30_bd8_sub8x8_sf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/crowd_run_384X192_fr30_bd8_sub8x8_sf_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/grass_1_384X192_fr30_bd8_sub8x8_sf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/grass_1_384X192_fr30_bd8_sub8x8_sf_l11.ivf.json", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/street1_1_384X192_fr30_bd8_sub8x8_sf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/street1_1_384X192_fr30_bd8_sub8x8_sf_l11.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp9/Profile_0_8bit/sub8x8_sf/crowd_run_256X144_fr15_bd8_sub8x8_sf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/grass_1_256X144_fr15_bd8_sub8x8_sf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/street1_1_256X144_fr15_bd8_sub8x8_sf_l1.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/crowd_run_384X192_fr30_bd8_sub8x8_sf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/grass_1_384X192_fr30_bd8_sub8x8_sf_l11.ivf", "test_vectors/vp9/Profile_0_8bit/sub8x8_sf/street1_1_384X192_fr30_bd8_sub8x8_sf_l11.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "vp9_0_svc",
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_vp9_1080_30"},
				ExtraData:         []string{"test_vectors/vp9/kSVC/ksvc_3sl_3tl_key100.ivf", "test_vectors/vp9/kSVC/ksvc_3sl_3tl_key100.ivf.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/vp9/kSVC/ksvc_3sl_3tl_key100.ivf"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "h264_files_from_bugs_149068426",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_h264_1080_30", "proprietary_codecs"},
				ExtraData:         []string{"test_vectors/h264/files_from_bugs/b_149068426_invalid_video_layout_mtk_8183_with_direct_videodecoder.h264", "test_vectors/h264/files_from_bugs/b_149068426_invalid_video_layout_mtk_8183_with_direct_videodecoder.h264.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/h264/files_from_bugs/b_149068426_invalid_video_layout_mtk_8183_with_direct_videodecoder.h264"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "h264_files_from_bugs_172838252",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_h264_1080_30", "proprietary_codecs"},
				ExtraData:         []string{"test_vectors/h264/files_from_bugs/b_172838252_pixelated_video_on_rk3399.h264", "test_vectors/h264/files_from_bugs/b_172838252_pixelated_video_on_rk3399.h264.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/h264/files_from_bugs/b_172838252_pixelated_video_on_rk3399.h264"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "h264_files_from_bugs_174733646",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_h264_1080_30", "proprietary_codecs"},
				ExtraData:         []string{"test_vectors/h264/files_from_bugs/b_174733646_video_with_out_of_order_frames_mtk_8173.h264", "test_vectors/h264/files_from_bugs/b_174733646_video_with_out_of_order_frames_mtk_8173.h264.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/h264/files_from_bugs/b_174733646_video_with_out_of_order_frames_mtk_8173.h264"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "h264_files_from_bugs_210895987",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_h264_1080_30", "proprietary_codecs"},
				ExtraData:         []string{"test_vectors/h264/files_from_bugs/b_210895987_still-colors-360p.h264", "test_vectors/h264/files_from_bugs/b_210895987_still-colors-360p.h264.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/h264/files_from_bugs/b_210895987_still-colors-360p.h264"},
					validatorType: 0,
					mustFail:      false,
				},
			},
			{
				Name:              "h264_4k_files_from_bugs_22704778",
				ExtraAttr:         []string{"group:graphics", "graphics_video", "graphics_perbuild", "graphics_video_chromestackdecoding"},
				ExtraSoftwareDeps: []string{"autotest-capability:hw_dec_h264_2160_30", "proprietary_codecs"},
				ExtraData:         []string{"test_vectors/h264/files_from_bugs/b_227047778_mtk_8195_artifacts.h264", "test_vectors/h264/files_from_bugs/b_227047778_mtk_8195_artifacts.h264.json"},
				Val: chromeStackDecoderVerificationTestParam{
					videoFiles:    []string{"test_vectors/h264/files_from_bugs/b_227047778_mtk_8195_artifacts.h264"},
					validatorType: 0,
					mustFail:      false,
				},
			},
		},
	})
}

func ChromeStackDecoderVerification(ctx context.Context, s *testing.State) {
	var tv []string
	param := s.Param().(chromeStackDecoderVerificationTestParam)
	for _, file := range param.videoFiles {
		tv = append(tv, s.DataPath(file))
	}

	if err := decoding.RunAccelVideoTestWithTestVectors(ctx, s.OutDir(), tv, param.validatorType, param.mustFail); err != nil {
		s.Fatal("test failed: ", err)
	}
}
