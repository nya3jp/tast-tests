// Copyright 2021 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package ui

import (
	"context"
	"time"

	"chromiumos/tast/local/bundles/cros/ui/cuj"
	"chromiumos/tast/local/bundles/cros/ui/videocuj"
	"chromiumos/tast/testing"
	"chromiumos/tast/testing/hwdep"
)

func init() {
	testing.AddTest(&testing.Test{
		Func:         VideoCUJ2,
		Desc:         "Measures the smoothess of switch between full screen YouTube video and another browser window",
		Contacts:     []string{"xiyuan@chromium.org", "tim.chang@cienet.com"},
		Attr:         []string{"group:crosbolt", "crosbolt_nightly"},
		SoftwareDeps: []string{"chrome", "arc"},
		HardwareDeps: hwdep.D(hwdep.InternalDisplay()),
		Fixture:      "loggedInToCUJUserKeepState",
		Vars: []string{
			"ui.netflix_username",
			"ui.netflix_password",
			"perf_level",
		},
		Params: []testing.Param{
			// Parameters generated by video_cuj2_test.go. DO NOT EDIT.
			{
				Name:    "basic_clamshell_youtube_web",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "basic",
					ScreenMode:      "clamshell",
					ApplicationName: "youtube",
					ApplicationType: "web",
				},
			}, {
				Name:    "basic_tablet_youtube_web",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "basic",
					ScreenMode:      "tablet",
					ApplicationName: "youtube",
					ApplicationType: "web",
				},
			}, {
				Name:    "plus_clamshell_youtube_web",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "plus",
					ScreenMode:      "clamshell",
					ApplicationName: "youtube",
					ApplicationType: "web",
				},
			}, {
				Name:    "plus_tablet_youtube_web",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "plus",
					ScreenMode:      "tablet",
					ApplicationName: "youtube",
					ApplicationType: "web",
				},
			}, {
				Name:    "basic_clamshell_netflix_web",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "basic",
					ScreenMode:      "clamshell",
					ApplicationName: "netflix",
					ApplicationType: "web",
				},
			}, {
				Name:    "basic_tablet_netflix_web",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "basic",
					ScreenMode:      "tablet",
					ApplicationName: "netflix",
					ApplicationType: "web",
				},
			}, {
				Name:    "plus_clamshell_netflix_web",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "plus",
					ScreenMode:      "clamshell",
					ApplicationName: "netflix",
					ApplicationType: "web",
				},
			}, {
				Name:    "plus_tablet_netflix_web",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "plus",
					ScreenMode:      "tablet",
					ApplicationName: "netflix",
					ApplicationType: "web",
				},
			}, {
				Name:    "basic_clamshell_youtube_app",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "basic",
					ScreenMode:      "clamshell",
					ApplicationName: "youtube",
					ApplicationType: "app",
				},
			}, {
				Name:    "basic_tablet_youtube_app",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "basic",
					ScreenMode:      "tablet",
					ApplicationName: "youtube",
					ApplicationType: "app",
				},
			}, {
				Name:    "plus_clamshell_youtube_app",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "plus",
					ScreenMode:      "clamshell",
					ApplicationName: "youtube",
					ApplicationType: "app",
				},
			}, {
				Name:    "plus_tablet_youtube_app",
				Timeout: 10 * time.Minute,
				Val: cuj.TestParameters{
					Tier:            "plus",
					ScreenMode:      "tablet",
					ApplicationName: "youtube",
					ApplicationType: "app",
				},
			},
		},
	})
}

// VideoCUJ2 ...
func VideoCUJ2(ctx context.Context, s *testing.State) {
	param := s.Param().(cuj.TestParameters)

	tabletMode := param.ScreenMode == cuj.Tablet
	app := videocuj.YoutubeWeb
	if param.ApplicationName == "youtube" && param.ApplicationType == cuj.APP {
		app = videocuj.YoutubeApp
	} else if param.ApplicationName == "netflix" && param.ApplicationType == cuj.Web {
		app = videocuj.NetflixWeb
	}

	cr := s.FixtValue().(cuj.FixtureData).Chrome
	a := s.FixtValue().(cuj.FixtureData).ARC
	videocuj.Run(ctx, s, cr, a, app, tabletMode)
}
