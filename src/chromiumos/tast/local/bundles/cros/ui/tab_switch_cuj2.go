// Copyright 2021 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package ui

import (
	"context"
	"time"

	"chromiumos/tast/local/bundles/cros/ui/cuj"
	"chromiumos/tast/local/bundles/cros/ui/tabswitchcuj"
	"chromiumos/tast/local/chrome"
	"chromiumos/tast/local/wpr"
	"chromiumos/tast/testing"
)

func init() {
	testing.AddTest(&testing.Test{
		Func:         TabSwitchCUJ2,
		Desc:         "Measures the performance of tab-switching CUJ, scrolling content with trackpad",
		Contacts:     []string{"mukai@chromium.org", "tclaiborne@chromium.org", "chromeos-wmp@google.com", "xliu@cienet.com", "hc.tsai@cienet.com", "alfredyu@cienet.com"},
		Attr:         []string{"group:crosbolt", "crosbolt_nightly"},
		SoftwareDeps: []string{"chrome"},
		Pre:          wpr.RemoteReplayMode(),
		Vars: []string{
			"mute",
			"ui.cuj_username",
			"ui.cuj_password",
			"wpr_http_addr",
			"wpr_https_addr",
		},
		Params: []testing.Param{
			// Parameters generated by tab_switch_cuj2_test.go. DO NOT EDIT.
			{
				Name:    "basic_clamshell",
				Timeout: 30 * time.Minute,
				Val: cuj.TestParameters{
					Category: cuj.Category{
						Tier:       cuj.Basic,
						ScreenMode: cuj.Clamshell,
					},
				},
			}, {
				Name:    "basic_tablet",
				Timeout: 30 * time.Minute,
				Val: cuj.TestParameters{
					Category: cuj.Category{
						Tier:       cuj.Basic,
						ScreenMode: cuj.Tablet,
					},
				},
			}, {
				Name:    "plus_clamshell",
				Timeout: 35 * time.Minute,
				Val: cuj.TestParameters{
					Category: cuj.Category{
						Tier:       cuj.Plus,
						ScreenMode: cuj.Clamshell,
					},
				},
			}, {
				Name:    "plus_tablet",
				Timeout: 35 * time.Minute,
				Val: cuj.TestParameters{
					Category: cuj.Category{
						Tier:       cuj.Plus,
						ScreenMode: cuj.Tablet,
					},
				},
			}, {
				Name:    "premium_clamshell",
				Timeout: 40 * time.Minute,
				Val: cuj.TestParameters{
					Category: cuj.Category{
						Tier:       cuj.Premium,
						ScreenMode: cuj.Clamshell,
					},
				},
			}, {
				Name:    "premium_tablet",
				Timeout: 40 * time.Minute,
				Val: cuj.TestParameters{
					Category: cuj.Category{
						Tier:       cuj.Premium,
						ScreenMode: cuj.Tablet,
					},
				},
			},
		},
	})
}

// TabSwitchCUJ2 measures the performance of tab-switching CUJ, scrolling content with trackpad
// It use package tabswitchcuj to do testing, except the setup of precondition is different.
// In order to ensure wpr service won't affect DUT's performance, this test case use a remote wpr service,
// all traffic will be redirected to remote wpr service,
// thus, remote side will determinate wpr is going to record or replay, not by this test case
//
// Steps to update the test (by using a remote wpr service):
//  1. make changes (package tabswitchcuj.Run2)
//  2. execute test case: TabSwitchCUJRecorder2 (see `ui/tab_switch_cuj_recorder2.go`)
//  3. choose which record file to use, and run wpr in replay mode on remote server
//  4. run this test
func TabSwitchCUJ2(ctx context.Context, s *testing.State) {
	param := s.Param().(cuj.TestParameters)
	tabletMode := param.Category.ScreenMode == cuj.Tablet
	var level tabswitchcuj.Level
	switch param.Category.Tier {
	case cuj.Basic:
		level = tabswitchcuj.Basic
	case cuj.Plus:
		level = tabswitchcuj.Plus
	case cuj.Premium:
		level = tabswitchcuj.Premium
	}

	cr, ok := s.PreValue().(*chrome.Chrome)
	if !ok {
		s.Fatal("Failed to connect to Chrome")
	}

	tabswitchcuj.Run2(ctx, s, cr, level, tabletMode)
}
