// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Messages containing DOM data captured from the browser.
// It includes the structure of the HTML document and Navigator data.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: dom.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data captured from HTMLDocument DOM object.
type HtmlDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The value of document.URL property.
	Url *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	// The value of document.title property.
	Title *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	// The value of document.documentElement property.
	DocumentElement *HtmlElement `protobuf:"bytes,3,opt,name=document_element,json=documentElement" json:"document_element,omitempty"`
}

func (x *HtmlDocument) Reset() {
	*x = HtmlDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtmlDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtmlDocument) ProtoMessage() {}

func (x *HtmlDocument) ProtoReflect() protoreflect.Message {
	mi := &file_dom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtmlDocument.ProtoReflect.Descriptor instead.
func (*HtmlDocument) Descriptor() ([]byte, []int) {
	return file_dom_proto_rawDescGZIP(), []int{0}
}

func (x *HtmlDocument) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *HtmlDocument) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *HtmlDocument) GetDocumentElement() *HtmlElement {
	if x != nil {
		return x.DocumentElement
	}
	return nil
}

// Data captured from HTMLElement DOM object.
type HtmlElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The value of element.tagName property.
	TagName *string `protobuf:"bytes,1,req,name=tag_name,json=tagName" json:"tag_name,omitempty"`
	// The value of element.id property.
	Id *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// The value of element.className property.
	ClassName *string `protobuf:"bytes,3,opt,name=class_name,json=className" json:"class_name,omitempty"`
	// A list of child elements.
	ChildElement []*HtmlElement `protobuf:"bytes,4,rep,name=child_element,json=childElement" json:"child_element,omitempty"`
	// The value of frame.contentDocument property for FRAME and IFRAME elements.
	FrameContentDocument *HtmlDocument `protobuf:"bytes,5,opt,name=frame_content_document,json=frameContentDocument" json:"frame_content_document,omitempty"`
}

func (x *HtmlElement) Reset() {
	*x = HtmlElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtmlElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtmlElement) ProtoMessage() {}

func (x *HtmlElement) ProtoReflect() protoreflect.Message {
	mi := &file_dom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtmlElement.ProtoReflect.Descriptor instead.
func (*HtmlElement) Descriptor() ([]byte, []int) {
	return file_dom_proto_rawDescGZIP(), []int{1}
}

func (x *HtmlElement) GetTagName() string {
	if x != nil && x.TagName != nil {
		return *x.TagName
	}
	return ""
}

func (x *HtmlElement) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *HtmlElement) GetClassName() string {
	if x != nil && x.ClassName != nil {
		return *x.ClassName
	}
	return ""
}

func (x *HtmlElement) GetChildElement() []*HtmlElement {
	if x != nil {
		return x.ChildElement
	}
	return nil
}

func (x *HtmlElement) GetFrameContentDocument() *HtmlDocument {
	if x != nil {
		return x.FrameContentDocument
	}
	return nil
}

// Data captured from DOM Navigator object.
type Navigator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The value of 'navigator.appCodeName' property.
	AppCodeName *string `protobuf:"bytes,1,opt,name=app_code_name,json=appCodeName" json:"app_code_name,omitempty"`
	// The value of 'navigator.appName' property.
	AppName *string `protobuf:"bytes,2,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	// The value of 'navigator.appVersion' property.
	AppVersion *string `protobuf:"bytes,3,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	// The value of 'navigator.appMinorVersion' property.
	AppMinorVersion *string `protobuf:"bytes,4,opt,name=app_minor_version,json=appMinorVersion" json:"app_minor_version,omitempty"`
	// The value of 'navigator.cookieEnabled' property.
	CookieEnabled *bool `protobuf:"varint,5,opt,name=cookie_enabled,json=cookieEnabled" json:"cookie_enabled,omitempty"`
	// The value of 'navigator.cpuClass' property.
	CpuClass *string `protobuf:"bytes,6,opt,name=cpu_class,json=cpuClass" json:"cpu_class,omitempty"`
	// The value of 'navigator.onLine' property.
	OnLine *bool `protobuf:"varint,7,opt,name=on_line,json=onLine" json:"on_line,omitempty"`
	// The value of 'navigator.platform' property.
	Platform *string `protobuf:"bytes,8,opt,name=platform" json:"platform,omitempty"`
	// The value of 'navigator.browserLanguage' property.
	BrowserLanguage *string `protobuf:"bytes,9,opt,name=browser_language,json=browserLanguage" json:"browser_language,omitempty"`
	// The value of 'navigator.systemLanguage' property.
	SystemLanguage *string `protobuf:"bytes,10,opt,name=system_language,json=systemLanguage" json:"system_language,omitempty"`
	// The value of 'navigator.userAgent' property.
	UserAgent *string `protobuf:"bytes,11,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// The return value of 'navigator.javaEnabled()' method.
	JavaEnabled *bool `protobuf:"varint,12,opt,name=java_enabled,json=javaEnabled" json:"java_enabled,omitempty"`
	// The return value of 'navigator.taintEnabled()' method.
	TaintEnabled *bool `protobuf:"varint,13,opt,name=taint_enabled,json=taintEnabled" json:"taint_enabled,omitempty"`
	// Plugin names specified by 'navigator.plugins' property.
	PluginName []string `protobuf:"bytes,14,rep,name=plugin_name,json=pluginName" json:"plugin_name,omitempty"`
}

func (x *Navigator) Reset() {
	*x = Navigator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Navigator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Navigator) ProtoMessage() {}

func (x *Navigator) ProtoReflect() protoreflect.Message {
	mi := &file_dom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Navigator.ProtoReflect.Descriptor instead.
func (*Navigator) Descriptor() ([]byte, []int) {
	return file_dom_proto_rawDescGZIP(), []int{2}
}

func (x *Navigator) GetAppCodeName() string {
	if x != nil && x.AppCodeName != nil {
		return *x.AppCodeName
	}
	return ""
}

func (x *Navigator) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

func (x *Navigator) GetAppVersion() string {
	if x != nil && x.AppVersion != nil {
		return *x.AppVersion
	}
	return ""
}

func (x *Navigator) GetAppMinorVersion() string {
	if x != nil && x.AppMinorVersion != nil {
		return *x.AppMinorVersion
	}
	return ""
}

func (x *Navigator) GetCookieEnabled() bool {
	if x != nil && x.CookieEnabled != nil {
		return *x.CookieEnabled
	}
	return false
}

func (x *Navigator) GetCpuClass() string {
	if x != nil && x.CpuClass != nil {
		return *x.CpuClass
	}
	return ""
}

func (x *Navigator) GetOnLine() bool {
	if x != nil && x.OnLine != nil {
		return *x.OnLine
	}
	return false
}

func (x *Navigator) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *Navigator) GetBrowserLanguage() string {
	if x != nil && x.BrowserLanguage != nil {
		return *x.BrowserLanguage
	}
	return ""
}

func (x *Navigator) GetSystemLanguage() string {
	if x != nil && x.SystemLanguage != nil {
		return *x.SystemLanguage
	}
	return ""
}

func (x *Navigator) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *Navigator) GetJavaEnabled() bool {
	if x != nil && x.JavaEnabled != nil {
		return *x.JavaEnabled
	}
	return false
}

func (x *Navigator) GetTaintEnabled() bool {
	if x != nil && x.TaintEnabled != nil {
		return *x.TaintEnabled
	}
	return false
}

func (x *Navigator) GetPluginName() []string {
	if x != nil {
		return x.PluginName
	}
	return nil
}

// A path in the HTML document between two elements, which are in the
// ancestor-descendant relationship.
type HtmlPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ordered list of zero-based indices.
	// Empty path selects root element.
	// Non-negative index N selects (N+1)-th child.
	// Index -1 selects root element from frame content document.
	Index []int32 `protobuf:"varint,1,rep,name=index" json:"index,omitempty"`
}

func (x *HtmlPath) Reset() {
	*x = HtmlPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtmlPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtmlPath) ProtoMessage() {}

func (x *HtmlPath) ProtoReflect() protoreflect.Message {
	mi := &file_dom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtmlPath.ProtoReflect.Descriptor instead.
func (*HtmlPath) Descriptor() ([]byte, []int) {
	return file_dom_proto_rawDescGZIP(), []int{3}
}

func (x *HtmlPath) GetIndex() []int32 {
	if x != nil {
		return x.Index
	}
	return nil
}

var File_dom_proto protoreflect.FileDescriptor

var file_dom_proto_rawDesc = []byte{
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x7c, 0x0a, 0x0c, 0x48, 0x74, 0x6d,
	0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x44, 0x0a, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x48, 0x74, 0x6d, 0x6c, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x0b, 0x48, 0x74, 0x6d, 0x6c,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x48, 0x74, 0x6d, 0x6c, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x50, 0x0a, 0x16, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x2e, 0x48, 0x74, 0x6d, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0xec, 0x03, 0x0a, 0x09, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x61, 0x76,
	0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x6a, 0x61, 0x76, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x61, 0x69, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x48, 0x74, 0x6d, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x42, 0x35, 0x48, 0x03, 0x5a, 0x31, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69,
	0x75, 0x6d, 0x6f, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x74, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2f,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_dom_proto_rawDescOnce sync.Once
	file_dom_proto_rawDescData = file_dom_proto_rawDesc
)

func file_dom_proto_rawDescGZIP() []byte {
	file_dom_proto_rawDescOnce.Do(func() {
		file_dom_proto_rawDescData = protoimpl.X.CompressGZIP(file_dom_proto_rawDescData)
	})
	return file_dom_proto_rawDescData
}

var file_dom_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_dom_proto_goTypes = []interface{}{
	(*HtmlDocument)(nil), // 0: userfeedback.HtmlDocument
	(*HtmlElement)(nil),  // 1: userfeedback.HtmlElement
	(*Navigator)(nil),    // 2: userfeedback.Navigator
	(*HtmlPath)(nil),     // 3: userfeedback.HtmlPath
}
var file_dom_proto_depIdxs = []int32{
	1, // 0: userfeedback.HtmlDocument.document_element:type_name -> userfeedback.HtmlElement
	1, // 1: userfeedback.HtmlElement.child_element:type_name -> userfeedback.HtmlElement
	0, // 2: userfeedback.HtmlElement.frame_content_document:type_name -> userfeedback.HtmlDocument
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_dom_proto_init() }
func file_dom_proto_init() {
	if File_dom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtmlDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtmlElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Navigator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtmlPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dom_proto_goTypes,
		DependencyIndexes: file_dom_proto_depIdxs,
		MessageInfos:      file_dom_proto_msgTypes,
	}.Build()
	File_dom_proto = out.File
	file_dom_proto_rawDesc = nil
	file_dom_proto_goTypes = nil
	file_dom_proto_depIdxs = nil
}
