// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Messages sent from extension to feedback server as JSON.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: extension.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sent along with request for extension page when user attempts to open
// feedback tab.
type ExtensionPageRequestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtensionDetails *ExtensionDetails `protobuf:"bytes,1,req,name=extension_details,json=extensionDetails" json:"extension_details,omitempty"`
	// Url of the page (without request params) that user wants to open
	// feedback tool for.
	Url *string `protobuf:"bytes,2,req,name=url" json:"url,omitempty"`
}

func (x *ExtensionPageRequestParams) Reset() {
	*x = ExtensionPageRequestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionPageRequestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionPageRequestParams) ProtoMessage() {}

func (x *ExtensionPageRequestParams) ProtoReflect() protoreflect.Message {
	mi := &file_extension_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionPageRequestParams.ProtoReflect.Descriptor instead.
func (*ExtensionPageRequestParams) Descriptor() ([]byte, []int) {
	return file_extension_proto_rawDescGZIP(), []int{0}
}

func (x *ExtensionPageRequestParams) GetExtensionDetails() *ExtensionDetails {
	if x != nil {
		return x.ExtensionDetails
	}
	return nil
}

func (x *ExtensionPageRequestParams) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type PostedScreenshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType      *string     `protobuf:"bytes,1,req,name=mime_type,json=mimeType" json:"mime_type,omitempty"`
	Dimensions    *Dimensions `protobuf:"bytes,2,req,name=dimensions" json:"dimensions,omitempty"`
	Base64Content *string     `protobuf:"bytes,3,opt,name=base64_content,json=base64Content" json:"base64_content,omitempty"`
	BinaryContent []byte      `protobuf:"bytes,4,opt,name=binary_content,json=binaryContent" json:"binary_content,omitempty"`
}

func (x *PostedScreenshot) Reset() {
	*x = PostedScreenshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostedScreenshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostedScreenshot) ProtoMessage() {}

func (x *PostedScreenshot) ProtoReflect() protoreflect.Message {
	mi := &file_extension_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostedScreenshot.ProtoReflect.Descriptor instead.
func (*PostedScreenshot) Descriptor() ([]byte, []int) {
	return file_extension_proto_rawDescGZIP(), []int{1}
}

func (x *PostedScreenshot) GetMimeType() string {
	if x != nil && x.MimeType != nil {
		return *x.MimeType
	}
	return ""
}

func (x *PostedScreenshot) GetDimensions() *Dimensions {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *PostedScreenshot) GetBase64Content() string {
	if x != nil && x.Base64Content != nil {
		return *x.Base64Content
	}
	return ""
}

func (x *PostedScreenshot) GetBinaryContent() []byte {
	if x != nil {
		return x.BinaryContent
	}
	return nil
}

// Contains data about possible errors on the client side.
// Describes number of attempts to send feedback and possible error codes/
// exceptions which occurred.
type ExtensionErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfAttempts *int32  `protobuf:"varint,1,req,name=number_of_attempts,json=numberOfAttempts" json:"number_of_attempts,omitempty"`
	Errors           *string `protobuf:"bytes,2,req,name=errors" json:"errors,omitempty"`
}

func (x *ExtensionErrors) Reset() {
	*x = ExtensionErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionErrors) ProtoMessage() {}

func (x *ExtensionErrors) ProtoReflect() protoreflect.Message {
	mi := &file_extension_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionErrors.ProtoReflect.Descriptor instead.
func (*ExtensionErrors) Descriptor() ([]byte, []int) {
	return file_extension_proto_rawDescGZIP(), []int{2}
}

func (x *ExtensionErrors) GetNumberOfAttempts() int32 {
	if x != nil && x.NumberOfAttempts != nil {
		return *x.NumberOfAttempts
	}
	return 0
}

func (x *ExtensionErrors) GetErrors() string {
	if x != nil && x.Errors != nil {
		return *x.Errors
	}
	return ""
}

// Sent when user hits final submit button.
type ExtensionSubmit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonData                *CommonData                  `protobuf:"bytes,1,req,name=common_data,json=commonData" json:"common_data,omitempty"`
	WebData                   *WebData                     `protobuf:"bytes,2,req,name=web_data,json=webData" json:"web_data,omitempty"`
	TypeId                    *int32                       `protobuf:"varint,3,req,name=type_id,json=typeId" json:"type_id,omitempty"`
	Screenshot                *PostedScreenshot            `protobuf:"bytes,4,opt,name=screenshot" json:"screenshot,omitempty"`
	ChromeData                *ChromeData                  `protobuf:"bytes,14,opt,name=chrome_data,json=chromeData" json:"chrome_data,omitempty"`
	ProductSpecificBinaryData []*ProductSpecificBinaryData `protobuf:"bytes,15,rep,name=product_specific_binary_data,json=productSpecificBinaryData" json:"product_specific_binary_data,omitempty"`
	CategoryTag               *string                      `protobuf:"bytes,16,opt,name=category_tag,json=categoryTag" json:"category_tag,omitempty"`
	ProductId                 *int32                       `protobuf:"varint,17,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	Bucket                    *string                      `protobuf:"bytes,18,opt,name=bucket" json:"bucket,omitempty"`
}

func (x *ExtensionSubmit) Reset() {
	*x = ExtensionSubmit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionSubmit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionSubmit) ProtoMessage() {}

func (x *ExtensionSubmit) ProtoReflect() protoreflect.Message {
	mi := &file_extension_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionSubmit.ProtoReflect.Descriptor instead.
func (*ExtensionSubmit) Descriptor() ([]byte, []int) {
	return file_extension_proto_rawDescGZIP(), []int{3}
}

func (x *ExtensionSubmit) GetCommonData() *CommonData {
	if x != nil {
		return x.CommonData
	}
	return nil
}

func (x *ExtensionSubmit) GetWebData() *WebData {
	if x != nil {
		return x.WebData
	}
	return nil
}

func (x *ExtensionSubmit) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *ExtensionSubmit) GetScreenshot() *PostedScreenshot {
	if x != nil {
		return x.Screenshot
	}
	return nil
}

func (x *ExtensionSubmit) GetChromeData() *ChromeData {
	if x != nil {
		return x.ChromeData
	}
	return nil
}

func (x *ExtensionSubmit) GetProductSpecificBinaryData() []*ProductSpecificBinaryData {
	if x != nil {
		return x.ProductSpecificBinaryData
	}
	return nil
}

func (x *ExtensionSubmit) GetCategoryTag() string {
	if x != nil && x.CategoryTag != nil {
		return *x.CategoryTag
	}
	return ""
}

func (x *ExtensionSubmit) GetProductId() int32 {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return 0
}

func (x *ExtensionSubmit) GetBucket() string {
	if x != nil && x.Bucket != nil {
		return *x.Bucket
	}
	return ""
}

// A query for suggestions, sent when the user hits the preview button.
type SuggestQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonData            *CommonData   `protobuf:"bytes,1,req,name=common_data,json=commonData" json:"common_data,omitempty"`
	WebData               *WebData      `protobuf:"bytes,2,req,name=web_data,json=webData" json:"web_data,omitempty"`
	TypeId                *int32        `protobuf:"varint,3,req,name=type_id,json=typeId" json:"type_id,omitempty"`
	HtmlDocumentStructure *HtmlDocument `protobuf:"bytes,4,opt,name=html_document_structure,json=htmlDocumentStructure" json:"html_document_structure,omitempty"`
	ChromeData            *ChromeData   `protobuf:"bytes,5,opt,name=chrome_data,json=chromeData" json:"chrome_data,omitempty"`
}

func (x *SuggestQuery) Reset() {
	*x = SuggestQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestQuery) ProtoMessage() {}

func (x *SuggestQuery) ProtoReflect() protoreflect.Message {
	mi := &file_extension_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestQuery.ProtoReflect.Descriptor instead.
func (*SuggestQuery) Descriptor() ([]byte, []int) {
	return file_extension_proto_rawDescGZIP(), []int{4}
}

func (x *SuggestQuery) GetCommonData() *CommonData {
	if x != nil {
		return x.CommonData
	}
	return nil
}

func (x *SuggestQuery) GetWebData() *WebData {
	if x != nil {
		return x.WebData
	}
	return nil
}

func (x *SuggestQuery) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *SuggestQuery) GetHtmlDocumentStructure() *HtmlDocument {
	if x != nil {
		return x.HtmlDocumentStructure
	}
	return nil
}

func (x *SuggestQuery) GetChromeData() *ChromeData {
	if x != nil {
		return x.ChromeData
	}
	return nil
}

var File_extension_proto protoreflect.FileDescriptor

var file_extension_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x09, 0x64, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x77, 0x65, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x1a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x4b, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x10, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0xb7, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x38, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x0f, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x22, 0xd6, 0x03, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x30, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x2e, 0x57, 0x65, 0x62, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x77, 0x65, 0x62, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x39, 0x0a, 0x0b,
	0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x68, 0x72,
	0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x68, 0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x19, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x0c,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x57, 0x65, 0x62, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x77, 0x65, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x52, 0x0a, 0x17, 0x68, 0x74, 0x6d, 0x6c, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x2e, 0x48, 0x74, 0x6d, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x15, 0x68, 0x74, 0x6d, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x35, 0x48, 0x03, 0x5a, 0x31, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x6f,
	0x73, 0x2f, 0x74, 0x61, 0x73, 0x74, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2f, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_extension_proto_rawDescOnce sync.Once
	file_extension_proto_rawDescData = file_extension_proto_rawDesc
)

func file_extension_proto_rawDescGZIP() []byte {
	file_extension_proto_rawDescOnce.Do(func() {
		file_extension_proto_rawDescData = protoimpl.X.CompressGZIP(file_extension_proto_rawDescData)
	})
	return file_extension_proto_rawDescData
}

var file_extension_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_extension_proto_goTypes = []interface{}{
	(*ExtensionPageRequestParams)(nil), // 0: userfeedback.ExtensionPageRequestParams
	(*PostedScreenshot)(nil),           // 1: userfeedback.PostedScreenshot
	(*ExtensionErrors)(nil),            // 2: userfeedback.ExtensionErrors
	(*ExtensionSubmit)(nil),            // 3: userfeedback.ExtensionSubmit
	(*SuggestQuery)(nil),               // 4: userfeedback.SuggestQuery
	(*ExtensionDetails)(nil),           // 5: userfeedback.ExtensionDetails
	(*Dimensions)(nil),                 // 6: userfeedback.Dimensions
	(*CommonData)(nil),                 // 7: userfeedback.CommonData
	(*WebData)(nil),                    // 8: userfeedback.WebData
	(*ChromeData)(nil),                 // 9: userfeedback.ChromeData
	(*ProductSpecificBinaryData)(nil),  // 10: userfeedback.ProductSpecificBinaryData
	(*HtmlDocument)(nil),               // 11: userfeedback.HtmlDocument
}
var file_extension_proto_depIdxs = []int32{
	5,  // 0: userfeedback.ExtensionPageRequestParams.extension_details:type_name -> userfeedback.ExtensionDetails
	6,  // 1: userfeedback.PostedScreenshot.dimensions:type_name -> userfeedback.Dimensions
	7,  // 2: userfeedback.ExtensionSubmit.common_data:type_name -> userfeedback.CommonData
	8,  // 3: userfeedback.ExtensionSubmit.web_data:type_name -> userfeedback.WebData
	1,  // 4: userfeedback.ExtensionSubmit.screenshot:type_name -> userfeedback.PostedScreenshot
	9,  // 5: userfeedback.ExtensionSubmit.chrome_data:type_name -> userfeedback.ChromeData
	10, // 6: userfeedback.ExtensionSubmit.product_specific_binary_data:type_name -> userfeedback.ProductSpecificBinaryData
	7,  // 7: userfeedback.SuggestQuery.common_data:type_name -> userfeedback.CommonData
	8,  // 8: userfeedback.SuggestQuery.web_data:type_name -> userfeedback.WebData
	11, // 9: userfeedback.SuggestQuery.html_document_structure:type_name -> userfeedback.HtmlDocument
	9,  // 10: userfeedback.SuggestQuery.chrome_data:type_name -> userfeedback.ChromeData
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_extension_proto_init() }
func file_extension_proto_init() {
	if File_extension_proto != nil {
		return
	}
	file_common_data_proto_init()
	file_chrome_proto_init()
	file_dom_proto_init()
	file_math_proto_init()
	file_web_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_extension_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionPageRequestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostedScreenshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionSubmit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extension_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_extension_proto_goTypes,
		DependencyIndexes: file_extension_proto_depIdxs,
		MessageInfos:      file_extension_proto_msgTypes,
	}.Build()
	File_extension_proto = out.File
	file_extension_proto_rawDesc = nil
	file_extension_proto_goTypes = nil
	file_extension_proto_depIdxs = nil
}
