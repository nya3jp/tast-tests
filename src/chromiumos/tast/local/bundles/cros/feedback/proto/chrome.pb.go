// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: chrome.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Encapsulates the priorities of Buganizer issues.
type ChromeData_ChromePlatform int32

const (
	ChromeData_CHROME_OS      ChromeData_ChromePlatform = 1
	ChromeData_CHROME_BROWSER ChromeData_ChromePlatform = 2
)

// Enum value maps for ChromeData_ChromePlatform.
var (
	ChromeData_ChromePlatform_name = map[int32]string{
		1: "CHROME_OS",
		2: "CHROME_BROWSER",
	}
	ChromeData_ChromePlatform_value = map[string]int32{
		"CHROME_OS":      1,
		"CHROME_BROWSER": 2,
	}
)

func (x ChromeData_ChromePlatform) Enum() *ChromeData_ChromePlatform {
	p := new(ChromeData_ChromePlatform)
	*p = x
	return p
}

func (x ChromeData_ChromePlatform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChromeData_ChromePlatform) Descriptor() protoreflect.EnumDescriptor {
	return file_chrome_proto_enumTypes[0].Descriptor()
}

func (ChromeData_ChromePlatform) Type() protoreflect.EnumType {
	return &file_chrome_proto_enumTypes[0]
}

func (x ChromeData_ChromePlatform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ChromeData_ChromePlatform) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ChromeData_ChromePlatform(num)
	return nil
}

// Deprecated: Use ChromeData_ChromePlatform.Descriptor instead.
func (ChromeData_ChromePlatform) EnumDescriptor() ([]byte, []int) {
	return file_chrome_proto_rawDescGZIP(), []int{0, 0}
}

type ChromeOsData_ChromeOsCategory int32

const (
	ChromeOsData_CONNECTIVITY              ChromeOsData_ChromeOsCategory = 1
	ChromeOsData_SYNC                      ChromeOsData_ChromeOsCategory = 2
	ChromeOsData_CRASH                     ChromeOsData_ChromeOsCategory = 3
	ChromeOsData_PAGE_FORMATTING_OR_LAYOUT ChromeOsData_ChromeOsCategory = 4
	ChromeOsData_EXTENSIONS_OR_APPS        ChromeOsData_ChromeOsCategory = 5
	ChromeOsData_STANDBY_OR_RESUME         ChromeOsData_ChromeOsCategory = 6
	ChromeOsData_PHISHING_PAGE             ChromeOsData_ChromeOsCategory = 7
	ChromeOsData_OTHER                     ChromeOsData_ChromeOsCategory = 8
	ChromeOsData_AUTOFILL                  ChromeOsData_ChromeOsCategory = 9
)

// Enum value maps for ChromeOsData_ChromeOsCategory.
var (
	ChromeOsData_ChromeOsCategory_name = map[int32]string{
		1: "CONNECTIVITY",
		2: "SYNC",
		3: "CRASH",
		4: "PAGE_FORMATTING_OR_LAYOUT",
		5: "EXTENSIONS_OR_APPS",
		6: "STANDBY_OR_RESUME",
		7: "PHISHING_PAGE",
		8: "OTHER",
		9: "AUTOFILL",
	}
	ChromeOsData_ChromeOsCategory_value = map[string]int32{
		"CONNECTIVITY":              1,
		"SYNC":                      2,
		"CRASH":                     3,
		"PAGE_FORMATTING_OR_LAYOUT": 4,
		"EXTENSIONS_OR_APPS":        5,
		"STANDBY_OR_RESUME":         6,
		"PHISHING_PAGE":             7,
		"OTHER":                     8,
		"AUTOFILL":                  9,
	}
)

func (x ChromeOsData_ChromeOsCategory) Enum() *ChromeOsData_ChromeOsCategory {
	p := new(ChromeOsData_ChromeOsCategory)
	*p = x
	return p
}

func (x ChromeOsData_ChromeOsCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChromeOsData_ChromeOsCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_chrome_proto_enumTypes[1].Descriptor()
}

func (ChromeOsData_ChromeOsCategory) Type() protoreflect.EnumType {
	return &file_chrome_proto_enumTypes[1]
}

func (x ChromeOsData_ChromeOsCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ChromeOsData_ChromeOsCategory) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ChromeOsData_ChromeOsCategory(num)
	return nil
}

// Deprecated: Use ChromeOsData_ChromeOsCategory.Descriptor instead.
func (ChromeOsData_ChromeOsCategory) EnumDescriptor() ([]byte, []int) {
	return file_chrome_proto_rawDescGZIP(), []int{1, 0}
}

type ChromeBrowserData_ChromeBrowserCategory int32

const (
	ChromeBrowserData_PAGE_FORMATTING_OR_LAYOUT ChromeBrowserData_ChromeBrowserCategory = 1
	ChromeBrowserData_PAGES_NOT_LOADING         ChromeBrowserData_ChromeBrowserCategory = 2
	ChromeBrowserData_PLUGINS                   ChromeBrowserData_ChromeBrowserCategory = 3
	ChromeBrowserData_TABS_OR_WINDOWS           ChromeBrowserData_ChromeBrowserCategory = 4
	ChromeBrowserData_SYNCED_PREFERENCES        ChromeBrowserData_ChromeBrowserCategory = 5
	ChromeBrowserData_CRASH                     ChromeBrowserData_ChromeBrowserCategory = 6
	ChromeBrowserData_EXTENSIONS_OR_APPS        ChromeBrowserData_ChromeBrowserCategory = 7
	ChromeBrowserData_PHISHING_PAGE             ChromeBrowserData_ChromeBrowserCategory = 8
	ChromeBrowserData_OTHER                     ChromeBrowserData_ChromeBrowserCategory = 9
	ChromeBrowserData_AUTOFILL                  ChromeBrowserData_ChromeBrowserCategory = 10
)

// Enum value maps for ChromeBrowserData_ChromeBrowserCategory.
var (
	ChromeBrowserData_ChromeBrowserCategory_name = map[int32]string{
		1:  "PAGE_FORMATTING_OR_LAYOUT",
		2:  "PAGES_NOT_LOADING",
		3:  "PLUGINS",
		4:  "TABS_OR_WINDOWS",
		5:  "SYNCED_PREFERENCES",
		6:  "CRASH",
		7:  "EXTENSIONS_OR_APPS",
		8:  "PHISHING_PAGE",
		9:  "OTHER",
		10: "AUTOFILL",
	}
	ChromeBrowserData_ChromeBrowserCategory_value = map[string]int32{
		"PAGE_FORMATTING_OR_LAYOUT": 1,
		"PAGES_NOT_LOADING":         2,
		"PLUGINS":                   3,
		"TABS_OR_WINDOWS":           4,
		"SYNCED_PREFERENCES":        5,
		"CRASH":                     6,
		"EXTENSIONS_OR_APPS":        7,
		"PHISHING_PAGE":             8,
		"OTHER":                     9,
		"AUTOFILL":                  10,
	}
)

func (x ChromeBrowserData_ChromeBrowserCategory) Enum() *ChromeBrowserData_ChromeBrowserCategory {
	p := new(ChromeBrowserData_ChromeBrowserCategory)
	*p = x
	return p
}

func (x ChromeBrowserData_ChromeBrowserCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChromeBrowserData_ChromeBrowserCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_chrome_proto_enumTypes[2].Descriptor()
}

func (ChromeBrowserData_ChromeBrowserCategory) Type() protoreflect.EnumType {
	return &file_chrome_proto_enumTypes[2]
}

func (x ChromeBrowserData_ChromeBrowserCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ChromeBrowserData_ChromeBrowserCategory) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ChromeBrowserData_ChromeBrowserCategory(num)
	return nil
}

// Deprecated: Use ChromeBrowserData_ChromeBrowserCategory.Descriptor instead.
func (ChromeBrowserData_ChromeBrowserCategory) EnumDescriptor() ([]byte, []int) {
	return file_chrome_proto_rawDescGZIP(), []int{2, 0}
}

// Chrome Browser and Chrome OS specific data.
type ChromeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// What platform has a report been sent from.
	ChromePlatform    *ChromeData_ChromePlatform `protobuf:"varint,1,opt,name=chrome_platform,json=chromePlatform,enum=userfeedback.ChromeData_ChromePlatform,def=1" json:"chrome_platform,omitempty"`
	ChromeOsData      *ChromeOsData              `protobuf:"bytes,2,opt,name=chrome_os_data,json=chromeOsData" json:"chrome_os_data,omitempty"`
	ChromeBrowserData *ChromeBrowserData         `protobuf:"bytes,3,opt,name=chrome_browser_data,json=chromeBrowserData" json:"chrome_browser_data,omitempty"`
}

// Default values for ChromeData fields.
const (
	Default_ChromeData_ChromePlatform = ChromeData_CHROME_OS
)

func (x *ChromeData) Reset() {
	*x = ChromeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chrome_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChromeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChromeData) ProtoMessage() {}

func (x *ChromeData) ProtoReflect() protoreflect.Message {
	mi := &file_chrome_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChromeData.ProtoReflect.Descriptor instead.
func (*ChromeData) Descriptor() ([]byte, []int) {
	return file_chrome_proto_rawDescGZIP(), []int{0}
}

func (x *ChromeData) GetChromePlatform() ChromeData_ChromePlatform {
	if x != nil && x.ChromePlatform != nil {
		return *x.ChromePlatform
	}
	return Default_ChromeData_ChromePlatform
}

func (x *ChromeData) GetChromeOsData() *ChromeOsData {
	if x != nil {
		return x.ChromeOsData
	}
	return nil
}

func (x *ChromeData) GetChromeBrowserData() *ChromeBrowserData {
	if x != nil {
		return x.ChromeBrowserData
	}
	return nil
}

type ChromeOsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category *ChromeOsData_ChromeOsCategory `protobuf:"varint,1,opt,name=category,enum=userfeedback.ChromeOsData_ChromeOsCategory,def=8" json:"category,omitempty"`
}

// Default values for ChromeOsData fields.
const (
	Default_ChromeOsData_Category = ChromeOsData_OTHER
)

func (x *ChromeOsData) Reset() {
	*x = ChromeOsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chrome_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChromeOsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChromeOsData) ProtoMessage() {}

func (x *ChromeOsData) ProtoReflect() protoreflect.Message {
	mi := &file_chrome_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChromeOsData.ProtoReflect.Descriptor instead.
func (*ChromeOsData) Descriptor() ([]byte, []int) {
	return file_chrome_proto_rawDescGZIP(), []int{1}
}

func (x *ChromeOsData) GetCategory() ChromeOsData_ChromeOsCategory {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return Default_ChromeOsData_Category
}

type ChromeBrowserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category *ChromeBrowserData_ChromeBrowserCategory `protobuf:"varint,1,opt,name=category,enum=userfeedback.ChromeBrowserData_ChromeBrowserCategory,def=9" json:"category,omitempty"`
}

// Default values for ChromeBrowserData fields.
const (
	Default_ChromeBrowserData_Category = ChromeBrowserData_OTHER
)

func (x *ChromeBrowserData) Reset() {
	*x = ChromeBrowserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chrome_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChromeBrowserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChromeBrowserData) ProtoMessage() {}

func (x *ChromeBrowserData) ProtoReflect() protoreflect.Message {
	mi := &file_chrome_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChromeBrowserData.ProtoReflect.Descriptor instead.
func (*ChromeBrowserData) Descriptor() ([]byte, []int) {
	return file_chrome_proto_rawDescGZIP(), []int{2}
}

func (x *ChromeBrowserData) GetCategory() ChromeBrowserData_ChromeBrowserCategory {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return Default_ChromeBrowserData_Category
}

var File_chrome_proto protoreflect.FileDescriptor

var file_chrome_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x22, 0xb1, 0x02, 0x0a,
	0x0a, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5b, 0x0a, 0x0f, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x68, 0x72, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x09, 0x43,
	0x48, 0x52, 0x4f, 0x4d, 0x45, 0x5f, 0x4f, 0x53, 0x52, 0x0e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x68, 0x72, 0x6f,
	0x6d, 0x65, 0x5f, 0x6f, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e,
	0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x4f, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x65, 0x4f, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x13, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65,
	0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x0e, 0x43,
	0x68, 0x72, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x48, 0x52, 0x4f, 0x4d, 0x45, 0x5f, 0x4f, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x43, 0x48, 0x52, 0x4f, 0x4d, 0x45, 0x5f, 0x42, 0x52, 0x4f, 0x57, 0x53, 0x45, 0x52, 0x10, 0x02,
	0x22, 0x94, 0x02, 0x0a, 0x0c, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x4f, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x4e, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x4f, 0x73, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x4f, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x3a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x4f, 0x73, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x59, 0x4e, 0x43,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x52, 0x41, 0x53, 0x48, 0x10, 0x03, 0x12, 0x1d, 0x0a,
	0x19, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x4f, 0x52, 0x5f, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12,
	0x45, 0x58, 0x54, 0x45, 0x4e, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x4f, 0x52, 0x5f, 0x41, 0x50,
	0x50, 0x53, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x42, 0x59, 0x5f,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x50,
	0x48, 0x49, 0x53, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x10, 0x07, 0x12, 0x09,
	0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x55, 0x54,
	0x4f, 0x46, 0x49, 0x4c, 0x4c, 0x10, 0x09, 0x22, 0xc6, 0x02, 0x0a, 0x11, 0x43, 0x68, 0x72, 0x6f,
	0x6d, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x43,
	0x68, 0x72, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x3a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xd6, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x72, 0x6f,
	0x6d, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x5f, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x50, 0x41, 0x47, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f,
	0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4c, 0x55, 0x47, 0x49,
	0x4e, 0x53, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x41, 0x42, 0x53, 0x5f, 0x4f, 0x52, 0x5f,
	0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x59, 0x4e,
	0x43, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x53, 0x10,
	0x05, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x52, 0x41, 0x53, 0x48, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12,
	0x45, 0x58, 0x54, 0x45, 0x4e, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x4f, 0x52, 0x5f, 0x41, 0x50,
	0x50, 0x53, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x48, 0x49, 0x53, 0x48, 0x49, 0x4e, 0x47,
	0x5f, 0x50, 0x41, 0x47, 0x45, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52,
	0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x55, 0x54, 0x4f, 0x46, 0x49, 0x4c, 0x4c, 0x10, 0x0a,
	0x42, 0x35, 0x48, 0x03, 0x5a, 0x31, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x6f, 0x73,
	0x2f, 0x74, 0x61, 0x73, 0x74, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2f, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_chrome_proto_rawDescOnce sync.Once
	file_chrome_proto_rawDescData = file_chrome_proto_rawDesc
)

func file_chrome_proto_rawDescGZIP() []byte {
	file_chrome_proto_rawDescOnce.Do(func() {
		file_chrome_proto_rawDescData = protoimpl.X.CompressGZIP(file_chrome_proto_rawDescData)
	})
	return file_chrome_proto_rawDescData
}

var file_chrome_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_chrome_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chrome_proto_goTypes = []interface{}{
	(ChromeData_ChromePlatform)(0),               // 0: userfeedback.ChromeData.ChromePlatform
	(ChromeOsData_ChromeOsCategory)(0),           // 1: userfeedback.ChromeOsData.ChromeOsCategory
	(ChromeBrowserData_ChromeBrowserCategory)(0), // 2: userfeedback.ChromeBrowserData.ChromeBrowserCategory
	(*ChromeData)(nil),                           // 3: userfeedback.ChromeData
	(*ChromeOsData)(nil),                         // 4: userfeedback.ChromeOsData
	(*ChromeBrowserData)(nil),                    // 5: userfeedback.ChromeBrowserData
}
var file_chrome_proto_depIdxs = []int32{
	0, // 0: userfeedback.ChromeData.chrome_platform:type_name -> userfeedback.ChromeData.ChromePlatform
	4, // 1: userfeedback.ChromeData.chrome_os_data:type_name -> userfeedback.ChromeOsData
	5, // 2: userfeedback.ChromeData.chrome_browser_data:type_name -> userfeedback.ChromeBrowserData
	1, // 3: userfeedback.ChromeOsData.category:type_name -> userfeedback.ChromeOsData.ChromeOsCategory
	2, // 4: userfeedback.ChromeBrowserData.category:type_name -> userfeedback.ChromeBrowserData.ChromeBrowserCategory
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_chrome_proto_init() }
func file_chrome_proto_init() {
	if File_chrome_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chrome_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChromeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chrome_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChromeOsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chrome_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChromeBrowserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chrome_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chrome_proto_goTypes,
		DependencyIndexes: file_chrome_proto_depIdxs,
		EnumInfos:         file_chrome_proto_enumTypes,
		MessageInfos:      file_chrome_proto_msgTypes,
	}.Build()
	File_chrome_proto = out.File
	file_chrome_proto_rawDesc = nil
	file_chrome_proto_goTypes = nil
	file_chrome_proto_depIdxs = nil
}
