// Copyright 2018 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package crostini

import (
	"context"
	"time"

	"chromiumos/tast/local/crostini"
	"chromiumos/tast/testing"
)

func init() {
	testing.AddTest(&testing.Test{
		Func:         StartupPerf,
		LacrosStatus: testing.LacrosVariantUnneeded,
		Desc:         "Performance tests of Termina VM startup and container startup",
		Contacts:     []string{"nverne@chromium.org", "clumptini@google.com"},
		Attr:         []string{"group:crosbolt", "crosbolt_perbuild"},
		SoftwareDeps: []string{"chrome", "vm_host"},
		Params: []testing.Param{
			// Parameters generated by params_test.go. DO NOT EDIT.
			{
				Name:              "buster",
				ExtraSoftwareDeps: []string{"dlc"},
				Fixture:           "crostiniBuster",
				Timeout:           1 * time.Minute,
			}, {
				Name:              "bullseye",
				ExtraSoftwareDeps: []string{"dlc"},
				Fixture:           "crostiniBullseye",
				Timeout:           1 * time.Minute,
			},
		},
	})
}

func StartupPerf(ctx context.Context, s *testing.State) {
	f := s.FixtValue().(crostini.FixtureData)
	if values := f.StartupValues; values != nil {
		values.Save(s.OutDir())
	} else {
		s.Fatal("Failed to find Startup values in FixtureData")
	}
}
