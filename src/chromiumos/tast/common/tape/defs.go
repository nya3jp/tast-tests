// Copyright 2021 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by generate_policy_schemas.py. DO NOT EDIT.
// Run the generator in gen/generate_policy_schemas.py instead.

package tape

///////////////////////////////////////////////////////////////////////////////
// AutoLaunchAppKiosk
///////////////////////////////////////////////////////////////////////////////

type AutoLaunchAppKiosk struct {
	AppId                  string   `json:"appId"`
	EnableHealthMonitoring bool     `json:"enableHealthMonitoring"`
	ScreenRotation         Rotation `json:"screenRotation"`
}

type Rotation int

const (
	ROTATION_ROTATE_0   Rotation = iota // 0
	ROTATION_ROTATE_90                  // 1
	ROTATION_ROTATE_180                 // 2
	ROTATION_ROTATE_270                 // 3
)

func (p *AutoLaunchAppKiosk) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.kiosk.appsconfig.AutoLaunchApp", p, []string{"appId", "enableHealthMonitoring", "screenRotation"})
}

///////////////////////////////////////////////////////////////////////////////
// InstallTypeMGS
///////////////////////////////////////////////////////////////////////////////

type InstallTypeMGS struct {
	AppInstallType ManagedGuestSessionAppInstallType `json:"appInstallType"`
}

type ManagedGuestSessionAppInstallType int

const (
	MANAGEDGUESTSESSIONAPPINSTALLTYPE_NOT_INSTALLED             ManagedGuestSessionAppInstallType = iota // 0
	MANAGEDGUESTSESSIONAPPINSTALLTYPE_FORCED                                                             // 1
	MANAGEDGUESTSESSIONAPPINSTALLTYPE_FORCED_AND_PIN_TO_TOOLBAR                                          // 2
)

func (p *InstallTypeMGS) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.managedguest.apps.InstallType", p, []string{"appInstallType"})
}

///////////////////////////////////////////////////////////////////////////////
// IncludeInChromeWebStoreCollectionMGS
///////////////////////////////////////////////////////////////////////////////

type IncludeInChromeWebStoreCollectionMGS struct {
	IncludeInCollection bool `json:"includeInCollection"`
}

func (p *IncludeInChromeWebStoreCollectionMGS) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.managedguest.apps.IncludeInChromeWebStoreCollection", p, []string{"includeInCollection"})
}

///////////////////////////////////////////////////////////////////////////////
// CertificateManagementMGS
///////////////////////////////////////////////////////////////////////////////

type CertificateManagementMGS struct {
	AllowAccessToKeys        bool `json:"allowAccessToKeys"`
	AllowEnterpriseChallenge bool `json:"allowEnterpriseChallenge"`
}

func (p *CertificateManagementMGS) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.managedguest.apps.CertificateManagement", p, []string{"allowAccessToKeys", "allowEnterpriseChallenge"})
}

///////////////////////////////////////////////////////////////////////////////
// PermissionsAndUrlAccessMGS
///////////////////////////////////////////////////////////////////////////////

type PermissionsAndUrlAccessMGS struct {
	BlockedPermissions []string `json:"blockedPermissions"`
	AllowedPermissions []string `json:"allowedPermissions"`
	BlockedHosts       []string `json:"blockedHosts"`
	AllowedHosts       []string `json:"allowedHosts"`
}

func (p *PermissionsAndUrlAccessMGS) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.managedguest.apps.PermissionsAndUrlAccess", p, []string{"blockedPermissions", "allowedPermissions", "blockedHosts", "allowedHosts"})
}

///////////////////////////////////////////////////////////////////////////////
// ManagedConfigurationMGS
///////////////////////////////////////////////////////////////////////////////

type ManagedConfigurationMGS struct {
	ManagedConfiguration string `json:"managedConfiguration"`
}

func (p *ManagedConfigurationMGS) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.managedguest.apps.ManagedConfiguration", p, []string{"managedConfiguration"})
}

///////////////////////////////////////////////////////////////////////////////
// SkipPrintConfirmationMGS
///////////////////////////////////////////////////////////////////////////////

type SkipPrintConfirmationMGS struct {
	SkipPrintConfirmation bool `json:"skipPrintConfirmation"`
}

func (p *SkipPrintConfirmationMGS) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.managedguest.apps.SkipPrintConfirmation", p, []string{"skipPrintConfirmation"})
}

///////////////////////////////////////////////////////////////////////////////
// InstallationUrlMGS
///////////////////////////////////////////////////////////////////////////////

type InstallationUrlMGS struct {
	InstallationUrl         string `json:"installationUrl"`
	OverrideInstallationUrl bool   `json:"overrideInstallationUrl"`
}

func (p *InstallationUrlMGS) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.managedguest.apps.InstallationUrl", p, []string{"installationUrl", "overrideInstallationUrl"})
}

///////////////////////////////////////////////////////////////////////////////
// AllowForUsers
///////////////////////////////////////////////////////////////////////////////

type AllowForUsers struct {
	AllowForUsers bool `json:"allowForUsers"`
}

func (p *AllowForUsers) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.printers.AllowForUsers", p, []string{"allowForUsers"})
}

///////////////////////////////////////////////////////////////////////////////
// AllowForDevices
///////////////////////////////////////////////////////////////////////////////

type AllowForDevices struct {
	AllowForDevices bool `json:"allowForDevices"`
}

func (p *AllowForDevices) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.printers.AllowForDevices", p, []string{"allowForDevices"})
}

///////////////////////////////////////////////////////////////////////////////
// AllowForManagedGuest
///////////////////////////////////////////////////////////////////////////////

type AllowForManagedGuest struct {
	AllowForManagedGuest bool `json:"allowForManagedGuest"`
}

func (p *AllowForManagedGuest) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.printers.AllowForManagedGuest", p, []string{"allowForManagedGuest"})
}

///////////////////////////////////////////////////////////////////////////////
// AndroidAppsEnabled
///////////////////////////////////////////////////////////////////////////////

type AndroidAppsEnabled struct {
	ArcEnabled bool `json:"arcEnabled"`
}

func (p *AndroidAppsEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.AndroidAppsEnabled", p, []string{"arcEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// AllowedAppTypes
///////////////////////////////////////////////////////////////////////////////

type AllowedAppTypes struct {
	ExtensionAllowedTypes []string `json:"extensionAllowedTypes"`
}

func (p *AllowedAppTypes) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.AllowedAppTypes", p, []string{"extensionAllowedTypes"})
}

///////////////////////////////////////////////////////////////////////////////
// AppExtensionInstallSources
///////////////////////////////////////////////////////////////////////////////

type AppExtensionInstallSources struct {
	ExtensionInstallSources []string `json:"extensionInstallSources"`
}

func (p *AppExtensionInstallSources) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.AppExtensionInstallSources", p, []string{"extensionInstallSources"})
}

///////////////////////////////////////////////////////////////////////////////
// AllowInsecureUpdates
///////////////////////////////////////////////////////////////////////////////

type AllowInsecureUpdates struct {
	ExtensionAllowInsecureUpdates bool `json:"extensionAllowInsecureUpdates"`
}

func (p *AllowInsecureUpdates) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.AllowInsecureUpdates", p, []string{"extensionAllowInsecureUpdates"})
}

///////////////////////////////////////////////////////////////////////////////
// BlockExternalExtensions
///////////////////////////////////////////////////////////////////////////////

type BlockExternalExtensions struct {
	BlockExternalExtensions bool `json:"blockExternalExtensions"`
}

func (p *BlockExternalExtensions) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.BlockExternalExtensions", p, []string{"blockExternalExtensions"})
}

///////////////////////////////////////////////////////////////////////////////
// BlockExtensionsByPermission
///////////////////////////////////////////////////////////////////////////////

type BlockExtensionsByPermission struct {
	ExtensionBlockedPermissions []string `json:"extensionBlockedPermissions"`
	RuntimeBlockedHosts         []string `json:"runtimeBlockedHosts"`
	RuntimeAllowedHosts         []string `json:"runtimeAllowedHosts"`
}

func (p *BlockExtensionsByPermission) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.BlockExtensionsByPermission", p, []string{"extensionBlockedPermissions", "runtimeBlockedHosts", "runtimeAllowedHosts"})
}

///////////////////////////////////////////////////////////////////////////////
// HideWebStoreIcon
///////////////////////////////////////////////////////////////////////////////

type HideWebStoreIcon struct {
	HideWebStoreIcon bool `json:"hideWebStoreIcon"`
}

func (p *HideWebStoreIcon) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.HideWebStoreIcon", p, []string{"hideWebStoreIcon"})
}

///////////////////////////////////////////////////////////////////////////////
// ChromeWebStoreHomepage
///////////////////////////////////////////////////////////////////////////////

type ChromeWebStoreHomepage struct {
	CwsHomePage                             ChromeWebStoreHomepageLocationEnum `json:"cwsHomePage"`
	CwsHomePageCollectionName               string                             `json:"cwsHomePageCollectionName"`
	CwsHomePageCustomUrl                    string                             `json:"cwsHomePageCustomUrl"`
	CwsHomePageCollectionIncludePrivateApps bool                               `json:"cwsHomePageCollectionIncludePrivateApps"`
}

type ChromeWebStoreHomepageLocationEnum int

const (
	CHROMEWEBSTOREHOMEPAGELOCATIONENUM_CHROME_WEB_STORE_HOMEPAGE_LOCATION_ENUM_DEFAULT    ChromeWebStoreHomepageLocationEnum = iota // 0
	CHROMEWEBSTOREHOMEPAGELOCATIONENUM_CHROME_WEB_STORE_HOMEPAGE_LOCATION_ENUM_COLLECTION                                           // 1
	CHROMEWEBSTOREHOMEPAGELOCATIONENUM_CHROME_WEB_STORE_HOMEPAGE_LOCATION_ENUM_CUSTOM                                               // 2
)

func (p *ChromeWebStoreHomepage) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.ChromeWebStoreHomepage", p, []string{"cwsHomePage", "cwsHomePageCollectionName", "cwsHomePageCustomUrl", "cwsHomePageCollectionIncludePrivateApps"})
}

///////////////////////////////////////////////////////////////////////////////
// ChromeWebStorePermissions
///////////////////////////////////////////////////////////////////////////////

type ChromeWebStorePermissions struct {
	AllowWebstorePublish           bool `json:"allowWebstorePublish"`
	AllowWebstorePublishUnverified bool `json:"allowWebstorePublishUnverified"`
}

func (p *ChromeWebStorePermissions) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.ChromeWebStorePermissions", p, []string{"allowWebstorePublish", "allowWebstorePublishUnverified"})
}

///////////////////////////////////////////////////////////////////////////////
// ReportAndroidStatus
///////////////////////////////////////////////////////////////////////////////

type ReportAndroidStatus struct {
	ReportArcStatusEnabled bool `json:"reportArcStatusEnabled"`
}

func (p *ReportAndroidStatus) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.ReportAndroidStatus", p, []string{"reportArcStatusEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// FullRestoreEnabled
///////////////////////////////////////////////////////////////////////////////

type FullRestoreEnabled struct {
	FullRestoreEnabled bool `json:"fullRestoreEnabled"`
}

func (p *FullRestoreEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.FullRestoreEnabled", p, []string{"fullRestoreEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// GhostWindowEnabled
///////////////////////////////////////////////////////////////////////////////

type GhostWindowEnabled struct {
	GhostWindowEnabled bool `json:"ghostWindowEnabled"`
}

func (p *GhostWindowEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.GhostWindowEnabled", p, []string{"ghostWindowEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// AllowedInstallSources
///////////////////////////////////////////////////////////////////////////////

type AllowedInstallSources struct {
	PlayStoreInstallSources      PlayStoreInstallSources      `json:"playStoreInstallSources"`
	ChromeWebStoreInstallSources ChromeWebStoreInstallSources `json:"chromeWebStoreInstallSources"`
}

type PlayStoreInstallSources int

const (
	PLAYSTOREINSTALLSOURCES_PLAY_STORE_ALLOW_ALL_APPS PlayStoreInstallSources = iota // 0
	PLAYSTOREINSTALLSOURCES_PLAY_STORE_BLOCK_ALL_APPS                                // 1
)

type ChromeWebStoreInstallSources int

const (
	CHROMEWEBSTOREINSTALLSOURCES_CHROME_WEB_STORE_ALLOW_ALL_APPS                                 ChromeWebStoreInstallSources = iota // 0
	CHROMEWEBSTOREINSTALLSOURCES_CHROME_WEB_STORE_BLOCK_ALL_APPS                                                                     // 1
	CHROMEWEBSTOREINSTALLSOURCES_CHROME_WEB_STORE_BLOCK_ALL_APPS_USER_EXTENSION_REQUESTS_ALLOWED                                     // 2
)

func (p *AllowedInstallSources) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.appsconfig.AllowedInstallSources", p, []string{"playStoreInstallSources", "chromeWebStoreInstallSources"})
}

///////////////////////////////////////////////////////////////////////////////
// InstallType
///////////////////////////////////////////////////////////////////////////////

type InstallType struct {
	AppInstallType UserAppInstallType `json:"appInstallType"`
}

type UserAppInstallType int

const (
	USERAPPINSTALLTYPE_BLOCKED                   UserAppInstallType = iota // 0
	USERAPPINSTALLTYPE_ALLOWED                                             // 1
	USERAPPINSTALLTYPE_FORCED                                              // 2
	USERAPPINSTALLTYPE_FORCED_AND_PIN_TO_TOOLBAR                           // 3
)

func (p *InstallType) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.apps.InstallType", p, []string{"appInstallType"})
}

///////////////////////////////////////////////////////////////////////////////
// IncludeInChromeWebStoreCollection
///////////////////////////////////////////////////////////////////////////////

type IncludeInChromeWebStoreCollection struct {
	IncludeInCollection bool `json:"includeInCollection"`
}

func (p *IncludeInChromeWebStoreCollection) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.apps.IncludeInChromeWebStoreCollection", p, []string{"includeInCollection"})
}

///////////////////////////////////////////////////////////////////////////////
// CertificateManagement
///////////////////////////////////////////////////////////////////////////////

type CertificateManagement struct {
	AllowAccessToKeys        bool `json:"allowAccessToKeys"`
	AllowEnterpriseChallenge bool `json:"allowEnterpriseChallenge"`
}

func (p *CertificateManagement) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.apps.CertificateManagement", p, []string{"allowAccessToKeys", "allowEnterpriseChallenge"})
}

///////////////////////////////////////////////////////////////////////////////
// PermissionsAndUrlAccess
///////////////////////////////////////////////////////////////////////////////

type PermissionsAndUrlAccess struct {
	BlockedPermissions []string `json:"blockedPermissions"`
	AllowedPermissions []string `json:"allowedPermissions"`
	BlockedHosts       []string `json:"blockedHosts"`
	AllowedHosts       []string `json:"allowedHosts"`
}

func (p *PermissionsAndUrlAccess) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.apps.PermissionsAndUrlAccess", p, []string{"blockedPermissions", "allowedPermissions", "blockedHosts", "allowedHosts"})
}

///////////////////////////////////////////////////////////////////////////////
// ManagedConfiguration
///////////////////////////////////////////////////////////////////////////////

type ManagedConfiguration struct {
	ManagedConfiguration string `json:"managedConfiguration"`
}

func (p *ManagedConfiguration) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.apps.ManagedConfiguration", p, []string{"managedConfiguration"})
}

///////////////////////////////////////////////////////////////////////////////
// DefaultLaunchContainer
///////////////////////////////////////////////////////////////////////////////

type DefaultLaunchContainer struct {
	DefaultLaunchContainer UserAppDefaultLaunchContainer `json:"defaultLaunchContainer"`
}

type UserAppDefaultLaunchContainer int

const (
	USERAPPDEFAULTLAUNCHCONTAINER_TAB    UserAppDefaultLaunchContainer = iota // 0
	USERAPPDEFAULTLAUNCHCONTAINER_WINDOW                                      // 1
)

func (p *DefaultLaunchContainer) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.apps.DefaultLaunchContainer", p, []string{"defaultLaunchContainer"})
}

///////////////////////////////////////////////////////////////////////////////
// SkipPrintConfirmation
///////////////////////////////////////////////////////////////////////////////

type SkipPrintConfirmation struct {
	SkipPrintConfirmation bool `json:"skipPrintConfirmation"`
}

func (p *SkipPrintConfirmation) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.apps.SkipPrintConfirmation", p, []string{"skipPrintConfirmation"})
}

///////////////////////////////////////////////////////////////////////////////
// InstallationUrl
///////////////////////////////////////////////////////////////////////////////

type InstallationUrl struct {
	InstallationUrl         string `json:"installationUrl"`
	OverrideInstallationUrl bool   `json:"overrideInstallationUrl"`
}

func (p *InstallationUrl) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.apps.InstallationUrl", p, []string{"installationUrl", "overrideInstallationUrl"})
}

///////////////////////////////////////////////////////////////////////////////
// ForceInstallKiosk
///////////////////////////////////////////////////////////////////////////////

type ForceInstallKiosk struct {
	ForceInstall bool `json:"forceInstall"`
}

func (p *ForceInstallKiosk) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.kiosk.apps.ForceInstall", p, []string{"forceInstall"})
}

///////////////////////////////////////////////////////////////////////////////
// PowerManagementKiosk
///////////////////////////////////////////////////////////////////////////////

type PowerManagementKiosk struct {
	AllowPowerManagement bool `json:"allowPowerManagement"`
}

func (p *PowerManagementKiosk) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.kiosk.apps.PowerManagement", p, []string{"allowPowerManagement"})
}

///////////////////////////////////////////////////////////////////////////////
// UnifiedDesktopKiosk
///////////////////////////////////////////////////////////////////////////////

type UnifiedDesktopKiosk struct {
	EnableUnifiedDesktop bool `json:"enableUnifiedDesktop"`
}

func (p *UnifiedDesktopKiosk) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.kiosk.apps.UnifiedDesktop", p, []string{"enableUnifiedDesktop"})
}

///////////////////////////////////////////////////////////////////////////////
// VirtualKeyboardKiosk
///////////////////////////////////////////////////////////////////////////////

type VirtualKeyboardKiosk struct {
	AllowVirtualKeyboard bool `json:"allowVirtualKeyboard"`
}

func (p *VirtualKeyboardKiosk) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.kiosk.apps.VirtualKeyboard", p, []string{"allowVirtualKeyboard"})
}

///////////////////////////////////////////////////////////////////////////////
// PluginsKiosk
///////////////////////////////////////////////////////////////////////////////

type PluginsKiosk struct {
	AllowPlugins bool `json:"allowPlugins"`
}

func (p *PluginsKiosk) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.kiosk.apps.Plugins", p, []string{"allowPlugins"})
}

///////////////////////////////////////////////////////////////////////////////
// FunctionKeysKiosk
///////////////////////////////////////////////////////////////////////////////

type FunctionKeysKiosk struct {
	AllowFunctionKeys bool `json:"allowFunctionKeys"`
}

func (p *FunctionKeysKiosk) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.kiosk.apps.FunctionKeys", p, []string{"allowFunctionKeys"})
}

///////////////////////////////////////////////////////////////////////////////
// ManagedConfigurationKiosk
///////////////////////////////////////////////////////////////////////////////

type ManagedConfigurationKiosk struct {
	ManagedConfiguration string `json:"managedConfiguration"`
}

func (p *ManagedConfigurationKiosk) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.kiosk.apps.ManagedConfiguration", p, []string{"managedConfiguration"})
}

///////////////////////////////////////////////////////////////////////////////
// InstallationUrlKiosk
///////////////////////////////////////////////////////////////////////////////

type InstallationUrlKiosk struct {
	InstallationUrl         string `json:"installationUrl"`
	OverrideInstallationUrl bool   `json:"overrideInstallationUrl"`
}

func (p *InstallationUrlKiosk) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.devices.kiosk.apps.InstallationUrl", p, []string{"installationUrl", "overrideInstallationUrl"})
}

///////////////////////////////////////////////////////////////////////////////
// SessionLength
///////////////////////////////////////////////////////////////////////////////

type SessionLength struct {
	SessionDurationLimit NullableDuration `json:"sessionDurationLimit"`
}

type NullableDuration struct {
	Duration Duration `json:"duration"`
}

type Duration struct {
	Seconds int64 `json:"seconds"`
	Nanos   int   `json:"nanos"`
}

func (p *SessionLength) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.SessionLength", p, []string{"sessionDurationLimit"})
}

///////////////////////////////////////////////////////////////////////////////
// Avatar
///////////////////////////////////////////////////////////////////////////////

type Avatar struct {
	UserAvatarImage UploadedFile `json:"userAvatarImage"`
}

type UploadedFile struct {
	DownloadUri string `json:"downloadUri"`
}

func (p *Avatar) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.Avatar", p, []string{"userAvatarImage"})
}

///////////////////////////////////////////////////////////////////////////////
// Wallpaper
///////////////////////////////////////////////////////////////////////////////

type Wallpaper struct {
	WallpaperImage UploadedFile `json:"wallpaperImage"`
}

func (p *Wallpaper) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.Wallpaper", p, []string{"wallpaperImage"})
}

///////////////////////////////////////////////////////////////////////////////
// BrowserThemeColor
///////////////////////////////////////////////////////////////////////////////

type BrowserThemeColor struct {
	BrowserThemeColor string `json:"browserThemeColor"`
}

func (p *BrowserThemeColor) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.BrowserThemeColor", p, []string{"browserThemeColor"})
}

///////////////////////////////////////////////////////////////////////////////
// BrowserSignin
///////////////////////////////////////////////////////////////////////////////

type BrowserSignin struct {
	BrowserSignin BrowserSigninModeEnum `json:"browserSignin"`
}

type BrowserSigninModeEnum int

const (
	BROWSERSIGNINMODEENUM_BROWSER_SIGNIN_MODE_ENUM_DISABLE BrowserSigninModeEnum = iota // 0
	BROWSERSIGNINMODEENUM_BROWSER_SIGNIN_MODE_ENUM_ENABLE                               // 1
	BROWSERSIGNINMODEENUM_BROWSER_SIGNIN_MODE_ENUM_FORCE                                // 2
)

func (p *BrowserSignin) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.BrowserSignin", p, []string{"browserSignin"})
}

///////////////////////////////////////////////////////////////////////////////
// RestrictSigninToPattern
///////////////////////////////////////////////////////////////////////////////

type RestrictSigninToPattern struct {
	RestrictSigninToPattern string `json:"restrictSigninToPattern"`
}

func (p *RestrictSigninToPattern) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.RestrictSigninToPattern", p, []string{"restrictSigninToPattern"})
}

///////////////////////////////////////////////////////////////////////////////
// SigninInterceptionEnabled
///////////////////////////////////////////////////////////////////////////////

type SigninInterceptionEnabled struct {
	SigninInterceptionEnabled bool `json:"signinInterceptionEnabled"`
}

func (p *SigninInterceptionEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.SigninInterceptionEnabled", p, []string{"signinInterceptionEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// LoginDisplayPasswordButtonEnabled
///////////////////////////////////////////////////////////////////////////////

type LoginDisplayPasswordButtonEnabled struct {
	LoginDisplayPasswordButtonEnabled bool `json:"loginDisplayPasswordButtonEnabled"`
}

func (p *LoginDisplayPasswordButtonEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.LoginDisplayPasswordButtonEnabled", p, []string{"loginDisplayPasswordButtonEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// MobileManagement
///////////////////////////////////////////////////////////////////////////////

type MobileManagement struct {
	EnableMobileChromePolicies bool `json:"enableMobileChromePolicies"`
}

func (p *MobileManagement) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.MobileManagement", p, []string{"enableMobileChromePolicies"})
}

///////////////////////////////////////////////////////////////////////////////
// DeviceEnrollment
///////////////////////////////////////////////////////////////////////////////

type DeviceEnrollment struct {
	AutoDevicePlacementEnabled bool `json:"autoDevicePlacementEnabled"`
}

func (p *DeviceEnrollment) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.DeviceEnrollment", p, []string{"autoDevicePlacementEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// AllowPopulateAssetIdentifier
///////////////////////////////////////////////////////////////////////////////

type AllowPopulateAssetIdentifier struct {
	AllowToUpdateDeviceAttribute bool `json:"allowToUpdateDeviceAttribute"`
}

func (p *AllowPopulateAssetIdentifier) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.AllowPopulateAssetIdentifier", p, []string{"allowToUpdateDeviceAttribute"})
}

///////////////////////////////////////////////////////////////////////////////
// EnrollPermission
///////////////////////////////////////////////////////////////////////////////

type EnrollPermission struct {
	DeviceEnrollPermission AllowToEnrollDevicesEnum `json:"deviceEnrollPermission"`
}

type AllowToEnrollDevicesEnum int

const (
	ALLOWTOENROLLDEVICESENUM_ALLOW_TO_ENROLL_DEVICES_ENUM_ALLOW_ENROLL_RE_ENROLL    AllowToEnrollDevicesEnum = iota // 0
	ALLOWTOENROLLDEVICESENUM_ALLOW_TO_ENROLL_DEVICES_ENUM_ALLOW_RE_ENROLL                                           // 1
	ALLOWTOENROLLDEVICESENUM_ALLOW_TO_ENROLL_DEVICES_ENUM_DISALLOW_ENROLL_RE_ENROLL                                 // 2
)

func (p *EnrollPermission) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.EnrollPermission", p, []string{"deviceEnrollPermission"})
}

///////////////////////////////////////////////////////////////////////////////
// TaskManager
///////////////////////////////////////////////////////////////////////////////

type TaskManager struct {
	TaskManagerEndProcessEnabled bool `json:"taskManagerEndProcessEnabled"`
}

func (p *TaskManager) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.TaskManager", p, []string{"taskManagerEndProcessEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// SiteIsolationBrowser
///////////////////////////////////////////////////////////////////////////////

type SiteIsolationBrowser struct {
	IsolateOrigins []string `json:"isolateOrigins"`
	SitePerProcess bool     `json:"sitePerProcess"`
}

func (p *SiteIsolationBrowser) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.SiteIsolationBrowser", p, []string{"isolateOrigins", "sitePerProcess"})
}

///////////////////////////////////////////////////////////////////////////////
// SiteIsolationAndroid
///////////////////////////////////////////////////////////////////////////////

type SiteIsolationAndroid struct {
	SitePerProcessAndroid NullableBoolean `json:"sitePerProcessAndroid"`
	IsolateOriginsAndroid []string        `json:"isolateOriginsAndroid"`
}

type NullableBoolean int

const (
	NULLABLEBOOLEAN_UNSET NullableBoolean = iota // 0
	NULLABLEBOOLEAN_FALSE                        // 1
	NULLABLEBOOLEAN_TRUE                         // 2
)

func (p *SiteIsolationAndroid) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.SiteIsolationAndroid", p, []string{"sitePerProcessAndroid", "isolateOriginsAndroid"})
}

///////////////////////////////////////////////////////////////////////////////
// PasswordManager
///////////////////////////////////////////////////////////////////////////////

type PasswordManager struct {
	PasswordManagerEnabled NullableBoolean `json:"passwordManagerEnabled"`
}

func (p *PasswordManager) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.PasswordManager", p, []string{"passwordManagerEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// LockScreen
///////////////////////////////////////////////////////////////////////////////

type LockScreen struct {
	AllowScreenLock bool `json:"allowScreenLock"`
}

func (p *LockScreen) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.LockScreen", p, []string{"allowScreenLock"})
}

///////////////////////////////////////////////////////////////////////////////
// QuickUnlockModeAllowlist
///////////////////////////////////////////////////////////////////////////////

type QuickUnlockModeAllowlist struct {
	QuickUnlockModeAllowlist []string `json:"quickUnlockModeAllowlist"`
}

func (p *QuickUnlockModeAllowlist) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.QuickUnlockModeAllowlist", p, []string{"quickUnlockModeAllowlist"})
}

///////////////////////////////////////////////////////////////////////////////
// PinUnlockAutosubmitEnabled
///////////////////////////////////////////////////////////////////////////////

type PinUnlockAutosubmitEnabled struct {
	PinUnlockAutosubmitEnabled bool `json:"pinUnlockAutosubmitEnabled"`
}

func (p *PinUnlockAutosubmitEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.PinUnlockAutosubmitEnabled", p, []string{"pinUnlockAutosubmitEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// LockScreenMediaPlaybackEnabled
///////////////////////////////////////////////////////////////////////////////

type LockScreenMediaPlaybackEnabled struct {
	LockScreenMediaPlaybackEnabled bool `json:"lockScreenMediaPlaybackEnabled"`
}

func (p *LockScreenMediaPlaybackEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.LockScreenMediaPlaybackEnabled", p, []string{"lockScreenMediaPlaybackEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// IdleSettings
///////////////////////////////////////////////////////////////////////////////

type IdleSettings struct {
	IdleTimeoutMinutes string                 `json:"idleTimeoutMinutes"`
	ActionOnDeviceIdle ActionOnDeviceIdleEnum `json:"actionOnDeviceIdle"`
	ActionOnLidClose   ActionOnLidCloseEnum   `json:"actionOnLidClose"`
	LockOnSleep        NullableBoolean        `json:"lockOnSleep"`
}

type ActionOnDeviceIdleEnum int

const (
	ACTIONONDEVICEIDLEENUM_ACTION_ON_DEVICE_IDLE_ENUM_SLEEP  ActionOnDeviceIdleEnum = iota // 0
	ACTIONONDEVICEIDLEENUM_ACTION_ON_DEVICE_IDLE_ENUM_LOGOUT                               // 1
	ACTIONONDEVICEIDLEENUM_ACTION_ON_DEVICE_IDLE_ENUM_LOCK                                 // 2
)

type ActionOnLidCloseEnum int

const (
	ACTIONONLIDCLOSEENUM_ACTION_ON_LID_CLOSE_ENUM_SLEEP  ActionOnLidCloseEnum = iota // 0
	ACTIONONLIDCLOSEENUM_ACTION_ON_LID_CLOSE_ENUM_LOGOUT                             // 1
)

func (p *IdleSettings) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.IdleSettings", p, []string{"idleTimeoutMinutes", "actionOnDeviceIdle", "actionOnLidClose", "lockOnSleep"})
}

///////////////////////////////////////////////////////////////////////////////
// IncognitoMode
///////////////////////////////////////////////////////////////////////////////

type IncognitoMode struct {
	IncognitoModeAvailability IncognitoModeAvailabilityEnum `json:"incognitoModeAvailability"`
}

type IncognitoModeAvailabilityEnum int

const (
	INCOGNITOMODEAVAILABILITYENUM_INCOGNITO_MODE_AVAILABILITY_ENUM_AVAILABLE   IncognitoModeAvailabilityEnum = iota // 0
	INCOGNITOMODEAVAILABILITYENUM_INCOGNITO_MODE_AVAILABILITY_ENUM_UNAVAILABLE                                      // 1
	INCOGNITOMODEAVAILABILITYENUM_INCOGNITO_MODE_AVAILABILITY_ENUM_FORCED                                           // 2
)

func (p *IncognitoMode) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.IncognitoMode", p, []string{"incognitoModeAvailability"})
}

///////////////////////////////////////////////////////////////////////////////
// BrowserHistory
///////////////////////////////////////////////////////////////////////////////

type BrowserHistory struct {
	SavingBrowserHistoryDisabled bool `json:"savingBrowserHistoryDisabled"`
}

func (p *BrowserHistory) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.BrowserHistory", p, []string{"savingBrowserHistoryDisabled"})
}

///////////////////////////////////////////////////////////////////////////////
// ClearBrowserHistory
///////////////////////////////////////////////////////////////////////////////

type ClearBrowserHistory struct {
	AllowDeletingBrowserHistory bool `json:"allowDeletingBrowserHistory"`
}

func (p *ClearBrowserHistory) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.ClearBrowserHistory", p, []string{"allowDeletingBrowserHistory"})
}

///////////////////////////////////////////////////////////////////////////////
// ForceEphemeralMode
///////////////////////////////////////////////////////////////////////////////

type ForceEphemeralMode struct {
	ForceEphemeralProfiles bool `json:"forceEphemeralProfiles"`
}

func (p *ForceEphemeralMode) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.ForceEphemeralMode", p, []string{"forceEphemeralProfiles"})
}

///////////////////////////////////////////////////////////////////////////////
// OnlineRevocationChecks
///////////////////////////////////////////////////////////////////////////////

type OnlineRevocationChecks struct {
	EnableOnlineRevocationChecks bool `json:"enableOnlineRevocationChecks"`
}

func (p *OnlineRevocationChecks) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.OnlineRevocationChecks", p, []string{"enableOnlineRevocationChecks"})
}

///////////////////////////////////////////////////////////////////////////////
// Geolocation
///////////////////////////////////////////////////////////////////////////////

type Geolocation struct {
	DefaultGeolocationSetting GeolocationSettingEnum `json:"defaultGeolocationSetting"`
}

type GeolocationSettingEnum int

const (
	GEOLOCATIONSETTINGENUM_GEOLOCATION_SETTING_ENUM_ALLOW_GEOLOCATION GeolocationSettingEnum = iota // 0
	GEOLOCATIONSETTINGENUM_GEOLOCATION_SETTING_ENUM_BLOCK_GEOLOCATION                               // 1
	GEOLOCATIONSETTINGENUM_GEOLOCATION_SETTING_ENUM_ASK_GEOLOCATION                                 // 2
	GEOLOCATIONSETTINGENUM_GEOLOCATION_SETTING_ENUM_USER_CHOICE                                     // 3
)

func (p *Geolocation) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.Geolocation", p, []string{"defaultGeolocationSetting"})
}

///////////////////////////////////////////////////////////////////////////////
// GaiaOfflineSigninTimeLimitDays
///////////////////////////////////////////////////////////////////////////////

type GaiaOfflineSigninTimeLimitDays struct {
	GaiaOfflineSigninTimeLimitDays NullableLong `json:"gaiaOfflineSigninTimeLimitDays"`
}

type NullableLong struct {
	Value int64 `json:"value"`
}

func (p *GaiaOfflineSigninTimeLimitDays) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.GaiaOfflineSigninTimeLimitDays", p, []string{"gaiaOfflineSigninTimeLimitDays"})
}

///////////////////////////////////////////////////////////////////////////////
// GaiaLockScreenOfflineSigninTimeLimitDays
///////////////////////////////////////////////////////////////////////////////

type GaiaLockScreenOfflineSigninTimeLimitDays struct {
	GaiaLockScreenOfflineSigninTimeLimitDays NullableLong `json:"gaiaLockScreenOfflineSigninTimeLimitDays"`
}

func (p *GaiaLockScreenOfflineSigninTimeLimitDays) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.GaiaLockScreenOfflineSigninTimeLimitDays", p, []string{"gaiaLockScreenOfflineSigninTimeLimitDays"})
}

///////////////////////////////////////////////////////////////////////////////
// SingleSignOn
///////////////////////////////////////////////////////////////////////////////

type SingleSignOn struct {
	IdpRedirectEnabled bool `json:"idpRedirectEnabled"`
}

func (p *SingleSignOn) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.SingleSignOn", p, []string{"idpRedirectEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// SingleSignOnLoginFrequency
///////////////////////////////////////////////////////////////////////////////

type SingleSignOnLoginFrequency struct {
	SamlOfflineSigninTimeLimit SamlSigninTimeLimitEnum `json:"samlOfflineSigninTimeLimit"`
}

type SamlSigninTimeLimitEnum int

const (
	SAMLSIGNINTIMELIMITENUM_SAML_SIGNIN_TIME_LIMIT_ENUM_SAML_ONE_DAY     SamlSigninTimeLimitEnum = iota // 0
	SAMLSIGNINTIMELIMITENUM_SAML_SIGNIN_TIME_LIMIT_ENUM_SAML_THREE_DAYS                                 // 1
	SAMLSIGNINTIMELIMITENUM_SAML_SIGNIN_TIME_LIMIT_ENUM_SAML_ONE_WEEK                                   // 2
	SAMLSIGNINTIMELIMITENUM_SAML_SIGNIN_TIME_LIMIT_ENUM_SAML_TWO_WEEKS                                  // 3
	SAMLSIGNINTIMELIMITENUM_SAML_SIGNIN_TIME_LIMIT_ENUM_SAML_THREE_WEEKS                                // 4
	SAMLSIGNINTIMELIMITENUM_SAML_SIGNIN_TIME_LIMIT_ENUM_SAML_FOUR_WEEKS                                 // 5
	SAMLSIGNINTIMELIMITENUM_SAML_SIGNIN_TIME_LIMIT_ENUM_EVERY_TIME                                      // 6
	SAMLSIGNINTIMELIMITENUM_SAML_SIGNIN_TIME_LIMIT_ENUM_SAML_NEVER                                      // 7
)

func (p *SingleSignOnLoginFrequency) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.SingleSignOnLoginFrequency", p, []string{"samlOfflineSigninTimeLimit"})
}

///////////////////////////////////////////////////////////////////////////////
// SamlLockScreenOfflineSigninTimeLimitDays
///////////////////////////////////////////////////////////////////////////////

type SamlLockScreenOfflineSigninTimeLimitDays struct {
	SamlLockScreenOfflineSigninTimeLimitDays NullableLong `json:"samlLockScreenOfflineSigninTimeLimitDays"`
}

func (p *SamlLockScreenOfflineSigninTimeLimitDays) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.SamlLockScreenOfflineSigninTimeLimitDays", p, []string{"samlLockScreenOfflineSigninTimeLimitDays"})
}

///////////////////////////////////////////////////////////////////////////////
// CertificateTransparencyEnforcementDisabledForUrls
///////////////////////////////////////////////////////////////////////////////

type CertificateTransparencyEnforcementDisabledForUrls struct {
	CertificateTransparencyEnforcementDisabledForUrls []string `json:"certificateTransparencyEnforcementDisabledForUrls"`
}

func (p *CertificateTransparencyEnforcementDisabledForUrls) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.CertificateTransparencyEnforcementDisabledForUrls", p, []string{"certificateTransparencyEnforcementDisabledForUrls"})
}

///////////////////////////////////////////////////////////////////////////////
// CertTransparencyCas
///////////////////////////////////////////////////////////////////////////////

type CertTransparencyCas struct {
	CertificateTransparencyEnforcementDisabledForCas []string `json:"certificateTransparencyEnforcementDisabledForCas"`
}

func (p *CertTransparencyCas) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.CertTransparencyCas", p, []string{"certificateTransparencyEnforcementDisabledForCas"})
}

///////////////////////////////////////////////////////////////////////////////
// CertTransparencyLegacyCas
///////////////////////////////////////////////////////////////////////////////

type CertTransparencyLegacyCas struct {
	CertificateTransparencyEnforcementDisabledForLegacyCas []string `json:"certificateTransparencyEnforcementDisabledForLegacyCas"`
}

func (p *CertTransparencyLegacyCas) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.CertTransparencyLegacyCas", p, []string{"certificateTransparencyEnforcementDisabledForLegacyCas"})
}

///////////////////////////////////////////////////////////////////////////////
// CaCertificateManagementAllowed
///////////////////////////////////////////////////////////////////////////////

type CaCertificateManagementAllowed struct {
	CaCertificateManagementAllowed CACertificateManagementAllowedEnum `json:"caCertificateManagementAllowed"`
}

type CACertificateManagementAllowedEnum int

const (
	CACERTIFICATEMANAGEMENTALLOWEDENUM_CA_CERTIFICATE_MANAGEMENT_ALLOWED_ENUM_ALL       CACertificateManagementAllowedEnum = iota // 0
	CACERTIFICATEMANAGEMENTALLOWEDENUM_CA_CERTIFICATE_MANAGEMENT_ALLOWED_ENUM_USER_ONLY                                           // 1
	CACERTIFICATEMANAGEMENTALLOWEDENUM_CA_CERTIFICATE_MANAGEMENT_ALLOWED_ENUM_NONE                                                // 2
)

func (p *CaCertificateManagementAllowed) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.CaCertificateManagementAllowed", p, []string{"caCertificateManagementAllowed"})
}

///////////////////////////////////////////////////////////////////////////////
// ClientCertificateManagementAllowed
///////////////////////////////////////////////////////////////////////////////

type ClientCertificateManagementAllowed struct {
	ClientCertificateManagementAllowed ClientCertificateManagementAllowedEnum `json:"clientCertificateManagementAllowed"`
}

type ClientCertificateManagementAllowedEnum int

const (
	CLIENTCERTIFICATEMANAGEMENTALLOWEDENUM_CLIENT_CERTIFICATE_MANAGEMENT_ALLOWED_ENUM_ALL       ClientCertificateManagementAllowedEnum = iota // 0
	CLIENTCERTIFICATEMANAGEMENTALLOWEDENUM_CLIENT_CERTIFICATE_MANAGEMENT_ALLOWED_ENUM_USER_ONLY                                               // 1
	CLIENTCERTIFICATEMANAGEMENTALLOWEDENUM_CLIENT_CERTIFICATE_MANAGEMENT_ALLOWED_ENUM_NONE                                                    // 2
)

func (p *ClientCertificateManagementAllowed) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.ClientCertificateManagementAllowed", p, []string{"clientCertificateManagementAllowed"})
}

///////////////////////////////////////////////////////////////////////////////
// CpuTaskScheduler
///////////////////////////////////////////////////////////////////////////////

type CpuTaskScheduler struct {
	SchedulerConfiguration SchedulerConfigurationEnum `json:"schedulerConfiguration"`
}

type SchedulerConfigurationEnum int

const (
	SCHEDULERCONFIGURATIONENUM_SCHEDULER_CONFIGURATION_ENUM_USER_CHOICE  SchedulerConfigurationEnum = iota // 0
	SCHEDULERCONFIGURATIONENUM_SCHEDULER_CONFIGURATION_ENUM_CONSERVATIVE                                   // 1
	SCHEDULERCONFIGURATIONENUM_SCHEDULER_CONFIGURATION_ENUM_PERFORMANCE                                    // 2
)

func (p *CpuTaskScheduler) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.CpuTaskScheduler", p, []string{"schedulerConfiguration"})
}

///////////////////////////////////////////////////////////////////////////////
// RendererCodeIntegrityEnabled
///////////////////////////////////////////////////////////////////////////////

type RendererCodeIntegrityEnabled struct {
	RendererCodeIntegrityEnabled bool `json:"rendererCodeIntegrityEnabled"`
}

func (p *RendererCodeIntegrityEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.RendererCodeIntegrityEnabled", p, []string{"rendererCodeIntegrityEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// PasswordLeakDetection
///////////////////////////////////////////////////////////////////////////////

type PasswordLeakDetection struct {
	PasswordLeakDetection NullableBoolean `json:"passwordLeakDetection"`
}

func (p *PasswordLeakDetection) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.PasswordLeakDetection", p, []string{"passwordLeakDetection"})
}

///////////////////////////////////////////////////////////////////////////////
// AmbientAuthenticationInPrivateModesEnabled
///////////////////////////////////////////////////////////////////////////////

type AmbientAuthenticationInPrivateModesEnabled struct {
	AmbientAuthenticationInPrivateModesEnabled AmbientAuthenticationInPrivateModesEnabledEnum `json:"ambientAuthenticationInPrivateModesEnabled"`
}

type AmbientAuthenticationInPrivateModesEnabledEnum int

const (
	AMBIENTAUTHENTICATIONINPRIVATEMODESENABLEDENUM_AMBIENT_AUTHENTICATION_IN_PRIVATE_MODES_ENABLED_ENUM_UNSET                 AmbientAuthenticationInPrivateModesEnabledEnum = iota // 0
	AMBIENTAUTHENTICATIONINPRIVATEMODESENABLEDENUM_AMBIENT_AUTHENTICATION_IN_PRIVATE_MODES_ENABLED_ENUM_REGULAR_ONLY                                                                // 1
	AMBIENTAUTHENTICATIONINPRIVATEMODESENABLEDENUM_AMBIENT_AUTHENTICATION_IN_PRIVATE_MODES_ENABLED_ENUM_INCOGNITO_AND_REGULAR                                                       // 2
	AMBIENTAUTHENTICATIONINPRIVATEMODESENABLEDENUM_AMBIENT_AUTHENTICATION_IN_PRIVATE_MODES_ENABLED_ENUM_GUEST_AND_REGULAR                                                           // 3
	AMBIENTAUTHENTICATIONINPRIVATEMODESENABLEDENUM_AMBIENT_AUTHENTICATION_IN_PRIVATE_MODES_ENABLED_ENUM_ALL                                                                         // 4
)

func (p *AmbientAuthenticationInPrivateModesEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.AmbientAuthenticationInPrivateModesEnabled", p, []string{"ambientAuthenticationInPrivateModesEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// ChromeCleanupEnabled
///////////////////////////////////////////////////////////////////////////////

type ChromeCleanupEnabled struct {
	ChromeCleanupEnabled          bool            `json:"chromeCleanupEnabled"`
	ChromeCleanupReportingEnabled NullableBoolean `json:"chromeCleanupReportingEnabled"`
}

func (p *ChromeCleanupEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.ChromeCleanupEnabled", p, []string{"chromeCleanupEnabled", "chromeCleanupReportingEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// ThirdPartyBlockingEnabled
///////////////////////////////////////////////////////////////////////////////

type ThirdPartyBlockingEnabled struct {
	ThirdPartyBlockingEnabled bool `json:"thirdPartyBlockingEnabled"`
}

func (p *ThirdPartyBlockingEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.ThirdPartyBlockingEnabled", p, []string{"thirdPartyBlockingEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// AudioSandboxEnabled
///////////////////////////////////////////////////////////////////////////////

type AudioSandboxEnabled struct {
	AudioSandboxEnabled NullableBoolean `json:"audioSandboxEnabled"`
}

func (p *AudioSandboxEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.AudioSandboxEnabled", p, []string{"audioSandboxEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// SuppressUnsupportedOsWarning
///////////////////////////////////////////////////////////////////////////////

type SuppressUnsupportedOsWarning struct {
	SuppressUnsupportedOsWarning bool `json:"suppressUnsupportedOsWarning"`
}

func (p *SuppressUnsupportedOsWarning) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.SuppressUnsupportedOsWarning", p, []string{"suppressUnsupportedOsWarning"})
}

///////////////////////////////////////////////////////////////////////////////
// AdvancedProtectionAllowed
///////////////////////////////////////////////////////////////////////////////

type AdvancedProtectionAllowed struct {
	AdvancedProtectionAllowed bool `json:"advancedProtectionAllowed"`
}

func (p *AdvancedProtectionAllowed) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.AdvancedProtectionAllowed", p, []string{"advancedProtectionAllowed"})
}

///////////////////////////////////////////////////////////////////////////////
// OverrideSecurityRestrictionsOnInsecureOrigin
///////////////////////////////////////////////////////////////////////////////

type OverrideSecurityRestrictionsOnInsecureOrigin struct {
	OverrideSecurityRestrictionsOnInsecureOrigin []string `json:"overrideSecurityRestrictionsOnInsecureOrigin"`
}

func (p *OverrideSecurityRestrictionsOnInsecureOrigin) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.OverrideSecurityRestrictionsOnInsecureOrigin", p, []string{"overrideSecurityRestrictionsOnInsecureOrigin"})
}

///////////////////////////////////////////////////////////////////////////////
// CommandLineFlagSecurityWarningsEnabled
///////////////////////////////////////////////////////////////////////////////

type CommandLineFlagSecurityWarningsEnabled struct {
	CommandLineFlagSecurityWarningsEnabled bool `json:"commandLineFlagSecurityWarningsEnabled"`
}

func (p *CommandLineFlagSecurityWarningsEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.CommandLineFlagSecurityWarningsEnabled", p, []string{"commandLineFlagSecurityWarningsEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// TargetBlankImpliesNoOpener
///////////////////////////////////////////////////////////////////////////////

type TargetBlankImpliesNoOpener struct {
	TargetBlankImpliesNoOpener bool `json:"targetBlankImpliesNoOpener"`
}

func (p *TargetBlankImpliesNoOpener) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.TargetBlankImpliesNoOpener", p, []string{"targetBlankImpliesNoOpener"})
}

///////////////////////////////////////////////////////////////////////////////
// SecurityTokenSessionSettings
///////////////////////////////////////////////////////////////////////////////

type SecurityTokenSessionSettings struct {
	SecurityTokenSessionBehavior            SecurityTokenSessionBehaviorEnum `json:"securityTokenSessionBehavior"`
	SecurityTokenSessionNotificationSeconds NullableDuration                 `json:"securityTokenSessionNotificationSeconds"`
}

type SecurityTokenSessionBehaviorEnum int

const (
	SECURITYTOKENSESSIONBEHAVIORENUM_SECURITY_TOKEN_SESSION_BEHAVIOR_ENUM_IGNORE SecurityTokenSessionBehaviorEnum = iota // 0
	SECURITYTOKENSESSIONBEHAVIORENUM_SECURITY_TOKEN_SESSION_BEHAVIOR_ENUM_LOGOUT                                         // 1
	SECURITYTOKENSESSIONBEHAVIORENUM_SECURITY_TOKEN_SESSION_BEHAVIOR_ENUM_LOCK                                           // 2
)

func (p *SecurityTokenSessionSettings) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.SecurityTokenSessionSettings", p, []string{"securityTokenSessionBehavior", "securityTokenSessionNotificationSeconds"})
}

///////////////////////////////////////////////////////////////////////////////
// AllowSystemNotifications
///////////////////////////////////////////////////////////////////////////////

type AllowSystemNotifications struct {
	AllowSystemNotifications bool `json:"allowSystemNotifications"`
}

func (p *AllowSystemNotifications) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.AllowSystemNotifications", p, []string{"allowSystemNotifications"})
}

///////////////////////////////////////////////////////////////////////////////
// ScreenBrightnessPercent
///////////////////////////////////////////////////////////////////////////////

type ScreenBrightnessPercent struct {
	BrightnessEnabled bool  `json:"brightnessEnabled"`
	BrightnessAc      int64 `json:"brightnessAc"`
	BrightnessBattery int64 `json:"brightnessBattery"`
}

func (p *ScreenBrightnessPercent) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.ScreenBrightnessPercent", p, []string{"brightnessEnabled", "brightnessAc", "brightnessBattery"})
}

///////////////////////////////////////////////////////////////////////////////
// TripleDesEnabled
///////////////////////////////////////////////////////////////////////////////

type TripleDesEnabled struct {
	TripleDesEnabled NullableBoolean `json:"tripleDesEnabled"`
}

func (p *TripleDesEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.TripleDesEnabled", p, []string{"tripleDesEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// RemoteDebuggingAllowed
///////////////////////////////////////////////////////////////////////////////

type RemoteDebuggingAllowed struct {
	RemoteDebuggingAllowed bool `json:"remoteDebuggingAllowed"`
}

func (p *RemoteDebuggingAllowed) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.RemoteDebuggingAllowed", p, []string{"remoteDebuggingAllowed"})
}

///////////////////////////////////////////////////////////////////////////////
// DisplayCapturePermissionsPolicyEnabled
///////////////////////////////////////////////////////////////////////////////

type DisplayCapturePermissionsPolicyEnabled struct {
	DisplayCapturePermissionsPolicyEnabled bool `json:"displayCapturePermissionsPolicyEnabled"`
}

func (p *DisplayCapturePermissionsPolicyEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.DisplayCapturePermissionsPolicyEnabled", p, []string{"displayCapturePermissionsPolicyEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// WebSqlInThirdPartyContextEnabled
///////////////////////////////////////////////////////////////////////////////

type WebSqlInThirdPartyContextEnabled struct {
	WebSqlInThirdPartyContextEnabled bool `json:"webSqlInThirdPartyContextEnabled"`
}

func (p *WebSqlInThirdPartyContextEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.WebSqlInThirdPartyContextEnabled", p, []string{"webSqlInThirdPartyContextEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// UTwoFSecurityKeyApiEnabled
///////////////////////////////////////////////////////////////////////////////

type UTwoFSecurityKeyApiEnabled struct {
	UTwoFSecurityKeyApiEnabled bool `json:"uTwoFSecurityKeyApiEnabled"`
}

func (p *UTwoFSecurityKeyApiEnabled) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.UTwoFSecurityKeyApiEnabled", p, []string{"uTwoFSecurityKeyApiEnabled"})
}

///////////////////////////////////////////////////////////////////////////////
// RemoteAccessHostClientDomainList
///////////////////////////////////////////////////////////////////////////////

type RemoteAccessHostClientDomainList struct {
	RemoteAccessHostClientDomainList []string `json:"remoteAccessHostClientDomainList"`
}

func (p *RemoteAccessHostClientDomainList) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.RemoteAccessHostClientDomainList", p, []string{"remoteAccessHostClientDomainList"})
}

///////////////////////////////////////////////////////////////////////////////
// RemoteAccessHostDomainList
///////////////////////////////////////////////////////////////////////////////

type RemoteAccessHostDomainList struct {
	RemoteAccessHostDomainList []string `json:"remoteAccessHostDomainList"`
}

func (p *RemoteAccessHostDomainList) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.RemoteAccessHostDomainList", p, []string{"remoteAccessHostDomainList"})
}

///////////////////////////////////////////////////////////////////////////////
// RemoteAccessHostFirewallTraversal
///////////////////////////////////////////////////////////////////////////////

type RemoteAccessHostFirewallTraversal struct {
	RemoteAccessHostFirewallTraversal      bool   `json:"remoteAccessHostFirewallTraversal"`
	RemoteAccessHostAllowRelayedConnection bool   `json:"remoteAccessHostAllowRelayedConnection"`
	RemoteAccessHostUdpPortRange           string `json:"remoteAccessHostUdpPortRange"`
}

func (p *RemoteAccessHostFirewallTraversal) Schema2JSON(orgunit string) ([]byte, error) {
	return marshalJSON(orgunit, "chrome.users.RemoteAccessHostFirewallTraversal", p, []string{"remoteAccessHostFirewallTraversal", "remoteAccessHostAllowRelayedConnection", "remoteAccessHostUdpPortRange"})
}
