// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ui.proto

package ui

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WaitElementRequest struct {
	Role                 string   `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Timeout              int64    `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitElementRequest) Reset()         { *m = WaitElementRequest{} }
func (m *WaitElementRequest) String() string { return proto.CompactTextString(m) }
func (*WaitElementRequest) ProtoMessage()    {}
func (*WaitElementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63867a62624c1283, []int{0}
}

func (m *WaitElementRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitElementRequest.Unmarshal(m, b)
}
func (m *WaitElementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitElementRequest.Marshal(b, m, deterministic)
}
func (m *WaitElementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitElementRequest.Merge(m, src)
}
func (m *WaitElementRequest) XXX_Size() int {
	return xxx_messageInfo_WaitElementRequest.Size(m)
}
func (m *WaitElementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitElementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WaitElementRequest proto.InternalMessageInfo

func (m *WaitElementRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *WaitElementRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WaitElementRequest) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type ClickElementRequest struct {
	Role                 string   `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClickElementRequest) Reset()         { *m = ClickElementRequest{} }
func (m *ClickElementRequest) String() string { return proto.CompactTextString(m) }
func (*ClickElementRequest) ProtoMessage()    {}
func (*ClickElementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63867a62624c1283, []int{1}
}

func (m *ClickElementRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClickElementRequest.Unmarshal(m, b)
}
func (m *ClickElementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClickElementRequest.Marshal(b, m, deterministic)
}
func (m *ClickElementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickElementRequest.Merge(m, src)
}
func (m *ClickElementRequest) XXX_Size() int {
	return xxx_messageInfo_ClickElementRequest.Size(m)
}
func (m *ClickElementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickElementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClickElementRequest proto.InternalMessageInfo

func (m *ClickElementRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *ClickElementRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*WaitElementRequest)(nil), "tast.mtbf.ui.WaitElementRequest")
	proto.RegisterType((*ClickElementRequest)(nil), "tast.mtbf.ui.ClickElementRequest")
}

func init() { proto.RegisterFile("ui.proto", fileDescriptor_63867a62624c1283) }

var fileDescriptor_63867a62624c1283 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x8f, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x40, 0x49, 0x2b, 0x7e, 0xac, 0x3d, 0x8d, 0x20, 0xa1, 0x5e, 0x62, 0x4e, 0x3d, 0xcd, 0x82,
	0x9e, 0xbd, 0x28, 0x45, 0x7a, 0x0d, 0xa8, 0xe0, 0x2d, 0x09, 0xd3, 0x3a, 0x98, 0xed, 0xd4, 0xdd,
	0x59, 0xc1, 0x7f, 0xe2, 0xcf, 0x95, 0x4d, 0x28, 0x44, 0xd4, 0x8b, 0xb7, 0xd9, 0xd9, 0xdd, 0xc7,
	0x7b, 0xe6, 0x38, 0x32, 0xee, 0xbc, 0xa8, 0xc0, 0x4c, 0xeb, 0xa0, 0xe8, 0xb4, 0x59, 0x63, 0xe4,
	0xf9, 0xc5, 0x46, 0x64, 0xd3, 0x91, 0xed, 0xef, 0x9a, 0xb8, 0xb6, 0xe4, 0x76, 0xfa, 0x31, 0x3c,
	0x2d, 0x1f, 0x0d, 0x3c, 0xd5, 0xac, 0xcb, 0x8e, 0x1c, 0x6d, 0xb5, 0xa2, 0xb7, 0x48, 0x41, 0x01,
	0xcc, 0x81, 0x97, 0x8e, 0xf2, 0xac, 0xc8, 0x16, 0x27, 0x55, 0x3f, 0xa7, 0xdd, 0xb6, 0x76, 0x94,
	0x4f, 0x86, 0x5d, 0x9a, 0x21, 0x37, 0x47, 0xca, 0x8e, 0x24, 0x6a, 0x3e, 0x2d, 0xb2, 0xc5, 0xb4,
	0xda, 0x1f, 0xcb, 0x1b, 0x73, 0x76, 0xd7, 0x71, 0xfb, 0xfa, 0x3f, 0xf0, 0xd5, 0x67, 0x66, 0x26,
	0x0f, 0x2b, 0xb8, 0x37, 0xa7, 0x23, 0x3b, 0x28, 0x70, 0x1c, 0x86, 0x3f, 0xc5, 0xe7, 0xe7, 0x38,
	0xc4, 0xe2, 0x3e, 0x16, 0x97, 0x29, 0x16, 0x56, 0x66, 0x36, 0xd6, 0x81, 0xcb, 0xef, 0xa4, 0x5f,
	0x54, 0xff, 0x42, 0xdd, 0x96, 0xcf, 0x45, 0xfb, 0xe2, 0xc5, 0x71, 0x74, 0x12, 0x6c, 0xc2, 0xd8,
	0x40, 0xfe, 0x9d, 0x5b, 0x0a, 0x36, 0xf1, 0x6c, 0xe4, 0xe6, 0xb0, 0xff, 0x73, 0xfd, 0x15, 0x00,
	0x00, 0xff, 0xff, 0xf6, 0xce, 0x26, 0xc3, 0x93, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UIClient is the client API for UI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UIClient interface {
	WaitElement(ctx context.Context, in *WaitElementRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ClickElement(ctx context.Context, in *ClickElementRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type uIClient struct {
	cc *grpc.ClientConn
}

func NewUIClient(cc *grpc.ClientConn) UIClient {
	return &uIClient{cc}
}

func (c *uIClient) WaitElement(ctx context.Context, in *WaitElementRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.mtbf.ui.UI/WaitElement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uIClient) ClickElement(ctx context.Context, in *ClickElementRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.mtbf.ui.UI/ClickElement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UIServer is the server API for UI service.
type UIServer interface {
	WaitElement(context.Context, *WaitElementRequest) (*empty.Empty, error)
	ClickElement(context.Context, *ClickElementRequest) (*empty.Empty, error)
}

// UnimplementedUIServer can be embedded to have forward compatible implementations.
type UnimplementedUIServer struct {
}

func (*UnimplementedUIServer) WaitElement(ctx context.Context, req *WaitElementRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WaitElement not implemented")
}
func (*UnimplementedUIServer) ClickElement(ctx context.Context, req *ClickElementRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClickElement not implemented")
}

func RegisterUIServer(s *grpc.Server, srv UIServer) {
	s.RegisterService(&_UI_serviceDesc, srv)
}

func _UI_WaitElement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitElementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UIServer).WaitElement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.mtbf.ui.UI/WaitElement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UIServer).WaitElement(ctx, req.(*WaitElementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UI_ClickElement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClickElementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UIServer).ClickElement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.mtbf.ui.UI/ClickElement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UIServer).ClickElement(ctx, req.(*ClickElementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.mtbf.ui.UI",
	HandlerType: (*UIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WaitElement",
			Handler:    _UI_WaitElement_Handler,
		},
		{
			MethodName: "ClickElement",
			Handler:    _UI_ClickElement_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ui.proto",
}
