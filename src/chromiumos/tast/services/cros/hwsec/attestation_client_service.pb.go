// Code generated by protoc-gen-go. DO NOT EDIT.
// source: attestation_client_service.proto

package hwsec

import (
	attestation_proto "chromiumos/system_api/attestation_proto"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("attestation_client_service.proto", fileDescriptor_409539be86ff0a06) }

var fileDescriptor_409539be86ff0a06 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0x2c, 0x29, 0x49,
	0x2d, 0x2e, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x8b, 0x4f, 0xce, 0xc9, 0x4c, 0xcd, 0x2b, 0x89, 0x2f,
	0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2f, 0x49,
	0x2c, 0x2e, 0xd1, 0x4b, 0x2e, 0xca, 0x2f, 0xd6, 0xcb, 0x28, 0x2f, 0x4e, 0x4d, 0x96, 0xe2, 0xcf,
	0xcc, 0x2b, 0x49, 0x2d, 0x4a, 0x4b, 0x84, 0xa9, 0x30, 0x4a, 0xe5, 0x92, 0x70, 0x44, 0x98, 0xe2,
	0x0c, 0x36, 0x24, 0x18, 0x62, 0x86, 0x90, 0x27, 0x17, 0xa7, 0x7b, 0x6a, 0x49, 0x70, 0x49, 0x62,
	0x49, 0x69, 0xb1, 0x90, 0xac, 0x1e, 0x92, 0x6d, 0x7a, 0x70, 0xf1, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4,
	0xe2, 0x12, 0x29, 0x69, 0x5c, 0xd2, 0x05, 0x39, 0x95, 0x4a, 0x0c, 0x4e, 0xea, 0x1e, 0xcc, 0x51,
	0xca, 0xc9, 0x19, 0x45, 0xf9, 0xb9, 0x99, 0xa5, 0xb9, 0xf9, 0xc5, 0xfa, 0x20, 0x77, 0xe9, 0x43,
	0xdd, 0x5a, 0xac, 0x0f, 0x72, 0xa0, 0x3e, 0xd8, 0x81, 0x49, 0x6c, 0x60, 0x67, 0x19, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xe6, 0x44, 0x64, 0x06, 0xdc, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AttestationClientServiceClient is the client API for AttestationClientService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AttestationClientServiceClient interface {
	// GetStatus returns the attestation status.
	GetStatus(ctx context.Context, in *attestation_proto.GetStatusRequest, opts ...grpc.CallOption) (*attestation_proto.GetStatusReply, error)
}

type attestationClientServiceClient struct {
	cc *grpc.ClientConn
}

func NewAttestationClientServiceClient(cc *grpc.ClientConn) AttestationClientServiceClient {
	return &attestationClientServiceClient{cc}
}

func (c *attestationClientServiceClient) GetStatus(ctx context.Context, in *attestation_proto.GetStatusRequest, opts ...grpc.CallOption) (*attestation_proto.GetStatusReply, error) {
	out := new(attestation_proto.GetStatusReply)
	err := c.cc.Invoke(ctx, "/tast.cros.hwsec.AttestationClientService/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttestationClientServiceServer is the server API for AttestationClientService service.
type AttestationClientServiceServer interface {
	// GetStatus returns the attestation status.
	GetStatus(context.Context, *attestation_proto.GetStatusRequest) (*attestation_proto.GetStatusReply, error)
}

// UnimplementedAttestationClientServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAttestationClientServiceServer struct {
}

func (*UnimplementedAttestationClientServiceServer) GetStatus(ctx context.Context, req *attestation_proto.GetStatusRequest) (*attestation_proto.GetStatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}

func RegisterAttestationClientServiceServer(s *grpc.Server, srv AttestationClientServiceServer) {
	s.RegisterService(&_AttestationClientService_serviceDesc, srv)
}

func _AttestationClientService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(attestation_proto.GetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttestationClientServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.hwsec.AttestationClientService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttestationClientServiceServer).GetStatus(ctx, req.(*attestation_proto.GetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AttestationClientService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.hwsec.AttestationClientService",
	HandlerType: (*AttestationClientServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _AttestationClientService_GetStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "attestation_client_service.proto",
}
