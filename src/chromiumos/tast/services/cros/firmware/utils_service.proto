// Copyright 2019 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package tast.cros.firmware;

import "google/protobuf/empty.proto";

option go_package = "chromiumos/tast/services/cros/firmware";

// UtilsService provides some basic operations used by firmware tests.
service UtilsService {
  // Platform gets the name of the DUT platform (coral, samus, drallion, etc).
  rpc Platform (google.protobuf.Empty) returns (PlatformResponse) {}

  // CurrentBootMode determines which boot mode the DUT is in.
  rpc CurrentBootMode (google.protobuf.Empty) returns (CurrentBootModeResponse) {}

  // BlockingSync syncs the root device and internal device.
  rpc BlockingSync (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // ReadServoKeyboard reads from the servo's keyboard emulator.
  rpc ReadServoKeyboard (google.protobuf.Empty) returns (ReadServoKeyboardResponse) {}
}

// BootMode contains values for the three possible modes of a powered-on DUT.
enum BootMode {
  BOOT_MODE_UNSPECIFIED = 0;
  BOOT_MODE_NORMAL = 1;
  BOOT_MODE_DEV = 2;
  BOOT_MODE_RECOVERY = 3;
}

message PlatformResponse {
  string Platform = 1;
}

message CurrentBootModeResponse {
  BootMode boot_mode = 1;
}

message ReadServoKeyboardResponse {
  bytes keys = 1;
}
