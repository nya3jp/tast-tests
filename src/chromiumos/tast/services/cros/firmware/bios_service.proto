// Copyright 2020 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package tast.cros.firmware;

import "google/protobuf/empty.proto";

option go_package = "chromiumos/tast/services/cros/firmware";

// BiosService provides ability to manipulate bios settings on DUT
service BiosService {
  // GetGBBFlags gets the flags that are cleared and set.
  rpc GetGBBFlags (google.protobuf.Empty) returns (GBBFlagsState) {}
  // ClearAndSetGBBFlags modifies the specified flags, leaving the rest unchanged.
  rpc ClearAndSetGBBFlags (GBBFlagsState) returns (google.protobuf.Empty) {}
  // EnableAPSoftwareWriteProtect enables the AP software write protect.
  rpc EnableAPSoftwareWriteProtect (google.protobuf.Empty) returns (google.protobuf.Empty) {}
  // CorruptECSection writes garbage bytes to the entire EC section specified.
  rpc CorruptECSection (CorruptSection) returns (google.protobuf.Empty) {}
  // BackupImageSection backs up the current fw region locally and returns its path.
  rpc BackupImageSection (FWBackUpSection) returns (FWBackUpInfo) {}
  // RestoreImageSection restores the fw region from path.
  rpc RestoreImageSection (FWBackUpInfo) returns (google.protobuf.Empty) {}
}

// GBBFlag bit positions
enum GBBFlag {
  DEV_SCREEN_SHORT_DELAY    = 0;
  LOAD_OPTION_ROMS          = 1;
  ENABLE_ALTERNATE_OS       = 2;
  FORCE_DEV_SWITCH_ON       = 3;
  FORCE_DEV_BOOT_USB        = 4;
  DISABLE_FW_ROLLBACK_CHECK = 5;
  ENTER_TRIGGERS_TONORM     = 6;
  FORCE_DEV_BOOT_LEGACY     = 7;
  FAFT_KEY_OVERIDE          = 8;
  DISABLE_EC_SOFTWARE_SYNC  = 9;
  DEFAULT_DEV_BOOT_LEGACY   = 10;
  DISABLE_PD_SOFTWARE_SYNC  = 11;
  DISABLE_LID_SHUTDOWN      = 12;
  FORCE_DEV_BOOT_FASTBOOT_FULL_CAP = 13;
}

// Programmers enum for flashrom programmers
enum Programmer {
  BIOSProgrammer = 0;
  ECProgrammer = 1;
}

// ImageSections enum for fw ImageSections
enum ImageSection {
  BOOTSTUBImageSection = 0;
  COREBOOTImageSection = 1;
  GBBImageSection = 2;
  ECRWImageSection = 3;
  ECRWBImageSection = 4;
  EmptyImageSection = 5;
}

// GBBFlagsState represents the a known state of GBB flags.  Set flags have precedence over cleared ones.
message GBBFlagsState {
  repeated GBBFlag Clear = 1;
  repeated GBBFlag Set = 2;
}

// FWBackUpInfo represents the path, programmer, and section of image backup.
message FWBackUpInfo {
  string Path = 1;
  ImageSection Section = 2;
  Programmer Programmer = 3;
}

// FWBackUpSection represents the string containing the image section to back up and the programmer to use.
message FWBackUpSection {
  ImageSection Section = 1;
  Programmer Programmer = 2;
}

// CorruptSection selects the section to corrupt.
message CorruptSection {
  ImageSection Section = 1;
}