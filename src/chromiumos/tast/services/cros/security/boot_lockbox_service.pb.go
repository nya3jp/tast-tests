// Code generated by protoc-gen-go. DO NOT EDIT.
// source: boot_lockbox_service.proto

/*
Package security is a generated protocol buffer package.

It is generated from these files:
	boot_lockbox_service.proto

It has these top-level messages:
	ReadBootLockboxRequest
	ReadBootLockboxResponse
	StoreBootLockboxRequest
*/
package security

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReadBootLockboxRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *ReadBootLockboxRequest) Reset()                    { *m = ReadBootLockboxRequest{} }
func (m *ReadBootLockboxRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadBootLockboxRequest) ProtoMessage()               {}
func (*ReadBootLockboxRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ReadBootLockboxRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ReadBootLockboxResponse struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *ReadBootLockboxResponse) Reset()                    { *m = ReadBootLockboxResponse{} }
func (m *ReadBootLockboxResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadBootLockboxResponse) ProtoMessage()               {}
func (*ReadBootLockboxResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadBootLockboxResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type StoreBootLockboxRequest struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *StoreBootLockboxRequest) Reset()                    { *m = StoreBootLockboxRequest{} }
func (m *StoreBootLockboxRequest) String() string            { return proto.CompactTextString(m) }
func (*StoreBootLockboxRequest) ProtoMessage()               {}
func (*StoreBootLockboxRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StoreBootLockboxRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StoreBootLockboxRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*ReadBootLockboxRequest)(nil), "tast.cros.security.ReadBootLockboxRequest")
	proto.RegisterType((*ReadBootLockboxResponse)(nil), "tast.cros.security.ReadBootLockboxResponse")
	proto.RegisterType((*StoreBootLockboxRequest)(nil), "tast.cros.security.StoreBootLockboxRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BootLockboxService service

type BootLockboxServiceClient interface {
	// Reads a value from Boot Lockbox.
	Read(ctx context.Context, in *ReadBootLockboxRequest, opts ...grpc.CallOption) (*ReadBootLockboxResponse, error)
	// Stores a value to Boot Lockbox.
	Store(ctx context.Context, in *StoreBootLockboxRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type bootLockboxServiceClient struct {
	cc *grpc.ClientConn
}

func NewBootLockboxServiceClient(cc *grpc.ClientConn) BootLockboxServiceClient {
	return &bootLockboxServiceClient{cc}
}

func (c *bootLockboxServiceClient) Read(ctx context.Context, in *ReadBootLockboxRequest, opts ...grpc.CallOption) (*ReadBootLockboxResponse, error) {
	out := new(ReadBootLockboxResponse)
	err := grpc.Invoke(ctx, "/tast.cros.security.BootLockboxService/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bootLockboxServiceClient) Store(ctx context.Context, in *StoreBootLockboxRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/tast.cros.security.BootLockboxService/Store", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BootLockboxService service

type BootLockboxServiceServer interface {
	// Reads a value from Boot Lockbox.
	Read(context.Context, *ReadBootLockboxRequest) (*ReadBootLockboxResponse, error)
	// Stores a value to Boot Lockbox.
	Store(context.Context, *StoreBootLockboxRequest) (*google_protobuf.Empty, error)
}

func RegisterBootLockboxServiceServer(s *grpc.Server, srv BootLockboxServiceServer) {
	s.RegisterService(&_BootLockboxService_serviceDesc, srv)
}

func _BootLockboxService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadBootLockboxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BootLockboxServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.security.BootLockboxService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BootLockboxServiceServer).Read(ctx, req.(*ReadBootLockboxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BootLockboxService_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreBootLockboxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BootLockboxServiceServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.security.BootLockboxService/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BootLockboxServiceServer).Store(ctx, req.(*StoreBootLockboxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BootLockboxService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.security.BootLockboxService",
	HandlerType: (*BootLockboxServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _BootLockboxService_Read_Handler,
		},
		{
			MethodName: "Store",
			Handler:    _BootLockboxService_Store_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "boot_lockbox_service.proto",
}

func init() { proto.RegisterFile("boot_lockbox_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x1b, 0xb5, 0x82, 0x8b, 0x07, 0x59, 0xa4, 0x95, 0x78, 0x91, 0x3d, 0x48, 0xa9, 0xb0,
	0x0b, 0xfa, 0x04, 0x16, 0xbc, 0x89, 0x87, 0xf4, 0xe6, 0xa5, 0x24, 0xeb, 0x58, 0x43, 0x13, 0x27,
	0xee, 0xcc, 0x16, 0xf3, 0x84, 0xbe, 0x96, 0x6c, 0xd6, 0x62, 0xa1, 0x2d, 0xe4, 0x96, 0xc0, 0xff,
	0x7f, 0xcc, 0xf7, 0xaf, 0x48, 0x0b, 0x44, 0x5e, 0x54, 0x68, 0x57, 0x05, 0x7e, 0x2f, 0x08, 0xdc,
	0xba, 0xb4, 0xa0, 0x1b, 0x87, 0x8c, 0x52, 0x72, 0x4e, 0xac, 0xad, 0x43, 0xd2, 0x04, 0xd6, 0xbb,
	0x92, 0xdb, 0xf4, 0x7a, 0x89, 0xb8, 0xac, 0xc0, 0x74, 0x89, 0xc2, 0xbf, 0x1b, 0xa8, 0x1b, 0x6e,
	0x63, 0x41, 0x4d, 0xc5, 0x28, 0x83, 0xfc, 0x6d, 0x86, 0xc8, 0xcf, 0x91, 0x98, 0xc1, 0x97, 0x07,
	0x62, 0x79, 0x21, 0x8e, 0x57, 0xd0, 0x5e, 0x25, 0x37, 0xc9, 0xe4, 0x2c, 0x0b, 0x9f, 0xca, 0x88,
	0xf1, 0x4e, 0x96, 0x1a, 0xfc, 0x24, 0x90, 0x97, 0x62, 0xb8, 0xce, 0x2b, 0x0f, 0x5d, 0xfc, 0x3c,
	0x8b, 0x3f, 0xea, 0x51, 0x8c, 0xe7, 0x8c, 0x0e, 0xfa, 0xd0, 0xff, 0x11, 0x47, 0x5b, 0x88, 0xfb,
	0x9f, 0x44, 0xc8, 0xad, 0xfa, 0x3c, 0xda, 0xca, 0x5c, 0x9c, 0x84, 0x53, 0xe4, 0x54, 0xef, 0x0a,
	0xeb, 0xfd, 0x42, 0xe9, 0x5d, 0xaf, 0x6c, 0x14, 0x52, 0x03, 0xf9, 0x22, 0x86, 0xdd, 0xf1, 0x72,
	0x6f, 0xef, 0x80, 0x57, 0x3a, 0xd2, 0x71, 0x6d, 0xbd, 0x59, 0x5b, 0x3f, 0x85, 0xb5, 0xd5, 0x60,
	0x36, 0x79, 0xbd, 0xb5, 0x1f, 0x0e, 0xeb, 0xd2, 0xd7, 0x48, 0x26, 0x20, 0xcd, 0xdf, 0xdb, 0x91,
	0x09, 0x6c, 0xb3, 0x61, 0x17, 0xa7, 0x5d, 0xf7, 0xe1, 0x37, 0x00, 0x00, 0xff, 0xff, 0x06, 0xf0,
	0x71, 0x8e, 0xe9, 0x01, 0x00, 0x00,
}
