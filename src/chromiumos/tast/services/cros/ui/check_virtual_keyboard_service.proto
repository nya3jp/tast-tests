// Copyright 2021 The ChromiumOS Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package tast.cros.ui;

import "google/protobuf/empty.proto";

option go_package = "chromiumos/tast/services/cros/ui";

// CheckVirtualKeyboardService checks whether the virtual keyboard is present.
service CheckVirtualKeyboardService {
    // NewChromeLoggedIn Logs into a user session.
    rpc NewChromeLoggedIn (NewBrowserRequest) returns (google.protobuf.Empty) {}
    // CloseChrome releases the resources obtained by NewChrome.
    rpc CloseChrome (google.protobuf.Empty) returns (google.protobuf.Empty) {}
    // OpenChromePage opens a chrome page.
    rpc OpenChromePage (google.protobuf.Empty) returns (google.protobuf.Empty) {}
    // ClickChromeAddressBar clicks on the address bar.
    rpc ClickChromeAddressBar (google.protobuf.Empty) returns (google.protobuf.Empty) {}
    // TouchChromeAddressBar sends a tap on the touch screen to touch on the address bar.
    rpc TouchChromeAddressBar (google.protobuf.Empty) returns (google.protobuf.Empty) {}
    // CheckVirtualKeyboardIsPresent checks whether the virtual keyboard is present.
    rpc CheckVirtualKeyboardIsPresent (CheckVirtualKeyboardRequest) returns (CheckVirtualKeyboardResponse) {}
    // ClickSearchBar clicks the search bar.
    rpc ClickSearchBar (CheckVirtualKeyboardRequest) returns (google.protobuf.Empty) {}
}

// NewBrowserRequest to login to Chrome with a desired browser enabled.
message NewBrowserRequest {
    enum BrowserType {
        ASH = 0;
        LACROS = 1;
    }
    BrowserType browser_type = 1;
}

message CheckVirtualKeyboardRequest {
    bool is_dut_tablet_mode = 1;
}

message CheckVirtualKeyboardResponse {
    bool is_virtual_keyboard_present = 1;
}
