// Copyright 2022 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package tast.cros.shimlessrma;

import "google/protobuf/empty.proto";

option go_package = "chromiumos/tast/services/cros/shimlessrma";

// AppService provide operations to ShimlessRMA on the DUT.
service AppService {
  // Creates ShimlessRMA.
  rpc NewShimlessRMA (NewShimlessRMARequest) returns (google.protobuf.Empty) {}

  // Closes and releases the resources obtained by New.
  rpc CloseShimlessRMA (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // Test welcome page and network connection page.
  rpc TestWelcomeAndNetworkConnection (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // Prepare DUT for offline test (temporary local test).
  rpc PrepareOfflineTest (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // Waits for page to load.
  rpc WaitForPageToLoad (WaitForPageToLoadRequest) returns (google.protobuf.Empty) {}

  // Left clicks a button.
  rpc LeftClickButton (LeftClickButtonRequest) returns (google.protobuf.Empty) {}

  // Waits until a button enabled.
  rpc WaitUntilButtonEnabled (WaitUntilButtonEnabledRequest) returns (google.protobuf.Empty) {}

  // Left clicks a Radio button.
  rpc LeftClickRadioButton (LeftClickRadioButtonRequest) returns (google.protobuf.Empty) {}

  // Left clicks a link.
  rpc LeftClickLink (LeftClickLinkRequest) returns (google.protobuf.Empty) {}

  // Retrieve a text by prefix
  rpc RetrieveTextByPrefix (RetrieveTextByPrefixRequest) returns (RetrieveTextByPrefixResponse) {}

  // Enter the content into input box.
  rpc EnterIntoTextInput(EnterIntoTextInputRequest) returns (google.protobuf.Empty) {}

  // Bypass firmware installation.
  rpc BypassFirmwareInstallation(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // VerifyNoWifiConnected verify that no wifi is connected.
  rpc VerifyNoWifiConnected(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // VerifyTestWelcomeAndNetworkConnectionSuccess verify that TestWelcomeAndNetworkConnection runs successfully.
  rpc VerifyTestWelcomeAndNetworkConnectionSuccess(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

message NewShimlessRMARequest {
  // Provides manifestKey for testing extension.
  string manifestKey = 1;
  // Indicates whether it is a re-connect.
  // If yes, then we avoid some operations, like creating empty state file.
  bool reconnect = 2;
}

message WaitForPageToLoadRequest {
  // Provides title of a page.
  string title = 1;
  // Provides the waiting periods in seconds.
  int32 durationInSecond = 2;
}

message LeftClickButtonRequest {
  // Provides the label of button.
  string label = 1;
}

message WaitUntilButtonEnabledRequest {
  // Provides the label of button.
  string label = 1;
  // Provides the waiting periods in seconds.
  int32 durationInSecond = 2;
}

message LeftClickRadioButtonRequest {
  // Provides the label of radio button.
  string label = 1;
}

message LeftClickLinkRequest {
  // Label provides the label of link.
  string label = 1;
}

message RetrieveTextByPrefixRequest {
  // Prefix provides the prefix of text.
  string prefix = 1;
}

message RetrieveTextByPrefixResponse {
  // Value is the text with prefix.
  string value = 1;
}

message EnterIntoTextInputRequest {
  // TextInputName is the name of text input.
  string textInputName = 1;
  // Content is the text which will be entered into input.
  string content = 2;
}
