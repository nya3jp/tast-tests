// Code generated by protoc-gen-go. DO NOT EDIT.
// source: power_service.proto

package power

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BatteryStatusResponse struct {
	Percentage           float64  `protobuf:"fixed64,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatteryStatusResponse) Reset()         { *m = BatteryStatusResponse{} }
func (m *BatteryStatusResponse) String() string { return proto.CompactTextString(m) }
func (*BatteryStatusResponse) ProtoMessage()    {}
func (*BatteryStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb3c947f7ca18474, []int{0}
}

func (m *BatteryStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatteryStatusResponse.Unmarshal(m, b)
}
func (m *BatteryStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatteryStatusResponse.Marshal(b, m, deterministic)
}
func (m *BatteryStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatteryStatusResponse.Merge(m, src)
}
func (m *BatteryStatusResponse) XXX_Size() int {
	return xxx_messageInfo_BatteryStatusResponse.Size(m)
}
func (m *BatteryStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatteryStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatteryStatusResponse proto.InternalMessageInfo

func (m *BatteryStatusResponse) GetPercentage() float64 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

type BatteryChargeRequest struct {
	Percentage           float64  `protobuf:"fixed64,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatteryChargeRequest) Reset()         { *m = BatteryChargeRequest{} }
func (m *BatteryChargeRequest) String() string { return proto.CompactTextString(m) }
func (*BatteryChargeRequest) ProtoMessage()    {}
func (*BatteryChargeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb3c947f7ca18474, []int{1}
}

func (m *BatteryChargeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatteryChargeRequest.Unmarshal(m, b)
}
func (m *BatteryChargeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatteryChargeRequest.Marshal(b, m, deterministic)
}
func (m *BatteryChargeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatteryChargeRequest.Merge(m, src)
}
func (m *BatteryChargeRequest) XXX_Size() int {
	return xxx_messageInfo_BatteryChargeRequest.Size(m)
}
func (m *BatteryChargeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatteryChargeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatteryChargeRequest proto.InternalMessageInfo

func (m *BatteryChargeRequest) GetPercentage() float64 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

type BatteryDrainRequest struct {
	Percentage           float64  `protobuf:"fixed64,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatteryDrainRequest) Reset()         { *m = BatteryDrainRequest{} }
func (m *BatteryDrainRequest) String() string { return proto.CompactTextString(m) }
func (*BatteryDrainRequest) ProtoMessage()    {}
func (*BatteryDrainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb3c947f7ca18474, []int{2}
}

func (m *BatteryDrainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatteryDrainRequest.Unmarshal(m, b)
}
func (m *BatteryDrainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatteryDrainRequest.Marshal(b, m, deterministic)
}
func (m *BatteryDrainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatteryDrainRequest.Merge(m, src)
}
func (m *BatteryDrainRequest) XXX_Size() int {
	return xxx_messageInfo_BatteryDrainRequest.Size(m)
}
func (m *BatteryDrainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatteryDrainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatteryDrainRequest proto.InternalMessageInfo

func (m *BatteryDrainRequest) GetPercentage() float64 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

func init() {
	proto.RegisterType((*BatteryStatusResponse)(nil), "tast.cros.power.BatteryStatusResponse")
	proto.RegisterType((*BatteryChargeRequest)(nil), "tast.cros.power.BatteryChargeRequest")
	proto.RegisterType((*BatteryDrainRequest)(nil), "tast.cros.power.BatteryDrainRequest")
}

func init() { proto.RegisterFile("power_service.proto", fileDescriptor_eb3c947f7ca18474) }

var fileDescriptor_eb3c947f7ca18474 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x40, 0x1b, 0x0f, 0x1e, 0x96, 0x8a, 0xb0, 0x55, 0x91, 0x08, 0x22, 0xd1, 0x8a, 0xa7, 0x5d,
	0x50, 0xd4, 0x7b, 0xd5, 0xab, 0xd4, 0xf4, 0xe6, 0x45, 0xb6, 0x61, 0x4c, 0x03, 0x26, 0xb3, 0xce,
	0x4c, 0x94, 0x9e, 0xfd, 0xe3, 0x92, 0x0f, 0x25, 0x11, 0x83, 0x5e, 0x33, 0x79, 0x6f, 0xf7, 0xcd,
	0xaa, 0x89, 0xc7, 0x77, 0xa0, 0x27, 0x06, 0x7a, 0xcb, 0x12, 0x30, 0x9e, 0x50, 0x50, 0x6f, 0x8b,
	0x63, 0x31, 0x09, 0x21, 0x9b, 0x7a, 0x1c, 0x1e, 0xa4, 0x88, 0xe9, 0x0b, 0xd8, 0x7a, 0xbc, 0x2c,
	0x9f, 0x2d, 0xe4, 0x5e, 0xd6, 0xcd, 0xdf, 0xd1, 0xb5, 0xda, 0x9d, 0x39, 0x11, 0xa0, 0xf5, 0x42,
	0x9c, 0x94, 0x1c, 0x03, 0x7b, 0x2c, 0x18, 0xf4, 0xa1, 0x52, 0x1e, 0x28, 0x81, 0x42, 0x5c, 0x0a,
	0xfb, 0xc1, 0x51, 0x70, 0x16, 0xc4, 0x9d, 0x2f, 0xd1, 0x95, 0xda, 0x69, 0xc1, 0x9b, 0x95, 0xa3,
	0x14, 0x62, 0x78, 0x2d, 0x81, 0xe5, 0x4f, 0xee, 0x52, 0x4d, 0x5a, 0xee, 0x96, 0x5c, 0x56, 0xfc,
	0x13, 0x3b, 0xff, 0xd8, 0x50, 0xe3, 0x79, 0x95, 0xb3, 0x68, 0x62, 0xf5, 0x83, 0xda, 0xea, 0x5d,
	0x5c, 0xef, 0x99, 0xa6, 0xd3, 0x7c, 0x75, 0x9a, 0xbb, 0xaa, 0x33, 0x3c, 0x35, 0x3f, 0x16, 0x62,
	0x7e, 0x0d, 0x8e, 0x46, 0x7a, 0xfe, 0xad, 0x6c, 0x92, 0xf4, 0x74, 0x08, 0xed, 0x25, 0x87, 0x03,
	0x27, 0x47, 0x23, 0x7d, 0xaf, 0xc6, 0xdd, 0x58, 0x7d, 0x32, 0x24, 0xec, 0xee, 0x62, 0xd8, 0x37,
	0x9b, 0x3e, 0x1e, 0x27, 0x2b, 0xc2, 0x3c, 0x2b, 0x73, 0x64, 0x5b, 0xb9, 0x6c, 0xfb, 0xf8, 0x6c,
	0x2b, 0xa9, 0xad, 0xa5, 0xcb, 0xcd, 0x1a, 0xbc, 0xf8, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x65,
	0x37, 0xb0, 0x20, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PowerServiceClient is the client API for PowerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PowerServiceClient interface {
	BatteryStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BatteryStatusResponse, error)
	BatteryCharge(ctx context.Context, in *BatteryChargeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	BatteryDrain(ctx context.Context, in *BatteryDrainRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type powerServiceClient struct {
	cc *grpc.ClientConn
}

func NewPowerServiceClient(cc *grpc.ClientConn) PowerServiceClient {
	return &powerServiceClient{cc}
}

func (c *powerServiceClient) BatteryStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BatteryStatusResponse, error) {
	out := new(BatteryStatusResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.power.PowerService/BatteryStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *powerServiceClient) BatteryCharge(ctx context.Context, in *BatteryChargeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.power.PowerService/BatteryCharge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *powerServiceClient) BatteryDrain(ctx context.Context, in *BatteryDrainRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.power.PowerService/BatteryDrain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PowerServiceServer is the server API for PowerService service.
type PowerServiceServer interface {
	BatteryStatus(context.Context, *empty.Empty) (*BatteryStatusResponse, error)
	BatteryCharge(context.Context, *BatteryChargeRequest) (*empty.Empty, error)
	BatteryDrain(context.Context, *BatteryDrainRequest) (*empty.Empty, error)
}

// UnimplementedPowerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPowerServiceServer struct {
}

func (*UnimplementedPowerServiceServer) BatteryStatus(ctx context.Context, req *empty.Empty) (*BatteryStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatteryStatus not implemented")
}
func (*UnimplementedPowerServiceServer) BatteryCharge(ctx context.Context, req *BatteryChargeRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatteryCharge not implemented")
}
func (*UnimplementedPowerServiceServer) BatteryDrain(ctx context.Context, req *BatteryDrainRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatteryDrain not implemented")
}

func RegisterPowerServiceServer(s *grpc.Server, srv PowerServiceServer) {
	s.RegisterService(&_PowerService_serviceDesc, srv)
}

func _PowerService_BatteryStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PowerServiceServer).BatteryStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.power.PowerService/BatteryStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PowerServiceServer).BatteryStatus(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PowerService_BatteryCharge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatteryChargeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PowerServiceServer).BatteryCharge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.power.PowerService/BatteryCharge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PowerServiceServer).BatteryCharge(ctx, req.(*BatteryChargeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PowerService_BatteryDrain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatteryDrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PowerServiceServer).BatteryDrain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.power.PowerService/BatteryDrain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PowerServiceServer).BatteryDrain(ctx, req.(*BatteryDrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PowerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.power.PowerService",
	HandlerType: (*PowerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BatteryStatus",
			Handler:    _PowerService_BatteryStatus_Handler,
		},
		{
			MethodName: "BatteryCharge",
			Handler:    _PowerService_BatteryCharge_Handler,
		},
		{
			MethodName: "BatteryDrain",
			Handler:    _PowerService_BatteryDrain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "power_service.proto",
}
