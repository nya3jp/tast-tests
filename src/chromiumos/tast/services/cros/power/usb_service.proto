// Copyright 2022 The ChromiumOS Authors.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package tast.cros.power;

import "google/protobuf/empty.proto";

option go_package = "chromiumos/tast/services/cros/power";

// USBService provide operations for usb related service.
service USBService {
  // NewChrome logs into a Chrome session as a fake user. Close must be called later
  // to clean up the associated resources.
  rpc NewChrome (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // CloseChrome releases the resources obtained by New.
  rpc CloseChrome (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // ReuseChrome passes an Option to New to make Chrome reuse the existing login session.
  rpc ReuseChrome (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // USBMountPaths returns the mount paths for USB.
  rpc USBMountPaths (google.protobuf.Empty) returns (MountPathResponse) {}

  // GenerateTestFile generates a new temporary test file for testing, with
  // provided filename and filesize.
  rpc GenerateTestFile (TestFileRequest) returns (TestFileResponse) {}

  // FileChecksum checks the checksum for the input file.
  rpc FileChecksum(TestFileRequest) returns (TestFileResponse) {}

  // CopyFile performs copying of file from given source to destination.
  rpc CopyFile(TestFileRequest) returns (google.protobuf.Empty) {}

  // RemoveFile will removes given path file.
  rpc RemoveFile(TestFileRequest) returns (google.protobuf.Empty) {}
}

message MountPathResponse {
  repeated string MountPaths = 1;
}

message TestFileRequest{
  string FileName = 1;
  string SourceFilePath = 2;
  string DestinationFilePath = 3;
  int64 FileSize = 4;
  string Path = 5;
}

message TestFileResponse{
  string Path = 1;
  bytes FileChecksumValue = 2;
}
