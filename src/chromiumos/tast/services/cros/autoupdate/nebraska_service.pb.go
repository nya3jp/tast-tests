// Copyright 2021 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.11.4
// source: nebraska_service.proto

package autoupdate

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port        string   `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	HostLogPath string   `protobuf:"bytes,2,opt,name=host_log_path,json=hostLogPath,proto3" json:"host_log_path,omitempty"`
	Install     *Payload `protobuf:"bytes,3,opt,name=install,proto3" json:"install,omitempty"`
	Update      *Payload `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebraska_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebraska_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_nebraska_service_proto_rawDescGZIP(), []int{0}
}

func (x *StartRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *StartRequest) GetHostLogPath() string {
	if x != nil {
		return x.HostLogPath
	}
	return ""
}

func (x *StartRequest) GetInstall() *Payload {
	if x != nil {
		return x.Install
	}
	return nil
}

func (x *StartRequest) GetUpdate() *Payload {
	if x != nil {
		return x.Update
	}
	return nil
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address        string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	MetadataFolder string `protobuf:"bytes,2,opt,name=metadata_folder,json=metadataFolder,proto3" json:"metadata_folder,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebraska_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_nebraska_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_nebraska_service_proto_rawDescGZIP(), []int{1}
}

func (x *Payload) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Payload) GetMetadataFolder() string {
	if x != nil {
		return x.MetadataFolder
	}
	return ""
}

type StartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port    string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	LogPath string `protobuf:"bytes,2,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebraska_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebraska_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_nebraska_service_proto_rawDescGZIP(), []int{2}
}

func (x *StartResponse) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *StartResponse) GetLogPath() string {
	if x != nil {
		return x.LogPath
	}
	return ""
}

type CreateTempDirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *CreateTempDirResponse) Reset() {
	*x = CreateTempDirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebraska_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTempDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTempDirResponse) ProtoMessage() {}

func (x *CreateTempDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebraska_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTempDirResponse.ProtoReflect.Descriptor instead.
func (*CreateTempDirResponse) Descriptor() ([]byte, []int) {
	return file_nebraska_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTempDirResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_nebraska_service_proto protoreflect.FileDescriptor

var file_nebraska_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6e, 0x65, 0x62, 0x72, 0x61, 0x73, 0x6b, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x74, 0x61, 0x73, 0x74, 0x2e, 0x63,
	0x72, 0x6f, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x0c,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x22, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f,
	0x73, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x35, 0x0a,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x74, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x06, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x4c, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x22, 0x3e, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x2b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x32,
	0xba, 0x02, 0x0a, 0x0f, 0x4e, 0x65, 0x62, 0x72, 0x61, 0x73, 0x6b, 0x61, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x74,
	0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x74, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x44,
	0x69, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x74, 0x61, 0x73,
	0x74, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x2a, 0x5a, 0x28,
	0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x6f, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x74, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nebraska_service_proto_rawDescOnce sync.Once
	file_nebraska_service_proto_rawDescData = file_nebraska_service_proto_rawDesc
)

func file_nebraska_service_proto_rawDescGZIP() []byte {
	file_nebraska_service_proto_rawDescOnce.Do(func() {
		file_nebraska_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_nebraska_service_proto_rawDescData)
	})
	return file_nebraska_service_proto_rawDescData
}

var file_nebraska_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_nebraska_service_proto_goTypes = []interface{}{
	(*StartRequest)(nil),          // 0: tast.cros.autoupdate.StartRequest
	(*Payload)(nil),               // 1: tast.cros.autoupdate.Payload
	(*StartResponse)(nil),         // 2: tast.cros.autoupdate.StartResponse
	(*CreateTempDirResponse)(nil), // 3: tast.cros.autoupdate.CreateTempDirResponse
	(*empty.Empty)(nil),           // 4: google.protobuf.Empty
}
var file_nebraska_service_proto_depIdxs = []int32{
	1, // 0: tast.cros.autoupdate.StartRequest.install:type_name -> tast.cros.autoupdate.Payload
	1, // 1: tast.cros.autoupdate.StartRequest.update:type_name -> tast.cros.autoupdate.Payload
	0, // 2: tast.cros.autoupdate.NebraskaService.Start:input_type -> tast.cros.autoupdate.StartRequest
	4, // 3: tast.cros.autoupdate.NebraskaService.Stop:input_type -> google.protobuf.Empty
	4, // 4: tast.cros.autoupdate.NebraskaService.CreateTempDir:input_type -> google.protobuf.Empty
	4, // 5: tast.cros.autoupdate.NebraskaService.RemoveTempDir:input_type -> google.protobuf.Empty
	2, // 6: tast.cros.autoupdate.NebraskaService.Start:output_type -> tast.cros.autoupdate.StartResponse
	4, // 7: tast.cros.autoupdate.NebraskaService.Stop:output_type -> google.protobuf.Empty
	3, // 8: tast.cros.autoupdate.NebraskaService.CreateTempDir:output_type -> tast.cros.autoupdate.CreateTempDirResponse
	4, // 9: tast.cros.autoupdate.NebraskaService.RemoveTempDir:output_type -> google.protobuf.Empty
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_nebraska_service_proto_init() }
func file_nebraska_service_proto_init() {
	if File_nebraska_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nebraska_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebraska_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebraska_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebraska_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTempDirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nebraska_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nebraska_service_proto_goTypes,
		DependencyIndexes: file_nebraska_service_proto_depIdxs,
		MessageInfos:      file_nebraska_service_proto_msgTypes,
	}.Build()
	File_nebraska_service_proto = out.File
	file_nebraska_service_proto_rawDesc = nil
	file_nebraska_service_proto_goTypes = nil
	file_nebraska_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NebraskaServiceClient is the client API for NebraskaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NebraskaServiceClient interface {
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error)
	Stop(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateTempDir(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CreateTempDirResponse, error)
	RemoveTempDir(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type nebraskaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNebraskaServiceClient(cc grpc.ClientConnInterface) NebraskaServiceClient {
	return &nebraskaServiceClient{cc}
}

func (c *nebraskaServiceClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error) {
	out := new(StartResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.autoupdate.NebraskaService/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nebraskaServiceClient) Stop(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.autoupdate.NebraskaService/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nebraskaServiceClient) CreateTempDir(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CreateTempDirResponse, error) {
	out := new(CreateTempDirResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.autoupdate.NebraskaService/CreateTempDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nebraskaServiceClient) RemoveTempDir(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.autoupdate.NebraskaService/RemoveTempDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NebraskaServiceServer is the server API for NebraskaService service.
type NebraskaServiceServer interface {
	Start(context.Context, *StartRequest) (*StartResponse, error)
	Stop(context.Context, *empty.Empty) (*empty.Empty, error)
	CreateTempDir(context.Context, *empty.Empty) (*CreateTempDirResponse, error)
	RemoveTempDir(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedNebraskaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNebraskaServiceServer struct {
}

func (*UnimplementedNebraskaServiceServer) Start(context.Context, *StartRequest) (*StartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedNebraskaServiceServer) Stop(context.Context, *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedNebraskaServiceServer) CreateTempDir(context.Context, *empty.Empty) (*CreateTempDirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTempDir not implemented")
}
func (*UnimplementedNebraskaServiceServer) RemoveTempDir(context.Context, *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTempDir not implemented")
}

func RegisterNebraskaServiceServer(s *grpc.Server, srv NebraskaServiceServer) {
	s.RegisterService(&_NebraskaService_serviceDesc, srv)
}

func _NebraskaService_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NebraskaServiceServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.autoupdate.NebraskaService/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NebraskaServiceServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NebraskaService_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NebraskaServiceServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.autoupdate.NebraskaService/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NebraskaServiceServer).Stop(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NebraskaService_CreateTempDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NebraskaServiceServer).CreateTempDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.autoupdate.NebraskaService/CreateTempDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NebraskaServiceServer).CreateTempDir(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NebraskaService_RemoveTempDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NebraskaServiceServer).RemoveTempDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.autoupdate.NebraskaService/RemoveTempDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NebraskaServiceServer).RemoveTempDir(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _NebraskaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.autoupdate.NebraskaService",
	HandlerType: (*NebraskaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _NebraskaService_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _NebraskaService_Stop_Handler,
		},
		{
			MethodName: "CreateTempDir",
			Handler:    _NebraskaService_CreateTempDir_Handler,
		},
		{
			MethodName: "RemoveTempDir",
			Handler:    _NebraskaService_RemoveTempDir_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nebraska_service.proto",
}
