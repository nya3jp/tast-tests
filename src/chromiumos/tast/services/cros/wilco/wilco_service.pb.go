// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wilco_service.proto

package wilco

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RunningStatus struct {
	WilcoDtcSupportdRunning bool     `protobuf:"varint,1,opt,name=wilco_dtc_supportd_running,json=wilcoDtcSupportdRunning,proto3" json:"wilco_dtc_supportd_running,omitempty"`
	WilcoDtcRunning         bool     `protobuf:"varint,2,opt,name=wilco_dtc_running,json=wilcoDtcRunning,proto3" json:"wilco_dtc_running,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *RunningStatus) Reset()         { *m = RunningStatus{} }
func (m *RunningStatus) String() string { return proto.CompactTextString(m) }
func (*RunningStatus) ProtoMessage()    {}
func (*RunningStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_247e03d5bf0cb873, []int{0}
}

func (m *RunningStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunningStatus.Unmarshal(m, b)
}
func (m *RunningStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunningStatus.Marshal(b, m, deterministic)
}
func (m *RunningStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunningStatus.Merge(m, src)
}
func (m *RunningStatus) XXX_Size() int {
	return xxx_messageInfo_RunningStatus.Size(m)
}
func (m *RunningStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RunningStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RunningStatus proto.InternalMessageInfo

func (m *RunningStatus) GetWilcoDtcSupportdRunning() bool {
	if m != nil {
		return m.WilcoDtcSupportdRunning
	}
	return false
}

func (m *RunningStatus) GetWilcoDtcRunning() bool {
	if m != nil {
		return m.WilcoDtcRunning
	}
	return false
}

type GetConfigurationDataResponse struct {
	JsonConfigurationData string   `protobuf:"bytes,1,opt,name=json_configuration_data,json=jsonConfigurationData,proto3" json:"json_configuration_data,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *GetConfigurationDataResponse) Reset()         { *m = GetConfigurationDataResponse{} }
func (m *GetConfigurationDataResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfigurationDataResponse) ProtoMessage()    {}
func (*GetConfigurationDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_247e03d5bf0cb873, []int{1}
}

func (m *GetConfigurationDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigurationDataResponse.Unmarshal(m, b)
}
func (m *GetConfigurationDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigurationDataResponse.Marshal(b, m, deterministic)
}
func (m *GetConfigurationDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigurationDataResponse.Merge(m, src)
}
func (m *GetConfigurationDataResponse) XXX_Size() int {
	return xxx_messageInfo_GetConfigurationDataResponse.Size(m)
}
func (m *GetConfigurationDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigurationDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigurationDataResponse proto.InternalMessageInfo

func (m *GetConfigurationDataResponse) GetJsonConfigurationData() string {
	if m != nil {
		return m.JsonConfigurationData
	}
	return ""
}

func init() {
	proto.RegisterType((*RunningStatus)(nil), "tast.cros.wilco.RunningStatus")
	proto.RegisterType((*GetConfigurationDataResponse)(nil), "tast.cros.wilco.GetConfigurationDataResponse")
}

func init() { proto.RegisterFile("wilco_service.proto", fileDescriptor_247e03d5bf0cb873) }

var fileDescriptor_247e03d5bf0cb873 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x4b, 0x4b, 0x03, 0x31,
	0x10, 0xc7, 0x5b, 0x0f, 0x62, 0x83, 0x52, 0x8c, 0x8f, 0x4a, 0x15, 0x91, 0x15, 0x41, 0x04, 0x13,
	0x50, 0xf0, 0xe2, 0x4d, 0x5b, 0x7a, 0xdf, 0x82, 0x82, 0x97, 0x90, 0x66, 0xd3, 0x35, 0xd2, 0xcd,
	0x2c, 0xc9, 0xc4, 0xc7, 0x17, 0xf3, 0xf3, 0xc9, 0x66, 0x77, 0xf1, 0x51, 0xf5, 0xfc, 0x7f, 0xcc,
	0xcc, 0x6f, 0xc8, 0xd6, 0x8b, 0x59, 0x28, 0x10, 0x5e, 0xbb, 0x67, 0xa3, 0x34, 0x2b, 0x1d, 0x20,
	0xd0, 0x3e, 0x4a, 0x8f, 0x4c, 0x39, 0xf0, 0x2c, 0xca, 0xc3, 0xfd, 0x1c, 0x20, 0x5f, 0x68, 0x1e,
	0xe5, 0x59, 0x98, 0x73, 0x5d, 0x94, 0xf8, 0x56, 0xbb, 0x93, 0x57, 0xb2, 0x91, 0x06, 0x6b, 0x8d,
	0xcd, 0xa7, 0x28, 0x31, 0x78, 0x7a, 0x4d, 0x86, 0x75, 0x6b, 0x86, 0x4a, 0xf8, 0x50, 0x96, 0xe0,
	0x30, 0x13, 0xae, 0xf6, 0xec, 0x75, 0x8f, 0xba, 0xa7, 0x6b, 0xe9, 0x20, 0x3a, 0x46, 0xa8, 0xa6,
	0x8d, 0xde, 0x54, 0xd0, 0x33, 0xb2, 0xf9, 0x19, 0x6e, 0x33, 0x2b, 0x31, 0xd3, 0x6f, 0x33, 0x8d,
	0x37, 0xb9, 0x23, 0x07, 0x13, 0x8d, 0xb7, 0x60, 0xe7, 0x26, 0x0f, 0x4e, 0xa2, 0x01, 0x3b, 0x92,
	0x28, 0x53, 0xed, 0x4b, 0xb0, 0x5e, 0xd3, 0x2b, 0x32, 0x78, 0xf2, 0x60, 0x85, 0xfa, 0xea, 0x10,
	0x99, 0x44, 0x19, 0xb7, 0xe8, 0xa5, 0x3b, 0x95, 0xbc, 0x94, 0xbf, 0x78, 0xef, 0x92, 0xf5, 0xfb,
	0x6a, 0xd6, 0xb4, 0xc6, 0x42, 0xc7, 0xa4, 0x37, 0xd1, 0xd8, 0x9c, 0xb7, 0xcb, 0x6a, 0x1a, 0xac,
	0xa5, 0xc1, 0xc6, 0x15, 0x8d, 0xe1, 0x21, 0xfb, 0x81, 0x8d, 0x7d, 0xc3, 0x92, 0x74, 0xa8, 0x20,
	0xdb, 0xbf, 0xed, 0xfb, 0x67, 0xe3, 0xf9, 0x52, 0xe3, 0x7f, 0xe7, 0x26, 0x9d, 0x9b, 0x93, 0x87,
	0x63, 0xf5, 0xe8, 0xa0, 0x30, 0xa1, 0x00, 0xcf, 0xab, 0x30, 0x6f, 0x3e, 0xeb, 0x79, 0xd5, 0xc2,
	0x63, 0xcb, 0x6c, 0x35, 0xce, 0xb9, 0xfc, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xd5, 0x75, 0x08,
	0xfd, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WilcoServiceClient is the client API for WilcoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WilcoServiceClient interface {
	// GetStatus checks if services are running
	GetStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RunningStatus, error)
	// GetConfigurationData performs the grpc request from inside the VM
	GetConfigurationData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetConfigurationDataResponse, error)
}

type wilcoServiceClient struct {
	cc *grpc.ClientConn
}

func NewWilcoServiceClient(cc *grpc.ClientConn) WilcoServiceClient {
	return &wilcoServiceClient{cc}
}

func (c *wilcoServiceClient) GetStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RunningStatus, error) {
	out := new(RunningStatus)
	err := c.cc.Invoke(ctx, "/tast.cros.wilco.WilcoService/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wilcoServiceClient) GetConfigurationData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetConfigurationDataResponse, error) {
	out := new(GetConfigurationDataResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.wilco.WilcoService/GetConfigurationData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WilcoServiceServer is the server API for WilcoService service.
type WilcoServiceServer interface {
	// GetStatus checks if services are running
	GetStatus(context.Context, *empty.Empty) (*RunningStatus, error)
	// GetConfigurationData performs the grpc request from inside the VM
	GetConfigurationData(context.Context, *empty.Empty) (*GetConfigurationDataResponse, error)
}

// UnimplementedWilcoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWilcoServiceServer struct {
}

func (*UnimplementedWilcoServiceServer) GetStatus(ctx context.Context, req *empty.Empty) (*RunningStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedWilcoServiceServer) GetConfigurationData(ctx context.Context, req *empty.Empty) (*GetConfigurationDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigurationData not implemented")
}

func RegisterWilcoServiceServer(s *grpc.Server, srv WilcoServiceServer) {
	s.RegisterService(&_WilcoService_serviceDesc, srv)
}

func _WilcoService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WilcoServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wilco.WilcoService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WilcoServiceServer).GetStatus(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WilcoService_GetConfigurationData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WilcoServiceServer).GetConfigurationData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wilco.WilcoService/GetConfigurationData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WilcoServiceServer).GetConfigurationData(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _WilcoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.wilco.WilcoService",
	HandlerType: (*WilcoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _WilcoService_GetStatus_Handler,
		},
		{
			MethodName: "GetConfigurationData",
			Handler:    _WilcoService_GetConfigurationData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wilco_service.proto",
}
