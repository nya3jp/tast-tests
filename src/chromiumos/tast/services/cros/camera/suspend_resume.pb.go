// Code generated by protoc-gen-go. DO NOT EDIT.
// source: suspend_resume.proto

package camera

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SuspendResumeConfig struct {
	ApkPath              string   `protobuf:"bytes,1,opt,name=apk_path,json=apkPath,proto3" json:"apk_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuspendResumeConfig) Reset()         { *m = SuspendResumeConfig{} }
func (m *SuspendResumeConfig) String() string { return proto.CompactTextString(m) }
func (*SuspendResumeConfig) ProtoMessage()    {}
func (*SuspendResumeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fe529e3ed75f, []int{0}
}

func (m *SuspendResumeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuspendResumeConfig.Unmarshal(m, b)
}
func (m *SuspendResumeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuspendResumeConfig.Marshal(b, m, deterministic)
}
func (m *SuspendResumeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuspendResumeConfig.Merge(m, src)
}
func (m *SuspendResumeConfig) XXX_Size() int {
	return xxx_messageInfo_SuspendResumeConfig.Size(m)
}
func (m *SuspendResumeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SuspendResumeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SuspendResumeConfig proto.InternalMessageInfo

func (m *SuspendResumeConfig) GetApkPath() string {
	if m != nil {
		return m.ApkPath
	}
	return ""
}

func init() {
	proto.RegisterType((*SuspendResumeConfig)(nil), "tast.cros.camera.SuspendResumeConfig")
}

func init() { proto.RegisterFile("suspend_resume.proto", fileDescriptor_83e3fe529e3ed75f) }

var fileDescriptor_83e3fe529e3ed75f = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x2e, 0x2d, 0x2e,
	0x48, 0xcd, 0x4b, 0x89, 0x2f, 0x4a, 0x2d, 0x2e, 0xcd, 0x4d, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x12, 0x28, 0x49, 0x2c, 0x2e, 0xd1, 0x4b, 0x2e, 0xca, 0x2f, 0xd6, 0x4b, 0x4e, 0xcc, 0x4d,
	0x2d, 0x4a, 0x94, 0x92, 0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0xcb, 0x27, 0x95, 0xa6,
	0xe9, 0xa7, 0xe6, 0x16, 0x94, 0x54, 0x42, 0x94, 0x2b, 0x19, 0x70, 0x09, 0x07, 0x43, 0x8c, 0x09,
	0x02, 0x9b, 0xe2, 0x9c, 0x9f, 0x97, 0x96, 0x99, 0x2e, 0x24, 0xc9, 0xc5, 0x91, 0x58, 0x90, 0x1d,
	0x5f, 0x90, 0x58, 0x92, 0x21, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0xc4, 0x9e, 0x58, 0x90, 0x1d,
	0x90, 0x58, 0x92, 0x61, 0x14, 0xc9, 0xc5, 0x8b, 0xa2, 0x43, 0xc8, 0x83, 0x8b, 0x35, 0x38, 0xb5,
	0x24, 0xb4, 0x40, 0x48, 0x55, 0x0f, 0xdd, 0x6e, 0x3d, 0x2c, 0x66, 0x4b, 0x89, 0xe9, 0x41, 0x1c,
	0xa4, 0x07, 0x73, 0x90, 0x9e, 0x2b, 0xc8, 0x41, 0x4a, 0x0c, 0x4e, 0x6a, 0x51, 0x2a, 0xc9, 0x19,
	0x45, 0xf9, 0xb9, 0x99, 0xa5, 0xb9, 0xf9, 0xc5, 0xfa, 0x20, 0xc3, 0xf4, 0x8b, 0x53, 0x8b, 0xca,
	0x32, 0x93, 0x53, 0x8b, 0xf5, 0x41, 0xa6, 0xea, 0x43, 0x4c, 0x4d, 0x62, 0x03, 0xeb, 0x34, 0x06,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x05, 0xee, 0xdb, 0x02, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SuspendResumeClient is the client API for SuspendResume service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SuspendResumeClient interface {
	SetUp(ctx context.Context, in *SuspendResumeConfig, opts ...grpc.CallOption) (*empty.Empty, error)
}

type suspendResumeClient struct {
	cc *grpc.ClientConn
}

func NewSuspendResumeClient(cc *grpc.ClientConn) SuspendResumeClient {
	return &suspendResumeClient{cc}
}

func (c *suspendResumeClient) SetUp(ctx context.Context, in *SuspendResumeConfig, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.camera.SuspendResume/SetUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SuspendResumeServer is the server API for SuspendResume service.
type SuspendResumeServer interface {
	SetUp(context.Context, *SuspendResumeConfig) (*empty.Empty, error)
}

// UnimplementedSuspendResumeServer can be embedded to have forward compatible implementations.
type UnimplementedSuspendResumeServer struct {
}

func (*UnimplementedSuspendResumeServer) SetUp(ctx context.Context, req *SuspendResumeConfig) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUp not implemented")
}

func RegisterSuspendResumeServer(s *grpc.Server, srv SuspendResumeServer) {
	s.RegisterService(&_SuspendResume_serviceDesc, srv)
}

func _SuspendResume_SetUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuspendResumeConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuspendResumeServer).SetUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.camera.SuspendResume/SetUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuspendResumeServer).SetUp(ctx, req.(*SuspendResumeConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _SuspendResume_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.camera.SuspendResume",
	HandlerType: (*SuspendResumeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetUp",
			Handler:    _SuspendResume_SetUp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "suspend_resume.proto",
}
