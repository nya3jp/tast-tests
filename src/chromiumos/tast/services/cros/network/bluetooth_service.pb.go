// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bluetooth_service.proto

package network

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetBluetoothPoweredRequest struct {
	Powered              bool     `protobuf:"varint,1,opt,name=powered,proto3" json:"powered,omitempty"`
	Credentials          string   `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetBluetoothPoweredRequest) Reset()         { *m = SetBluetoothPoweredRequest{} }
func (m *SetBluetoothPoweredRequest) String() string { return proto.CompactTextString(m) }
func (*SetBluetoothPoweredRequest) ProtoMessage()    {}
func (*SetBluetoothPoweredRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a85ab5c487a308, []int{0}
}

func (m *SetBluetoothPoweredRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBluetoothPoweredRequest.Unmarshal(m, b)
}
func (m *SetBluetoothPoweredRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBluetoothPoweredRequest.Marshal(b, m, deterministic)
}
func (m *SetBluetoothPoweredRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBluetoothPoweredRequest.Merge(m, src)
}
func (m *SetBluetoothPoweredRequest) XXX_Size() int {
	return xxx_messageInfo_SetBluetoothPoweredRequest.Size(m)
}
func (m *SetBluetoothPoweredRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBluetoothPoweredRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetBluetoothPoweredRequest proto.InternalMessageInfo

func (m *SetBluetoothPoweredRequest) GetPowered() bool {
	if m != nil {
		return m.Powered
	}
	return false
}

func (m *SetBluetoothPoweredRequest) GetCredentials() string {
	if m != nil {
		return m.Credentials
	}
	return ""
}

type SetBluetoothPoweredFastRequest struct {
	Powered              bool     `protobuf:"varint,1,opt,name=powered,proto3" json:"powered,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetBluetoothPoweredFastRequest) Reset()         { *m = SetBluetoothPoweredFastRequest{} }
func (m *SetBluetoothPoweredFastRequest) String() string { return proto.CompactTextString(m) }
func (*SetBluetoothPoweredFastRequest) ProtoMessage()    {}
func (*SetBluetoothPoweredFastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a85ab5c487a308, []int{1}
}

func (m *SetBluetoothPoweredFastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBluetoothPoweredFastRequest.Unmarshal(m, b)
}
func (m *SetBluetoothPoweredFastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBluetoothPoweredFastRequest.Marshal(b, m, deterministic)
}
func (m *SetBluetoothPoweredFastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBluetoothPoweredFastRequest.Merge(m, src)
}
func (m *SetBluetoothPoweredFastRequest) XXX_Size() int {
	return xxx_messageInfo_SetBluetoothPoweredFastRequest.Size(m)
}
func (m *SetBluetoothPoweredFastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBluetoothPoweredFastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetBluetoothPoweredFastRequest proto.InternalMessageInfo

func (m *SetBluetoothPoweredFastRequest) GetPowered() bool {
	if m != nil {
		return m.Powered
	}
	return false
}

type GetBluetoothBootPrefRequest struct {
	Credentials          string   `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBluetoothBootPrefRequest) Reset()         { *m = GetBluetoothBootPrefRequest{} }
func (m *GetBluetoothBootPrefRequest) String() string { return proto.CompactTextString(m) }
func (*GetBluetoothBootPrefRequest) ProtoMessage()    {}
func (*GetBluetoothBootPrefRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a85ab5c487a308, []int{2}
}

func (m *GetBluetoothBootPrefRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBluetoothBootPrefRequest.Unmarshal(m, b)
}
func (m *GetBluetoothBootPrefRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBluetoothBootPrefRequest.Marshal(b, m, deterministic)
}
func (m *GetBluetoothBootPrefRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBluetoothBootPrefRequest.Merge(m, src)
}
func (m *GetBluetoothBootPrefRequest) XXX_Size() int {
	return xxx_messageInfo_GetBluetoothBootPrefRequest.Size(m)
}
func (m *GetBluetoothBootPrefRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBluetoothBootPrefRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBluetoothBootPrefRequest proto.InternalMessageInfo

func (m *GetBluetoothBootPrefRequest) GetCredentials() string {
	if m != nil {
		return m.Credentials
	}
	return ""
}

type GetBluetoothBootPrefResponse struct {
	Persistent           bool     `protobuf:"varint,1,opt,name=persistent,proto3" json:"persistent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBluetoothBootPrefResponse) Reset()         { *m = GetBluetoothBootPrefResponse{} }
func (m *GetBluetoothBootPrefResponse) String() string { return proto.CompactTextString(m) }
func (*GetBluetoothBootPrefResponse) ProtoMessage()    {}
func (*GetBluetoothBootPrefResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a85ab5c487a308, []int{3}
}

func (m *GetBluetoothBootPrefResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBluetoothBootPrefResponse.Unmarshal(m, b)
}
func (m *GetBluetoothBootPrefResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBluetoothBootPrefResponse.Marshal(b, m, deterministic)
}
func (m *GetBluetoothBootPrefResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBluetoothBootPrefResponse.Merge(m, src)
}
func (m *GetBluetoothBootPrefResponse) XXX_Size() int {
	return xxx_messageInfo_GetBluetoothBootPrefResponse.Size(m)
}
func (m *GetBluetoothBootPrefResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBluetoothBootPrefResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBluetoothBootPrefResponse proto.InternalMessageInfo

func (m *GetBluetoothBootPrefResponse) GetPersistent() bool {
	if m != nil {
		return m.Persistent
	}
	return false
}

type GetBluetoothPoweredFastResponse struct {
	Powered              bool     `protobuf:"varint,1,opt,name=powered,proto3" json:"powered,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBluetoothPoweredFastResponse) Reset()         { *m = GetBluetoothPoweredFastResponse{} }
func (m *GetBluetoothPoweredFastResponse) String() string { return proto.CompactTextString(m) }
func (*GetBluetoothPoweredFastResponse) ProtoMessage()    {}
func (*GetBluetoothPoweredFastResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a85ab5c487a308, []int{4}
}

func (m *GetBluetoothPoweredFastResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBluetoothPoweredFastResponse.Unmarshal(m, b)
}
func (m *GetBluetoothPoweredFastResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBluetoothPoweredFastResponse.Marshal(b, m, deterministic)
}
func (m *GetBluetoothPoweredFastResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBluetoothPoweredFastResponse.Merge(m, src)
}
func (m *GetBluetoothPoweredFastResponse) XXX_Size() int {
	return xxx_messageInfo_GetBluetoothPoweredFastResponse.Size(m)
}
func (m *GetBluetoothPoweredFastResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBluetoothPoweredFastResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBluetoothPoweredFastResponse proto.InternalMessageInfo

func (m *GetBluetoothPoweredFastResponse) GetPowered() bool {
	if m != nil {
		return m.Powered
	}
	return false
}

func init() {
	proto.RegisterType((*SetBluetoothPoweredRequest)(nil), "tast.cros.network.SetBluetoothPoweredRequest")
	proto.RegisterType((*SetBluetoothPoweredFastRequest)(nil), "tast.cros.network.SetBluetoothPoweredFastRequest")
	proto.RegisterType((*GetBluetoothBootPrefRequest)(nil), "tast.cros.network.GetBluetoothBootPrefRequest")
	proto.RegisterType((*GetBluetoothBootPrefResponse)(nil), "tast.cros.network.GetBluetoothBootPrefResponse")
	proto.RegisterType((*GetBluetoothPoweredFastResponse)(nil), "tast.cros.network.GetBluetoothPoweredFastResponse")
}

func init() { proto.RegisterFile("bluetooth_service.proto", fileDescriptor_d8a85ab5c487a308) }

var fileDescriptor_d8a85ab5c487a308 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x5f, 0x6b, 0xe2, 0x40,
	0x14, 0xc5, 0xcd, 0xb2, 0xec, 0x9f, 0xbb, 0x2f, 0xbb, 0xb3, 0xcb, 0x2a, 0xb1, 0x58, 0x09, 0x94,
	0xfa, 0xd2, 0x09, 0xb5, 0x6f, 0x2d, 0xb4, 0x20, 0x54, 0x1f, 0x2b, 0x0a, 0xa5, 0xf4, 0xa1, 0x25,
	0xc6, 0xab, 0x86, 0xc6, 0xdc, 0x74, 0xe6, 0xa6, 0xe2, 0xa7, 0xe8, 0x57, 0x2e, 0x9a, 0x44, 0x42,
	0xcd, 0xa8, 0x8f, 0x73, 0xb9, 0xf7, 0x9c, 0xc3, 0xf9, 0x31, 0x50, 0x1d, 0x85, 0x09, 0x32, 0x11,
	0xcf, 0x9e, 0x35, 0xaa, 0xb7, 0xc0, 0x47, 0x19, 0x2b, 0x62, 0x12, 0x7f, 0xd8, 0xd3, 0x2c, 0x7d,
	0x45, 0x5a, 0x46, 0xc8, 0x0b, 0x52, 0x2f, 0x76, 0x7d, 0x4a, 0x34, 0x0d, 0xd1, 0x5d, 0x2f, 0x8c,
	0x92, 0x89, 0x8b, 0xf3, 0x98, 0x97, 0xe9, 0xbe, 0xf3, 0x00, 0xf6, 0x10, 0xb9, 0x93, 0xab, 0xf5,
	0x69, 0x81, 0x0a, 0xc7, 0x03, 0x7c, 0x4d, 0x50, 0xb3, 0xa8, 0xc1, 0xf7, 0x38, 0x9d, 0xd4, 0xac,
	0xa6, 0xd5, 0xfa, 0x31, 0xc8, 0x9f, 0xa2, 0x09, 0xbf, 0x7c, 0x85, 0x63, 0x8c, 0x38, 0xf0, 0x42,
	0x5d, 0xfb, 0xd2, 0xb4, 0x5a, 0x3f, 0x07, 0xc5, 0x91, 0x73, 0x09, 0x8d, 0x12, 0xe5, 0xae, 0xa7,
	0x79, 0xaf, 0xba, 0x73, 0x03, 0xf5, 0x5e, 0xe1, 0xb6, 0x43, 0xc4, 0x7d, 0x85, 0x93, 0xfc, 0xf0,
	0x93, 0xb9, 0xb5, 0x6d, 0x7e, 0x0d, 0x47, 0xe5, 0x02, 0x3a, 0xa6, 0x48, 0xa3, 0x68, 0x00, 0xc4,
	0xa8, 0x74, 0xa0, 0x19, 0x23, 0xce, 0xdc, 0x0b, 0x13, 0xe7, 0x0a, 0x8e, 0x7b, 0xa6, 0xf0, 0x99,
	0x84, 0x31, 0x7d, 0xfb, 0xfd, 0x2b, 0xfc, 0xde, 0x9c, 0x0e, 0x53, 0x3c, 0xe2, 0x09, 0xfe, 0x96,
	0xd4, 0x21, 0xce, 0xe4, 0x16, 0x30, 0x69, 0x06, 0x62, 0xff, 0x97, 0x29, 0x4c, 0x99, 0xc3, 0x94,
	0xb7, 0x2b, 0x98, 0x4e, 0x45, 0x4c, 0xa0, 0x6a, 0xa8, 0x5b, 0x9c, 0x1f, 0xe6, 0x51, 0x40, 0xb3,
	0xc3, 0x67, 0x09, 0xff, 0xca, 0x9a, 0x15, 0xb2, 0xc4, 0x64, 0x07, 0x43, 0xdb, 0x3d, 0x78, 0x3f,
	0xed, 0xdb, 0xa9, 0x88, 0x29, 0x54, 0x0d, 0x50, 0x84, 0x21, 0xaf, 0xdd, 0xde, 0xe3, 0x52, 0x02,
	0xd6, 0xa9, 0x88, 0x3b, 0xa8, 0xdf, 0x7b, 0x61, 0x30, 0xf6, 0x18, 0x37, 0x9b, 0xdd, 0x24, 0xf2,
	0x39, 0xa0, 0xc8, 0x0b, 0x8d, 0x66, 0xc6, 0xd2, 0x3a, 0xa7, 0x8f, 0x27, 0xfe, 0x4c, 0xd1, 0x3c,
	0x48, 0xe6, 0xa4, 0xdd, 0x55, 0x24, 0x37, 0xfb, 0xb6, 0xda, 0x5d, 0x65, 0x73, 0xb3, 0x6c, 0xa3,
	0x6f, 0xeb, 0xd3, 0x8b, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x08, 0xed, 0x85, 0x44, 0xe0, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BluetoothServiceClient is the client API for BluetoothService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BluetoothServiceClient interface {
	// SetBluetoothPowered sets the Bluetooth adapter power status via settingsPrivate. This setting persists across reboots.
	SetBluetoothPowered(ctx context.Context, in *SetBluetoothPoweredRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// SetBluetoothPoweredFast sets the Bluetooth adapter power status via D-Bus. This setting does not persist across boots.
	SetBluetoothPoweredFast(ctx context.Context, in *SetBluetoothPoweredFastRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetBluetoothBootPref gets the Bluetooth boot preference.
	GetBluetoothBootPref(ctx context.Context, in *GetBluetoothBootPrefRequest, opts ...grpc.CallOption) (*GetBluetoothBootPrefResponse, error)
	// GetBluetoothPoweredFast checks whether the Bluetooth adapter is enabled.
	GetBluetoothPoweredFast(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetBluetoothPoweredFastResponse, error)
	// ValidateBluetoothFunctional checks to see whether the Bluetooth device is usable.
	ValidateBluetoothFunctional(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type bluetoothServiceClient struct {
	cc *grpc.ClientConn
}

func NewBluetoothServiceClient(cc *grpc.ClientConn) BluetoothServiceClient {
	return &bluetoothServiceClient{cc}
}

func (c *bluetoothServiceClient) SetBluetoothPowered(ctx context.Context, in *SetBluetoothPoweredRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.network.BluetoothService/SetBluetoothPowered", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bluetoothServiceClient) SetBluetoothPoweredFast(ctx context.Context, in *SetBluetoothPoweredFastRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.network.BluetoothService/SetBluetoothPoweredFast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bluetoothServiceClient) GetBluetoothBootPref(ctx context.Context, in *GetBluetoothBootPrefRequest, opts ...grpc.CallOption) (*GetBluetoothBootPrefResponse, error) {
	out := new(GetBluetoothBootPrefResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.network.BluetoothService/GetBluetoothBootPref", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bluetoothServiceClient) GetBluetoothPoweredFast(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetBluetoothPoweredFastResponse, error) {
	out := new(GetBluetoothPoweredFastResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.network.BluetoothService/GetBluetoothPoweredFast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bluetoothServiceClient) ValidateBluetoothFunctional(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.network.BluetoothService/ValidateBluetoothFunctional", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BluetoothServiceServer is the server API for BluetoothService service.
type BluetoothServiceServer interface {
	// SetBluetoothPowered sets the Bluetooth adapter power status via settingsPrivate. This setting persists across reboots.
	SetBluetoothPowered(context.Context, *SetBluetoothPoweredRequest) (*empty.Empty, error)
	// SetBluetoothPoweredFast sets the Bluetooth adapter power status via D-Bus. This setting does not persist across boots.
	SetBluetoothPoweredFast(context.Context, *SetBluetoothPoweredFastRequest) (*empty.Empty, error)
	// GetBluetoothBootPref gets the Bluetooth boot preference.
	GetBluetoothBootPref(context.Context, *GetBluetoothBootPrefRequest) (*GetBluetoothBootPrefResponse, error)
	// GetBluetoothPoweredFast checks whether the Bluetooth adapter is enabled.
	GetBluetoothPoweredFast(context.Context, *empty.Empty) (*GetBluetoothPoweredFastResponse, error)
	// ValidateBluetoothFunctional checks to see whether the Bluetooth device is usable.
	ValidateBluetoothFunctional(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedBluetoothServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBluetoothServiceServer struct {
}

func (*UnimplementedBluetoothServiceServer) SetBluetoothPowered(ctx context.Context, req *SetBluetoothPoweredRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBluetoothPowered not implemented")
}
func (*UnimplementedBluetoothServiceServer) SetBluetoothPoweredFast(ctx context.Context, req *SetBluetoothPoweredFastRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBluetoothPoweredFast not implemented")
}
func (*UnimplementedBluetoothServiceServer) GetBluetoothBootPref(ctx context.Context, req *GetBluetoothBootPrefRequest) (*GetBluetoothBootPrefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBluetoothBootPref not implemented")
}
func (*UnimplementedBluetoothServiceServer) GetBluetoothPoweredFast(ctx context.Context, req *empty.Empty) (*GetBluetoothPoweredFastResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBluetoothPoweredFast not implemented")
}
func (*UnimplementedBluetoothServiceServer) ValidateBluetoothFunctional(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateBluetoothFunctional not implemented")
}

func RegisterBluetoothServiceServer(s *grpc.Server, srv BluetoothServiceServer) {
	s.RegisterService(&_BluetoothService_serviceDesc, srv)
}

func _BluetoothService_SetBluetoothPowered_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBluetoothPoweredRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluetoothServiceServer).SetBluetoothPowered(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.BluetoothService/SetBluetoothPowered",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluetoothServiceServer).SetBluetoothPowered(ctx, req.(*SetBluetoothPoweredRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BluetoothService_SetBluetoothPoweredFast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBluetoothPoweredFastRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluetoothServiceServer).SetBluetoothPoweredFast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.BluetoothService/SetBluetoothPoweredFast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluetoothServiceServer).SetBluetoothPoweredFast(ctx, req.(*SetBluetoothPoweredFastRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BluetoothService_GetBluetoothBootPref_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBluetoothBootPrefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluetoothServiceServer).GetBluetoothBootPref(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.BluetoothService/GetBluetoothBootPref",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluetoothServiceServer).GetBluetoothBootPref(ctx, req.(*GetBluetoothBootPrefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BluetoothService_GetBluetoothPoweredFast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluetoothServiceServer).GetBluetoothPoweredFast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.BluetoothService/GetBluetoothPoweredFast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluetoothServiceServer).GetBluetoothPoweredFast(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BluetoothService_ValidateBluetoothFunctional_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluetoothServiceServer).ValidateBluetoothFunctional(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.BluetoothService/ValidateBluetoothFunctional",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluetoothServiceServer).ValidateBluetoothFunctional(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _BluetoothService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.network.BluetoothService",
	HandlerType: (*BluetoothServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetBluetoothPowered",
			Handler:    _BluetoothService_SetBluetoothPowered_Handler,
		},
		{
			MethodName: "SetBluetoothPoweredFast",
			Handler:    _BluetoothService_SetBluetoothPoweredFast_Handler,
		},
		{
			MethodName: "GetBluetoothBootPref",
			Handler:    _BluetoothService_GetBluetoothBootPref_Handler,
		},
		{
			MethodName: "GetBluetoothPoweredFast",
			Handler:    _BluetoothService_GetBluetoothPoweredFast_Handler,
		},
		{
			MethodName: "ValidateBluetoothFunctional",
			Handler:    _BluetoothService_ValidateBluetoothFunctional_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bluetooth_service.proto",
}
