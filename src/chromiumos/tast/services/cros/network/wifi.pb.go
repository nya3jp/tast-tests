// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wifi.proto

/*
Package network is a generated protocol buffer package.

It is generated from these files:
	wifi.proto

It has these top-level messages:
	Config
	ShillVal
	Service
	SSID
*/
package network

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	Ssid       string               `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Hidden     bool                 `protobuf:"varint,2,opt,name=hidden" json:"hidden,omitempty"`
	Security   string               `protobuf:"bytes,3,opt,name=security" json:"security,omitempty"`
	Shillprops map[string]*ShillVal `protobuf:"bytes,4,rep,name=shillprops" json:"shillprops,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetSsid() string {
	if m != nil {
		return m.Ssid
	}
	return ""
}

func (m *Config) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *Config) GetSecurity() string {
	if m != nil {
		return m.Security
	}
	return ""
}

func (m *Config) GetShillprops() map[string]*ShillVal {
	if m != nil {
		return m.Shillprops
	}
	return nil
}

type ShillVal struct {
	// Types that are valid to be assigned to Val:
	//	*ShillVal_Str
	//	*ShillVal_Bool
	Val isShillVal_Val `protobuf_oneof:"val"`
}

func (m *ShillVal) Reset()                    { *m = ShillVal{} }
func (m *ShillVal) String() string            { return proto.CompactTextString(m) }
func (*ShillVal) ProtoMessage()               {}
func (*ShillVal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isShillVal_Val interface {
	isShillVal_Val()
}

type ShillVal_Str struct {
	Str string `protobuf:"bytes,1,opt,name=str,oneof"`
}
type ShillVal_Bool struct {
	Bool bool `protobuf:"varint,2,opt,name=bool,oneof"`
}

func (*ShillVal_Str) isShillVal_Val()  {}
func (*ShillVal_Bool) isShillVal_Val() {}

func (m *ShillVal) GetVal() isShillVal_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *ShillVal) GetStr() string {
	if x, ok := m.GetVal().(*ShillVal_Str); ok {
		return x.Str
	}
	return ""
}

func (m *ShillVal) GetBool() bool {
	if x, ok := m.GetVal().(*ShillVal_Bool); ok {
		return x.Bool
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ShillVal) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ShillVal_OneofMarshaler, _ShillVal_OneofUnmarshaler, _ShillVal_OneofSizer, []interface{}{
		(*ShillVal_Str)(nil),
		(*ShillVal_Bool)(nil),
	}
}

func _ShillVal_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ShillVal)
	// val
	switch x := m.Val.(type) {
	case *ShillVal_Str:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Str)
	case *ShillVal_Bool:
		t := uint64(0)
		if x.Bool {
			t = 1
		}
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("ShillVal.Val has unexpected type %T", x)
	}
	return nil
}

func _ShillVal_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ShillVal)
	switch tag {
	case 1: // val.str
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Val = &ShillVal_Str{x}
		return true, err
	case 2: // val.bool
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Val = &ShillVal_Bool{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _ShillVal_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ShillVal)
	// val
	switch x := m.Val.(type) {
	case *ShillVal_Str:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Str)))
		n += len(x.Str)
	case *ShillVal_Bool:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Service struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Service) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type SSID struct {
	Ssid string `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
}

func (m *SSID) Reset()                    { *m = SSID{} }
func (m *SSID) String() string            { return proto.CompactTextString(m) }
func (*SSID) ProtoMessage()               {}
func (*SSID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SSID) GetSsid() string {
	if m != nil {
		return m.Ssid
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "tast.cros.network.Config")
	proto.RegisterType((*ShillVal)(nil), "tast.cros.network.ShillVal")
	proto.RegisterType((*Service)(nil), "tast.cros.network.Service")
	proto.RegisterType((*SSID)(nil), "tast.cros.network.SSID")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Wifi service

type WifiClient interface {
	// Connect attempts to connect wifi network.
	Connect(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Service, error)
	// Disconnect attempts to disconnect from a service.
	Disconnect(ctx context.Context, in *Service, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// DeleteEntriesForSSID deletes all profile entries for a given ssid.
	DeleteEntriesForSSID(ctx context.Context, in *SSID, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type wifiClient struct {
	cc *grpc.ClientConn
}

func NewWifiClient(cc *grpc.ClientConn) WifiClient {
	return &wifiClient{cc}
}

func (c *wifiClient) Connect(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := grpc.Invoke(ctx, "/tast.cros.network.Wifi/Connect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wifiClient) Disconnect(ctx context.Context, in *Service, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/tast.cros.network.Wifi/Disconnect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wifiClient) DeleteEntriesForSSID(ctx context.Context, in *SSID, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/tast.cros.network.Wifi/DeleteEntriesForSSID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Wifi service

type WifiServer interface {
	// Connect attempts to connect wifi network.
	Connect(context.Context, *Config) (*Service, error)
	// Disconnect attempts to disconnect from a service.
	Disconnect(context.Context, *Service) (*google_protobuf.Empty, error)
	// DeleteEntriesForSSID deletes all profile entries for a given ssid.
	DeleteEntriesForSSID(context.Context, *SSID) (*google_protobuf.Empty, error)
}

func RegisterWifiServer(s *grpc.Server, srv WifiServer) {
	s.RegisterService(&_Wifi_serviceDesc, srv)
}

func _Wifi_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WifiServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.Wifi/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WifiServer).Connect(ctx, req.(*Config))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wifi_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Service)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WifiServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.Wifi/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WifiServer).Disconnect(ctx, req.(*Service))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wifi_DeleteEntriesForSSID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SSID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WifiServer).DeleteEntriesForSSID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.Wifi/DeleteEntriesForSSID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WifiServer).DeleteEntriesForSSID(ctx, req.(*SSID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wifi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.network.Wifi",
	HandlerType: (*WifiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Wifi_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Wifi_Disconnect_Handler,
		},
		{
			MethodName: "DeleteEntriesForSSID",
			Handler:    _Wifi_DeleteEntriesForSSID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wifi.proto",
}

func init() { proto.RegisterFile("wifi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x41, 0x6f, 0x9b, 0x30,
	0x18, 0x85, 0x42, 0xd3, 0xec, 0xeb, 0x61, 0x9b, 0x55, 0x75, 0x8c, 0x6a, 0x52, 0x84, 0x34, 0x2d,
	0xbb, 0x18, 0x2d, 0xbb, 0x4c, 0xdb, 0x8d, 0xd2, 0xa9, 0x5c, 0x41, 0xda, 0xa4, 0xde, 0x08, 0x31,
	0xc1, 0xaa, 0x83, 0x91, 0x6d, 0x52, 0xf1, 0x53, 0xf7, 0x4b, 0x76, 0x9d, 0x6c, 0x93, 0x68, 0xda,
	0x48, 0x6f, 0xdf, 0x83, 0xf7, 0xbd, 0xf7, 0xfc, 0xf4, 0x01, 0x3c, 0xd1, 0x9a, 0xe2, 0x4e, 0x70,
	0xc5, 0xd1, 0x6b, 0x55, 0x4a, 0x85, 0x2b, 0xc1, 0x25, 0x6e, 0x89, 0x7a, 0xe2, 0xe2, 0x31, 0xbc,
	0xd9, 0x72, 0xbe, 0x65, 0x24, 0x36, 0x84, 0x75, 0x5f, 0xc7, 0x64, 0xd7, 0xa9, 0xc1, 0xf2, 0xa3,
	0xdf, 0x2e, 0xcc, 0x6e, 0x79, 0x5b, 0xd3, 0x2d, 0x42, 0xe0, 0x4b, 0x49, 0x37, 0x81, 0xbb, 0x70,
	0x97, 0x2f, 0x72, 0x33, 0xa3, 0x6b, 0x98, 0x35, 0x74, 0xb3, 0x21, 0x6d, 0x70, 0xb6, 0x70, 0x97,
	0xf3, 0x7c, 0x44, 0x28, 0x84, 0xb9, 0x24, 0x55, 0x2f, 0xa8, 0x1a, 0x02, 0xcf, 0xf0, 0x8f, 0x18,
	0x65, 0x00, 0xb2, 0xa1, 0x8c, 0x75, 0x82, 0x77, 0x32, 0xf0, 0x17, 0xde, 0xf2, 0x72, 0xf5, 0x11,
	0xff, 0x97, 0x0b, 0x5b, 0x5b, 0x5c, 0x1c, 0xb9, 0x77, 0xad, 0x12, 0x43, 0xfe, 0xd7, 0x72, 0xf8,
	0x00, 0x2f, 0xff, 0xf9, 0x8d, 0x5e, 0x81, 0xf7, 0x48, 0x86, 0x31, 0xa4, 0x1e, 0xd1, 0x27, 0x38,
	0xdf, 0x97, 0xac, 0x27, 0x26, 0xe2, 0xe5, 0xea, 0x66, 0xc2, 0xca, 0x88, 0xfc, 0x28, 0x59, 0x6e,
	0x99, 0x5f, 0xcf, 0xbe, 0xb8, 0xd1, 0x37, 0x98, 0x1f, 0x3e, 0x23, 0x04, 0x9e, 0x54, 0xc2, 0x8a,
	0xde, 0x3b, 0xb9, 0x06, 0xe8, 0x0a, 0xfc, 0x35, 0xe7, 0xcc, 0x3e, 0xfc, 0xde, 0xc9, 0x0d, 0x4a,
	0xce, 0xc1, 0xdb, 0x97, 0x2c, 0x7a, 0x07, 0x17, 0x05, 0x11, 0x7b, 0x5a, 0x11, 0x5d, 0x5b, 0x57,
	0xaa, 0xe6, 0x50, 0x9b, 0x9e, 0xa3, 0x10, 0xfc, 0xa2, 0xc8, 0xd2, 0xa9, 0x4a, 0x57, 0xbf, 0x5c,
	0xf0, 0x7f, 0xd2, 0x9a, 0xa2, 0x04, 0x2e, 0x6e, 0x79, 0xdb, 0x92, 0x4a, 0xa1, 0xb7, 0x27, 0xeb,
	0x09, 0xc3, 0xa9, 0xe7, 0x58, 0xeb, 0xc8, 0x41, 0x09, 0x40, 0x4a, 0x65, 0x35, 0xca, 0x3c, 0xc3,
	0x0d, 0xaf, 0xb1, 0x3d, 0x03, 0x7c, 0x38, 0x03, 0x7c, 0xa7, 0xcf, 0x20, 0x72, 0x50, 0x06, 0x57,
	0x29, 0x61, 0x44, 0x11, 0x5d, 0x30, 0x25, 0xf2, 0x3b, 0x17, 0x26, 0xfc, 0x9b, 0x29, 0xb5, 0x22,
	0x4b, 0x4f, 0x4b, 0x25, 0x1f, 0x1e, 0xde, 0x57, 0x8d, 0xe0, 0x3b, 0xda, 0xef, 0xb8, 0x8c, 0xf5,
	0x7a, 0x2c, 0xad, 0xbf, 0x8c, 0xb5, 0x4e, 0x3c, 0xea, 0xac, 0x67, 0x66, 0xf5, 0xf3, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x79, 0x35, 0x43, 0xd3, 0xbb, 0x02, 0x00, 0x00,
}
