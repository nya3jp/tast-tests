// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wifi.proto

/*
Package network is a generated protocol buffer package.

It is generated from these files:
	wifi.proto

It has these top-level messages:
	Config
	Service
*/
package network

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	Ssid string `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetSsid() string {
	if m != nil {
		return m.Ssid
	}
	return ""
}

type Service struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Service) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "tast.cros.network.Config")
	proto.RegisterType((*Service)(nil), "tast.cros.network.Service")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Wifi service

type WifiClient interface {
	// Connect attempts to connect wifi network.
	Connect(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Service, error)
	// Disconnect attempts to disconnect from a service.
	Disconnect(ctx context.Context, in *Service, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type wifiClient struct {
	cc *grpc.ClientConn
}

func NewWifiClient(cc *grpc.ClientConn) WifiClient {
	return &wifiClient{cc}
}

func (c *wifiClient) Connect(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := grpc.Invoke(ctx, "/tast.cros.network.Wifi/Connect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wifiClient) Disconnect(ctx context.Context, in *Service, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/tast.cros.network.Wifi/Disconnect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Wifi service

type WifiServer interface {
	// Connect attempts to connect wifi network.
	Connect(context.Context, *Config) (*Service, error)
	// Disconnect attempts to disconnect from a service.
	Disconnect(context.Context, *Service) (*google_protobuf.Empty, error)
}

func RegisterWifiServer(s *grpc.Server, srv WifiServer) {
	s.RegisterService(&_Wifi_serviceDesc, srv)
}

func _Wifi_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WifiServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.Wifi/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WifiServer).Connect(ctx, req.(*Config))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wifi_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Service)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WifiServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.network.Wifi/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WifiServer).Disconnect(ctx, req.(*Service))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wifi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.network.Wifi",
	HandlerType: (*WifiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Wifi_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Wifi_Disconnect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wifi.proto",
}

func init() { proto.RegisterFile("wifi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8f, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0xbb, 0x50, 0x5a, 0x9c, 0x9b, 0x39, 0x88, 0x46, 0x05, 0x09, 0x88, 0x9e, 0x26, 0xa0,
	0xff, 0x60, 0xab, 0x7f, 0x40, 0x0f, 0x82, 0xb7, 0x36, 0x26, 0xdb, 0x41, 0x37, 0xb3, 0x64, 0x52,
	0x8b, 0x7f, 0xc2, 0xdf, 0x2c, 0xd9, 0x6c, 0x4f, 0x8a, 0xb7, 0x07, 0xef, 0xbd, 0x6f, 0xe6, 0x01,
	0xec, 0x29, 0x10, 0x0e, 0x89, 0x33, 0xab, 0xe3, 0xbc, 0x96, 0x8c, 0x2e, 0xb1, 0x60, 0xf4, 0x79,
	0xcf, 0xe9, 0x5d, 0x9f, 0x77, 0xcc, 0xdd, 0x87, 0xb7, 0x63, 0x60, 0xb3, 0x0b, 0xd6, 0xf7, 0x43,
	0xfe, 0xaa, 0x79, 0x73, 0x01, 0x8b, 0x15, 0xc7, 0x40, 0x9d, 0x52, 0x30, 0x17, 0xa1, 0xb7, 0xd3,
	0xe6, 0xaa, 0xb9, 0x3d, 0x7a, 0x1a, 0xb5, 0xb9, 0x84, 0xe5, 0xb3, 0x4f, 0x9f, 0xe4, 0x7c, 0xb1,
	0x87, 0x75, 0xde, 0x1e, 0xec, 0xa2, 0xef, 0xbe, 0x1b, 0x98, 0xbf, 0x50, 0x20, 0xd5, 0xc2, 0x72,
	0xc5, 0x31, 0x7a, 0x97, 0xd5, 0x19, 0xfe, 0xfa, 0x00, 0xeb, 0x05, 0xad, 0xff, 0xb0, 0x26, 0xbc,
	0x99, 0xa9, 0x16, 0xe0, 0x81, 0xc4, 0x4d, 0x98, 0x7f, 0xb2, 0xfa, 0x04, 0xeb, 0x22, 0x3c, 0x2c,
	0xc2, 0xc7, 0xb2, 0xc8, 0xcc, 0xda, 0x9b, 0xd7, 0x6b, 0xb7, 0x4d, 0xdc, 0xd3, 0xae, 0x67, 0xb1,
	0x85, 0x60, 0xa5, 0x96, 0xc4, 0x16, 0x94, 0x9d, 0x50, 0x9b, 0xc5, 0x58, 0xbd, 0xff, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x09, 0xf5, 0x4c, 0xf3, 0x3b, 0x01, 0x00, 0x00,
}
