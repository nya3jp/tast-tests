// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filter_service.proto

package filterrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnableCrashFilteringRequest struct {
	// Name of the program to be handled by crash_reporter.
	// If empty, all crashes are handled. If "none", no crashes are handled at all.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableCrashFilteringRequest) Reset()         { *m = EnableCrashFilteringRequest{} }
func (m *EnableCrashFilteringRequest) String() string { return proto.CompactTextString(m) }
func (*EnableCrashFilteringRequest) ProtoMessage()    {}
func (*EnableCrashFilteringRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f88a742038d92b42, []int{0}
}

func (m *EnableCrashFilteringRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableCrashFilteringRequest.Unmarshal(m, b)
}
func (m *EnableCrashFilteringRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableCrashFilteringRequest.Marshal(b, m, deterministic)
}
func (m *EnableCrashFilteringRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableCrashFilteringRequest.Merge(m, src)
}
func (m *EnableCrashFilteringRequest) XXX_Size() int {
	return xxx_messageInfo_EnableCrashFilteringRequest.Size(m)
}
func (m *EnableCrashFilteringRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableCrashFilteringRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableCrashFilteringRequest proto.InternalMessageInfo

func (m *EnableCrashFilteringRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ReadFileRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadFileRequest) Reset()         { *m = ReadFileRequest{} }
func (m *ReadFileRequest) String() string { return proto.CompactTextString(m) }
func (*ReadFileRequest) ProtoMessage()    {}
func (*ReadFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f88a742038d92b42, []int{1}
}

func (m *ReadFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadFileRequest.Unmarshal(m, b)
}
func (m *ReadFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadFileRequest.Marshal(b, m, deterministic)
}
func (m *ReadFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadFileRequest.Merge(m, src)
}
func (m *ReadFileRequest) XXX_Size() int {
	return xxx_messageInfo_ReadFileRequest.Size(m)
}
func (m *ReadFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadFileRequest proto.InternalMessageInfo

func (m *ReadFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ReadFileResponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadFileResponse) Reset()         { *m = ReadFileResponse{} }
func (m *ReadFileResponse) String() string { return proto.CompactTextString(m) }
func (*ReadFileResponse) ProtoMessage()    {}
func (*ReadFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f88a742038d92b42, []int{2}
}

func (m *ReadFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadFileResponse.Unmarshal(m, b)
}
func (m *ReadFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadFileResponse.Marshal(b, m, deterministic)
}
func (m *ReadFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadFileResponse.Merge(m, src)
}
func (m *ReadFileResponse) XXX_Size() int {
	return xxx_messageInfo_ReadFileResponse.Size(m)
}
func (m *ReadFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadFileResponse proto.InternalMessageInfo

func (m *ReadFileResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*EnableCrashFilteringRequest)(nil), "tast.cros.platform.EnableCrashFilteringRequest")
	proto.RegisterType((*ReadFileRequest)(nil), "tast.cros.platform.ReadFileRequest")
	proto.RegisterType((*ReadFileResponse)(nil), "tast.cros.platform.ReadFileResponse")
}

func init() { proto.RegisterFile("filter_service.proto", fileDescriptor_f88a742038d92b42) }

var fileDescriptor_f88a742038d92b42 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0xa7, 0x20, 0xa2, 0x01, 0x51, 0xc2, 0x20, 0xd2, 0xd9, 0x48, 0xfd, 0xdf, 0x24, 0xa8,
	0x6f, 0xa0, 0xcc, 0x3c, 0x40, 0x5d, 0x08, 0x6e, 0xe4, 0xb6, 0x73, 0xdb, 0x06, 0x92, 0x26, 0x26,
	0xb7, 0x82, 0xcf, 0xe8, 0x4b, 0x49, 0x1a, 0x8b, 0xa2, 0xc3, 0xec, 0xce, 0xe2, 0x3b, 0xc9, 0xf9,
	0xb8, 0x6c, 0xde, 0x28, 0x4d, 0xe8, 0x5f, 0x03, 0xfa, 0x77, 0x55, 0xa3, 0x70, 0xde, 0x92, 0xe5,
	0x9c, 0x20, 0x90, 0xa8, 0xbd, 0x0d, 0xc2, 0x69, 0xa0, 0xc6, 0x7a, 0x93, 0x2f, 0x5a, 0x6b, 0x5b,
	0x8d, 0x72, 0x24, 0xaa, 0xa1, 0x91, 0x68, 0x1c, 0x7d, 0xa4, 0x42, 0x71, 0xcb, 0x16, 0xcb, 0x1e,
	0x2a, 0x8d, 0x8f, 0x1e, 0x42, 0xb7, 0x1a, 0xdf, 0x54, 0x7d, 0x5b, 0xe2, 0xdb, 0x80, 0x81, 0x38,
	0x67, 0x3b, 0x3d, 0x18, 0x3c, 0xc9, 0x4e, 0xb3, 0xeb, 0xfd, 0x72, 0xcc, 0xc5, 0x05, 0x3b, 0x2c,
	0x11, 0xd6, 0x2b, 0xa5, 0xf1, 0x17, 0xe6, 0x80, 0xba, 0x09, 0x8b, 0xb9, 0xb8, 0x64, 0x47, 0x3f,
	0x58, 0x70, 0xb6, 0x0f, 0x18, 0xb9, 0x35, 0x10, 0x4c, 0x5c, 0xcc, 0x77, 0x9f, 0x19, 0x3b, 0x48,
	0xff, 0x3e, 0x25, 0x15, 0x0e, 0x6c, 0xbe, 0x69, 0x13, 0x97, 0xe2, 0xbf, 0x9d, 0xd8, 0xb2, 0x3e,
	0x3f, 0x16, 0x49, 0x5d, 0x4c, 0xea, 0x62, 0x19, 0xd5, 0x8b, 0x19, 0x7f, 0x66, 0x7b, 0xd3, 0x38,
	0x7e, 0xb6, 0xe9, 0xd9, 0x3f, 0x86, 0xf9, 0xf9, 0x76, 0x28, 0xf9, 0x15, 0xb3, 0x87, 0x9b, 0x97,
	0xab, 0xba, 0xf3, 0xd6, 0xa8, 0xc1, 0xd8, 0x20, 0x63, 0x47, 0x7e, 0x5f, 0x28, 0xc8, 0x58, 0x96,
	0xe9, 0x6c, 0xde, 0xd5, 0xd5, 0xee, 0xb8, 0xea, 0xfe, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x98, 0x1b,
	0x76, 0x57, 0xca, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FilterServiceClient is the client API for FilterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilterServiceClient interface {
	// EnableCrashFiltering sets crash_reporter filter by process name.
	EnableCrashFiltering(ctx context.Context, in *EnableCrashFilteringRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// ReadFile returns the content of a file.
	// TODO(yamaguchi): move this to baserpc/file_system.
	ReadFile(ctx context.Context, in *ReadFileRequest, opts ...grpc.CallOption) (*ReadFileResponse, error)
}

type filterServiceClient struct {
	cc *grpc.ClientConn
}

func NewFilterServiceClient(cc *grpc.ClientConn) FilterServiceClient {
	return &filterServiceClient{cc}
}

func (c *filterServiceClient) EnableCrashFiltering(ctx context.Context, in *EnableCrashFilteringRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.platform.FilterService/EnableCrashFiltering", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filterServiceClient) ReadFile(ctx context.Context, in *ReadFileRequest, opts ...grpc.CallOption) (*ReadFileResponse, error) {
	out := new(ReadFileResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.platform.FilterService/ReadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilterServiceServer is the server API for FilterService service.
type FilterServiceServer interface {
	// EnableCrashFiltering sets crash_reporter filter by process name.
	EnableCrashFiltering(context.Context, *EnableCrashFilteringRequest) (*empty.Empty, error)
	// ReadFile returns the content of a file.
	// TODO(yamaguchi): move this to baserpc/file_system.
	ReadFile(context.Context, *ReadFileRequest) (*ReadFileResponse, error)
}

// UnimplementedFilterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFilterServiceServer struct {
}

func (*UnimplementedFilterServiceServer) EnableCrashFiltering(ctx context.Context, req *EnableCrashFilteringRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableCrashFiltering not implemented")
}
func (*UnimplementedFilterServiceServer) ReadFile(ctx context.Context, req *ReadFileRequest) (*ReadFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadFile not implemented")
}

func RegisterFilterServiceServer(s *grpc.Server, srv FilterServiceServer) {
	s.RegisterService(&_FilterService_serviceDesc, srv)
}

func _FilterService_EnableCrashFiltering_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableCrashFilteringRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilterServiceServer).EnableCrashFiltering(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.platform.FilterService/EnableCrashFiltering",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilterServiceServer).EnableCrashFiltering(ctx, req.(*EnableCrashFilteringRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilterService_ReadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilterServiceServer).ReadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.platform.FilterService/ReadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilterServiceServer).ReadFile(ctx, req.(*ReadFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FilterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.platform.FilterService",
	HandlerType: (*FilterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnableCrashFiltering",
			Handler:    _FilterService_EnableCrashFiltering_Handler,
		},
		{
			MethodName: "ReadFile",
			Handler:    _FilterService_ReadFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "filter_service.proto",
}
