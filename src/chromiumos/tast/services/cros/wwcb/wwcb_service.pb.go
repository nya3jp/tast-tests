// Copyright 2022 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: wwcb_service.proto

package wwcb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendString string `protobuf:"bytes,1,opt,name=send_string,json=sendString,proto3" json:"send_string,omitempty"`
}

func (x *StringRequest) Reset() {
	*x = StringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwcb_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringRequest) ProtoMessage() {}

func (x *StringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wwcb_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringRequest.ProtoReflect.Descriptor instead.
func (*StringRequest) Descriptor() ([]byte, []int) {
	return file_wwcb_service_proto_rawDescGZIP(), []int{0}
}

func (x *StringRequest) GetSendString() string {
	if x != nil {
		return x.SendString
	}
	return ""
}

type StringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnString string `protobuf:"bytes,1,opt,name=return_string,json=returnString,proto3" json:"return_string,omitempty"`
}

func (x *StringResponse) Reset() {
	*x = StringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwcb_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringResponse) ProtoMessage() {}

func (x *StringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wwcb_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringResponse.ProtoReflect.Descriptor instead.
func (*StringResponse) Descriptor() ([]byte, []int) {
	return file_wwcb_service_proto_rawDescGZIP(), []int{1}
}

func (x *StringResponse) GetReturnString() string {
	if x != nil {
		return x.ReturnString
	}
	return ""
}

type BoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendBool bool `protobuf:"varint,1,opt,name=send_bool,json=sendBool,proto3" json:"send_bool,omitempty"`
}

func (x *BoolRequest) Reset() {
	*x = BoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwcb_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolRequest) ProtoMessage() {}

func (x *BoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wwcb_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolRequest.ProtoReflect.Descriptor instead.
func (*BoolRequest) Descriptor() ([]byte, []int) {
	return file_wwcb_service_proto_rawDescGZIP(), []int{2}
}

func (x *BoolRequest) GetSendBool() bool {
	if x != nil {
		return x.SendBool
	}
	return false
}

var File_wwcb_service_proto protoreflect.FileDescriptor

var file_wwcb_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x77, 0x77, 0x63, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x2e,
	0x77, 0x77, 0x63, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x30, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0x35, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2a, 0x0a, 0x0b, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x32, 0xc6, 0x04, 0x0a, 0x0b, 0x57, 0x57, 0x43, 0x42, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x03, 0x4e, 0x65, 0x77, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x39, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x04, 0x45, 0x63,
	0x68, 0x6f, 0x12, 0x1d, 0x2e, 0x74, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x2e, 0x77,
	0x77, 0x63, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x2e, 0x77, 0x77,
	0x63, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x14, 0x44, 0x6f, 0x63, 0x6b, 0x31, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x33, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x14, 0x44, 0x6f, 0x63, 0x6b, 0x31, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x65, 0x70, 0x34, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x4f, 0x6e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x2e, 0x74, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f, 0x73,
	0x2e, 0x77, 0x77, 0x63, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x14, 0x44,
	0x6f, 0x63, 0x6b, 0x31, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x36, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x14, 0x44, 0x6f, 0x63, 0x6b, 0x31, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x38, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42,
	0x24, 0x5a, 0x22, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x6f, 0x73, 0x2f, 0x74, 0x61,
	0x73, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x6f, 0x73,
	0x2f, 0x77, 0x77, 0x63, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wwcb_service_proto_rawDescOnce sync.Once
	file_wwcb_service_proto_rawDescData = file_wwcb_service_proto_rawDesc
)

func file_wwcb_service_proto_rawDescGZIP() []byte {
	file_wwcb_service_proto_rawDescOnce.Do(func() {
		file_wwcb_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_wwcb_service_proto_rawDescData)
	})
	return file_wwcb_service_proto_rawDescData
}

var file_wwcb_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_wwcb_service_proto_goTypes = []interface{}{
	(*StringRequest)(nil),  // 0: tast.cros.wwcb.StringRequest
	(*StringResponse)(nil), // 1: tast.cros.wwcb.StringResponse
	(*BoolRequest)(nil),    // 2: tast.cros.wwcb.BoolRequest
	(*emptypb.Empty)(nil),  // 3: google.protobuf.Empty
}
var file_wwcb_service_proto_depIdxs = []int32{
	3, // 0: tast.cros.wwcb.WWCBService.New:input_type -> google.protobuf.Empty
	3, // 1: tast.cros.wwcb.WWCBService.Close:input_type -> google.protobuf.Empty
	0, // 2: tast.cros.wwcb.WWCBService.Echo:input_type -> tast.cros.wwcb.StringRequest
	3, // 3: tast.cros.wwcb.WWCBService.Dock1PersistentStep3:input_type -> google.protobuf.Empty
	3, // 4: tast.cros.wwcb.WWCBService.Dock1PersistentStep4:input_type -> google.protobuf.Empty
	2, // 5: tast.cros.wwcb.WWCBService.VerifyAllWindowsOnDisplay:input_type -> tast.cros.wwcb.BoolRequest
	3, // 6: tast.cros.wwcb.WWCBService.Dock1PersistentStep6:input_type -> google.protobuf.Empty
	3, // 7: tast.cros.wwcb.WWCBService.Dock1PersistentStep8:input_type -> google.protobuf.Empty
	3, // 8: tast.cros.wwcb.WWCBService.New:output_type -> google.protobuf.Empty
	3, // 9: tast.cros.wwcb.WWCBService.Close:output_type -> google.protobuf.Empty
	1, // 10: tast.cros.wwcb.WWCBService.Echo:output_type -> tast.cros.wwcb.StringResponse
	3, // 11: tast.cros.wwcb.WWCBService.Dock1PersistentStep3:output_type -> google.protobuf.Empty
	3, // 12: tast.cros.wwcb.WWCBService.Dock1PersistentStep4:output_type -> google.protobuf.Empty
	3, // 13: tast.cros.wwcb.WWCBService.VerifyAllWindowsOnDisplay:output_type -> google.protobuf.Empty
	3, // 14: tast.cros.wwcb.WWCBService.Dock1PersistentStep6:output_type -> google.protobuf.Empty
	3, // 15: tast.cros.wwcb.WWCBService.Dock1PersistentStep8:output_type -> google.protobuf.Empty
	8, // [8:16] is the sub-list for method output_type
	0, // [0:8] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wwcb_service_proto_init() }
func file_wwcb_service_proto_init() {
	if File_wwcb_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wwcb_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wwcb_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wwcb_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wwcb_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wwcb_service_proto_goTypes,
		DependencyIndexes: file_wwcb_service_proto_depIdxs,
		MessageInfos:      file_wwcb_service_proto_msgTypes,
	}.Build()
	File_wwcb_service_proto = out.File
	file_wwcb_service_proto_rawDesc = nil
	file_wwcb_service_proto_goTypes = nil
	file_wwcb_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WWCBServiceClient is the client API for WWCBService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WWCBServiceClient interface {
	// New logs into a Chrome session as a fake user. Close must be called later
	// to clean up the associated resources.
	New(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Close releases the resources obtained by New.
	Close(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Echo returns a string conbined with server name.
	Echo(ctx context.Context, in *StringRequest, opts ...grpc.CallOption) (*StringResponse, error)
	// Dock1PersistentStep3 checks external display status.
	Dock1PersistentStep3(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Dock1PersistentStep4 opens two apps on external display.
	Dock1PersistentStep4(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// VerifyAllWindowsOnDisplay verifies all windows on internal(false) or external(true) display.
	VerifyAllWindowsOnDisplay(ctx context.Context, in *BoolRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Dock1PersistentStep6 tests primary mode.
	Dock1PersistentStep6(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Dock1PersistentStep8 tests mirror mode.
	Dock1PersistentStep8(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type wWCBServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWWCBServiceClient(cc grpc.ClientConnInterface) WWCBServiceClient {
	return &wWCBServiceClient{cc}
}

func (c *wWCBServiceClient) New(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.wwcb.WWCBService/New", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wWCBServiceClient) Close(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.wwcb.WWCBService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wWCBServiceClient) Echo(ctx context.Context, in *StringRequest, opts ...grpc.CallOption) (*StringResponse, error) {
	out := new(StringResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.wwcb.WWCBService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wWCBServiceClient) Dock1PersistentStep3(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.wwcb.WWCBService/Dock1PersistentStep3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wWCBServiceClient) Dock1PersistentStep4(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.wwcb.WWCBService/Dock1PersistentStep4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wWCBServiceClient) VerifyAllWindowsOnDisplay(ctx context.Context, in *BoolRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.wwcb.WWCBService/VerifyAllWindowsOnDisplay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wWCBServiceClient) Dock1PersistentStep6(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.wwcb.WWCBService/Dock1PersistentStep6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wWCBServiceClient) Dock1PersistentStep8(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.wwcb.WWCBService/Dock1PersistentStep8", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WWCBServiceServer is the server API for WWCBService service.
type WWCBServiceServer interface {
	// New logs into a Chrome session as a fake user. Close must be called later
	// to clean up the associated resources.
	New(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	// Close releases the resources obtained by New.
	Close(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	// Echo returns a string conbined with server name.
	Echo(context.Context, *StringRequest) (*StringResponse, error)
	// Dock1PersistentStep3 checks external display status.
	Dock1PersistentStep3(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	// Dock1PersistentStep4 opens two apps on external display.
	Dock1PersistentStep4(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	// VerifyAllWindowsOnDisplay verifies all windows on internal(false) or external(true) display.
	VerifyAllWindowsOnDisplay(context.Context, *BoolRequest) (*emptypb.Empty, error)
	// Dock1PersistentStep6 tests primary mode.
	Dock1PersistentStep6(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	// Dock1PersistentStep8 tests mirror mode.
	Dock1PersistentStep8(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
}

// UnimplementedWWCBServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWWCBServiceServer struct {
}

func (*UnimplementedWWCBServiceServer) New(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method New not implemented")
}
func (*UnimplementedWWCBServiceServer) Close(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedWWCBServiceServer) Echo(context.Context, *StringRequest) (*StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedWWCBServiceServer) Dock1PersistentStep3(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Dock1PersistentStep3 not implemented")
}
func (*UnimplementedWWCBServiceServer) Dock1PersistentStep4(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Dock1PersistentStep4 not implemented")
}
func (*UnimplementedWWCBServiceServer) VerifyAllWindowsOnDisplay(context.Context, *BoolRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyAllWindowsOnDisplay not implemented")
}
func (*UnimplementedWWCBServiceServer) Dock1PersistentStep6(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Dock1PersistentStep6 not implemented")
}
func (*UnimplementedWWCBServiceServer) Dock1PersistentStep8(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Dock1PersistentStep8 not implemented")
}

func RegisterWWCBServiceServer(s *grpc.Server, srv WWCBServiceServer) {
	s.RegisterService(&_WWCBService_serviceDesc, srv)
}

func _WWCBService_New_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WWCBServiceServer).New(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wwcb.WWCBService/New",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WWCBServiceServer).New(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WWCBService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WWCBServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wwcb.WWCBService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WWCBServiceServer).Close(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WWCBService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WWCBServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wwcb.WWCBService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WWCBServiceServer).Echo(ctx, req.(*StringRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WWCBService_Dock1PersistentStep3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WWCBServiceServer).Dock1PersistentStep3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wwcb.WWCBService/Dock1PersistentStep3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WWCBServiceServer).Dock1PersistentStep3(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WWCBService_Dock1PersistentStep4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WWCBServiceServer).Dock1PersistentStep4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wwcb.WWCBService/Dock1PersistentStep4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WWCBServiceServer).Dock1PersistentStep4(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WWCBService_VerifyAllWindowsOnDisplay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WWCBServiceServer).VerifyAllWindowsOnDisplay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wwcb.WWCBService/VerifyAllWindowsOnDisplay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WWCBServiceServer).VerifyAllWindowsOnDisplay(ctx, req.(*BoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WWCBService_Dock1PersistentStep6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WWCBServiceServer).Dock1PersistentStep6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wwcb.WWCBService/Dock1PersistentStep6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WWCBServiceServer).Dock1PersistentStep6(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WWCBService_Dock1PersistentStep8_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WWCBServiceServer).Dock1PersistentStep8(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.wwcb.WWCBService/Dock1PersistentStep8",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WWCBServiceServer).Dock1PersistentStep8(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _WWCBService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.wwcb.WWCBService",
	HandlerType: (*WWCBServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "New",
			Handler:    _WWCBService_New_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _WWCBService_Close_Handler,
		},
		{
			MethodName: "Echo",
			Handler:    _WWCBService_Echo_Handler,
		},
		{
			MethodName: "Dock1PersistentStep3",
			Handler:    _WWCBService_Dock1PersistentStep3_Handler,
		},
		{
			MethodName: "Dock1PersistentStep4",
			Handler:    _WWCBService_Dock1PersistentStep4_Handler,
		},
		{
			MethodName: "VerifyAllWindowsOnDisplay",
			Handler:    _WWCBService_VerifyAllWindowsOnDisplay_Handler,
		},
		{
			MethodName: "Dock1PersistentStep6",
			Handler:    _WWCBService_Dock1PersistentStep6_Handler,
		},
		{
			MethodName: "Dock1PersistentStep8",
			Handler:    _WWCBService_Dock1PersistentStep8_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wwcb_service.proto",
}
