// Copyright 2022 The ChromiumOS Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: ossettings_service.proto

package ossettings

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpenNetworkDetailPageRequest_NetworkType int32

const (
	OpenNetworkDetailPageRequest_CELLULAR OpenNetworkDetailPageRequest_NetworkType = 0
	OpenNetworkDetailPageRequest_WIFI     OpenNetworkDetailPageRequest_NetworkType = 1
)

// Enum value maps for OpenNetworkDetailPageRequest_NetworkType.
var (
	OpenNetworkDetailPageRequest_NetworkType_name = map[int32]string{
		0: "CELLULAR",
		1: "WIFI",
	}
	OpenNetworkDetailPageRequest_NetworkType_value = map[string]int32{
		"CELLULAR": 0,
		"WIFI":     1,
	}
)

func (x OpenNetworkDetailPageRequest_NetworkType) Enum() *OpenNetworkDetailPageRequest_NetworkType {
	p := new(OpenNetworkDetailPageRequest_NetworkType)
	*p = x
	return p
}

func (x OpenNetworkDetailPageRequest_NetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenNetworkDetailPageRequest_NetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_ossettings_service_proto_enumTypes[0].Descriptor()
}

func (OpenNetworkDetailPageRequest_NetworkType) Type() protoreflect.EnumType {
	return &file_ossettings_service_proto_enumTypes[0]
}

func (x OpenNetworkDetailPageRequest_NetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpenNetworkDetailPageRequest_NetworkType.Descriptor instead.
func (OpenNetworkDetailPageRequest_NetworkType) EnumDescriptor() ([]byte, []int) {
	return file_ossettings_service_proto_rawDescGZIP(), []int{0, 0}
}

type OpenNetworkDetailPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the network.
	NetworkName string `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	// The type of the network.
	NetworkType OpenNetworkDetailPageRequest_NetworkType `protobuf:"varint,2,opt,name=network_type,json=networkType,proto3,enum=tast.cros.chrome.uiauto.ossettings.OpenNetworkDetailPageRequest_NetworkType" json:"network_type,omitempty"`
}

func (x *OpenNetworkDetailPageRequest) Reset() {
	*x = OpenNetworkDetailPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ossettings_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenNetworkDetailPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenNetworkDetailPageRequest) ProtoMessage() {}

func (x *OpenNetworkDetailPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ossettings_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenNetworkDetailPageRequest.ProtoReflect.Descriptor instead.
func (*OpenNetworkDetailPageRequest) Descriptor() ([]byte, []int) {
	return file_ossettings_service_proto_rawDescGZIP(), []int{0}
}

func (x *OpenNetworkDetailPageRequest) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *OpenNetworkDetailPageRequest) GetNetworkType() OpenNetworkDetailPageRequest_NetworkType {
	if x != nil {
		return x.NetworkType
	}
	return OpenNetworkDetailPageRequest_CELLULAR
}

var File_ossettings_service_proto protoreflect.FileDescriptor

var file_ossettings_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6f, 0x73, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x74, 0x61, 0x73, 0x74,
	0x2e, 0x63, 0x72, 0x6f, 0x73, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x2e, 0x75, 0x69, 0x61,
	0x75, 0x74, 0x6f, 0x2e, 0x6f, 0x73, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x1c,
	0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x6f, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x74, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f,
	0x73, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x2e, 0x75, 0x69, 0x61, 0x75, 0x74, 0x6f, 0x2e,
	0x6f, 0x73, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x25, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x57, 0x49, 0x46, 0x49, 0x10, 0x01, 0x32, 0xc3, 0x01, 0x0a, 0x11, 0x4f, 0x73, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a,
	0x15, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x40, 0x2e, 0x74, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x72,
	0x6f, 0x73, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x2e, 0x75, 0x69, 0x61, 0x75, 0x74, 0x6f,
	0x2e, 0x6f, 0x73, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x38, 0x5a,
	0x36, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x6f, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x74,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x65, 0x2f, 0x75, 0x69, 0x61, 0x75, 0x74, 0x6f, 0x2f, 0x6f, 0x73, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ossettings_service_proto_rawDescOnce sync.Once
	file_ossettings_service_proto_rawDescData = file_ossettings_service_proto_rawDesc
)

func file_ossettings_service_proto_rawDescGZIP() []byte {
	file_ossettings_service_proto_rawDescOnce.Do(func() {
		file_ossettings_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_ossettings_service_proto_rawDescData)
	})
	return file_ossettings_service_proto_rawDescData
}

var file_ossettings_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ossettings_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ossettings_service_proto_goTypes = []interface{}{
	(OpenNetworkDetailPageRequest_NetworkType)(0), // 0: tast.cros.chrome.uiauto.ossettings.OpenNetworkDetailPageRequest.NetworkType
	(*OpenNetworkDetailPageRequest)(nil),          // 1: tast.cros.chrome.uiauto.ossettings.OpenNetworkDetailPageRequest
	(*emptypb.Empty)(nil),                         // 2: google.protobuf.Empty
}
var file_ossettings_service_proto_depIdxs = []int32{
	0, // 0: tast.cros.chrome.uiauto.ossettings.OpenNetworkDetailPageRequest.network_type:type_name -> tast.cros.chrome.uiauto.ossettings.OpenNetworkDetailPageRequest.NetworkType
	1, // 1: tast.cros.chrome.uiauto.ossettings.OsSettingsService.OpenNetworkDetailPage:input_type -> tast.cros.chrome.uiauto.ossettings.OpenNetworkDetailPageRequest
	2, // 2: tast.cros.chrome.uiauto.ossettings.OsSettingsService.Close:input_type -> google.protobuf.Empty
	2, // 3: tast.cros.chrome.uiauto.ossettings.OsSettingsService.OpenNetworkDetailPage:output_type -> google.protobuf.Empty
	2, // 4: tast.cros.chrome.uiauto.ossettings.OsSettingsService.Close:output_type -> google.protobuf.Empty
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ossettings_service_proto_init() }
func file_ossettings_service_proto_init() {
	if File_ossettings_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ossettings_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenNetworkDetailPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ossettings_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ossettings_service_proto_goTypes,
		DependencyIndexes: file_ossettings_service_proto_depIdxs,
		EnumInfos:         file_ossettings_service_proto_enumTypes,
		MessageInfos:      file_ossettings_service_proto_msgTypes,
	}.Build()
	File_ossettings_service_proto = out.File
	file_ossettings_service_proto_rawDesc = nil
	file_ossettings_service_proto_goTypes = nil
	file_ossettings_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OsSettingsServiceClient is the client API for OsSettingsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OsSettingsServiceClient interface {
	// OpenNetworkDetailPage will open the OS Settings application and navigate
	// to the detail page for the specified network.
	OpenNetworkDetailPage(ctx context.Context, in *OpenNetworkDetailPageRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Close will close the open OS Settings application.
	Close(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type osSettingsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOsSettingsServiceClient(cc grpc.ClientConnInterface) OsSettingsServiceClient {
	return &osSettingsServiceClient{cc}
}

func (c *osSettingsServiceClient) OpenNetworkDetailPage(ctx context.Context, in *OpenNetworkDetailPageRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.chrome.uiauto.ossettings.OsSettingsService/OpenNetworkDetailPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osSettingsServiceClient) Close(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.chrome.uiauto.ossettings.OsSettingsService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OsSettingsServiceServer is the server API for OsSettingsService service.
type OsSettingsServiceServer interface {
	// OpenNetworkDetailPage will open the OS Settings application and navigate
	// to the detail page for the specified network.
	OpenNetworkDetailPage(context.Context, *OpenNetworkDetailPageRequest) (*emptypb.Empty, error)
	// Close will close the open OS Settings application.
	Close(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
}

// UnimplementedOsSettingsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOsSettingsServiceServer struct {
}

func (*UnimplementedOsSettingsServiceServer) OpenNetworkDetailPage(context.Context, *OpenNetworkDetailPageRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenNetworkDetailPage not implemented")
}
func (*UnimplementedOsSettingsServiceServer) Close(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}

func RegisterOsSettingsServiceServer(s *grpc.Server, srv OsSettingsServiceServer) {
	s.RegisterService(&_OsSettingsService_serviceDesc, srv)
}

func _OsSettingsService_OpenNetworkDetailPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenNetworkDetailPageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsSettingsServiceServer).OpenNetworkDetailPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.chrome.uiauto.ossettings.OsSettingsService/OpenNetworkDetailPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsSettingsServiceServer).OpenNetworkDetailPage(ctx, req.(*OpenNetworkDetailPageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsSettingsService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsSettingsServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.chrome.uiauto.ossettings.OsSettingsService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsSettingsServiceServer).Close(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _OsSettingsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.chrome.uiauto.ossettings.OsSettingsService",
	HandlerType: (*OsSettingsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OpenNetworkDetailPage",
			Handler:    _OsSettingsService_OpenNetworkDetailPage_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _OsSettingsService_Close_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ossettings_service.proto",
}
