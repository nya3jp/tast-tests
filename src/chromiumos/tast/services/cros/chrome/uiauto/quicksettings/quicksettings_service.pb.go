// Copyright 2022 The ChromiumOS Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: quicksettings_service.proto

package quicksettings

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_quicksettings_service_proto protoreflect.FileDescriptor

var file_quicksettings_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x74,
	0x61, 0x73, 0x74, 0x2e, 0x63, 0x72, 0x6f, 0x73, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x2e,
	0x75, 0x69, 0x61, 0x75, 0x74, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x32, 0xbe, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x1f, 0x4e, 0x61,
	0x76, 0x69, 0x67, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74,
	0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x1d, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x42, 0x3b, 0x5a, 0x39, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x6f, 0x73,
	0x2f, 0x74, 0x61, 0x73, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63,
	0x72, 0x6f, 0x73, 0x2f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x2f, 0x75, 0x69, 0x61, 0x75, 0x74,
	0x6f, 0x2f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_quicksettings_service_proto_goTypes = []interface{}{
	(*emptypb.Empty)(nil), // 0: google.protobuf.Empty
}
var file_quicksettings_service_proto_depIdxs = []int32{
	0, // 0: tast.cros.chrome.uiauto.quicksettings.QuickSettingsService.NavigateToBluetoothDetailedView:input_type -> google.protobuf.Empty
	0, // 1: tast.cros.chrome.uiauto.quicksettings.QuickSettingsService.NavigateToNetworkDetailedView:input_type -> google.protobuf.Empty
	0, // 2: tast.cros.chrome.uiauto.quicksettings.QuickSettingsService.NavigateToBluetoothDetailedView:output_type -> google.protobuf.Empty
	0, // 3: tast.cros.chrome.uiauto.quicksettings.QuickSettingsService.NavigateToNetworkDetailedView:output_type -> google.protobuf.Empty
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_quicksettings_service_proto_init() }
func file_quicksettings_service_proto_init() {
	if File_quicksettings_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quicksettings_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quicksettings_service_proto_goTypes,
		DependencyIndexes: file_quicksettings_service_proto_depIdxs,
	}.Build()
	File_quicksettings_service_proto = out.File
	file_quicksettings_service_proto_rawDesc = nil
	file_quicksettings_service_proto_goTypes = nil
	file_quicksettings_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QuickSettingsServiceClient is the client API for QuickSettingsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuickSettingsServiceClient interface {
	// NavigateToBluetoothDetailedView will navigate to the detailed Bluetooth
	// view within the Quick Settings. This is safe to call even when the Quick
	// Settings are already open.
	NavigateToBluetoothDetailedView(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// NavigateToNetworkDetailedView will navigate to the detailed Network view
	// within the Quick Settings. This is safe to call even when the Quick Settings
	// are already open.
	NavigateToNetworkDetailedView(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type quickSettingsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQuickSettingsServiceClient(cc grpc.ClientConnInterface) QuickSettingsServiceClient {
	return &quickSettingsServiceClient{cc}
}

func (c *quickSettingsServiceClient) NavigateToBluetoothDetailedView(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.chrome.uiauto.quicksettings.QuickSettingsService/NavigateToBluetoothDetailedView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickSettingsServiceClient) NavigateToNetworkDetailedView(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.chrome.uiauto.quicksettings.QuickSettingsService/NavigateToNetworkDetailedView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuickSettingsServiceServer is the server API for QuickSettingsService service.
type QuickSettingsServiceServer interface {
	// NavigateToBluetoothDetailedView will navigate to the detailed Bluetooth
	// view within the Quick Settings. This is safe to call even when the Quick
	// Settings are already open.
	NavigateToBluetoothDetailedView(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	// NavigateToNetworkDetailedView will navigate to the detailed Network view
	// within the Quick Settings. This is safe to call even when the Quick Settings
	// are already open.
	NavigateToNetworkDetailedView(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
}

// UnimplementedQuickSettingsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQuickSettingsServiceServer struct {
}

func (*UnimplementedQuickSettingsServiceServer) NavigateToBluetoothDetailedView(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NavigateToBluetoothDetailedView not implemented")
}
func (*UnimplementedQuickSettingsServiceServer) NavigateToNetworkDetailedView(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NavigateToNetworkDetailedView not implemented")
}

func RegisterQuickSettingsServiceServer(s *grpc.Server, srv QuickSettingsServiceServer) {
	s.RegisterService(&_QuickSettingsService_serviceDesc, srv)
}

func _QuickSettingsService_NavigateToBluetoothDetailedView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickSettingsServiceServer).NavigateToBluetoothDetailedView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.chrome.uiauto.quicksettings.QuickSettingsService/NavigateToBluetoothDetailedView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickSettingsServiceServer).NavigateToBluetoothDetailedView(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickSettingsService_NavigateToNetworkDetailedView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickSettingsServiceServer).NavigateToNetworkDetailedView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.chrome.uiauto.quicksettings.QuickSettingsService/NavigateToNetworkDetailedView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickSettingsServiceServer).NavigateToNetworkDetailedView(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _QuickSettingsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.chrome.uiauto.quicksettings.QuickSettingsService",
	HandlerType: (*QuickSettingsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NavigateToBluetoothDetailedView",
			Handler:    _QuickSettingsService_NavigateToBluetoothDetailedView_Handler,
		},
		{
			MethodName: "NavigateToNetworkDetailedView",
			Handler:    _QuickSettingsService_NavigateToNetworkDetailedView_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "quicksettings_service.proto",
}
