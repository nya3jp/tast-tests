// Copyright 2021 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package tast.cros.chrome;

import "google/protobuf/empty.proto";

option go_package = "chromiumos/tast/services/cros/chrome";

// ChromeService allows basic remote operations of the Nearby Share feature.
service ChromeService {
  // New logs into a Chrome session. 
  // Close must be called later to clean up the associated resources.
  rpc New (NewRequest) returns (google.protobuf.Empty) {}

  // Close releases the resources obtained by New.
  rpc Close (google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

// NewRequest to login to Chrome with configurable GAIA credentials.
message NewRequest {
  LoginMode login_mode = 1;
  Credentials credentials = 2;
  repeated string enable_features = 3;
  repeated string disable_features = 4;
  repeated string extra_args = 5;
  bool keep_state = 6;
  bool try_reuse_session = 7;
  
  message Credentials {
    // User is the user name of a user account. It is typically an email
    // address (e.g. example@gmail.com).
    string username = 1;
    // Pass is the password of a user account.
    string password = 2;

    // GAIAID is a GAIA ID used on fake logins. If it is empty, an ID is
    // generated from the user name. The field is ignored on other type of
    // logins.
    string gaia_id = 3;

    // Contact is an email address of a user who owns a test account.
    // When logging in with a test account, its contact user may be
    // notified of a login attempt and asked for approval.
    string contact = 4;

    // ParentUser is the user name of a parent account. It is used to
    // approve a login attempt when a child account is supervised by a
    // parent account.
    string parent_username = 5;

    // ParentPass is the pass of a parent account. It is used to approve
    // a login attempt when a child account is supervised by a parent
    // account.
    string parent_password = 6;
  }
}

enum LoginMode {
  UNSPECIFIED = 0;
  NO_LOGIN = 1;
  FAKE_LOGIN = 2;
  GAIA_LOGIN = 3;
  GUEST_LOGIN = 4;
}