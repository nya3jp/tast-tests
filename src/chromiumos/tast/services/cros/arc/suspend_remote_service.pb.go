// Code generated by protoc-gen-go. DO NOT EDIT.
// source: suspend_remote_service.proto

package arc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetClockValuesResponse struct {
	ClockMonotonicNs     int64    `protobuf:"varint,1,opt,name=clock_monotonic_ns,json=clockMonotonicNs,proto3" json:"clock_monotonic_ns,omitempty"`
	ClockBoottimeNs      int64    `protobuf:"varint,2,opt,name=clock_boottime_ns,json=clockBoottimeNs,proto3" json:"clock_boottime_ns,omitempty"`
	Tsc                  int64    `protobuf:"varint,3,opt,name=tsc,proto3" json:"tsc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClockValuesResponse) Reset()         { *m = GetClockValuesResponse{} }
func (m *GetClockValuesResponse) String() string { return proto.CompactTextString(m) }
func (*GetClockValuesResponse) ProtoMessage()    {}
func (*GetClockValuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_06cb3a5472d545a8, []int{0}
}

func (m *GetClockValuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClockValuesResponse.Unmarshal(m, b)
}
func (m *GetClockValuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClockValuesResponse.Marshal(b, m, deterministic)
}
func (m *GetClockValuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClockValuesResponse.Merge(m, src)
}
func (m *GetClockValuesResponse) XXX_Size() int {
	return xxx_messageInfo_GetClockValuesResponse.Size(m)
}
func (m *GetClockValuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClockValuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetClockValuesResponse proto.InternalMessageInfo

func (m *GetClockValuesResponse) GetClockMonotonicNs() int64 {
	if m != nil {
		return m.ClockMonotonicNs
	}
	return 0
}

func (m *GetClockValuesResponse) GetClockBoottimeNs() int64 {
	if m != nil {
		return m.ClockBoottimeNs
	}
	return 0
}

func (m *GetClockValuesResponse) GetTsc() int64 {
	if m != nil {
		return m.Tsc
	}
	return 0
}

func init() {
	proto.RegisterType((*GetClockValuesResponse)(nil), "tast.cros.arc.GetClockValuesResponse")
}

func init() { proto.RegisterFile("suspend_remote_service.proto", fileDescriptor_06cb3a5472d545a8) }

var fileDescriptor_06cb3a5472d545a8 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x40, 0x5d, 0x17, 0x3c, 0x04, 0xd4, 0x1a, 0xa4, 0x94, 0xea, 0x41, 0x2b, 0x82, 0x88, 0x24,
	0xa0, 0x7f, 0x50, 0x11, 0x4f, 0x16, 0xdc, 0x82, 0x07, 0x2f, 0xcb, 0x6e, 0x1c, 0x6b, 0x70, 0x93,
	0x59, 0x32, 0xb3, 0x82, 0x77, 0x3f, 0x5c, 0x92, 0xb4, 0x87, 0x42, 0x6f, 0x61, 0xde, 0x9b, 0x90,
	0x17, 0x71, 0x4e, 0x03, 0xf5, 0xe0, 0x3f, 0xea, 0x00, 0x0e, 0x19, 0x6a, 0x82, 0xf0, 0x63, 0x0d,
	0xa8, 0x3e, 0x20, 0xa3, 0x3c, 0xe4, 0x86, 0x58, 0x99, 0x80, 0xa4, 0x9a, 0x60, 0xa6, 0x67, 0x2b,
	0xc4, 0x55, 0x07, 0x3a, 0xc1, 0x76, 0xf8, 0xd4, 0xe0, 0x7a, 0xfe, 0xcd, 0xee, 0xec, 0xaf, 0x10,
	0xe3, 0x67, 0xe0, 0xc7, 0x0e, 0xcd, 0xf7, 0x5b, 0xd3, 0x0d, 0x40, 0x15, 0x50, 0x8f, 0x9e, 0x40,
	0xde, 0x09, 0x69, 0xe2, 0xb8, 0x76, 0xe8, 0x91, 0xd1, 0x5b, 0x53, 0x7b, 0x9a, 0x14, 0x17, 0xc5,
	0x4d, 0x59, 0x8d, 0x12, 0x79, 0xd9, 0x80, 0x05, 0xc9, 0x5b, 0x71, 0x92, 0xed, 0x16, 0x91, 0xd9,
	0x3a, 0x88, 0xf2, 0x7e, 0x92, 0x8f, 0x13, 0x98, 0xaf, 0xe7, 0x0b, 0x92, 0x23, 0x51, 0x32, 0x99,
	0x49, 0x99, 0x68, 0x3c, 0xde, 0x5b, 0x71, 0xba, 0xcc, 0x49, 0x55, 0x2a, 0x5a, 0xe6, 0x20, 0xf9,
	0x2a, 0x8e, 0xb6, 0x5f, 0x27, 0xc7, 0x2a, 0xe7, 0xa8, 0x4d, 0x8e, 0x7a, 0x8a, 0x39, 0xd3, 0x6b,
	0xb5, 0x55, 0xad, 0x76, 0x47, 0xcd, 0xf6, 0xe6, 0x57, 0xef, 0x97, 0xe6, 0x2b, 0xa0, 0xb3, 0x83,
	0x43, 0xd2, 0x71, 0x49, 0xaf, 0xbf, 0x8f, 0x74, 0xdc, 0xd6, 0x4d, 0x30, 0xed, 0x41, 0xba, 0xfd,
	0xe1, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x72, 0xad, 0xcf, 0x1c, 0x69, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SuspendRemoteServiceClient is the client API for SuspendRemoteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SuspendRemoteServiceClient interface {
	// GetPerfValues signs in to DUT and measures Android boot performance metrics.
	GetClockValues(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetClockValuesResponse, error)
}

type suspendRemoteServiceClient struct {
	cc *grpc.ClientConn
}

func NewSuspendRemoteServiceClient(cc *grpc.ClientConn) SuspendRemoteServiceClient {
	return &suspendRemoteServiceClient{cc}
}

func (c *suspendRemoteServiceClient) GetClockValues(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetClockValuesResponse, error) {
	out := new(GetClockValuesResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.arc.SuspendRemoteService/GetClockValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SuspendRemoteServiceServer is the server API for SuspendRemoteService service.
type SuspendRemoteServiceServer interface {
	// GetPerfValues signs in to DUT and measures Android boot performance metrics.
	GetClockValues(context.Context, *empty.Empty) (*GetClockValuesResponse, error)
}

// UnimplementedSuspendRemoteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSuspendRemoteServiceServer struct {
}

func (*UnimplementedSuspendRemoteServiceServer) GetClockValues(ctx context.Context, req *empty.Empty) (*GetClockValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClockValues not implemented")
}

func RegisterSuspendRemoteServiceServer(s *grpc.Server, srv SuspendRemoteServiceServer) {
	s.RegisterService(&_SuspendRemoteService_serviceDesc, srv)
}

func _SuspendRemoteService_GetClockValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuspendRemoteServiceServer).GetClockValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.arc.SuspendRemoteService/GetClockValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuspendRemoteServiceServer).GetClockValues(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SuspendRemoteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.arc.SuspendRemoteService",
	HandlerType: (*SuspendRemoteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetClockValues",
			Handler:    _SuspendRemoteService_GetClockValues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "suspend_remote_service.proto",
}
