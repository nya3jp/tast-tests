// Code generated by protoc-gen-go. DO NOT EDIT.
// source: perfetto_system_tracing_service.proto

package platform

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GeneratePerfettoTraceRequest struct {
	Config               string   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneratePerfettoTraceRequest) Reset()         { *m = GeneratePerfettoTraceRequest{} }
func (m *GeneratePerfettoTraceRequest) String() string { return proto.CompactTextString(m) }
func (*GeneratePerfettoTraceRequest) ProtoMessage()    {}
func (*GeneratePerfettoTraceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da4a94fda0397b4, []int{0}
}

func (m *GeneratePerfettoTraceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneratePerfettoTraceRequest.Unmarshal(m, b)
}
func (m *GeneratePerfettoTraceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneratePerfettoTraceRequest.Marshal(b, m, deterministic)
}
func (m *GeneratePerfettoTraceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneratePerfettoTraceRequest.Merge(m, src)
}
func (m *GeneratePerfettoTraceRequest) XXX_Size() int {
	return xxx_messageInfo_GeneratePerfettoTraceRequest.Size(m)
}
func (m *GeneratePerfettoTraceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneratePerfettoTraceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeneratePerfettoTraceRequest proto.InternalMessageInfo

func (m *GeneratePerfettoTraceRequest) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

type GeneratePerfettoTraceResponse struct {
	Result               []byte   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneratePerfettoTraceResponse) Reset()         { *m = GeneratePerfettoTraceResponse{} }
func (m *GeneratePerfettoTraceResponse) String() string { return proto.CompactTextString(m) }
func (*GeneratePerfettoTraceResponse) ProtoMessage()    {}
func (*GeneratePerfettoTraceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5da4a94fda0397b4, []int{1}
}

func (m *GeneratePerfettoTraceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneratePerfettoTraceResponse.Unmarshal(m, b)
}
func (m *GeneratePerfettoTraceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneratePerfettoTraceResponse.Marshal(b, m, deterministic)
}
func (m *GeneratePerfettoTraceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneratePerfettoTraceResponse.Merge(m, src)
}
func (m *GeneratePerfettoTraceResponse) XXX_Size() int {
	return xxx_messageInfo_GeneratePerfettoTraceResponse.Size(m)
}
func (m *GeneratePerfettoTraceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneratePerfettoTraceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GeneratePerfettoTraceResponse proto.InternalMessageInfo

func (m *GeneratePerfettoTraceResponse) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*GeneratePerfettoTraceRequest)(nil), "tast.cros.platform.GeneratePerfettoTraceRequest")
	proto.RegisterType((*GeneratePerfettoTraceResponse)(nil), "tast.cros.platform.GeneratePerfettoTraceResponse")
}

func init() {
	proto.RegisterFile("perfetto_system_tracing_service.proto", fileDescriptor_5da4a94fda0397b4)
}

var fileDescriptor_5da4a94fda0397b4 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x3d, 0x4b, 0x04, 0x31,
	0x10, 0x86, 0xdd, 0xe6, 0xc0, 0x60, 0x15, 0x50, 0x44, 0x4e, 0x90, 0x05, 0xe5, 0xaa, 0xc4, 0x0f,
	0xd0, 0xde, 0xc6, 0x56, 0xf6, 0xae, 0xb2, 0x59, 0x62, 0x98, 0x3d, 0x03, 0x97, 0x4c, 0x9c, 0x99,
	0x15, 0x6c, 0xfc, 0x29, 0xfe, 0x56, 0xd9, 0xdd, 0x6c, 0xe5, 0x07, 0x58, 0xbe, 0xc5, 0xf3, 0xf0,
	0xf0, 0xaa, 0xf3, 0x0c, 0xd4, 0x81, 0x08, 0xb6, 0xfc, 0xce, 0x02, 0xb1, 0x15, 0x72, 0x3e, 0xa4,
	0x6d, 0xcb, 0x40, 0x6f, 0xc1, 0x83, 0xc9, 0x84, 0x82, 0x5a, 0x8b, 0x63, 0x31, 0x9e, 0x90, 0x4d,
	0xde, 0x39, 0xe9, 0x90, 0x62, 0x7d, 0xab, 0x96, 0x0f, 0x90, 0x80, 0x9c, 0xc0, 0x63, 0x91, 0x6c,
	0xc8, 0x79, 0x68, 0xe0, 0xb5, 0x07, 0x16, 0x7d, 0xa4, 0x16, 0x1e, 0x53, 0x17, 0xb6, 0xc7, 0xd5,
	0x59, 0xb5, 0xda, 0x6f, 0xca, 0xaa, 0xef, 0xd4, 0xe9, 0x2f, 0x1c, 0x67, 0x4c, 0x0c, 0x03, 0x48,
	0xc0, 0xfd, 0x4e, 0x46, 0xf0, 0xa0, 0x29, 0xeb, 0xfa, 0xb3, 0x52, 0xcb, 0x99, 0x58, 0x8f, 0xb5,
	0x9b, 0x29, 0x76, 0x3d, 0xb5, 0xea, 0x0f, 0x75, 0xf8, 0xa3, 0x59, 0x5f, 0x9a, 0xef, 0xfd, 0xe6,
	0xaf, 0xf8, 0x93, 0xab, 0x7f, 0x10, 0x53, 0x76, 0xbd, 0x77, 0xbf, 0x7a, 0xba, 0xf0, 0x2f, 0x84,
	0x31, 0xf4, 0x11, 0xd9, 0x0e, 0x02, 0x5b, 0x6e, 0x64, 0x3b, 0x98, 0xec, 0x6c, 0x7a, 0x5e, 0x8c,
	0xb7, 0xde, 0x7c, 0x05, 0x00, 0x00, 0xff, 0xff, 0x19, 0x7c, 0x8b, 0x35, 0x7f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PerfettoSystemTracingServiceClient is the client API for PerfettoSystemTracingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PerfettoSystemTracingServiceClient interface {
	// Use perfetto to generate trace and send back to the host.
	GeneratePerfettoTrace(ctx context.Context, in *GeneratePerfettoTraceRequest, opts ...grpc.CallOption) (*GeneratePerfettoTraceResponse, error)
}

type perfettoSystemTracingServiceClient struct {
	cc *grpc.ClientConn
}

func NewPerfettoSystemTracingServiceClient(cc *grpc.ClientConn) PerfettoSystemTracingServiceClient {
	return &perfettoSystemTracingServiceClient{cc}
}

func (c *perfettoSystemTracingServiceClient) GeneratePerfettoTrace(ctx context.Context, in *GeneratePerfettoTraceRequest, opts ...grpc.CallOption) (*GeneratePerfettoTraceResponse, error) {
	out := new(GeneratePerfettoTraceResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.platform.PerfettoSystemTracingService/GeneratePerfettoTrace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PerfettoSystemTracingServiceServer is the server API for PerfettoSystemTracingService service.
type PerfettoSystemTracingServiceServer interface {
	// Use perfetto to generate trace and send back to the host.
	GeneratePerfettoTrace(context.Context, *GeneratePerfettoTraceRequest) (*GeneratePerfettoTraceResponse, error)
}

// UnimplementedPerfettoSystemTracingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPerfettoSystemTracingServiceServer struct {
}

func (*UnimplementedPerfettoSystemTracingServiceServer) GeneratePerfettoTrace(ctx context.Context, req *GeneratePerfettoTraceRequest) (*GeneratePerfettoTraceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeneratePerfettoTrace not implemented")
}

func RegisterPerfettoSystemTracingServiceServer(s *grpc.Server, srv PerfettoSystemTracingServiceServer) {
	s.RegisterService(&_PerfettoSystemTracingService_serviceDesc, srv)
}

func _PerfettoSystemTracingService_GeneratePerfettoTrace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneratePerfettoTraceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PerfettoSystemTracingServiceServer).GeneratePerfettoTrace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.platform.PerfettoSystemTracingService/GeneratePerfettoTrace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PerfettoSystemTracingServiceServer).GeneratePerfettoTrace(ctx, req.(*GeneratePerfettoTraceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PerfettoSystemTracingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.platform.PerfettoSystemTracingService",
	HandlerType: (*PerfettoSystemTracingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GeneratePerfettoTrace",
			Handler:    _PerfettoSystemTracingService_GeneratePerfettoTrace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "perfetto_system_tracing_service.proto",
}
