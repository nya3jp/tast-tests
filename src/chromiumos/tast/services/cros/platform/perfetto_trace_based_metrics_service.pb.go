// Code generated by protoc-gen-go. DO NOT EDIT.
// source: perfetto_trace_based_metrics_service.proto

package platform

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GeneratePerfettoTraceRequest struct {
	Config               string   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneratePerfettoTraceRequest) Reset()         { *m = GeneratePerfettoTraceRequest{} }
func (m *GeneratePerfettoTraceRequest) String() string { return proto.CompactTextString(m) }
func (*GeneratePerfettoTraceRequest) ProtoMessage()    {}
func (*GeneratePerfettoTraceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9d1e5b700de1709, []int{0}
}

func (m *GeneratePerfettoTraceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneratePerfettoTraceRequest.Unmarshal(m, b)
}
func (m *GeneratePerfettoTraceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneratePerfettoTraceRequest.Marshal(b, m, deterministic)
}
func (m *GeneratePerfettoTraceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneratePerfettoTraceRequest.Merge(m, src)
}
func (m *GeneratePerfettoTraceRequest) XXX_Size() int {
	return xxx_messageInfo_GeneratePerfettoTraceRequest.Size(m)
}
func (m *GeneratePerfettoTraceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneratePerfettoTraceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeneratePerfettoTraceRequest proto.InternalMessageInfo

func (m *GeneratePerfettoTraceRequest) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

type GeneratePerfettoTraceResponse struct {
	Result               []byte   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneratePerfettoTraceResponse) Reset()         { *m = GeneratePerfettoTraceResponse{} }
func (m *GeneratePerfettoTraceResponse) String() string { return proto.CompactTextString(m) }
func (*GeneratePerfettoTraceResponse) ProtoMessage()    {}
func (*GeneratePerfettoTraceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9d1e5b700de1709, []int{1}
}

func (m *GeneratePerfettoTraceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneratePerfettoTraceResponse.Unmarshal(m, b)
}
func (m *GeneratePerfettoTraceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneratePerfettoTraceResponse.Marshal(b, m, deterministic)
}
func (m *GeneratePerfettoTraceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneratePerfettoTraceResponse.Merge(m, src)
}
func (m *GeneratePerfettoTraceResponse) XXX_Size() int {
	return xxx_messageInfo_GeneratePerfettoTraceResponse.Size(m)
}
func (m *GeneratePerfettoTraceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneratePerfettoTraceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GeneratePerfettoTraceResponse proto.InternalMessageInfo

func (m *GeneratePerfettoTraceResponse) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*GeneratePerfettoTraceRequest)(nil), "tast.cros.platform.GeneratePerfettoTraceRequest")
	proto.RegisterType((*GeneratePerfettoTraceResponse)(nil), "tast.cros.platform.GeneratePerfettoTraceResponse")
}

func init() {
	proto.RegisterFile("perfetto_trace_based_metrics_service.proto", fileDescriptor_c9d1e5b700de1709)
}

var fileDescriptor_c9d1e5b700de1709 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x3f, 0x4b, 0x04, 0x31,
	0x10, 0x47, 0x4d, 0x73, 0x60, 0xb0, 0x0a, 0x28, 0x22, 0x0a, 0xc7, 0x16, 0x72, 0x58, 0x64, 0x4f,
	0x05, 0xed, 0xaf, 0xb1, 0x12, 0x64, 0xb5, 0xb2, 0x59, 0x72, 0x71, 0x56, 0x03, 0x97, 0x9d, 0x38,
	0x33, 0x6b, 0xed, 0x97, 0xf1, 0x7b, 0x4a, 0x76, 0x63, 0x21, 0xfe, 0x81, 0x2b, 0xa7, 0x78, 0x8f,
	0x37, 0x3f, 0x7d, 0x96, 0x80, 0x3a, 0x10, 0xc1, 0x56, 0xc8, 0x79, 0x68, 0xd7, 0x8e, 0xe1, 0xa9,
	0x8d, 0x20, 0x14, 0x3c, 0xb7, 0x0c, 0xf4, 0x16, 0x3c, 0xd8, 0x44, 0x28, 0x68, 0x8c, 0x38, 0x16,
	0xeb, 0x09, 0xd9, 0xa6, 0x8d, 0x93, 0x0e, 0x29, 0x56, 0x57, 0xfa, 0xf8, 0x06, 0x7a, 0x20, 0x27,
	0x70, 0x57, 0x4c, 0x0f, 0x59, 0xd4, 0xc0, 0xeb, 0x00, 0x2c, 0xe6, 0x40, 0xcf, 0x3c, 0xf6, 0x5d,
	0x78, 0x3e, 0x54, 0x73, 0xb5, 0xd8, 0x6d, 0xca, 0x55, 0x5d, 0xeb, 0x93, 0x3f, 0x38, 0x4e, 0xd8,
	0x33, 0x64, 0x90, 0x80, 0x87, 0x8d, 0x8c, 0xe0, 0x5e, 0x53, 0xae, 0x8b, 0x0f, 0xa5, 0xe7, 0xdf,
	0x88, 0x55, 0x2e, 0xbe, 0x9d, 0x82, 0xef, 0xa7, 0x5e, 0xf3, 0xae, 0xf4, 0xfe, 0xaf, 0x7a, 0xb3,
	0xb4, 0x3f, 0x9f, 0xb0, 0xff, 0x7d, 0x70, 0x74, 0xbe, 0x05, 0x31, 0xb5, 0x57, 0x3b, 0x4b, 0xb5,
	0x5a, 0x3c, 0x9e, 0xfa, 0x17, 0xc2, 0x18, 0x86, 0x88, 0x5c, 0x67, 0x45, 0x5d, 0xd6, 0xe4, 0x3a,
	0xbb, 0xea, 0x2f, 0xd7, 0x7a, 0x36, 0xae, 0x7b, 0xf9, 0x19, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x9c,
	0x90, 0xe3, 0x8b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PerfettoTraceBasedMetricsServiceClient is the client API for PerfettoTraceBasedMetricsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PerfettoTraceBasedMetricsServiceClient interface {
	// Use perfetto to generate trace and send back to the host.
	GeneratePerfettoTrace(ctx context.Context, in *GeneratePerfettoTraceRequest, opts ...grpc.CallOption) (PerfettoTraceBasedMetricsService_GeneratePerfettoTraceClient, error)
}

type perfettoTraceBasedMetricsServiceClient struct {
	cc *grpc.ClientConn
}

func NewPerfettoTraceBasedMetricsServiceClient(cc *grpc.ClientConn) PerfettoTraceBasedMetricsServiceClient {
	return &perfettoTraceBasedMetricsServiceClient{cc}
}

func (c *perfettoTraceBasedMetricsServiceClient) GeneratePerfettoTrace(ctx context.Context, in *GeneratePerfettoTraceRequest, opts ...grpc.CallOption) (PerfettoTraceBasedMetricsService_GeneratePerfettoTraceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PerfettoTraceBasedMetricsService_serviceDesc.Streams[0], "/tast.cros.platform.PerfettoTraceBasedMetricsService/GeneratePerfettoTrace", opts...)
	if err != nil {
		return nil, err
	}
	x := &perfettoTraceBasedMetricsServiceGeneratePerfettoTraceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PerfettoTraceBasedMetricsService_GeneratePerfettoTraceClient interface {
	Recv() (*GeneratePerfettoTraceResponse, error)
	grpc.ClientStream
}

type perfettoTraceBasedMetricsServiceGeneratePerfettoTraceClient struct {
	grpc.ClientStream
}

func (x *perfettoTraceBasedMetricsServiceGeneratePerfettoTraceClient) Recv() (*GeneratePerfettoTraceResponse, error) {
	m := new(GeneratePerfettoTraceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PerfettoTraceBasedMetricsServiceServer is the server API for PerfettoTraceBasedMetricsService service.
type PerfettoTraceBasedMetricsServiceServer interface {
	// Use perfetto to generate trace and send back to the host.
	GeneratePerfettoTrace(*GeneratePerfettoTraceRequest, PerfettoTraceBasedMetricsService_GeneratePerfettoTraceServer) error
}

// UnimplementedPerfettoTraceBasedMetricsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPerfettoTraceBasedMetricsServiceServer struct {
}

func (*UnimplementedPerfettoTraceBasedMetricsServiceServer) GeneratePerfettoTrace(req *GeneratePerfettoTraceRequest, srv PerfettoTraceBasedMetricsService_GeneratePerfettoTraceServer) error {
	return status.Errorf(codes.Unimplemented, "method GeneratePerfettoTrace not implemented")
}

func RegisterPerfettoTraceBasedMetricsServiceServer(s *grpc.Server, srv PerfettoTraceBasedMetricsServiceServer) {
	s.RegisterService(&_PerfettoTraceBasedMetricsService_serviceDesc, srv)
}

func _PerfettoTraceBasedMetricsService_GeneratePerfettoTrace_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GeneratePerfettoTraceRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PerfettoTraceBasedMetricsServiceServer).GeneratePerfettoTrace(m, &perfettoTraceBasedMetricsServiceGeneratePerfettoTraceServer{stream})
}

type PerfettoTraceBasedMetricsService_GeneratePerfettoTraceServer interface {
	Send(*GeneratePerfettoTraceResponse) error
	grpc.ServerStream
}

type perfettoTraceBasedMetricsServiceGeneratePerfettoTraceServer struct {
	grpc.ServerStream
}

func (x *perfettoTraceBasedMetricsServiceGeneratePerfettoTraceServer) Send(m *GeneratePerfettoTraceResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PerfettoTraceBasedMetricsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.platform.PerfettoTraceBasedMetricsService",
	HandlerType: (*PerfettoTraceBasedMetricsServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GeneratePerfettoTrace",
			Handler:       _PerfettoTraceBasedMetricsService_GeneratePerfettoTrace_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "perfetto_trace_based_metrics_service.proto",
}
