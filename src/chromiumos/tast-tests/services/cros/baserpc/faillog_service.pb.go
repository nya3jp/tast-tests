// Code generated by protoc-gen-go. DO NOT EDIT.
// source: faillog_service.proto

package baserpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateResponse struct {
	// The path for the temporary faillog directory will be return as a string
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da3bf4a7b73a5c1e, []int{0}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateResponse)(nil), "tast.cros.baserpc.CreateResponse")
}

func init() { proto.RegisterFile("faillog_service.proto", fileDescriptor_da3bf4a7b73a5c1e) }

var fileDescriptor_da3bf4a7b73a5c1e = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd0, 0xcd, 0x4a, 0xc5, 0x30,
	0x10, 0x05, 0xe0, 0x16, 0xa4, 0x60, 0x16, 0x05, 0x03, 0x8a, 0xd4, 0x8d, 0x16, 0x45, 0x57, 0x13,
	0xd0, 0x9d, 0x4b, 0xa5, 0x3e, 0x40, 0xdd, 0xb9, 0x91, 0x34, 0x4c, 0x7f, 0xa0, 0x71, 0x42, 0x26,
	0x2d, 0xf8, 0x1c, 0xbe, 0xb0, 0xb4, 0xe9, 0x5d, 0x5c, 0x2e, 0xdd, 0x85, 0x70, 0xce, 0x7c, 0xc3,
	0x88, 0xcb, 0x56, 0x0f, 0xe3, 0x48, 0xdd, 0x37, 0xa3, 0x9f, 0x07, 0x83, 0xe0, 0x3c, 0x05, 0x92,
	0x17, 0x41, 0x73, 0x00, 0xe3, 0x89, 0xa1, 0xd1, 0x8c, 0xde, 0x99, 0xe2, 0xa6, 0x23, 0xea, 0x46,
	0x54, 0x6b, 0xa0, 0x99, 0x5a, 0x85, 0xd6, 0x85, 0xdf, 0x98, 0x2f, 0xef, 0x45, 0xfe, 0xee, 0x51,
	0x07, 0xac, 0x91, 0x1d, 0xfd, 0x30, 0x4a, 0x29, 0xce, 0x9c, 0x0e, 0xfd, 0x75, 0x7a, 0x9b, 0x3e,
	0x9d, 0xd7, 0xeb, 0xfb, 0xf9, 0x2f, 0x15, 0xf9, 0x47, 0xf4, 0x3e, 0x23, 0x27, 0x2b, 0x91, 0xc5,
	0xa2, 0xbc, 0x82, 0x08, 0xc0, 0x01, 0x80, 0x6a, 0x01, 0x8a, 0x3b, 0x38, 0xd9, 0x05, 0x8e, 0xad,
	0x32, 0x91, 0xaf, 0x22, 0xab, 0xd1, 0xd2, 0xbc, 0x3f, 0x66, 0xe7, 0xbf, 0x4c, 0xde, 0x1e, 0xbf,
	0x1e, 0x4c, 0xef, 0xc9, 0x0e, 0x93, 0x25, 0x56, 0x0b, 0xa6, 0xb6, 0x63, 0xb0, 0x5a, 0x54, 0xb5,
	0xa9, 0x4d, 0xb6, 0x56, 0x5f, 0xfe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x28, 0x26, 0xf4, 0x9c, 0x34,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FaillogServiceClient is the client API for FaillogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FaillogServiceClient interface {
	// Create creates a faillog in target machine.
	Create(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CreateResponse, error)
	// Remove remove a previous created faillog in target machine.
	Remove(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type faillogServiceClient struct {
	cc *grpc.ClientConn
}

func NewFaillogServiceClient(cc *grpc.ClientConn) FaillogServiceClient {
	return &faillogServiceClient{cc}
}

func (c *faillogServiceClient) Create(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/tast.cros.baserpc.FaillogService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faillogServiceClient) Remove(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tast.cros.baserpc.FaillogService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FaillogServiceServer is the server API for FaillogService service.
type FaillogServiceServer interface {
	// Create creates a faillog in target machine.
	Create(context.Context, *empty.Empty) (*CreateResponse, error)
	// Remove remove a previous created faillog in target machine.
	Remove(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedFaillogServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFaillogServiceServer struct {
}

func (*UnimplementedFaillogServiceServer) Create(ctx context.Context, req *empty.Empty) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedFaillogServiceServer) Remove(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}

func RegisterFaillogServiceServer(s *grpc.Server, srv FaillogServiceServer) {
	s.RegisterService(&_FaillogService_serviceDesc, srv)
}

func _FaillogService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaillogServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.baserpc.FaillogService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaillogServiceServer).Create(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaillogService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaillogServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.cros.baserpc.FaillogService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaillogServiceServer).Remove(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _FaillogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.cros.baserpc.FaillogService",
	HandlerType: (*FaillogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _FaillogService_Create_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _FaillogService_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "faillog_service.proto",
}
