{
  "comments": [
    {
      "key": {
        "uuid": "3bfc993a_dc3a00e8",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/lib/histogram/histogram.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-02T22:15:17Z",
      "side": 1,
      "message": "do you actually need to wait here (since the video presumably started playing a while ago)? if not, it\u0027d probably be faster and more reliable to just get the histogram again and diff it using its Diff method instead. then  you can also distinguish between unchanged histograms (return false, nil) and other errors (return false, err).",
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d8454c6_259e5748",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/lib/histogram/histogram.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-11-05T04:18:59Z",
      "side": 1,
      "message": "+1, I think we don\u0027t need to wait here.\n\nRe: distinguishing errors, currently the only way is to inspect error strings (for example: strings.Contains(err.Error(), \"histogram xxx not found\")). We may want to revisit crrev.com/c/1258624 for error type inspection.",
      "parentUuid": "3bfc993a_dc3a00e8",
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09d07393_2e873ad0",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/lib/histogram/histogram.go",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-02T22:15:17Z",
      "side": 1,
      "message": "nit: maybe remove this comment? you\u0027re hardcoding 0 and 1 here but using the constant names on L42",
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d1454c5_77ce0cf7",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-02T22:15:17Z",
      "side": 1,
      "message": "nit: please export this type and add a comment describing it",
      "range": {
        "startLine": 22,
        "startChar": 5,
        "endLine": 22,
        "endChar": 18
      },
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caabf575_716f4b90",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-02T22:15:17Z",
      "side": 1,
      "message": "nit: maybe NoCheckHistogram or DontCheckHistogram to be clearer?",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 8
      },
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66ec4eb4_e9c94608",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-02T22:15:17Z",
      "side": 1,
      "message": "nit: checks",
      "range": {
        "startLine": 32,
        "startChar": 49,
        "endLine": 32,
        "endChar": 54
      },
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88f81643_ead3f0f7",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play/play.go",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-02T22:15:17Z",
      "side": 1,
      "message": "nit: please delete trailing period here",
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06ca6ac7_c40ebd06",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-11-05T04:18:59Z",
      "side": 1,
      "message": "Please update the comment here.\n\n // If no samples have been reported for the histogram since Chrome was started, the zero value for Histogram is returned.",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 100
      },
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ecf6db_e3434622",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-02T22:15:17Z",
      "side": 1,
      "message": "nit: please delete this comment; it doesn\u0027t add anything that the code doesn\u0027t already say",
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3f38368_d2f780de",
        "filename": "src/chromiumos/tast/local/chrome/metrics/histogram.go",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-11-05T04:18:59Z",
      "side": 1,
      "message": "This assumed GetHistogram to return an error if the metric has not been reported. So now this should be:\n\n if err !\u003d nil {\n   return err\n }\n if len(h.Buckets) \u003d\u003d 0 {\n   return errors.Errorf(\"histogram %s not found\", name)\n }\n return nil",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 155,
        "endChar": 12
      },
      "revId": "539031f9861e4b1bd4ee1aed344d76a8af4cb617",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}