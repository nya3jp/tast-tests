{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7e0ce3cb_e28143f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-22T17:25:37Z",
      "side": 1,
      "message": "Are fixtures usually supposed to do such heavy checks/write to the DUT?",
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fde040f_d56ec445",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2022-06-23T01:56:24Z",
      "side": 1,
      "message": "There is no other way to have automate tests for cros version compatibilities but to roll forward and back, and having fixture ensures that one failing test is not causing others to run at a wrong version",
      "parentUuid": "7e0ce3cb_e28143f8",
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e5747e3_51c0db56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-23T02:48:29Z",
      "side": 1,
      "message": "Yes I get that, but why not just fail if a test in a suite failed or just simply provision again if the version isn\u0027t on the expected?\n\nIt just seems like a lot of logic to get to expected version and opens room for error/flakiness.",
      "parentUuid": "2fde040f_d56ec445",
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47db949a_ff85a582",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2022-06-23T06:19:57Z",
      "side": 1,
      "message": "Things within a suite don\u0027t care about the right version, they expect it. AFAIU, the provisioner is not a part of tast and is not run in between individual tests within the suite - that kind of non hermiticity plagues not only autoupdate, but is a separate conversation to have with engprod I guess if necessary.",
      "parentUuid": "6e5747e3_51c0db56",
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44f28093_8893194f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-23T16:39:57Z",
      "side": 1,
      "message": "When I say provision here, it is the reinstallation step this fixture is doing already if there is a mismatch.\n\nNot the call into services, which provisions before tests are even run.",
      "parentUuid": "47db949a_ff85a582",
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5739df92_89800df8",
        "filename": "src/chromiumos/tast/remote/updateutil/autoupdate_fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-22T17:25:37Z",
      "side": 1,
      "message": "nit: Why is this ssh check required? Shouldn\u0027t the DUT already be ssh\u0027able?",
      "range": {
        "startLine": 97,
        "startChar": 1,
        "endLine": 97,
        "endChar": 36
      },
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eeb22d8_5259da55",
        "filename": "src/chromiumos/tast/remote/updateutil/autoupdate_fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2022-06-23T06:41:24Z",
      "side": 1,
      "message": "The SSH is not always available after a test, sometimes a test fails because it cannot restore the connection after a reboot.\nThis check is there to separate the connection error from the other errors.\nWe saw it in a different fixture that it can be misleading if the first \"real\" command of the fixture fail because of the missing connection.",
      "parentUuid": "5739df92_89800df8",
      "range": {
        "startLine": 97,
        "startChar": 1,
        "endLine": 97,
        "endChar": 36
      },
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f586dc72_a31b9012",
        "filename": "src/chromiumos/tast/remote/updateutil/autoupdate_fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-23T16:39:57Z",
      "side": 1,
      "message": "Ack\u0027ing, I think as long as the err returned can indicate the correct error it should be distinguishable.",
      "parentUuid": "3eeb22d8_5259da55",
      "range": {
        "startLine": 97,
        "startChar": 1,
        "endLine": 97,
        "endChar": 36
      },
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d19d6fa_c2301059",
        "filename": "src/chromiumos/tast/remote/updateutil/autoupdate_fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-22T17:25:37Z",
      "side": 1,
      "message": "What about the FW updates that could happen after rollback? Waits on kernel to get sticky?",
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52d0f55b_96f7e732",
        "filename": "src/chromiumos/tast/remote/updateutil/autoupdate_fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2022-06-23T06:41:24Z",
      "side": 1,
      "message": "Can you chare more info on when can a FW update happen? What triggers it?",
      "parentUuid": "6d19d6fa_c2301059",
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86de1a9e_b43ae429",
        "filename": "src/chromiumos/tast/remote/updateutil/autoupdate_fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-23T16:39:57Z",
      "side": 1,
      "message": "The current implementation of `UpdateFromGS` is incomplete, there are missing pieces to stick to the test update it actually applied.\n\nIf following tests from the fixture happen to run + reboot the DUT (once or a few times), the slots could switch back.\n\nSame goes for rollingback before the stick.\n\nFW updates will apply again if they are required prior to UI coming up.",
      "parentUuid": "52d0f55b_96f7e732",
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "170a7a7d_751608bb",
        "filename": "src/chromiumos/tast/remote/updateutil/autoupdate_fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2022-06-24T11:22:20Z",
      "side": 1,
      "message": "Thanks for pointing this out! I filed a bug about it: b/237058730\nI am closing this thread, as this issue should be resolved in a separate CL.",
      "parentUuid": "86de1a9e_b43ae429",
      "revId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "10694d9d618fc389f3723580734f2f85e7908c49",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}