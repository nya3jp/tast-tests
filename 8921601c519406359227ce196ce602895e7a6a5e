{
  "comments": [
    {
      "key": {
        "uuid": "69d3afd3_a060d4dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-19T04:31:14Z",
      "side": 1,
      "message": "Hmm, I don\u0027t get the point about this. Which case do you mean here?",
      "range": {
        "startLine": 19,
        "startChar": 45,
        "endLine": 20,
        "endChar": 54
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76766997_0fd31174",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-06-19T07:48:01Z",
      "side": 1,
      "message": "IMHO it might not make sense for SetUpBenchmark to return a context. We might already need to create a shorter context earlier for other purposes such as restarting the UI job.\n\nSetUpBenchmark will make sure to leave enough time internally to clean up if it fails. But in general, clean up and leaving enough time for clean up, should be managed by the testcase that calls this function.",
      "parentUuid": "69d3afd3_a060d4dd",
      "range": {
        "startLine": 19,
        "startChar": 45,
        "endLine": 20,
        "endChar": 54
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e4d5516_f3e4305f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-20T02:31:04Z",
      "side": 1,
      "message": "\u003e But in general, clean up and leaving enough time for clean up, should be managed by the testcase that calls this function.\n\nHmm, the SetUpBenchmark only knows how long cleanup time is needed, doesn\u0027t it? So, I think |cleanupTime| should be defined inside of SetupBenchmark. If so, it\u0027d make sense to return a context.\n\nWDYT?",
      "parentUuid": "76766997_0fd31174",
      "range": {
        "startLine": 19,
        "startChar": 45,
        "endLine": 20,
        "endChar": 54
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "562d982d_df911e34",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-06-20T03:01:54Z",
      "side": 1,
      "message": "Cleaning up the benchmark doesn\u0027t need that much time. And I think the context will only be used for logging anyway. The problem is that I want to avoid each function shorting the context even more. I\u0027ve seen cases where the context is shortened multiple times, so the test would timeout almost immediately without having done anything yet.\n\nI think it makes more sense for \u0027setup\u0027 functions to return a cleanup function that takes a context. So the test can create a shorter context once, and use the longer one for all cleanup operations.",
      "parentUuid": "1e4d5516_f3e4305f",
      "range": {
        "startLine": 19,
        "startChar": 45,
        "endLine": 20,
        "endChar": 54
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f996507_4be18c48",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-06-20T06:31:44Z",
      "side": 1,
      "message": "There are pros and cons returning shortCtx for SetUpBenchmark().\n\nPros is that test code don\u0027t need to aware how long a clean-up takes.\nCons is that test should run other long running tasks (like command execution) with shortCtx.\n\nAs long as we are going to split SetUpBenchmark() from MeasureProcessCPU(), we assume each test runs SetUpBenchmark() only once. I would prefer SetUpBenchmark() returns shortCtx.",
      "parentUuid": "562d982d_df911e34",
      "range": {
        "startLine": 19,
        "startChar": 45,
        "endLine": 20,
        "endChar": 54
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cd178ee_1ea3068d",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/encode_accel_jpeg_perf.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-19T04:31:14Z",
      "side": 1,
      "message": "nit: this undo function is called \"cleanupBenchmark\" in some test cases. Why not use same name across test cases?\nsame for others.",
      "range": {
        "startLine": 55,
        "startChar": 1,
        "endLine": 55,
        "endChar": 18
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b4c539b_6cef0b1b",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/encode_accel_jpeg_perf.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-06-19T07:48:01Z",
      "side": 1,
      "message": "I was suggested to name this function \u0027tearDownBenchmark\u0027, which is fine by me. I missed one occurrence, but they should all have been adapted now.",
      "parentUuid": "7cd178ee_1ea3068d",
      "range": {
        "startLine": 55,
        "startChar": 1,
        "endLine": 55,
        "endChar": 18
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0d65af5_62a28663",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/encode_accel_jpeg_perf.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-20T02:31:04Z",
      "side": 1,
      "message": "Thanks. Both \u0027cleanupBenchmark\u0027 and \u0027tearDownBenchmark\u0027 are fine as long as every test uses the same name.",
      "parentUuid": "5b4c539b_6cef0b1b",
      "range": {
        "startLine": 55,
        "startChar": 1,
        "endLine": 55,
        "endChar": 18
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a00129f_936551cf",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/accel_video.go",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-19T04:31:14Z",
      "side": 1,
      "message": "+akahuang@, FYI",
      "range": {
        "startLine": 145,
        "startChar": 11,
        "endLine": 145,
        "endChar": 19
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ee3d323_db6f0dc5",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/accel_video.go",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-19T04:31:14Z",
      "side": 1,
      "message": "How about having this value as a constant? MeasureProcessCPU in cpu.go does so.",
      "range": {
        "startLine": 329,
        "startChar": 37,
        "endLine": 329,
        "endChar": 50
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46e898e0_3d50f275",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/accel_video.go",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-06-19T07:48:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ee3d323_db6f0dc5",
      "range": {
        "startLine": 329,
        "startChar": 37,
        "endLine": 329,
        "endChar": 50
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6a978cc_9978d5f0",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/accel_video.go",
        "patchSetId": 2
      },
      "lineNbr": 369,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-19T04:31:14Z",
      "side": 1,
      "message": "ditto.\nAlso same for others.",
      "range": {
        "startLine": 369,
        "startChar": 20,
        "endLine": 369,
        "endChar": 36
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0ebe6b6_86d78077",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/accel_video.go",
        "patchSetId": 2
      },
      "lineNbr": 369,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-06-19T07:48:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b6a978cc_9978d5f0",
      "range": {
        "startLine": 369,
        "startChar": 20,
        "endLine": 369,
        "endChar": 36
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba0cfc18_bdffb847",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/mediarecorder/media_recorder.go",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-19T04:31:14Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 150,
        "startChar": 41,
        "endLine": 150,
        "endChar": 56
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62b22bba_f95456a3",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/mediarecorder/media_recorder.go",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-06-19T07:48:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba0cfc18_bdffb847",
      "range": {
        "startLine": 150,
        "startChar": 41,
        "endLine": 150,
        "endChar": 56
      },
      "revId": "8921601c519406359227ce196ce602895e7a6a5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}