{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "60ab6f36_15789ad2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-01T02:27:41Z",
      "side": 1,
      "message": "Hi reviewers,\n\nI do not see any reason to test this scenario. Enabling A11y keyboard from OS-settings is not part of Inputs feature. A11y keyboard testing has been covered in many input tests. http://source/search?q\u003da11y\u0026sq\u003d\u0026ss\u003dpiper%2FGoogle%2Fchromeos_public:src%2Fplatform%2Ftast-tests%2Fsrc%2Fchromiumos%2Ftast%2Flocal%2Fbundles%2Fcros%2Finputs%2F",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aac2cebf_89cf9063",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-07-01T02:40:53Z",
      "side": 1,
      "message": "All our inputs tests are for google virtual keyboard, and this test can run without google VK. Since it is not in mainline, it is probably fine to leave it in the code repo. ",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33bf1156_51cdbb85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-01T03:02:20Z",
      "side": 1,
      "message": "Makes sense. We can keep the cl for sure.",
      "parentUuid": "aac2cebf_89cf9063",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdfc6707_6c7a05de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-01T03:02:20Z",
      "side": 1,
      "message": "Ambalavanan, as what I noticed, intel has added quite a number of Tast tests. Is it for a specific project? I would suggest you to create a separate package to accomodate all related tests to distinguish from others. ",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a769802c_92e67f35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-07-01T05:40:51Z",
      "side": 1,
      "message": "Hi Jun Sheng,\n\nIntel is collaborating with Chinmay/Alex from Google and we are upstreaming our automation scripts. We initially started it for Brya project and we are continuing the efforts for ongoing projects as well.\n\nWe have a plan to create a separate suite for Intel tests in this quarter. But creating a separate package will be difficult, as in many case we are reusing the existing libs and importing these libraries from other packages to Intel package is not possible.",
      "parentUuid": "cdfc6707_6c7a05de",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32a7b9d4_025745e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-01T08:46:13Z",
      "side": 1,
      "message": "Create a seperate suite is not that hard. https://crrev.com/c/2203337 can be a good example. Sitting in \"tast/local/bundles/cros/{new package}\" would not prevent you importing any libs.",
      "parentUuid": "a769802c_92e67f35",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d80bd1ea_50b82f4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-07-01T09:08:19Z",
      "side": 1,
      "message": "Thanks for sharing the sample CL.\n\nAs per our understanding, sub-packages are allowed only to be imported within the parent package right? We cannot import say the [videocuj](https://source.chromium.org/chromiumos/_/chromium/chromiumos/platform/tast-tests/+/808f9f6a60d544d086eb79cf2b179e299c7f11be:src/chromiumos/tast/local/bundles/cros/ui/videocuj/) sub-package from `tast/local/bundles/cros/ui/` into our new `tast/local/bundles/cros/{new package}` package test for running the YouTube videos, as per this [link](https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Scoping-and-shared-code).\n\nPlease correct me if I\u0027m wrong.",
      "parentUuid": "32a7b9d4_025745e3",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95a6e568_258fadfb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-01T09:15:21Z",
      "side": 1,
      "message": "You are right. tast/local/bundles/cros are test suites, not for libs. For any common libs that used for multiple suites, should sit in \"tast/local/\". Take inputs as an example, tast/local/chrome/uiauto/vkb/vkb.go is the lib path, so any tests can use vkb functions. It would not be accessible if I put it in local/bundles/cros/inputs.",
      "parentUuid": "d80bd1ea_50b82f4c",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dea3f961_491459af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-07-01T09:24:23Z",
      "side": 1,
      "message": "Understood. So, we\u0027ll plan to place the new Intel tests that doesn\u0027t import any sub-packages in the `tast/local/bundles/cros/{new package}` package. \n\nIn-case we need to import the sub-packages in our tests, we will place them under the same parent package. \n\nWe\u0027ll also plan to place our new lib. files under the `tast/local` path, so that it can be accessed from our new package.\n\nThis strategy should be fine right?",
      "parentUuid": "95a6e568_258fadfb",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b08b926c_5692f2f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-01T10:07:58Z",
      "side": 1,
      "message": "Yes. You ",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95d2bedb_6c40bfd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-01T10:07:58Z",
      "side": 1,
      "message": "Yes, you should not import any lib from other test package. In case you like it, you can move it from test package into a common lib package.",
      "parentUuid": "dea3f961_491459af",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47897bda_206632a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-07-01T11:09:21Z",
      "side": 1,
      "message": "Got it. For our future CLs, we will follow this process. Thank you!",
      "parentUuid": "95d2bedb_6c40bfd7",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba1ee250_1ab30fa3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-07-01T11:14:09Z",
      "side": 1,
      "message": "Can you also let us know if we can make this new Intel package as a private package? If so can you please provide some links or documentation on how to do it?",
      "parentUuid": "47897bda_206632a3",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "730c602e_d7f48af3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-01T12:52:17Z",
      "side": 1,
      "message": "I sort of heard this story a while go. I believe your associated Eng / EngProd team will find out a solution that works for you. Since it is irrelevant of this cl, let\u0027s keep it separate. \n\nI will abandon this CL and leave the test for now.",
      "parentUuid": "ba1ee250_1ab30fa3",
      "revId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "a5435a690cc47836fbfad8cc59ebc073976460f9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}