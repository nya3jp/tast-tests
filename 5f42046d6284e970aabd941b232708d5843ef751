{
  "comments": [
    {
      "key": {
        "uuid": "e2175c9e_6b9f4e79",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-06-24T14:44:17Z",
      "side": 1,
      "message": "would it be possible that the APK might be still writing the data while the test is being read?\nif so, then \"parseEvents\" might fail.\n\nsome possible options:\n - wait until certain \"flag\" file is created? (or until a certain \"lock\" file is deleted?)\n - or have the APK to put a \"done\" text in a TextField read it using UIAutomator",
      "range": {
        "startLine": 102,
        "startChar": 1,
        "endLine": 104,
        "endChar": 34
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc37fbf6_0b6c4dbd",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 1303273
      },
      "writtenOn": "2020-06-25T21:30:27Z",
      "side": 1,
      "message": "Yeah you\u0027re definitely right that there\u0027s a potential race here. My idea is to set a hotkey (i.e. Esc) that will cause the test app to finish() itself. During onStop(), the app can block until any queued writes are completed. From tast-side, we can use Activity.WaitForFinished() so that we don\u0027t read before the writes are finished.",
      "parentUuid": "e2175c9e_6b9f4e79",
      "range": {
        "startLine": 102,
        "startChar": 1,
        "endLine": 104,
        "endChar": 34
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b930fdd_4157af4c",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-06-26T02:12:08Z",
      "side": 1,
      "message": "I\u0027d prefer to have a more explicit flag from the APK side rather than relying on ESC + wait until finish.\n\nThere are a few things that could go wrong (low chances, but still possible). Context:\n\n* The idea is to reuse the APK for all the input latency tests (keyboard, mouse, touch, gamepad, pencil(?)):\n* ESC key is sent via wayland, but it is processed by the keyboard handler in Chrome.\n* Touches are processed by the \"Gesture handler\" in Chrome. The \"Gesture handler\" might delay the delivery by a few ms to try to determine whether the touch is a gesture or not. So, if you are unlucky, a touch event might arrive to ARC, later than a key event, even though the touch was generated before.\n* Some tests might was to reuse the APK for different tests. For example the gamepad test might run one cycle by sending just \"single button\" events. And then another by sending \"buttons + axis\" events. You can relaunch the APK if needed. But in theory, you shouldn\u0027t need to close the APK just to verify that the data was written correctly.\n\nIn addition to:\n* When you read the tast code it is not obvious that ESC should close the APK\n* And when you read the Java code, it is not obvious what should happen at \"finish\". \n\n\nOne possible solution is to create a \"flag\" in the APK, saying something like \"I received X events, and were written to file NNN\"\nAnother solution is to put the output in a TextView in the APK.\nFor example, the ArcGamepadTest is doing that. It puts the data in a JSON format in a TextView:\n \nhttps://source.corp.google.com/chromeos_public/src/platform/tast-tests/android/ArcGamepadTest/src/org/chromium/arc/testapp/gamepad/MainActivity.java\n\nAnd you can read that data by using UIAutomator. e.g:\nhttp://cs/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/arc/gamepad.go?l\u003d145\n\n\nIf you use JSON, then there is still the possibility of a race:\n  * you read the JSON while it is still being generated.\nBut that can be solved by adding an extra widget in the APK that says \"ready / busy\".\nOr just polling until you get a valid JSON should work.\n\nWDYT?",
      "parentUuid": "dc37fbf6_0b6c4dbd",
      "range": {
        "startLine": 102,
        "startChar": 1,
        "endLine": 104,
        "endChar": 34
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b992606e_efd181ab",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-06-24T14:44:17Z",
      "side": 1,
      "message": "nit: sum :\u003d 0.",
      "range": {
        "startLine": 144,
        "startChar": 8,
        "endLine": 144,
        "endChar": 18
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c154924_b0ed3513",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1303273
      },
      "writtenOn": "2020-06-25T21:30:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b992606e_efd181ab",
      "range": {
        "startLine": 144,
        "startChar": 8,
        "endLine": 144,
        "endChar": 18
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dc864fa_e89eb02e",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-06-24T14:44:17Z",
      "side": 1,
      "message": "nit: stdSum :\u003d 0.",
      "range": {
        "startLine": 149,
        "startChar": 11,
        "endLine": 149,
        "endChar": 21
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e964b9d_bf456596",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1303273
      },
      "writtenOn": "2020-06-25T21:30:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4dc864fa_e89eb02e",
      "range": {
        "startLine": 149,
        "startChar": 11,
        "endLine": 149,
        "endChar": 21
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51e2ca5d_19f06f76",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 165,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-06-24T14:44:17Z",
      "side": 1,
      "message": "now that you write your own file, if this condition happens, should you do something? like log something like:\n \"unexpected line\" ...",
      "range": {
        "startLine": 165,
        "startChar": 2,
        "endLine": 165,
        "endChar": 11
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9092b886_96db842a",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 165,
      "author": {
        "id": 1303273
      },
      "writtenOn": "2020-06-25T21:30:27Z",
      "side": 1,
      "message": "I think it\u0027s ok to do nothing here. This condition may happen if there is an extra newline somewhere in the file, and line \u003d \"\". This is not necessarily an error condition; if there are events missing from the file we will catch it later in the function.",
      "parentUuid": "51e2ca5d_19f06f76",
      "range": {
        "startLine": 165,
        "startChar": 2,
        "endLine": 165,
        "endChar": 11
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d5d756c_6c8ed057",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-06-24T14:44:17Z",
      "side": 1,
      "message": "don\u0027t ignore the errors.\nyou can do something like:\n\n  for _, dst :\u003d range []struct {\n\t\t\tv     *int\n\t\t\tgroup int\n\t\t}{\n\t\t\t{\u0026et, 3},\n\t\t\t{\u0026rt, 4},\n\t\t\t{\u0026rtc, 5},\n\t\t\t{\u0026lt, 6},\n\t\t} {\n\t\t\t*dst.v, err \u003d strconv.Atoi(groups[dst.group])\n\t\t\tif err !\u003d nil {\n\t\t\t\treturn nil, errors.Wrapf(err, \"could not parse line %q\", line)\n\t\t\t}\n\t\t}",
      "range": {
        "startLine": 167,
        "startChar": 6,
        "endLine": 167,
        "endChar": 9
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fb102c8_6c9b4459",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/keyboard_perf.go",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1303273
      },
      "writtenOn": "2020-06-25T21:30:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d5d756c_6c8ed057",
      "range": {
        "startLine": 167,
        "startChar": 6,
        "endLine": 167,
        "endChar": 9
      },
      "revId": "5f42046d6284e970aabd941b232708d5843ef751",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}