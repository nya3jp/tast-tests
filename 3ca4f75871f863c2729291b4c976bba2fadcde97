{
  "comments": [
    {
      "key": {
        "uuid": "3f933979_5d6d04ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-17T18:29:54Z",
      "side": 1,
      "message": "I don\u0027t see other issues other than Matthew pointed out.",
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8278db2_87f84a70",
        "filename": "src/chromiumos/tast/local/wpasupplicant/bss.go",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-07-17T04:53:20Z",
      "side": 1,
      "message": "make this a const (same with others in this change).",
      "range": {
        "startLine": 21,
        "startChar": 36,
        "endLine": 21,
        "endChar": 63
      },
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "173139b8_4905b794",
        "filename": "src/chromiumos/tast/local/wpasupplicant/bss.go",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-07-20T18:05:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8278db2_87f84a70",
      "range": {
        "startLine": 21,
        "startChar": 36,
        "endLine": 21,
        "endChar": 63
      },
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ef79dbe_500ea9a3",
        "filename": "src/chromiumos/tast/local/wpasupplicant/bss.go",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-07-17T04:53:20Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 31,
        "startChar": 27,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c37a24c_f3252101",
        "filename": "src/chromiumos/tast/local/wpasupplicant/bss.go",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-07-20T18:05:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ef79dbe_500ea9a3",
      "range": {
        "startLine": 31,
        "startChar": 27,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b697099_fc072bb7",
        "filename": "src/chromiumos/tast/local/wpasupplicant/interface.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-07-17T04:53:20Z",
      "side": 1,
      "message": "do we need to error out of the whole function just because we failed to connect with one BSS?",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 40,
        "endChar": 62
      },
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f26b43f_0cde793d",
        "filename": "src/chromiumos/tast/local/wpasupplicant/interface.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-20T03:27:22Z",
      "side": 1,
      "message": "IIUC, the dbusutil.Connect only checks the ownership of the service but not the object path. If one NewBSS fails here, I guess it is likely that others will also fail as the problem is likely in the dbus connection or in the ownership of the service.\n\nside note: In shill package, there are some functions with the same pattern e.g. mananger.Devices. We\u0027ll want to apply the same change there, if any.",
      "parentUuid": "1b697099_fc072bb7",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 40,
        "endChar": 62
      },
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a5f03d8_f4a6bc86",
        "filename": "src/chromiumos/tast/local/wpasupplicant/interface.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-07-20T18:04:58Z",
      "side": 1,
      "message": "There\u0027s also the case where a BSS is removed in between the time we call BSSs and NewBSS, which is certainly more likely than a device being removed, for instance, especially in an AP-dense environment. That being said, I\u0027m not sure if this is a legitimate concern or if that\u0027s less likely than some random D-Bus connection failure. Just food for thought.\n\n\u003e We\u0027ll want to apply the same change there, if any.\n\nI don\u0027t think this pattern is something we need to match across all functions that do similar things.",
      "parentUuid": "3f26b43f_0cde793d",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 40,
        "endChar": 62
      },
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "711cc955_25d290cf",
        "filename": "src/chromiumos/tast/local/wpasupplicant/interface.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-07-20T18:59:03Z",
      "side": 1,
      "message": "I changed it to just log the error, so it does not fail in the case Matthew mentioned: \"BSS is removed in between the time we call BSSs and NewBSS\"",
      "parentUuid": "0a5f03d8_f4a6bc86",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 40,
        "endChar": 62
      },
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3b77f62_25699a46",
        "filename": "src/chromiumos/tast/local/wpasupplicant/interface.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-21T01:48:45Z",
      "side": 1,
      "message": "\u003e There\u0027s also the case where a BSS is removed in between the time we call BSSs and NewBSS.\n\nI mean NewBSS does not really fail in this case as it does not check if the object path is valid or not. e.g. I tried to NewBSS(ctx, \"/invalid/path\") and it did not return error, but the following BSSID call will fail.\n\nIn any case, I\u0027m also OK with having this logged instead, in case the behavior of dbusutil changes. And yes, devices are less likely to have the race so it is reasonable to error out there.",
      "parentUuid": "711cc955_25d290cf",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 40,
        "endChar": 62
      },
      "revId": "3ca4f75871f863c2729291b4c976bba2fadcde97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}