{
  "comments": [
    {
      "key": {
        "uuid": "52b3fa41_14291d8a",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 1
      },
      "lineNbr": 464,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-21T08:02:45Z",
      "side": 1,
      "message": "DOes vmInstance have ownership? I.e., is it necessary to stop in case of failure in this function or in the caller?",
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1082f925_52148a9a",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 1
      },
      "lineNbr": 464,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2019-06-21T18:30:22Z",
      "side": 1,
      "message": "I think the caller should do the failure handling.",
      "parentUuid": "52b3fa41_14291d8a",
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02530889_87f2396e",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 1
      },
      "lineNbr": 464,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-25T16:05:04Z",
      "side": 1,
      "message": "Could you explicitly document how to handle the error, then?",
      "parentUuid": "1082f925_52148a9a",
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f5e1f30_87c883e6",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 1
      },
      "lineNbr": 497,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-21T08:02:45Z",
      "side": 1,
      "message": "style/nit: Could you keep nil?",
      "range": {
        "startLine": 497,
        "startChar": 11,
        "endLine": 497,
        "endChar": 14
      },
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dda6041_9b086bd0",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 1
      },
      "lineNbr": 497,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2019-06-21T18:30:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f5e1f30_87c883e6",
      "range": {
        "startLine": 497,
        "startChar": 11,
        "endLine": 497,
        "endChar": 14
      },
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4be1107a_b92061dc",
        "filename": "src/chromiumos/tast/local/vm/vm.go",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-21T08:02:45Z",
      "side": 1,
      "message": "style/nit: we often write this in inline.\n\nif err :\u003d testexec.CommandContext(ctx, \"tar\", \"xvf\", ...).Run(testexec.DumpLogOnError); err !\u003d nil {\n  ...\n}\n\nNote that go does not have linewise num char limit.",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 78,
        "endChar": 58
      },
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87802d0d_a2f3a02c",
        "filename": "src/chromiumos/tast/local/vm/vm.go",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2019-06-21T18:30:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4be1107a_b92061dc",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 78,
        "endChar": 58
      },
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "908271ec_611ca656",
        "filename": "src/chromiumos/tast/local/vm/vm.go",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-21T08:02:45Z",
      "side": 1,
      "message": "Needs to stop concierge in case of failure?",
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e0ebb60_d9b17764",
        "filename": "src/chromiumos/tast/local/vm/vm.go",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2019-06-21T18:30:22Z",
      "side": 1,
      "message": "caller should handle this.",
      "parentUuid": "908271ec_611ca656",
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51176f0c_8af07a5c",
        "filename": "src/chromiumos/tast/local/vm/vm.go",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-25T16:05:04Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s possible, because caller does not know about concierge at all at this moment.",
      "parentUuid": "8e0ebb60_d9b17764",
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a275f4b_5f8c1455",
        "filename": "src/chromiumos/tast/local/vm/vm.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-21T08:02:45Z",
      "side": 1,
      "message": "Need to vmInstance Stop in case of error?",
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f879f96_cbbd9c20",
        "filename": "src/chromiumos/tast/local/vm/vm.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2019-06-21T18:30:22Z",
      "side": 1,
      "message": "Actually, to be honest, I think we do need to stop. But this change is simply refactor of the original createDefaultContainer in container.go and don\u0027t have much knowledge about how the VM is created.",
      "parentUuid": "0a275f4b_5f8c1455",
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e11d4290_c72b7785",
        "filename": "src/chromiumos/tast/local/vm/vm.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-25T16:05:04Z",
      "side": 1,
      "message": "Ok, then, could you file a bug and add TODO here?",
      "parentUuid": "6f879f96_cbbd9c20",
      "revId": "b4b73b511354f90a5746495fc519256ed43d1d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}