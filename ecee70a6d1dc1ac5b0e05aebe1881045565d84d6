{
  "comments": [
    {
      "key": {
        "uuid": "641beeee_5368e24a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1238096
      },
      "writtenOn": "2020-09-10T14:32:36Z",
      "side": 1,
      "message": "Looks good, deferring approval to tast OWNERS. Thanks for addressing concerns from the previous patch !",
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09f35893_e953d8b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2020-09-10T18:06:54Z",
      "side": 1,
      "message": "In general I see major drawback here.\nThere is no guaranty which interface would be set-up.\nwlan/mlan or eth?\nThis might affect test results significantly once different media is used.\nCould we have predefined configuration?\n\nAssuming we have eth connection in lab we should enforce using it or otherwise.\n",
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0889c9c5_52788791",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-09-10T19:14:15Z",
      "side": 1,
      "message": "Adding some comments, thanks for reviewing!",
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45dcc9ea_3e8008e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-09-10T19:14:15Z",
      "side": 1,
      "message": "For App Load Time, it should not affect test metrics / results if arc_eth0 is not available.  Mainly because the communication with nethelper is not profiled.\n\nBut on the APK side, there will be a predefined configuration where it always prefer arc_eth0 unless if it\u0027s not available (see below).  I think by default OS will also choose eth0 if both eth0 and wlan0 are available.\n\n```\nAssuming we have eth connection in lab we should enforce using it or otherwise.\n```\nFrom https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/2380176/comment/dd530f0a_57815a74/ this might not be possible since not every board has ethernet port.  In this case, connection with nethelper will likely timeout without additional listeners and test will fail?  https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/2380176/comment/dd530f0a_57815a74/\n\nSince all interfaces are being listened including arc_eth0, and assuming no changes to Android App which say was using only arc_eth0, this change should work the same from the perspective of test app.  For other instances mentioned below from https://crrev.com/c/2380176, the change should be more robust if certain interfaces are not available based on tast infra or board hw spec?\n\n```\nIf you are trying to open a server on the host for Apps to connect to, you should be careful about assuming that the app traffic will go through arc_eth0 all the time. In reality this depends on multiple factors inside Android, mainly 1) which network is Android default network, 2) which Android API is the app using.\n\nIf you have eth0 and wlan0 then it is true that by default the Android default interface is ethernet, and by default any Apps using the non network specific APIs will use the default network. But both points are not guaranteed. For instance if we want to test with a VPN on, nethelper will not work.\n```",
      "parentUuid": "09f35893_e953d8b7",
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19be5d4f_d9c2d3f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2020-09-10T19:53:34Z",
      "side": 1,
      "message": "I am bit worried about \"certain interfaces are not available based on tast infra or board hw spec\"\nI am not sure how boards are connected in lab. My main concern here is to use predictable behavior. How devices are connected does matter I think.\nAt first step I would try to see if strict limitation \"eth\" does work in lab. Once we have results we can decide what to do next.\nTo address this you may pass {\"arc_eth+\"} to start. BTW, arc_eth+ or arc_eth0 to have stricter limitation.\n\"this might not be possible since not every board has ethernet port.\"\nI don\u0027t recall I saw chromebook with ethernet port. In all cases we use dongle.\n\nSo, could we start with stricter rule? You may pass filter for this case. If it does not work we can modify only filter to get everything working\n\nWDYT?",
      "parentUuid": "45dcc9ea_3e8008e1",
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4dc52fd_18e6be63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1238096
      },
      "writtenOn": "2020-09-14T01:32:12Z",
      "side": 1,
      "message": "The APK side should never have to hardcode anything, and it should never have to care which interface is used at the end of the day. It should just be using the default network through ConnectivityManager APIs, get an explicit android.net.Network object, and use the gateway of that network through android.net.LinkProperties.\n\nAs long as the host side listens on the same port on all bridges, the APK should be able to consistently connect to that port on the gateway of the default network regardless of the virtual/physical interface setup.\n\nBTW for ARCVM we are forced to do tap device pooling before the VM start, and the interface names do no map 1to1 with physical devices anymore. So arc_eth0 does not correspond to eth0 anymore.",
      "parentUuid": "19be5d4f_d9c2d3f4",
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27d21cad_b9aa85e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2020-09-14T15:49:47Z",
      "side": 1,
      "message": "Hi Hugo,\n\nThank you for adding your thoughts.\n\nCould you please help to clarify some extra questions?\n\n* Do you know what is in-lab connection? Ethernet or wifi?\n* Do you expect any performance difference in configurations when DUT is connected via WiFi and via Ethernet? Alan, could you please test this configurations locally if you could see any difference.\n* You mentioned \"arc_eth0\" does not correspond to \"eth0\" anymore. Would this also apply to eth* networks in broader context?\n* Is your comment above valid for container as well as for VM?\n\nThanks!",
      "parentUuid": "a4dc52fd_18e6be63",
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80b0bf12_a91ae437",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1238096
      },
      "writtenOn": "2020-09-14T16:04:01Z",
      "side": 1,
      "message": "- Do you know what is in-lab connection? Ethernet or wifi?\n\neth in the lab, no wifi atm, but this I would expect for it to come at some point as this is a CTS blocker (some CTS requires wifi and need to be run manually by testers outside the lab). We still need to make sure the test can run locally with just wifi connected.\n\n - Do you expect any performance difference in configurations when DUT is connected via WiFi and via Ethernet? Alan, could you please test this configurations locally if you could see any difference.\n\nYes ethernet will definitely be faster in general. Actual performance on wifi will mostly depend on the AP and congestion (how many clients, ...). eth performance will depend on the speed of the network as well (1GB vs 10GB, cables used, ...).\n\n - You mentioned \"arc_eth0\" does not correspond to \"eth0\" anymore. Would this also apply to eth* networks in broader context? Is your comment above valid for container as well as for VM?\n\nThis is only for the VM. The pooling is defined in ArcService::AllocateAddressConfigs and at the moment yields:\n - arcbr0 \u003c-\u003e eth0\n - arceth0 \u003c-\u003e eth1\n - arceth1 \u003c-\u003e eth2\n - arcwlan0/arcmlan0 \u003c-\u003e eth3\n - arcwlan1/arcmlan1 \u003c-\u003e eth4\n - arcwwan0/arcrmnet0/arcrmnet_data0  \u003c-\u003e eth5\n\nFor the container, we can create and name device dynamically and the names map 1to1.",
      "parentUuid": "27d21cad_b9aa85e7",
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63d65ab6_6c35a3b9",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/app_loading_perf.go",
        "patchSetId": 5
      },
      "lineNbr": 94,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2020-09-10T18:06:54Z",
      "side": 1,
      "message": "do you really need port to stop? What if you pass another port to Stop\nI think right way to do would be associating port with each connection or storing port as global variable in helper and use it to stop. Otherwise this is fragile.\nMoreover, would it be possible just hide port inside helper for simplification. What is the case when port use differently?\nYet another idea:\nnethelper.SetPort() to assign working port if we really need to overwrite.",
      "range": {
        "startLine": 94,
        "startChar": 27,
        "endLine": 94,
        "endChar": 40
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c231be7_0bdefbfb",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/app_loading_perf.go",
        "patchSetId": 5
      },
      "lineNbr": 94,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-09-10T19:14:15Z",
      "side": 1,
      "message": "```\ndo you really need port to stop? What if you pass another port to Stop\nI think right way to do would be associating port with each connection or storing port as global variable in helper and use it to stop. Otherwise this is fragile.\n```\nGood point.  I\u0027ll abstract away port from Stop().  BTW, is there anything special about port 1235?  I see it used in other tasts.\n\n```\nMoreover, would it be possible just hide port inside helper for simplification. What is the case when port use differently?\nnethelper.SetPort() to assign working port if we really need to overwrite.\n```\nI\u0027m okay with either impl, this was mainly to address hardcoding concern.  hugobenichi@ - Are you ok with using default port in nethelper.go as before and having separate SetPort() function?\nhttps://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/2380176/comment/dd0e799c_09e42a8a/",
      "parentUuid": "63d65ab6_6c35a3b9",
      "range": {
        "startLine": 94,
        "startChar": 27,
        "endLine": 94,
        "endChar": 40
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73382593_07becdd8",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/app_loading_perf.go",
        "patchSetId": 5
      },
      "lineNbr": 94,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2020-09-10T19:53:34Z",
      "side": 1,
      "message": "1235 is just kind of \"random\"",
      "parentUuid": "4c231be7_0bdefbfb",
      "range": {
        "startLine": 94,
        "startChar": 27,
        "endLine": 94,
        "endChar": 40
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73d9976f_5e3e1e5a",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/nethelper/nethelper.go",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2020-09-10T18:06:54Z",
      "side": 1,
      "message": "do we really need this?",
      "range": {
        "startLine": 47,
        "startChar": 60,
        "endLine": 47,
        "endChar": 68
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b834ebf7_1077f9cc",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/nethelper/nethelper.go",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-09-10T19:14:15Z",
      "side": 1,
      "message": "This is to address this concern from hugobenechi@ in https://crrev.com/c/2380176.  I can\u0027t comment whether host VPN network support for tast might be needed (now or later). \n\n```\nInstead I recommend finding all the \"arc\" bridges and starting listening for all these interfaces at the same time. Thanks to go select statement, the change for listenToClients should be trivial. For covering host VPNs, you also need to listen on arcbr0.\n```",
      "parentUuid": "73d9976f_5e3e1e5a",
      "range": {
        "startLine": 47,
        "startChar": 60,
        "endLine": 47,
        "endChar": 68
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99f0356f_01514524",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/nethelper/nethelper.go",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2020-09-10T19:53:34Z",
      "side": 1,
      "message": "I would still recommend you to return one object Connection or name it Connections\nInside you may keep array of listeners or so.\nThen you have to worry only about internal impl here and rely on func (c *Connection(s)) Close() {\n. That makes Stop function not needed. Everything will be handled in in Close()",
      "range": {
        "startLine": 63,
        "startChar": 43,
        "endLine": 63,
        "endChar": 56
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71238f68_a804a053",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/nethelper/nethelper.go",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1238096
      },
      "writtenOn": "2020-09-10T14:32:36Z",
      "side": 1,
      "message": "Could we maybe reuse partially the same arg array above ?",
      "range": {
        "startLine": 74,
        "startChar": 3,
        "endLine": 74,
        "endChar": 100
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10a1bbe1_ecbf2b4f",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/nethelper/nethelper.go",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1238096
      },
      "writtenOn": "2020-09-10T14:32:36Z",
      "side": 1,
      "message": "Or you can use \"-C\" to directly ask iptables if the rule exists. That\u0027s much better than dumping rules with -S",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 83,
        "endChar": 4
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "425558a5_5e196111",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/nethelper/nethelper.go",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1136695
      },
      "writtenOn": "2020-09-10T19:53:34Z",
      "side": 1,
      "message": "we have ifacesArc filter. Should we use it?",
      "range": {
        "startLine": 95,
        "startChar": 33,
        "endLine": 95,
        "endChar": 36
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f6def9e_bd427a29",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/nethelper/nethelper.go",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-09-11T09:48:18Z",
      "side": 1,
      "message": "It\u0027s nice to deduplicate the rule description here and one in Start because they must always match.",
      "range": {
        "startLine": 140,
        "startChar": 20,
        "endLine": 142,
        "endChar": 18
      },
      "revId": "ecee70a6d1dc1ac5b0e05aebe1881045565d84d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}