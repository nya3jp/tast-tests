{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5d2c8f4b_eb4a9885",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1423826
      },
      "writtenOn": "2021-10-25T15:21:27Z",
      "side": 1,
      "message": "Thanks for submitting Hiro. This saves a noticeable amount of time when doing back to back video encode experiments. Sorry about my duplicate change. ",
      "revId": "27cb5f094bf96330db82913ef00fc95fdfe286cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b78aeb7_7aa96a3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2021-10-26T03:24:32Z",
      "side": 1,
      "message": "FYI: To speed up local testing I added an option to cache the raw video file, which can easily save 30s or more when encoding larger resolutions. But with the switch to the new video encoding tests the option to enable this seems to have been lost. I re-added it in crrev.com/c/3244549. It can be enabled locally by changing \u0027cacheExtractedVideo\u0027 at the top of the test case to \u0027true\u0027.",
      "parentUuid": "5d2c8f4b_eb4a9885",
      "revId": "27cb5f094bf96330db82913ef00fc95fdfe286cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ed47550_74eb7da9",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-02-18T15:30:25Z",
      "side": 1,
      "message": "Chrome only uses half the number of cores to avoid saturating the CPU and making it unresponsive, should we do the same here?\nhttps://cs.chromium.org/chromium/src/third_party/blink/renderer/modules/mediarecorder/vpx_encoder.cc?q\u003dvpx_encoder\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d35",
      "range": {
        "startLine": 70,
        "startChar": 84,
        "endLine": 70,
        "endChar": 90
      },
      "revId": "27cb5f094bf96330db82913ef00fc95fdfe286cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e294d81a_da634e84",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-02-18T15:35:22Z",
      "side": 1,
      "message": "Ah sorry, that\u0027s for encoding. But still, would using all cores make the DUT feel unresponsive? The decode time improvement is good in some cases but not a game-changer, perhaps the test should use a scaled version of the same test file? I.e. use a single 640x480 input file, decode, then upscale?",
      "parentUuid": "4ed47550_74eb7da9",
      "range": {
        "startLine": 70,
        "startChar": 84,
        "endLine": 70,
        "endChar": 90
      },
      "revId": "27cb5f094bf96330db82913ef00fc95fdfe286cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c648274a_02430c31",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1196199
      },
      "writtenOn": "2020-02-19T02:35:29Z",
      "side": 1,
      "message": "Since I was also worried about the influences in perf tests thanks to something like device\u0027s temperature increase, I haven\u0027t done this.\nI am not eager to check in this change honestly. I am fine to abandon for the concerns.\n\nI couldn\u0027t guess how well your proposal goes.\nMy concerns are \n* the resulted video quality due to upscale, and \n* speed of decode+upscale,\nthough it obviously saves disk usage on DUT.",
      "parentUuid": "e294d81a_da634e84",
      "range": {
        "startLine": 70,
        "startChar": 84,
        "endLine": 70,
        "endChar": 90
      },
      "revId": "27cb5f094bf96330db82913ef00fc95fdfe286cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebf228a3_b277a1e7",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1423826
      },
      "writtenOn": "2021-10-25T15:21:27Z",
      "side": 1,
      "message": "Remove frame-parallel? From `vpxdec --help`, \"--frame-parallel Frame parallel decode (ignored)\".",
      "revId": "27cb5f094bf96330db82913ef00fc95fdfe286cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdcc34f6_632c957b",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2021-10-25T15:34:41Z",
      "side": 1,
      "message": "I had forgotten about this CL \n\nWe had a parallel discussion about how Perf tests run one\nafter each other might affect the results (by leaving the\nmachine \"hot\"), and also discussed if we should do sth\ngeneric (i.e. have a \"preamble\" to every perf tests where\nwe \"wait until the machine cools down\") or if we should\ndo that at the *Perf test level. \nIf the latter, then e.g. https://crrev.com/c/2981356 \nshould do the trick. Could we use something similar here?\nI think the idea of this CL is good and we should go for\nit, it\u0027s just a matter of not affecting the tests using\nit.",
      "parentUuid": "c648274a_02430c31",
      "range": {
        "startLine": 70,
        "startChar": 84,
        "endLine": 70,
        "endChar": 90
      },
      "revId": "27cb5f094bf96330db82913ef00fc95fdfe286cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}