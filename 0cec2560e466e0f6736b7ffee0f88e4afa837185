{
  "comments": [
    {
      "key": {
        "uuid": "a102b375_821ceb19",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/default_profile.go",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2019-02-28T21:39:11Z",
      "side": 1,
      "message": "Why is this even in the profile at all? That means you\u0027re not actually going to get to update it on everyone in the field -- you\u0027ll only get it for devices that haven\u0027t started shill before.",
      "range": {
        "startLine": 42,
        "startChar": 3,
        "endLine": 42,
        "endChar": 22
      },
      "revId": "0cec2560e466e0f6736b7ffee0f88e4afa837185",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "648f33e2_0f86d4c4",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/default_profile.go",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2019-02-28T22:34:03Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "a102b375_821ceb19",
      "range": {
        "startLine": 42,
        "startChar": 3,
        "endLine": 42,
        "endChar": 22
      },
      "revId": "0cec2560e466e0f6736b7ffee0f88e4afa837185",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81e18be7_f5664a3d",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/default_profile.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2019-02-28T21:39:11Z",
      "side": 1,
      "message": "Ugh, this is a substring match? That feels extremely imprecise. It also means your test change would pass with or without the dependent CL. And it would pass if we made the default interval 3000000000000 :D",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 37
      },
      "revId": "0cec2560e466e0f6736b7ffee0f88e4afa837185",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f4db9a6_5cba0094",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/default_profile.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2019-02-28T21:44:14Z",
      "side": 1,
      "message": "Oh, I see the original autotest is also a substring match. How weird. It would have been so easy to do splitlines()...\n\n(And now I gotta learn how to do that in Go!)",
      "parentUuid": "81e18be7_f5664a3d",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 37
      },
      "revId": "0cec2560e466e0f6736b7ffee0f88e4afa837185",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b2e836a_4dc8d99b",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/default_profile.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-28T21:45:58Z",
      "side": 1,
      "message": "/var/cache/shill/default.profile on one of my DUTs looks like it\u0027s an ini file, so maybe you could get away with just splitting on newlines and comparing against full lines...",
      "parentUuid": "81e18be7_f5664a3d",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 37
      },
      "revId": "0cec2560e466e0f6736b7ffee0f88e4afa837185",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d481312_2306318b",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/default_profile.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-28T21:47:20Z",
      "side": 1,
      "message": "strings.Split(strings.TrimSpace(string(b))), then insert the lines into a map as keys if you need fast lookup (which is probably overkill here) :-)",
      "parentUuid": "5b2e836a_4dc8d99b",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 37
      },
      "revId": "0cec2560e466e0f6736b7ffee0f88e4afa837185",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5a39f31_047014b2",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/default_profile.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2019-02-28T21:49:52Z",
      "side": 1,
      "message": "\u003e /var/cache/shill/default.profile on one of my DUTs looks like it\u0027s an ini file, so maybe you could get away with just splitting on newlines and comparing against full lines...\n\nYeah, it\u0027s glib\u0027s keyfile format, which is basically ini. Splitting by newlines should be enough I think.\n\nBut anyway, I think we should probably remove PortalCheckInterval from the profile entirely, rather than add new stuff. Tightening the string parsing can be an orthogonal problem to deal with.",
      "parentUuid": "5b2e836a_4dc8d99b",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 37
      },
      "revId": "0cec2560e466e0f6736b7ffee0f88e4afa837185",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}