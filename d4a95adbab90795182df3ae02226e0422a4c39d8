{
  "comments": [
    {
      "key": {
        "uuid": "3270c2eb_dd4bd1ba",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-31T03:49:36Z",
      "side": 1,
      "message": "hmm, i wonder how self-explanatory \"safe\" will be here. :-)\n\nwhat do others think about WaitForExprFailOnErr or WaitForExprFailErr? that\u0027s a mouthful, but i suspect that this variant will be called rarely compared to WaitForExpr...",
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56fa96c9_cab6a02f",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-31T17:01:40Z",
      "side": 1,
      "message": "I don\u0027t have concrete recommendation here, but I also think \"safe\" is somehow confusing.\nE.g., in non-safe method, it retrying on error of Eval(), however in total it is safe to do.",
      "parentUuid": "3270c2eb_dd4bd1ba",
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75c4137f_3710ad88",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-31T19:13:49Z",
      "side": 1,
      "message": "Yes---\"safe\" is not good.\n\nIs \"WaitForExprStrict\" better?  Otherwise I am fine with WaitForExprFailOnErr.",
      "parentUuid": "56fa96c9_cab6a02f",
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4c1cc36_afd90b4a",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-31T17:01:40Z",
      "side": 1,
      "message": "If there\u0027s no reasons, I\u0027d recommend to use \"WaitForExpr\" variation for this method name, because virtually this is the implementation of WaitForExpr and its family.",
      "range": {
        "startLine": 180,
        "startChar": 15,
        "endLine": 180,
        "endChar": 28
      },
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cfea1a0_a49362b7",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-31T19:13:49Z",
      "side": 1,
      "message": "Yes... ideally I\u0027d call it waitForExpr (with a lower-case w) but that may be a little confusing at first read.  How about waitForExprPrivate even though it\u0027s redundant?",
      "parentUuid": "c4c1cc36_afd90b4a",
      "range": {
        "startLine": 180,
        "startChar": 15,
        "endLine": 180,
        "endChar": 28
      },
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00a083ec_3306ed6e",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-31T01:44:51Z",
      "side": 1,
      "message": "huge nit: please remove the blank line here (we usually don\u0027t insert a blank line at the top of a function body)",
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58bebcb0_8ea70183",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-31T19:13:49Z",
      "side": 1,
      "message": "Done.  Sorry, unintentional.",
      "parentUuid": "00a083ec_3306ed6e",
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "834ee9d6_174eb6c6",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-30T18:30:13Z",
      "side": 1,
      "message": "Doesn\u0027t Go style suggest avoiding this else, since the then clause returns?\n\n(It saves 6 characters but adds a newline :)",
      "range": {
        "startLine": 193,
        "startChar": 4,
        "endLine": 193,
        "endChar": 8
      },
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85a98c6e_bae43f68",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-31T01:44:51Z",
      "side": 1,
      "message": "You\u0027re right, please feel free to remove this \"else\".",
      "parentUuid": "834ee9d6_174eb6c6",
      "range": {
        "startLine": 193,
        "startChar": 4,
        "endLine": 193,
        "endChar": 8
      },
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d198eef4_54b80ee6",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-31T03:49:36Z",
      "side": 1,
      "message": "i\u0027m ambivalent since i\u0027m anti-newline (whyyyy doesn\u0027t go have a ternary operator?), but i also support lint checks, so i\u0027m fine with removing the \u0027else if\u0027 if you want. :-P",
      "parentUuid": "85a98c6e_bae43f68",
      "range": {
        "startLine": 193,
        "startChar": 4,
        "endLine": 193,
        "endChar": 8
      },
      "revId": "d4a95adbab90795182df3ae02226e0422a4c39d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}