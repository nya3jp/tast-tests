{
  "comments": [
    {
      "key": {
        "uuid": "d958b3d2_fe731498",
        "filename": "src/chromiumos/tast/local/arc/ui/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-26T22:18:52Z",
      "side": 1,
      "message": "decided remove getGroupForName from the shared file, even though I\u0027m duplicating code, since it is related to readConstants(), and felt kind-of-disconnected to place it in the shared file.",
      "range": {
        "startLine": 40,
        "startChar": 5,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8c86ae4_0e2c5956",
        "filename": "src/chromiumos/tast/local/arc/ui/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-26T22:18:52Z",
      "side": 1,
      "message": "in the end I decided to sort the constants... easier to read the META consts.",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 92,
        "endChar": 39
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9be049b_ddb332e3",
        "filename": "src/chromiumos/tast/local/arc/ui/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 111,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-26T22:18:52Z",
      "side": 1,
      "message": "I had the option to call getRepoInfo() directly from the shared file, but I looked easier to read if I place this call in the non-shared files.",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 49
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66edfda0_3f3765f5",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "giant nit: please templatize this and use time.Now().Format(\"2006\") (see https://golang.org/pkg/time/#Time.Format if the 2006 doesn\u0027t make sense :-P) to pass in the current year",
      "range": {
        "startLine": 23,
        "startChar": 30,
        "endLine": 23,
        "endChar": 34
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd5c4119_79d9bb45",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "templatized, done.\nbut not convinced that we should pass time.Now(). I guess each script should pass a hardcoded year. e.g, , the input one should pass \"2018\", the keyevent should pass \"2019\".\n\nthe rationale is that we shouldn\u0027t change the year if we run the script again, as I\u0027m not changing the copyright year of the Android/Chrome files when I make a change in those files.\nBut, TBH, I don\u0027t know what\u0027s the policy for updating the copyright year.\n\nHappy to use time.Now() if you think so.",
      "parentUuid": "66edfda0_3f3765f5",
      "range": {
        "startLine": 23,
        "startChar": 30,
        "endLine": 23,
        "endChar": 34
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24c7ceea_0c0b6faf",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "nit: should we inject this too, from e.g. os.Args?",
      "range": {
        "startLine": 29,
        "startChar": 21,
        "endLine": 29,
        "endChar": 41
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7d4398d_9b580fa4",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "templatized, done.\nAlthough passing a hardcoded string. Args[0] contains: /tmp/go-build545791335/b001/exe/gen_constants.\nI searched how to get the \"go run\" args, that couldn\u0027t find the answer. Any idea how to do it? thanks.",
      "parentUuid": "24c7ceea_0c0b6faf",
      "range": {
        "startLine": 29,
        "startChar": 21,
        "endLine": 29,
        "endChar": 41
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1599a105_d8e89ee9",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 67,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "nit: beginning",
      "range": {
        "startLine": 67,
        "startChar": 26,
        "endLine": 67,
        "endChar": 35
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df14fced_b74b31f3",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 67,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "fixed. removed all keys.",
      "parentUuid": "1599a105_d8e89ee9",
      "range": {
        "startLine": 67,
        "startChar": 26,
        "endLine": 67,
        "endChar": 35
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17ffa738_222abb49",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 73,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "am i correct in thinking that there are a fixed set of keys in this map, i.e. the keys above? if so, please use a struct instead, e.g.\n\ntype tmplArgs struct {\n    // InputPath ...\n    InputPath string\n    // Revision ...\n    Revision  string\n}\n\n(exporting here since i think you can possibly pass this directly to the template to avoid duplication)",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0ace17f_70f2db83",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 73,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17ffa738_222abb49",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4501e536_d5f0da9d",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "is this a prefix now, or just an arbitrary name uniquely identifying the group? per the code, i think that this is used to index into the map on L96. if that\u0027s right, please make the name, comments, and examples align to so that this is obvious. maybe even consider defining a type for this, e.g. \"type groupName string\".",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6baa0bd7_8d7ca05b",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "good point. I moved \"getGroupForName()\" back the shared file and improved the comments.\nWith these new changes, I think `prefix` is still a good name, but I\u0027m happy to change it to something different if you think so.",
      "parentUuid": "4501e536_d5f0da9d",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f7144fb_3efa574c",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 82,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "nit: maybe \"typeInfo describes a Go type to be defined in the generated code.\"",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed61670f_a0561ecc",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 82,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f7144fb_3efa574c",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c47ac38_b4aff7f5",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 84,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "nit: \"KeyCode\" to align with L78?",
      "range": {
        "startLine": 84,
        "startChar": 38,
        "endLine": 84,
        "endChar": 49
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82ae99b7_671b1b74",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 84,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "done. for consistency I replaced all \"e.g\" to use example from the input-event-codes.h",
      "parentUuid": "5c47ac38_b4aff7f5",
      "range": {
        "startLine": 84,
        "startChar": 38,
        "endLine": 84,
        "endChar": 49
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc015179_90c9ccda",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "these aren\u0027t necessarily from java. :-)\n\ni\u0027d recommend making it clearer how this will be used rather than where they come from -- that\u0027s what callers likely need to know.",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "292a9f76_2fd5e05a",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "oops. fixed.",
      "parentUuid": "dc015179_90c9ccda",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa8f1cf2_1e71c652",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 141,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "i think (but am not completely certain) that you can maybe even embed tmplArgs directly in this struct:\n\ndata :\u003d struct {\n    tmplArgs\n    Groups ...\n    Types ...\n}",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dab0713_7f4b972f",
        "filename": "src/chromiumos/tast/local/genutil/util.go",
        "patchSetId": 10
      },
      "lineNbr": 141,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "thanks for the tip! code cleaner now.",
      "parentUuid": "fa8f1cf2_1e71c652",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76151d4f_7f402ea4",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "nit: these can all go in main() as well, right?",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e358738_f543f21d",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76151d4f_7f402ea4",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e2f9754_34cfae87",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-26T22:18:52Z",
      "side": 1,
      "message": "decided to add \"go:generate\" in the input constants to be consistent, and I think it is easier to read the code if the \"go:generate\" rules are in the autogenerated file.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 44
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "496f4a7f_29ef737d",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "good move. thanks!",
      "parentUuid": "5e2f9754_34cfae87",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 44
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "325815bc_feb66dab",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "496f4a7f_29ef737d",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 44
      },
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ca7574c_2b79ed9e",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-27T01:08:08Z",
      "side": 1,
      "message": "nit: this is a bit confusing, but probably don\u0027t need this if groupInfo has a clear comment",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5562801f_97a7a13c",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-03-27T23:51:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ca7574c_2b79ed9e",
      "revId": "f00ada70ec0bee2c111392e981e3787f777c34db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}