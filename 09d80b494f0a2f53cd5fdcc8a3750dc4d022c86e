{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7abc089a_090013f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2021-06-15T02:16:04Z",
      "side": 1,
      "message": "Tast owners reviews changes from a tast perspective, but this will still need a review from someone familiar with the code. Can you add someone on your team that has context?",
      "revId": "09d80b494f0a2f53cd5fdcc8a3750dc4d022c86e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1007b75e_545ed770",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/ghost_window.go",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2021-06-15T02:16:04Z",
      "side": 1,
      "message": "Is this a R+ feature, or should it also work in P?",
      "range": {
        "startLine": 32,
        "startChar": 36,
        "endLine": 32,
        "endChar": 46
      },
      "revId": "09d80b494f0a2f53cd5fdcc8a3750dc4d022c86e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27bebd2e_5888ba1b",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/ghost_window.go",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2021-06-15T02:16:04Z",
      "side": 1,
      "message": "This should be removed.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 51
      },
      "revId": "09d80b494f0a2f53cd5fdcc8a3750dc4d022c86e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46685a3b_6c3f4e01",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/ghost_window.go",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2021-06-15T02:16:04Z",
      "side": 1,
      "message": "I don\u0027t think this needs to be its own function. It\u0027s only called once, and the comment provides the necessary explanation of what the sleep statement is for.",
      "range": {
        "startLine": 39,
        "startChar": 5,
        "endLine": 39,
        "endChar": 33
      },
      "revId": "09d80b494f0a2f53cd5fdcc8a3750dc4d022c86e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d1d1d48_160630ae",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/ghost_window.go",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2021-06-15T02:16:04Z",
      "side": 1,
      "message": "nit: line length.\n\nGolang style doesn\u0027t have the same hard line length requirements that other languages do, but it\u0027s still recommended to keep comments \u003c80 characters unless there\u0027s some reason not to.\n\nhttps://g3doc.corp.google.com/go/g3doc/style/decisions.md?cl\u003dhead#comment-line-length",
      "range": {
        "startLine": 41,
        "startChar": 87,
        "endLine": 41,
        "endChar": 102
      },
      "revId": "09d80b494f0a2f53cd5fdcc8a3750dc4d022c86e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2960d92b_832116e2",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/ghost_window.go",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2021-06-15T02:16:04Z",
      "side": 1,
      "message": "The test timeout is only 5 minutes. I don\u0027t think it\u0027s necessary to use shorter timeouts for parts of the test, since we can just rely on the overall test timeout. However, it\u0027s weird to have a longer timeout here. Maybe just define a const timeout value and use it both for the test and here.",
      "range": {
        "startLine": 99,
        "startChar": 43,
        "endLine": 99,
        "endChar": 57
      },
      "revId": "09d80b494f0a2f53cd5fdcc8a3750dc4d022c86e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}