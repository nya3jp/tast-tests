{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "39ffd304_16229c2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1364246
      },
      "writtenOn": "2022-06-15T03:04:01Z",
      "side": 1,
      "message": "Thanks for the review! PTAL",
      "revId": "bc4465caff4747cdd19c1b70e23100fc625c3306",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a099d7d_248b0a02",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/routing/routing.go",
        "patchSetId": 15
      },
      "lineNbr": 271,
      "author": {
        "id": 1356183
      },
      "writtenOn": "2022-06-15T09:30:08Z",
      "side": 1,
      "message": "I feel we should add some comment explaining what exactly does \"has IPv4\" and \"has IPv6\" mean without need to read the verifyNetworkConnectivity() implementation.\n\nIf I understand correctly, currently \"has IPv4\" mean \n- Has an IPv4 address (not verified)\n- Has local (router) reachability \n- Has global (server) reachability if IsPrimary\n\nand \"has IPv6\" mean \n- Has an non-link-local IPv6 address (not verified)\n- Has local (router) reachability if IsPrimary (this is because of pending b/235050937, should become same with IPv4 after fixed)\n- Has global (server) reachability if IsPrimary\n\nIs that correct?",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 271,
        "endChar": 10
      },
      "revId": "bc4465caff4747cdd19c1b70e23100fc625c3306",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34328476_01a33137",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/routing/routing.go",
        "patchSetId": 15
      },
      "lineNbr": 271,
      "author": {
        "id": 1364246
      },
      "writtenOn": "2022-06-15T10:45:11Z",
      "side": 1,
      "message": "Thanks for the suggestion!\n\nI would like to keep it simple -- these different fields in this struct just describe different properties (orthogonal currently, but it\u0027s hard to keep this property in the future) of a network, e.g., \"has IPv4\" just means that there is IPv4 configuration on this network (configured either automatically or manually). The routing semantic is only meaningful only when we combine all the properties.\n\nAs a result, the following two processes can be separated:\n- In each test, we just need to map the current state of a network to this struct, and do not really care about the routing semantics behind this struct;\n- In verifyNetworkConnectivity(), we just need to map this struct to the routing semantics, but do not care about how the state represented by this struct was constructed.\n\nIf we document the routing semantics here, it will become very complicated later once we have more properties in the future. Instead, I think it\u0027s better to document it inside verifyNetworkConnectivity() (if the code itself is not clear enough), it will be clearer and easier to maintain.\n\nWDYT?\n\n\n--------\n\n\u003e Has an IPv4 address (not verified)\nDo you think we need to verify this (there is an IPv4/6 addr on the interface)? I suppose it can be verified indirectly by pinging the gateway?",
      "parentUuid": "4a099d7d_248b0a02",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 271,
        "endChar": 10
      },
      "revId": "bc4465caff4747cdd19c1b70e23100fc625c3306",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2240030_5a09335b",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/routing/routing.go",
        "patchSetId": 15
      },
      "lineNbr": 271,
      "author": {
        "id": 1356183
      },
      "writtenOn": "2022-06-15T10:55:57Z",
      "side": 1,
      "message": "I see. So the intent is this struct captures the high-level intent, while detailed behavior is self-documented in verifyNetworkConnectivity(). That sounds good to me.\n\n\u003e verify address\nI was thinking that it might be easier to narrow down the problem on failure case. Or is it easy enough to tell from ping failure message?",
      "parentUuid": "34328476_01a33137",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 271,
        "endChar": 10
      },
      "revId": "bc4465caff4747cdd19c1b70e23100fc625c3306",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a92e377b_08cdb714",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/routing/routing.go",
        "patchSetId": 15
      },
      "lineNbr": 271,
      "author": {
        "id": 1364246
      },
      "writtenOn": "2022-06-15T11:02:14Z",
      "side": 1,
      "message": "\u003e I was thinking that it might be easier to narrow down the problem on failure case. Or is it easy enough to tell from ping failure message?\n\nIf you mean the test failures, we can use the DumpNetworkInfo() function here [1] when a failure happens, which will include a lot of info for debugging (currently `ip addr` is not there though...)\n\nI plan to have a separate patch for that.\n\n[1] https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/network/dumputil/dumputil.go;l\u003d1",
      "parentUuid": "d2240030_5a09335b",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 271,
        "endChar": 10
      },
      "revId": "bc4465caff4747cdd19c1b70e23100fc625c3306",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e53c43b_7aad1694",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/routing/routing.go",
        "patchSetId": 15
      },
      "lineNbr": 271,
      "author": {
        "id": 1238096
      },
      "writtenOn": "2022-06-16T02:55:43Z",
      "side": 1,
      "message": "This is something you can eventually improve with either: a complementary enum that would let you define more concrete scenario, a full blown bitmap set to configure more asserts to check.\n\nFor instance, Taoyu\u0027s suggestions:\n \u003e Has an non-link-local IPv6 address (not verified)\n \u003e Has local (router) reachability if IsPrimary\n \u003e Has global (server) reachability if IsPrimary\nCould be three separate enum values (with one implying the previous one), or three separate bits in the test config.",
      "parentUuid": "a92e377b_08cdb714",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 271,
        "endChar": 10
      },
      "revId": "bc4465caff4747cdd19c1b70e23100fc625c3306",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}