{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f004e27c_f6a5a5cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-24T16:22:53Z",
      "side": 1,
      "message": "This last patchset is basically what I was suggesting in the previous comment. I seen to get straight \"all tests passed\" with this change.",
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc8d3c7c_d19a6281",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2022-01-26T23:50:18Z",
      "side": 1,
      "message": "nit: given this is a fixture and not a precondition this doesn\u0027t really belong here. Are we able to raise a TODO to migrate filemanager preconditions to fixtures as a follow up?",
      "range": {
        "startLine": 5,
        "startChar": 8,
        "endLine": 5,
        "endChar": 11
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "385e9a48_fb2ad134",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-27T07:30:36Z",
      "side": 1,
      "message": "Sure thing, good point!",
      "parentUuid": "cc8d3c7c_d19a6281",
      "range": {
        "startLine": 5,
        "startChar": 8,
        "endLine": 5,
        "endChar": 11
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe57c741_aa7e9aa3",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2022-01-26T23:50:18Z",
      "side": 1,
      "message": "This is scoped to the pre namespace, so pre.testFiles, try to make this rather specific to the purpose of these test files, e.g. fileManagerArchiveTestFiles",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 13
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa0d1502_b058ec11",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-27T07:30:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe57c741_aa7e9aa3",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 13
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbc49ccf_09077f8f",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2022-01-26T23:50:18Z",
      "side": 1,
      "message": "Just reiterating this here: I think the various layers fixtures are potentially not needed. The chromeLoggedInWithArchiveMount fixture is incredibly specific to files app and the suite of tests, consider just calling chrome.New in the SetUp (and appropriately reusing when necessary) with the []chrome.Option that you used this fixture for.",
      "range": {
        "startLine": 33,
        "startChar": 20,
        "endLine": 33,
        "endChar": 50
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2cd6cb01_11ac7567",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-27T07:30:36Z",
      "side": 1,
      "message": "Thanks! We already discussed this offline but, for future readers, we believe it can be worth the performance and DRY tradeoff to use \"chromeLoggedInWithArchiveMount\" here. Also, keep in mind that \"chromeLoggedInWithArchiveMount\" with be replaced with just \"chromeLoggedIn\" once the archive mount feature flag becomes enabled by default.\n\nThe performance tradeoff comes from the fact that it prevents a chrome restart, shaving some seconds on the tests using this fixture.\n\nThe DRY tradeoff comes from not having the repeat functionality already provided by the \"chromeLoggedIn\" set of fixtures.",
      "parentUuid": "dbc49ccf_09077f8f",
      "range": {
        "startLine": 33,
        "startChar": 20,
        "endLine": 33,
        "endChar": 50
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5c8706d_ec0c9793",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2022-01-26T23:50:18Z",
      "side": 1,
      "message": "I wonder if this is enough time given we\u0027re moving some files around as well",
      "range": {
        "startLine": 51,
        "startChar": 19,
        "endLine": 51,
        "endChar": 38
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78e00d8b_3b497d9f",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-27T07:30:36Z",
      "side": 1,
      "message": "That\u0027s a good point. I haven\u0027t hit the limit yet, but I wouldn\u0027t mind adding a few seconds here just in case.\n\nNote that `chrome.LoginTimeout` is already 80 seconds (https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/common/hwsec/cryptohome_mount_info.go;l\u003d32?q\u003dWaitForUserTimeout\u0026sq\u003dpackage:(%5Echromeos_internal$%7C%5Echromeos_public$) so it\u0027s possibly already very permissive.",
      "parentUuid": "a5c8706d_ec0c9793",
      "range": {
        "startLine": 51,
        "startChar": 19,
        "endLine": 51,
        "endChar": 38
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e8adbdd_5068efda",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2022-01-26T23:50:18Z",
      "side": 1,
      "message": "We don\u0027t need this, TearDown is always called after all tests have ran by this fixture this may result in (if all successful) dumping the UI tree for the final test always.",
      "range": {
        "startLine": 126,
        "startChar": 1,
        "endLine": 126,
        "endChar": 64
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cdb5bd8_d98f29cc",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-27T07:30:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e8adbdd_5068efda",
      "range": {
        "startLine": 126,
        "startChar": 1,
        "endLine": 126,
        "endChar": 64
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a7e1aa5_dfddd2e8",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2022-01-26T23:50:18Z",
      "side": 1,
      "message": "nit: Make sure to check errors here.",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 28
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "399c7919_8ca03ffb",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-27T07:30:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a7e1aa5_dfddd2e8",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 28
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe6bb127_6258fe6f",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2022-01-26T23:50:18Z",
      "side": 1,
      "message": "Can we close the old Files app window and then try open a new one? This has memory leakage here with the old reference being overridden but not removed.\n\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/chrome/uiauto/filesapp/filesapp.go;l\u003d132;drc\u003d32fef65103e294a6c8ce14cf679dad1f7c0a604c",
      "range": {
        "startLine": 140,
        "startChar": 1,
        "endLine": 140,
        "endChar": 16
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "802b41a3_c1395c5e",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/pre/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-27T07:30:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe6bb127_6258fe6f",
      "range": {
        "startLine": 140,
        "startChar": 1,
        "endLine": 140,
        "endChar": 16
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9609fb98_894ed561",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/zip_mount.go",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2022-01-26T23:50:18Z",
      "side": 1,
      "message": "Can we export this from the fixture.go file and use it here? Single source of truth",
      "range": {
        "startLine": 40,
        "startChar": 8,
        "endLine": 46,
        "endChar": 3
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e07532a_e3cdb008",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/zip_mount.go",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-27T07:30:36Z",
      "side": 1,
      "message": "😭 I spent quite a bit of time trying to do exactly that, but turns out, unfortunately, the pre-submit hooks complain if this isn\u0027t specified as a literal - although the tests seem to run just fine if you do what you\u0027re proposing.\n\nI think we could make it work if we converted this slice into a const, but Go slices can\u0027t be const.\n\nBy the way, I also tryed generating Params by looping over a slice containing [\u0027_guest\u0027, \u0027\u0027] and setting fixtures \u0026 names on the fly, but the pre-submit hooks also complained about that. I think the looping code I had was easier to follow, but unfortunately we currently have this limitation.",
      "parentUuid": "9609fb98_894ed561",
      "range": {
        "startLine": 40,
        "startChar": 8,
        "endLine": 46,
        "endChar": 3
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7964756f_d659ca03",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/zip_mount.go",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-27T07:34:26Z",
      "side": 1,
      "message": "tried* 😐\n(I have to proof-read my comments more carefully, since they\u0027re essentially like email)",
      "parentUuid": "7e07532a_e3cdb008",
      "range": {
        "startLine": 40,
        "startChar": 8,
        "endLine": 46,
        "endChar": 3
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef4bddd8_a309430c",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/zip_mount.go",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2022-01-26T23:21:08Z",
      "side": 1,
      "message": "Does this log in and log out for every entry?",
      "range": {
        "startLine": 130,
        "startChar": 3,
        "endLine": 130,
        "endChar": 43
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b11166f_8b1665bb",
        "filename": "src/chromiumos/tast/local/bundles/cros/filemanager/zip_mount.go",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-26T23:51:28Z",
      "side": 1,
      "message": "It doesn\u0027t. Log in/out only takes place in the beginning/end of the batch of tests under the same fixture.\n\nSorry, does that answer your question?",
      "parentUuid": "ef4bddd8_a309430c",
      "range": {
        "startLine": 130,
        "startChar": 3,
        "endLine": 130,
        "endChar": 43
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee795d06_3742aeec",
        "filename": "src/chromiumos/tast/local/chrome/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2022-01-26T23:21:08Z",
      "side": 1,
      "message": "This might be unnecessary: unless you think that somehow the Tast test is running in a non-init mount namespace, this is a no-op.",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 236,
        "endChar": 38
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2c8bd02_9017e355",
        "filename": "src/chromiumos/tast/local/chrome/fixture.go",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1524909
      },
      "writtenOn": "2022-01-26T23:51:28Z",
      "side": 1,
      "message": "Yes, 100%. The problem I was trying to address here is that due to the multi-threaded nature of Go, it seems we can\u0027t really tell whether the thread running this code is in the init namespace or not.\n\nIe, the guest fixture \"setup\" might run in one thread and have its \"tear-down\" taking place in another thread. In this case, depending on the underlying implementation, we could be left with a thread that isn\u0027t on the init namespace in a thread pool (apologies for my lack of knowledge on the underlying implementation details here - there might be no thread pool at all, I just came up with this hypothesis because tests were failing intermittently due to being in the wrong namespace, despite the setup/teardown we are doing in the guest fixture).\n\nI wonder if setting the namespace with `syscall.AllThreadsSyscall` (https://go-review.googlesource.com/c/go/+/285597/) could the a superior approach here. Note: even with this line, I\u0027m still getting random test failures, so this could even be the only possible approach.",
      "parentUuid": "ee795d06_3742aeec",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 236,
        "endChar": 38
      },
      "revId": "f1a36e05d46731b0c34fe8c6ab75a9c2b5632d70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}