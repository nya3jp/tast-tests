{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "79447b9d_98682620",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-01-18T09:22:49Z",
      "side": 1,
      "message": "nit: Launch",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 18
      },
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71842c1e_b7f0710c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2021-01-19T01:22:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79447b9d_98682620",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 18
      },
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb8fd74e_4736d0fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1413244
      },
      "writtenOn": "2021-01-18T03:06:03Z",
      "side": 1,
      "message": "LGTM.",
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe7b2c9d_8ea8705c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2021-01-18T03:14:56Z",
      "side": 1,
      "message": "Why Tast Chrome.NewConn doesn\u0027t work for opening OS Settings:\n\nNewConn uses devtools protocol createTarget, which uses the NavigateParams.navigated_or_inserted_contents. This param is not returned for link capturing (since link capturing launch is async), and devtools protocol treats this as an error.\n\nNewConnForTarget works, because it finds a session (the one asynchronously launched by LaunchSWA during link capture) based on URL.\n\nMade a CL to update Tast tests to use LaunchApp + NewConnForTarget.\n- LaunchApp better reflects reality. Real users are unlikely to use devtools to open Settings App. LaunchApp uses AppService (which is what chrome uses for launching apps from launcher).\n- NewConnForTarget waits for a new settings app (based on URL)\n- https://crrev.com/c/2631653",
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0088a54_f2224807",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1413244
      },
      "writtenOn": "2021-01-18T04:03:53Z",
      "side": 1,
      "message": "FYI: I just noticed there appears to be a similar function already in the `ossettings` package, are you able to reuse that one? \n\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/chrome/ui/ossettings/ossettings.go;l\u003d100-128;drc\u003d529e01ac439148372997c9f09942726b67b5dc5d",
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20efc838_5a20e9e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2021-01-18T05:37:07Z",
      "side": 1,
      "message": "That function does slightly different things.\n\nLaunchAtPageURL opens OS Settings app, then perform a second navigation (JS `location.href \u003d ...`). It also requires a UI condition check to wait to the OS Settings page to finish loading.\n\nLaunchOSSettings (in this CL) performs only one navigation (and automaticaly waits for the page finish loading.\n\n---\n\nI don\u0027t have strong opinions about using the first function, but most callers of LaunchOSSettings probably doesn\u0027t need/want a UI check. \n\nUsing LaunchAtPageURL to implement LaunchOSSettings is probably feasible, we\u0027d need to come up with a generic UI condition to wait for the page finish loading. Or use a no-op condition, and subsequently wait on document.readyState.",
      "parentUuid": "d0088a54_f2224807",
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bc50f8b_3ea9be38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-01-18T09:22:49Z",
      "side": 1,
      "message": "In policy testing we need to use the OS Settings for some policies, and I agree that it is good if we can skip the UI interaction part.",
      "parentUuid": "20efc838_5a20e9e1",
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "794b34bb_48e0b080",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-01-18T09:22:49Z",
      "side": 1,
      "message": "Thanks for this change. Our team also uses the OS Setting in some tests, and this is a nice addition.\n\nPlease change this file as well:\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/policy/show_accessibility_options_in_system_tray_menu.go?q\u003d%22chrome:%2F%2Fos-settings%22\n\nThere is a new test as well, but we will take care of it, as the URL needs to be changed in it (NewConn() did not work with the full URL, but I hope this aproach will).",
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "309f3a67_911db7f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2021-01-19T01:22:26Z",
      "side": 1,
      "message": "This file uses policyutil.VerifySettingsState, which has been changed in this CL to use LaunchOSSettings.\n\nI don\u0027t think other changes are needed in this file. The ui.FindParams part is needed for the test.",
      "parentUuid": "794b34bb_48e0b080",
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a6848fb_4b55bf7e",
        "filename": "src/chromiumos/tast/local/apps/apps.go",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-01-18T09:22:49Z",
      "side": 1,
      "message": "This call can exhaust the whole ctx time if it does not find its target. Do you think a shorter context time can be used here somehow? E.g. if it does not find the target in 30 seconds, we can say it failed.",
      "range": {
        "startLine": 240,
        "startChar": 17,
        "endLine": 240,
        "endChar": 33
      },
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9735e7c6_ad2d9cf4",
        "filename": "src/chromiumos/tast/local/apps/apps.go",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2021-01-19T01:22:26Z",
      "side": 1,
      "message": "Done. Used context.WithTimeout",
      "parentUuid": "4a6848fb_4b55bf7e",
      "range": {
        "startLine": 240,
        "startChar": 17,
        "endLine": 240,
        "endChar": 33
      },
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0298d9e9_537190aa",
        "filename": "src/chromiumos/tast/local/apps/apps.go",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-01-18T09:22:49Z",
      "side": 1,
      "message": "nit: OS Settings",
      "range": {
        "startLine": 242,
        "startChar": 60,
        "endLine": 242,
        "endChar": 71
      },
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6a0a573_30373296",
        "filename": "src/chromiumos/tast/local/apps/apps.go",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2021-01-19T01:22:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0298d9e9_537190aa",
      "range": {
        "startLine": 242,
        "startChar": 60,
        "endLine": 242,
        "endChar": 71
      },
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28b4c091_8e6c5ca5",
        "filename": "src/chromiumos/tast/local/apps/apps.go",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2021-01-19T01:22:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0298d9e9_537190aa",
      "range": {
        "startLine": 242,
        "startChar": 60,
        "endLine": 242,
        "endChar": 71
      },
      "revId": "b2a1741507bca1a51f8db1176e2246b38673b202",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}