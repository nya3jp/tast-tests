{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "874e5b9c_5404f59f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2021-10-27T23:03:20Z",
      "side": 1,
      "message": "Thank you! I realize we still need to change the flow to report numbers every time we run. For simplicity in case of failure we should have (0.0, 0) reported.",
      "revId": "1797cd09db6fbd09e5b8d7e62c748a8f0c45a025",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d462049_fbb9e0ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1163154
      },
      "writtenOn": "2021-10-28T23:28:19Z",
      "side": 1,
      "message": "First, let\u0027s all agree that vulkaninfo\u0027s output is a mess and is difficult to work with. Upstream really needs to improve it.\n\nIf you want to report the instance version, this CL looks reasonable.\n\nBut, I don\u0027t see any use in reporting the instance version. Roughly, the instance version is related to the version of libvulkan.so; the VkPhysicalDeviceProperties::apiVersion is related to (driver version + gpu version). The relation between instance and device versions can be \u003d\u003d or \u003c or \u003e. The instance version doesn\u0027t tell us much.\n\nMore importantly, libvulkan.so may report an instance version, even when the DUT does not support Vulkan. It\u0027s logical. Perhaps no Vulkan device drivers are installed. Perhaps some device drivers are installed, but they\u0027re for the wrong gpu (AMD drivers installed on Intel DUT; or correct vendor but wrong gpu generation).\n\nI propose this test do the following:\n\n1. Capture `vulkaninfo \u003e vulkaninfo.log`.\n2. Capture `vulkaninfo --html # vulkaninfo.html`.\n3. Extract the number of gpus from either of the above files.\n4. For each gpu index, capture `vulkaninfo --json\u003d${i} \u003e vulkaninfo.gpu${i}.json`.\n5. Complain loudly that `vulkaninfo --json` does not do what you think it should do.\n\nStrangely, the json files do not report instance-level info, only gpu-level info. It\u0027s a mess. The html file supposedly reports the same info as the text file, but formatted nicely for easy inspection.\n\nIn the tast test, my main goal is to capture those files. I\u0027m not concerned with reporting an api version as a perf metric. But, if you want to report a single number, here\u0027s the heuristic. We only want to report real hw accelerated vVlkan, not any sw emulation such as SwiftShader or LavaPipe. So, ignore each `vulkaninfo.gpu${i}.json` where `VkPhysicalDeviceProperties::deviceType` is `VK_PHYSICAL_DEVICE_TYPE_OTHER(0)` or `VK_PHYSICAL_DEVICE_TYPE_CPU(4)`. In the json files, the entry is an integer value. In the text log, its a string without the enum prefix. After discarding those files, if multiple remaining files exist, fail the test, because someone needs to manually inspect what\u0027s broken in the DUT config. If no remaining files exist, Vulkan is not supported. If exactly one remaining file exists, the Vulkan version is `VkPhysicalDeviceProperties::apiVersion` in that file.\n\n",
      "revId": "1797cd09db6fbd09e5b8d7e62c748a8f0c45a025",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ca811e2_cae05ef8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1163154
      },
      "writtenOn": "2021-11-02T23:14:19Z",
      "side": 1,
      "message": "I missed something obvious. I retract what I said earlier: \"In the tast test, my main goal is to capture those files. I\u0027m not concerned with reporting an api version as a perf metric.\".  I now see the benefit of reporting the Vulkan version to a dashboard; it provides a trivial way for anyone to answer the question \"Does this board support Vulkan? If yes, then roughly how much Vulkan does it support?\".",
      "parentUuid": "9d462049_fbb9e0ce",
      "revId": "1797cd09db6fbd09e5b8d7e62c748a8f0c45a025",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cacbd247_bc2f4e2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2021-11-04T05:30:12Z",
      "side": 1,
      "message": "Correct, that was the idea.",
      "parentUuid": "8ca811e2_cae05ef8",
      "revId": "1797cd09db6fbd09e5b8d7e62c748a8f0c45a025",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c0b4f88_e430b551",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/vulkaninfo.go",
        "patchSetId": 4
      },
      "lineNbr": 92,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2021-10-27T23:03:20Z",
      "side": 1,
      "message": "We still want to report numbers to crosbolt.",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 92,
        "endChar": 2
      },
      "revId": "1797cd09db6fbd09e5b8d7e62c748a8f0c45a025",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bc29aff_dc2e1c61",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/vulkaninfo.go",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2021-10-27T23:03:20Z",
      "side": 1,
      "message": "We still want to report zeros to crosbolt.",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 2
      },
      "revId": "1797cd09db6fbd09e5b8d7e62c748a8f0c45a025",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40cb2bf3_8ecd9a44",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/vulkaninfo.go",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2021-10-27T23:03:20Z",
      "side": 1,
      "message": "We still want to report numbers, so this should be after setPerf below.",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 140,
        "endChar": 2
      },
      "revId": "1797cd09db6fbd09e5b8d7e62c748a8f0c45a025",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}