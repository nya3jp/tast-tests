{
  "comments": [
    {
      "key": {
        "uuid": "684950ba_c8004882",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-09-22T18:47:10Z",
      "side": 1,
      "message": "cc: bhansknecht for the nil-check in Node.Release method. I think this is fine.",
      "revId": "8eb06ff4d81cfa7d0c4b3c77fea312bcac29e322",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf39bc0b_a19b4f34",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1181605
      },
      "writtenOn": "2020-09-22T00:45:43Z",
      "side": 1,
      "message": "You probably don\u0027t need this now this",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 184,
        "endChar": 2
      },
      "revId": "8eb06ff4d81cfa7d0c4b3c77fea312bcac29e322",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dae267d_ffbe74fc",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-09-22T01:11:38Z",
      "side": 1,
      "message": "This is still valuable for safe purpose to prevent nil access. \nSince Node release is primarily used in cleanup, so ignoring nil makes more sense than throwing out error I believe.",
      "parentUuid": "bf39bc0b_a19b4f34",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 184,
        "endChar": 2
      },
      "revId": "8eb06ff4d81cfa7d0c4b3c77fea312bcac29e322",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8ca1bdf_744a5550",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-22T21:46:38Z",
      "side": 1,
      "message": "This case should be impossible unless someone is ignoring an error. That is why I didn\u0027t include the check. I think it is better to panic on library misuse than to silently swallow the error.\n\nI would prefer if this didn\u0027t get changed.",
      "parentUuid": "7dae267d_ffbe74fc",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 184,
        "endChar": 2
      },
      "revId": "8eb06ff4d81cfa7d0c4b3c77fea312bcac29e322",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b024bda0_3670dd86",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-22T21:51:43Z",
      "side": 1,
      "message": "As a extra note, if this should be done here, what about ever other method in this file that would have the same issue if n was nil?",
      "parentUuid": "f8ca1bdf_744a5550",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 184,
        "endChar": 2
      },
      "revId": "8eb06ff4d81cfa7d0c4b3c77fea312bcac29e322",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a4918d9_6b7f08c6",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-09-22T21:54:07Z",
      "side": 1,
      "message": "Hi Brendan, the reason is that user can accidently write code as below:\nnode, err :\u003d ...\ndefer node.Release(ctx)\nif err !\u003d nil{}\n\nIt will cause nil reference error in https://tastboard.corp.google.com/test/inputs.VirtualKeyboardSystemLanguages.es_unstable\n\nI can remove this change if you insist it anyway. Both look good to me.",
      "parentUuid": "f8ca1bdf_744a5550",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 184,
        "endChar": 2
      },
      "revId": "8eb06ff4d81cfa7d0c4b3c77fea312bcac29e322",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e07a04c_3e2f9fc3",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2020-09-22T21:57:31Z",
      "side": 1,
      "message": "Release is usually used in cleanup, very different from others. They are part of testing steps, if an error happens, it should be failed. This is my understanding.",
      "parentUuid": "8a4918d9_6b7f08c6",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 184,
        "endChar": 2
      },
      "revId": "8eb06ff4d81cfa7d0c4b3c77fea312bcac29e322",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6716a9e3_5448817e",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-23T14:21:22Z",
      "side": 1,
      "message": "I understand both cases, but I still am unsure. This could technically happen to any of the many \"defer x.Close(..)\" calls in tast. Some examples that come to mind include arc, chrome, keyboard, and conn. Maybe they all should be doing this, but I don\u0027t think that check is normal in go since it should already be checked through checking error returns.\n\nReally, I think the technically correct solution would be a form of linting that ensures errors are checked before using the other returned values.",
      "parentUuid": "6e07a04c_3e2f9fc3",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 184,
        "endChar": 2
      },
      "revId": "8eb06ff4d81cfa7d0c4b3c77fea312bcac29e322",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}