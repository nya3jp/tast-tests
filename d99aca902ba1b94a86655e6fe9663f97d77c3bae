{
  "comments": [
    {
      "key": {
        "uuid": "f4640d3a_6ee4c3fe",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/page.lzo.40",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-20T16:42:36Z",
      "side": 1,
      "message": "same comment as in next file: memory_pressure_page.lzo.40?",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3678832_894a6e95",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/page.lzo.40",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T22:29:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4640d3a_6ee4c3fe",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad203680_78c22e74",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/snarfer.sh",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-20T16:42:36Z",
      "side": 1,
      "message": "please rename this so it\u0027s clearer who uses it and what it does, e.g. memory_pressure_alloc.sh, since the data dir is shared across all platform tests: https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#internal-data-files",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8ca1f49_9fbe90dd",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/snarfer.sh",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T22:29:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad203680_78c22e74",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ab32a35_05450f98",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-19T23:49:21Z",
      "side": 1,
      "message": "when it doesn\u0027t add complexity, please favor returning error values and letting the caller decide how to handle them. i.e. just change the signature to (map[string]int, error) and return nil, ___ when you run into trouble",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d65f13bc_0a33b1d7",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T22:29:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ab32a35_05450f98",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59553dfe_df869fe3",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-19T23:49:21Z",
      "side": 1,
      "message": "in the interest of exposing less-ambiguous interfaces, i\u0027d recommend returning a struct here containing the values that you care about, e.g.\n\n  type MemInfo struct {\n      MemTotal  int64\n      SwapTotal int64\n  }\n\nif this function were just in your test file and unexported, i\u0027d be more okay with a string-keyed map being returned.\n\nalternately, does https://godoc.org/github.com/shirou/gopsutil/mem already do the same thing as this code?",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "738cc776_f986c19c",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T16:30:05Z",
      "side": 1,
      "message": "It\u0027s ironic---I had this in the main program, but I moved it here because I guessed that the review would suggest that.\n\nFor the gopsutil/mem: yes, it seems to provide enough functionality for the current needs.  Is it worth adding this package though?  It imports 6 other packages (of which I am probably using 3, not sure about the other 3).",
      "parentUuid": "59553dfe_df869fe3",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3a9290e_51d6e681",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-20T16:42:36Z",
      "side": 1,
      "message": "it\u0027s already packaged (see https://chromium.googlesource.com/chromiumos/overlays/chromiumos-overlay/+/master/dev-go/gopsutil/gopsutil-2.17.11.ebuild#14), so i think that the cost is literally one line in the import block above. :-P",
      "parentUuid": "738cc776_f986c19c",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f80f78b0_40b50308",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T22:29:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3a9290e_51d6e681",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87ed075d_48b1eba7",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 201,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-19T23:49:21Z",
      "side": 1,
      "message": "return nil, errors.Errorf(\"bad line %q\", line)",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d20cd288_4fbf0954",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 201,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T16:30:05Z",
      "side": 1,
      "message": "You have allowed calls to panic() in similar situations.  Was that a mistake, or under what circumstances would you allow call to panic?",
      "parentUuid": "87ed075d_48b1eba7",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0427b5f5_c80c5cf3",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 201,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-20T16:42:36Z",
      "side": 1,
      "message": "i strongly prefer that panic() never be called when it\u0027s \"reasonable\" to return an error to the caller. https://github.com/golang/go/wiki/CodeReviewComments#dont-panic agrees. in the previous instance that i\u0027m thinking of, i believe that i also advocated returning errors instead of panicking, but sometimes i need to pick my battles.",
      "parentUuid": "d20cd288_4fbf0954",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f354aa2_b5124be8",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 201,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T22:29:56Z",
      "side": 1,
      "message": "I see, unfortunately that leads to the same battles being fought all over ;)",
      "parentUuid": "0427b5f5_c80c5cf3",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1a75135_f1ae14ea",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 205,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-19T23:49:21Z",
      "side": 1,
      "message": "return nil, errors.Wrapf(err, \"couldn\u0027t parse %q\", fields[1])",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "580ea196_2f80615b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 205,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T22:29:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1a75135_f1ae14ea",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8a48c25_bf1a9d5e",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 210,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-19T23:49:21Z",
      "side": 1,
      "message": "return nil, errors.Errorf(\"missing colon in %q\", len(name))",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "190d23d4_bc3c8031",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/kernelmeter/kernelmeter.go",
        "patchSetId": 6
      },
      "lineNbr": 210,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T22:29:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8a48c25_bf1a9d5e",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "120d5052_d7e7b99d",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-19T23:49:21Z",
      "side": 1,
      "message": "please document that the returned command has been started and must be killed and waited on by the caller, and also the non-obvious fact that it may be nil if no memory needs to be allocated (L131).\n\nor probably better, since the interesting part of this function is figuring out how much memory needs to be allocated, how about making this just return an int64 and then letting the caller own the command entirely?",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdd8f714_5dbf9c88",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T22:29:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "120d5052_d7e7b99d",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c4c0f43_208e72cc",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 6
      },
      "lineNbr": 657,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-19T23:49:21Z",
      "side": 1,
      "message": "data files usually end up under /usr/local/share. is it always the case that /usr/local is mounted exec?",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74b2565a_ccd208fa",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 6
      },
      "lineNbr": 657,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T16:30:05Z",
      "side": 1,
      "message": "I would guess so, since /usr/local is only used in test images (and autotest puts many scripts and binaries in there).\n\nI guess that these \"data\" files were meant to be just data?  Another data file in this test contains javascript.  Maybe they should be \"auxiliary\" files?  Does tast have (will have) a place for scripts?\n\nI propose to leave this as is.",
      "parentUuid": "0c4c0f43_208e72cc",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3b2858f_2e96425f",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 6
      },
      "lineNbr": 657,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-20T16:42:36Z",
      "side": 1,
      "message": "tast doesn\u0027t (and likely won\u0027t) have a separate place for scripts. the guidance at https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Executables is to package executables separately, but i agree that executable scripts in interpreted languages are a special case.\n\ni still have a slight preference for the memory-allocating script to be packaged separately since it seems like it could be useful elsewhere (particularly manual testing), but i\u0027m okay with it starting out as a data file if that works.",
      "parentUuid": "74b2565a_ccd208fa",
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6c17056_6a92a200",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 6
      },
      "lineNbr": 670,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-19T23:49:21Z",
      "side": 1,
      "message": "nit: this can probably be s.Error since it\u0027s already deferred",
      "range": {
        "startLine": 670,
        "startChar": 5,
        "endLine": 670,
        "endChar": 10
      },
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2c7b16e_8d965a9a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 6
      },
      "lineNbr": 670,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-02-20T22:29:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6c17056_6a92a200",
      "range": {
        "startLine": 670,
        "startChar": 5,
        "endLine": 670,
        "endChar": 10
      },
      "revId": "d99aca902ba1b94a86655e6fe9663f97d77c3bae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}