{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "30314365_2a9f844e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-22T17:47:21Z",
      "side": 1,
      "message": "Thank you! One comment about the polling. Other comments are minor things.",
      "revId": "fe9f693b463b0a564e23ae68376dfaa140bba0bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bb22dfe_ceb308c2",
        "filename": "src/chromiumos/tast/local/bundles/cros/assistant/check_shutdown_crash.go",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-22T17:47:21Z",
      "side": 1,
      "message": "nit: How about to structure this as the following? We can end scan early if we find the line.:\n\n```\nlogFile, err :\u003d os.Open(...)\nif err !\u003d ... {}\ndefer logFile.Close()\n\n...\n\nfor logScanner.Scan() {\n  if (strings.Contains(...)) {\n    return true, nil\n  }\n}\nreturn false, nil\n```",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 46,
        "endChar": 2
      },
      "revId": "fe9f693b463b0a564e23ae68376dfaa140bba0bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7709120_b21b3b3c",
        "filename": "src/chromiumos/tast/local/bundles/cros/assistant/check_shutdown_crash.go",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-22T17:47:21Z",
      "side": 1,
      "message": "nit: You can write this as `defer logFile.Close()`.",
      "range": {
        "startLine": 47,
        "startChar": 1,
        "endLine": 49,
        "endChar": 4
      },
      "revId": "fe9f693b463b0a564e23ae68376dfaa140bba0bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5d39cfa_30aca676",
        "filename": "src/chromiumos/tast/local/bundles/cros/assistant/check_shutdown_crash.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-22T17:47:21Z",
      "side": 1,
      "message": "nit: Use `s.Log` instead if `testing.State` is available: https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast/src/chromiumos/tast/testing/context.go;l\u003d16-19;drc\u003d40abc47087c3e1722042ec4e01f6c085415a1f27",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 19
      },
      "revId": "fe9f693b463b0a564e23ae68376dfaa140bba0bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3c2117b_ed130df5",
        "filename": "src/chromiumos/tast/local/bundles/cros/assistant/check_shutdown_crash.go",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-22T17:47:21Z",
      "side": 1,
      "message": "`testing.Poll` does:\n\n1. Run the provided function.\n2. Returns if the function returned nil.\n3. Wait for the specified interval and go back to the step 1.\n\nIf `testing.Poll` has run before `chrome.PREVIOUS` is updated, we will check the old `chrome.PREVIOUS` (one for a previous test). If that old one doesn\u0027t have a crash, this test passes.\n\nHow about to modify this as:\n\n1. Take a hash of `chrome.PREVIOUS` at the beginning of this test.\n2. Restart ui.\n3. Wait until a hash of `chrome.PREVIOUS` changes.\n4. Check whether the `chrome.PREVIOUS` contains a crash or not.",
      "range": {
        "startLine": 75,
        "startChar": 11,
        "endLine": 75,
        "endChar": 23
      },
      "revId": "fe9f693b463b0a564e23ae68376dfaa140bba0bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}