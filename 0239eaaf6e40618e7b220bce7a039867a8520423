{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c570bed1_5028f052",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 2
      },
      "lineNbr": 1028,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2022-10-28T00:39:57Z",
      "side": 1,
      "message": "I feel EnterShelfOverflow shouldn\u0027t have to know about these fake apps. Can you do this in the test instead?",
      "revId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d563634_89557f4e",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 2
      },
      "lineNbr": 1028,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-10-28T00:45:49Z",
      "side": 1,
      "message": "I agreed. Btw, this func is seemingly used by some other tests. If it is okay, I would like to stabilize that for lacros in this change and leave it up to author/users on where to move in a follow up.",
      "parentUuid": "c570bed1_5028f052",
      "revId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc27280c_3f960236",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 2
      },
      "lineNbr": 1028,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-10-28T01:39:53Z",
      "side": 1,
      "message": "Personally I\u0027m happy for this to be done in a follow up, since the code is already like this.",
      "parentUuid": "6d563634_89557f4e",
      "revId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72f0788e_f823e9f6",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 2
      },
      "lineNbr": 1028,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-10-28T01:48:10Z",
      "side": 1,
      "message": "SGTM. Looked at them using this func. They are in the local bundles of either \u0027ui\u0027 or \u0027shelf\u0027 package. Moving to `tast/local/bundles/cros/shelf/\u003cutil_or_else\u003e` would be doable in a follow up if it is okay with the reviewers.",
      "parentUuid": "fc27280c_3f960236",
      "revId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6a9398f_7140aeb3",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 2
      },
      "lineNbr": 1028,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2022-10-28T01:59:54Z",
      "side": 1,
      "message": "Fine with me.",
      "parentUuid": "72f0788e_f823e9f6",
      "revId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42195fbc_4e0f8ce2",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 2
      },
      "lineNbr": 1028,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-10-28T04:36:49Z",
      "side": 1,
      "message": "I noticed this whole func can\u0027t simply move to local/bundles/* as it is currently being referenced by two different test packages \u0027ui\u0027 and \u0027shelf\u0027. otherwise, it would violate this rule: https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#scoping-and-shared-code\n\nAlternatively, we could probably separate out the fake apps logic to a new func and let this func take it as an arg.\n\nResolving this to move this convo into a follow up CL (https://crrev.com/c/3989575)",
      "parentUuid": "c6a9398f_7140aeb3",
      "revId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "0239eaaf6e40618e7b220bce7a039867a8520423",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}