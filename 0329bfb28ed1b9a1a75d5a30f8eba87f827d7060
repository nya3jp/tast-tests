{
  "comments": [
    {
      "key": {
        "uuid": "ce08bb02_d8948cbd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-09-17T22:47:03Z",
      "side": 1,
      "message": "First pass, just a couple more comments on top of hidehiko@ ones",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8630fa19_631e4c01",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "There\u0027s no guarantee the order of parameterized tests. Please do not depends on the current implementation details.\n\nI\u0027d recommend the table driven tests, instead.",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf19934b_a1423eab",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "I do not assume particular order. Each of these sub-tests will be run by a separate Autotest wrapper. Other reasons for each test to be separate is that different tests have different timeouts and create different output folders, which is later parsed by a result processing pipeline.",
      "parentUuid": "8630fa19_631e4c01",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d38a7543_033cb3a2",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-25T08:02:52Z",
      "side": 1,
      "message": "Then why do you need to duplicate tests a lot? 01_stress to 40_stress are just same.\nIf you\u0027ll have different autotest wrapper, the duplication can be handled there.\nIn this approach, updating the test needs both autotest wrapper and Tast test, that\u0027d be more cost.",
      "parentUuid": "cf19934b_a1423eab",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "105d1319_45c982c7",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-28T02:17:20Z",
      "side": 1,
      "message": "There are few reasons for duplicating the tests:\n- each test produces numbered output dir which is picked up by the data processing pipeline.\n- if test fails, we can manually rerun the remaining test blocks, producing the correct results in the correct output folders (which is also more informative for debugging).\n- Autotest wrapper is a temporary solution until native Tast support is added to Moblab (it\u0027s an active requirement). After Tast support is added, we would be able to run a sequence of the Tast tests, i.e. \"storage.FullQualificationStress.01_setup_benchmarks storage.FullQualificationStress.02_stress storage.FullQualificationStress.03_stress\", etc.\n- The same test could be run outside of Moblab by \"tast\" command, still producing consistent results (even if we have to run 42 tast commands to guarantee the right sequence).\n- Explicitly stating all test blocks required for a test provides better visibility of what the full version of the test looks like. In this case, anyone reading the code understands that the full test contains 42 test blocks.\n- Any change in test blocks will (in most cases) still require update of the Autotest wrapper.\n\nSee https://chromium-review.googlesource.com/c/chromiumos/third_party/autotest/+/2417734 for implementation of the wrapper.",
      "parentUuid": "d38a7543_033cb3a2",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01eb4b39_7b5d1e38",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "To minimize the interface, could you avoid passing testing.State as much as possible?\nInstead, could you pass the var string, and return (int, error).",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a022efa1_fdda8700",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01eb4b39_7b5d1e38",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "731728e5_d57e92fe",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-09-17T22:47:03Z",
      "side": 1,
      "message": "Make it const?",
      "range": {
        "startLine": 233,
        "startChar": 41,
        "endLine": 233,
        "endChar": 42
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef0bb9fd_ebeec1ce",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "731728e5_d57e92fe",
      "range": {
        "startLine": 233,
        "startChar": 41,
        "endLine": 233,
        "endChar": 42
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ade2cd0_00d1ef28",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "nit/style:\n\nif err :\u003d info.CheckMainDeviceSize(...); err !\u003d nil {\n  ...\n}\n\nditto for below.",
      "range": {
        "startLine": 233,
        "startChar": 1,
        "endLine": 234,
        "endChar": 16
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41f3cd70_e0d37ca8",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ade2cd0_00d1ef28",
      "range": {
        "startLine": 233,
        "startChar": 1,
        "endLine": 234,
        "endChar": 16
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c40ab2e8_33e17d1a",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "could you use testing.Poll instead?",
      "range": {
        "startLine": 292,
        "startChar": 1,
        "endLine": 297,
        "endChar": 2
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60fbaeaa_78a4b49a",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "I\u0027m not entirely sure how to apply testing.Poll here. In this for loop, Sleep is part of the iteration (interleaved suspends and sleeps) rather than just waiting for suspend to finish.\nAlso, any timeout that I pass to testing.PollOptions is working on monotonic clock, therefore should be affected by the sleeps inside the loop.",
      "parentUuid": "c40ab2e8_33e17d1a",
      "range": {
        "startLine": 292,
        "startChar": 1,
        "endLine": 297,
        "endChar": 2
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a34a33d_0e476242",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-25T08:02:52Z",
      "side": 1,
      "message": "Does:\n\ntesting.Poll(ctx, ...,\n\u0026testing.PollOptions{Timeout: retensionBlockTimeout; Interval: 30*time.Second})\n\nwork for you?",
      "parentUuid": "60fbaeaa_78a4b49a",
      "range": {
        "startLine": 292,
        "startChar": 1,
        "endLine": 297,
        "endChar": 2
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "030d0a77_9dd75c17",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-28T02:17:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a34a33d_0e476242",
      "range": {
        "startLine": 292,
        "startChar": 1,
        "endLine": 297,
        "endChar": 2
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7cbc92c_f379e455",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "Could you elaborate what\u0027s \"suspend\"ing? It looks like a write stress tests...?",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0a9612c_60c7250d",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7cbc92c_f379e455",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45387503_e280383e",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "Could you use sync.WaitGroup() instead?",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13b6f92a_48db54e4",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "What is the recommended way of combining sync.WaitGroup with a timeout for the group? I couldn\u0027t find timeout functionality of a waitgroup.",
      "parentUuid": "45387503_e280383e",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "296c7127_b074c0ea",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-25T08:02:52Z",
      "side": 1,
      "message": "Each async task can respect the timeout passed via ctx.\n\nctx, cancel :\u003d context.WithTimeout(ctx, timeout)\ndefer cancel()\n\nwg :\u003d \u0026sync.WaitGroup()\nfor _, subTest in range subtests {\n  wg.Add(1)\n  go func() {\n    ...\n    wg.Done()\n  }()\n}\n\nwg.Wait()",
      "parentUuid": "13b6f92a_48db54e4",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edc70fc6_bbd9a6ee",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-28T02:17:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "296c7127_b074c0ea",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "931a434d_30655b7d",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 403,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "optional/style:\n\nfor retries :\u003d 0; retries \u003c max; retries++ {\n  ...\n  if passed :\u003d s.Run(...); passed {\n    break\n  }\n}\n\ncan split the concept of retrying and checking the test status clearer.",
      "range": {
        "startLine": 398,
        "startChar": 2,
        "endLine": 403,
        "endChar": 3
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14f8f37e_ddea1ac9",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 403,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "931a434d_30655b7d",
      "range": {
        "startLine": 398,
        "startChar": 2,
        "endLine": 403,
        "endChar": 3
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b2c30ee_cfdd312e",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "math.Round() may be more explicit.",
      "range": {
        "startLine": 105,
        "startChar": 12,
        "endLine": 105,
        "endChar": 57
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b31120d_ad47de2f",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "nit: 1e9",
      "range": {
        "startLine": 105,
        "startChar": 33,
        "endLine": 105,
        "endChar": 50
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e405909a_10a2c529",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b31120d_ad47de2f",
      "range": {
        "startLine": 105,
        "startChar": 33,
        "endLine": 105,
        "endChar": 50
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "158c9838_3adfc0ae",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b2c30ee_cfdd312e",
      "range": {
        "startLine": 105,
        "startChar": 12,
        "endLine": 105,
        "endChar": 57
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df0619db_ca737944",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_result.go",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "this depends on the naming scheme more. Could you describe the in the document?",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3819bdf3_ac71aaa7",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_result.go",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-09-17T22:47:03Z",
      "side": 1,
      "message": "I don\u0027t like the inverted logic - if not write then read, if not read, then write..",
      "range": {
        "startLine": 154,
        "startChar": 14,
        "endLine": 154,
        "endChar": 22
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ca6be9c_54095deb",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_result.go",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "Removed these conditions altogether. This logic should live in post-processing anyway.",
      "parentUuid": "df0619db_ca737944",
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a742b82_27dbc2bf",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_result.go",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:36:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3819bdf3_ac71aaa7",
      "range": {
        "startLine": 154,
        "startChar": 14,
        "endLine": 154,
        "endChar": 22
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f7d9ef5_7ef49822",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "As you\u0027re switching to returning an error, could you remove this?\nYou can take datapath as an argument or a parameter of testConfig.\nvalidateJob should return an error for consistency, too.",
      "range": {
        "startLine": 179,
        "startChar": 38,
        "endLine": 179,
        "endChar": 56
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5928001a_980304b7",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:44:43Z",
      "side": 1,
      "message": "Fixed validateJob and removed State argument from there.\n\nRegarding passing state to this function: I would prefer to keep it as close to the RunFioStressCritical signature as possible, since tests use both (sometimes even with the same TestConfig). So it might look nicer if both functions have the same arguments.\n\nLet me know what do you think, I don\u0027t have a strong opinion here.",
      "parentUuid": "1f7d9ef5_7ef49822",
      "range": {
        "startLine": 179,
        "startChar": 38,
        "endLine": 179,
        "endChar": 56
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30092122_8e9f1b57",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-25T08:02:52Z",
      "side": 1,
      "message": "I still think we should remove testing.State.\nActually those two functions handle different layers. Even if we keep testing.State, they have different signature (returning error or not).\n\ntesting.State has a lot of things, and Tast is encouraging not to pass it via argument as much as possible.",
      "parentUuid": "5928001a_980304b7",
      "range": {
        "startLine": 179,
        "startChar": 38,
        "endLine": 179,
        "endChar": 56
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b4db555_f0b4d64f",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-28T02:17:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30092122_8e9f1b57",
      "range": {
        "startLine": 179,
        "startChar": 38,
        "endLine": 179,
        "endChar": 56
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b86dfad3_94541451",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-17T08:03:10Z",
      "side": 1,
      "message": "ditto for style.",
      "range": {
        "startLine": 221,
        "startChar": 1,
        "endLine": 222,
        "endChar": 16
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d57812e4_e06f88b5",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-18T01:44:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b86dfad3_94541451",
      "range": {
        "startLine": 221,
        "startChar": 1,
        "endLine": 222,
        "endChar": 16
      },
      "revId": "0329bfb28ed1b9a1a75d5a30f8eba87f827d7060",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}