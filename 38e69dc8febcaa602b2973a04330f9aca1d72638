{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "530a3cbb_25d5ee92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1302456
      },
      "writtenOn": "2021-12-16T00:35:18Z",
      "side": 1,
      "message": "Thanks, Ben.",
      "revId": "38e69dc8febcaa602b2973a04330f9aca1d72638",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b50318bd_96df3378",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1302456
      },
      "writtenOn": "2021-12-21T02:33:32Z",
      "side": 1,
      "message": "Thanks, Tatsuhisa.",
      "revId": "38e69dc8febcaa602b2973a04330f9aca1d72638",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a122856c_7075cdce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1302456
      },
      "writtenOn": "2021-12-21T16:58:37Z",
      "side": 1,
      "message": "Thanks, Tatsuhisa.",
      "revId": "38e69dc8febcaa602b2973a04330f9aca1d72638",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2b22900_85ff7631",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/scanning/scanning.go",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2021-12-21T01:27:09Z",
      "side": 1,
      "message": "Can this be replaced with a polling instead of a fixed sleep?\nThe following actions such as selectScanSetting uses s.LeftClick inside. LeftClick() has a polling routine inside it to wait until the UI stabilizes. So I guess setting a longer timeout to pollOpts would work for this.\nSame for the other Sleeps.",
      "revId": "38e69dc8febcaa602b2973a04330f9aca1d72638",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3b75d5d_d9dc29db",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/scanning/scanning.go",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1302456
      },
      "writtenOn": "2021-12-21T02:33:32Z",
      "side": 1,
      "message": "The problem with the polling approach is that we only have a single connection to the uiauto library, so increasing the polling time increases the time for every single action we take throughout the test by an order of magnitude. We only need to wait in two specific locations, so sleeping saves several minutes over the execution of the test.",
      "parentUuid": "d2b22900_85ff7631",
      "revId": "38e69dc8febcaa602b2973a04330f9aca1d72638",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bb891f0_e6dd6d81",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/scanning/scanning.go",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2021-12-21T02:50:33Z",
      "side": 1,
      "message": "I think I am missing some context. What do we expect by the sleep?\n1. assuming that it waits for a certain element to appear:\nIf the polling \"interval\" is short enough (like the default 0.3s) and the actual UI appears before timeout, the \"timeout\" of the polling would not affect the test execution time.\n2. if there is a wrong element that is found by the finder and trying to avoid it by sleep, how about detecting UI update by WaitUntilExist another element?",
      "parentUuid": "a3b75d5d_d9dc29db",
      "revId": "38e69dc8febcaa602b2973a04330f9aca1d72638",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "243e070b_b2882c4c",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/scanning/scanning.go",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1302456
      },
      "writtenOn": "2021-12-21T16:58:37Z",
      "side": 1,
      "message": "Both of the sleeps here deal with similar situations - we select a UI element, which then causes some other UI elements to appear. The problem is that these other elements appear before they are selectable, so if we try to select them right away then the selection fails. I don\u0027t think WaitUntilExist works, because it finds the element, polls it and finds it stable (while not able to be selected) and then returns. What we need to do is wait for the second \"stable\" state of these elements.",
      "parentUuid": "7bb891f0_e6dd6d81",
      "revId": "38e69dc8febcaa602b2973a04330f9aca1d72638",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}