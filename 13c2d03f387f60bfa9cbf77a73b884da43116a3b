{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bf3e9e60_745c5ae6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-08T19:37:45Z",
      "side": 1,
      "message": "Patchset 12 passes in the context to the deferred cleanup functions (as per previous reviews). PTAL?",
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9adf07a_a92de8b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-08T23:12:34Z",
      "side": 1,
      "message": "Adding Ben for team-level review.",
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b211dca2_5b32d768",
        "filename": "src/chromiumos/tast/local/bundles/cros/documentscanapi/scan.go",
        "patchSetId": 12
      },
      "lineNbr": 90,
      "author": {
        "id": 1192536
      },
      "writtenOn": "2021-12-09T00:13:15Z",
      "side": 1,
      "message": "Should these also wait for the printer to be configured?  In general we want to avoid having the test start trying to scan while Chrome is still setting up the printer.",
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc157e4d_0c7ff6a4",
        "filename": "src/chromiumos/tast/local/bundles/cros/documentscanapi/scan.go",
        "patchSetId": 12
      },
      "lineNbr": 90,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-09T04:13:09Z",
      "side": 1,
      "message": "It\u0027s not visible in this change, but the subsequent call to EnsurePrinterIdle() does actually wait for the printer to be configured. This is addressed more fully in the subsequent CL in the chain.",
      "parentUuid": "b211dca2_5b32d768",
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d64b77d_0ceadf7b",
        "filename": "src/chromiumos/tast/local/bundles/cros/documentscanapi/scan.go",
        "patchSetId": 12
      },
      "lineNbr": 95,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-12-09T10:56:10Z",
      "side": 1,
      "message": "nit: this should be ctx",
      "range": {
        "startLine": 95,
        "startChar": 25,
        "endLine": 95,
        "endChar": 35
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33d8f7f8_57da47c5",
        "filename": "src/chromiumos/tast/local/bundles/cros/documentscanapi/scan.go",
        "patchSetId": 12
      },
      "lineNbr": 95,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-10T01:16:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d64b77d_0ceadf7b",
      "range": {
        "startLine": 95,
        "startChar": 25,
        "endLine": 95,
        "endChar": 35
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38707672_1eb662ff",
        "filename": "src/chromiumos/tast/local/bundles/cros/documentscanapi/scan.go",
        "patchSetId": 12
      },
      "lineNbr": 98,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-12-09T10:56:10Z",
      "side": 1,
      "message": "nit: i think you want to pass cleanupCtx here",
      "range": {
        "startLine": 98,
        "startChar": 3,
        "endLine": 98,
        "endChar": 6
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4682c7a3_82c86ccf",
        "filename": "src/chromiumos/tast/local/bundles/cros/documentscanapi/scan.go",
        "patchSetId": 12
      },
      "lineNbr": 98,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-10T01:16:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38707672_1eb662ff",
      "range": {
        "startLine": 98,
        "startChar": 3,
        "endLine": 98,
        "endChar": 6
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dec9203_979879c7",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/multi_page_scan.go",
        "patchSetId": 12
      },
      "lineNbr": 122,
      "author": {
        "id": 1192536
      },
      "writtenOn": "2021-12-09T00:13:15Z",
      "side": 1,
      "message": "Most of these have these same 4 checks to wait for the printer to be ready for scanning.  Other than the non-ipp enumeration test case, the ones that don\u0027t are more likely to be a mistake than an intentional omission.  What do you think about adding a WaitForScanner option and migrating these into the new Start() as well?",
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "715937c7_2dd9dbd5",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/multi_page_scan.go",
        "patchSetId": 12
      },
      "lineNbr": 122,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-09T04:13:09Z",
      "side": 1,
      "message": "Acknowledged, will definitely do.\n\nTo summarize what Ben \u0026 I decided offline:\n* We\u0027ll maintain the status quo for this change, focusing on the migration from StartScanner() to Start().\n* In a follow-up CL, we\u0027ll build out the logic for WaitForScanner(), incorporating these checks.\n* In a follow-up CL, we\u0027ll investigate if we can improve the underlying implementation of WaitUntilConfigured(). Today, WaitUntilConfigured() uses a CUPS-specific backdoor to see if a printer is configured. We suspect it is better to watch the top of the print stack (i.e. await an ash notification).",
      "parentUuid": "6dec9203_979879c7",
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53938dfd_4eca4054",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/multi_page_scan.go",
        "patchSetId": 12
      },
      "lineNbr": 207,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-12-09T10:56:10Z",
      "side": 1,
      "message": "Why do you need to Stop printer twice: here and in line 107. Stop printer in line 107 should be sufficient. Stop printer in 2 place is not consistent with other tests and people might be confused whether you need to do that.\n\nI also remember there was a thread that you want Stop() method to be idempotent. Could you please explain why it might be useful? If it does not makes sense to be idempotent, please remove idempotent support in Stop() method because I think it\u0027s an error if someone try to call Stop() method twice.\n\nedit: I see many other defer statements in open_scan_in_files_app.go file, is there a bug that you have to stop it before some defer statement? is it still valid for this file? In the current Stop() implementation you just send kill signal, so is this comment still valid?",
      "range": {
        "startLine": 202,
        "startChar": 0,
        "endLine": 207,
        "endChar": 2
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "714c1715_09d8b995",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/multi_page_scan.go",
        "patchSetId": 12
      },
      "lineNbr": 207,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-10T01:16:47Z",
      "side": 1,
      "message": "The genesis of this pattern is in crrev/c/2522471. The scanning stack was a bit more race-prone than the print stack at the time, and the team discovered that stopping the printer early would allow all dependent processes (including ippusb_bridge) to stop cleanly as well. I think this is indeed getting around the other defer statements on the stack.\n\nWe are not confident that this race is gone yet and would prefer to maintain the existing behavior until we have the resources to investigate. That\u0027s why this chain of CLs focuses on a simple refactor and avoids introducing behavioral changes.\n\nMaking Stop() idempotent was done explicitly to support this pattern.",
      "parentUuid": "53938dfd_4eca4054",
      "range": {
        "startLine": 202,
        "startChar": 0,
        "endLine": 207,
        "endChar": 2
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0a451a8_1bd942b3",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/multi_page_scan.go",
        "patchSetId": 12
      },
      "lineNbr": 207,
      "author": {
        "id": 1192536
      },
      "writtenOn": "2021-12-10T02:57:23Z",
      "side": 1,
      "message": "Agreed, this extra Stop was added to deliberately shut down the virtual printer without waiting for everything to unwind in reverse order.  Without it, other processes that probe USB devices may occasionally have the printer open when this test is finishing (such as permission_broker), which causes flaky failures that aren\u0027t related to what this test is actually testing.\n\nWe\u0027ve rewritten some of our IPP-USB stack to make it less prone to problems with races, and we have a project planned for Q1 to fully revisit all of these tests.  But for the purposes of this refactor, it would be good to preserve the existing behavior rather than trying to fix everything at once.",
      "parentUuid": "714c1715_09d8b995",
      "range": {
        "startLine": 202,
        "startChar": 0,
        "endLine": 207,
        "endChar": 2
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45d6d5e8_59aeabd9",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/scanning/scanning.go",
        "patchSetId": 12
      },
      "lineNbr": 120,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-12-09T10:56:10Z",
      "side": 1,
      "message": "nit: rename to ctx for consistency. This function implementation should not be aware whether context if cleanup or shorten or whatever else.",
      "range": {
        "startLine": 120,
        "startChar": 12,
        "endLine": 120,
        "endChar": 22
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7704643_fba0dac8",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanapp/scanning/scanning.go",
        "patchSetId": 12
      },
      "lineNbr": 120,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-10T01:16:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45d6d5e8_59aeabd9",
      "range": {
        "startLine": 120,
        "startChar": 12,
        "endLine": 120,
        "endChar": 22
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1e13a9e_fe764b6e",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanner/scan_escl_ipp.go",
        "patchSetId": 12
      },
      "lineNbr": 113,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-12-09T10:56:10Z",
      "side": 1,
      "message": "nit: ctx",
      "range": {
        "startLine": 113,
        "startChar": 12,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34770283_44b657c2",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanner/scan_escl_ipp.go",
        "patchSetId": 12
      },
      "lineNbr": 113,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-10T01:16:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1e13a9e_fe764b6e",
      "range": {
        "startLine": 113,
        "startChar": 12,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c632b3f3_9b358e7e",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanner/scan_escl_ipp.go",
        "patchSetId": 12
      },
      "lineNbr": 214,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-12-09T10:56:10Z",
      "side": 1,
      "message": "nit: don\u0027t ignore errors",
      "range": {
        "startLine": 214,
        "startChar": 1,
        "endLine": 214,
        "endChar": 25
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c2c9ec4_f837f2be",
        "filename": "src/chromiumos/tast/local/bundles/cros/scanner/scan_escl_ipp.go",
        "patchSetId": 12
      },
      "lineNbr": 214,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-12-10T01:16:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c632b3f3_9b358e7e",
      "range": {
        "startLine": 214,
        "startChar": 1,
        "endLine": 214,
        "endChar": 25
      },
      "revId": "13c2d03f387f60bfa9cbf77a73b884da43116a3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}