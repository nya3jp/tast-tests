{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d6542d81_611dc99a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-07-04T09:02:14Z",
      "side": 1,
      "message": "Hi Jeremy,\n\nCan you please get us the CQ failure logs?",
      "revId": "19e38f28a8e88f28d86bc776fd4bba3613845ec2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a8c484e_bca219d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2022-07-06T16:35:56Z",
      "side": 1,
      "message": "```\n2022-07-04T07:56:45.365365Z Started test crash.Seccomp\n2022-07-04T07:56:45.662880Z [07:56:45.488] Error at seccomp.go:69: Failed to set up crash test: failed to get daemon store crash directories: couldn\u0027t retrieve active sessions: Message recipient disconnected from message bus without replying\n2022-07-04T07:56:45.665736Z [07:56:45.488] Stack trace:\nFailed to set up crash test\n\tat chromiumos/tast/local/bundles/cros/crash.Seccomp (seccomp.go:69)\n\tat chromiumos/tast/internal/planner.runTestWithConfig.func3.1 (run.go:824)\n\tat chromiumos/tast/internal/usercode.SafeCall.func2 (usercode.go:112)\n\tat runtime.goexit (asm_amd64.s:1571)\nfailed to get daemon store crash directories\n\tat chromiumos/tast/local/crash.SetUpCrashTest (fixture.go:275)\n\tat chromiumos/tast/local/bundles/cros/crash.Seccomp (seccomp.go:68)\n\tat chromiumos/tast/internal/planner.runTestWithConfig.func3.1 (run.go:824)\n\tat chromiumos/tast/internal/usercode.SafeCall.func2 (usercode.go:112)\n\tat runtime.goexit (asm_amd64.s:1571)\ncouldn\u0027t retrieve active sessions\n\tat chromiumos/tast/local/crash.GetDaemonStoreCrashDirs (crash.go:215)\n\tat chromiumos/tast/local/crash.SetUpCrashTest (fixture.go:273)\n\tat chromiumos/tast/local/bundles/cros/crash.Seccomp (seccomp.go:68)\n\tat chromiumos/tast/internal/planner.runTestWithConfig.func3.1 (run.go:824)\n\tat chromiumos/tast/internal/usercode.SafeCall.func2 (usercode.go:112)\n\tat runtime.goexit (asm_amd64.s:1571)\nMessage recipient disconnected from message bus without replying\n\tat ???\n2022-07-04T07:56:46.006815Z [07:56:45.833] Failed to take screenshot by Chrome API: failed to create a new Chrome Devtools Protocol session: failed to query browser\u0027s HTTP endpoint: Get \"http://localhost:33823/json/version\": dial tcp [::1]:33823: connect: connection refused\n2022-07-04T07:56:46.021400Z [07:56:45.848] External command failed: exit status 1\n2022-07-04T07:56:46.024091Z [07:56:45.848] Command: screenshot /usr/local/tmp/tast_out.20220704-005513.043287928/crash.Seccomp/faillog/screenshot_builtin.png\n2022-07-04T07:56:46.027992Z [07:56:45.848] Uncaptured output:\n2022-07-04T07:56:45.846715Z ERROR screenshot: [screenshot.cc(111)] CRTC not found. Is the screen on?\n\n2022-07-04T07:56:46.032237Z [07:56:45.848] Failed to take screenshot by a command: failed running \"screenshot /usr/local/tmp/tast_out.20220704-005513.043287928/crash.Seccomp/faillog/screenshot_builtin.png\"\n2022-07-04T07:56:46.035352Z Completed test crash.Seccomp in 658ms with 1 error(s)\n```",
      "parentUuid": "d6542d81_611dc99a",
      "revId": "19e38f28a8e88f28d86bc776fd4bba3613845ec2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "19e38f28a8e88f28d86bc776fd4bba3613845ec2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "19e38f28a8e88f28d86bc776fd4bba3613845ec2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "19e38f28a8e88f28d86bc776fd4bba3613845ec2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "19e38f28a8e88f28d86bc776fd4bba3613845ec2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}