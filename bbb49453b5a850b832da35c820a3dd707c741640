{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "49afc60c_5fae63fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2022-04-12T04:46:01Z",
      "side": 1,
      "message": "shadow reviewer lgtm",
      "revId": "bbb49453b5a850b832da35c820a3dd707c741640",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf5693e5_04c7c6a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2022-04-28T21:27:01Z",
      "side": 1,
      "message": "Sorry for late review, finally got around to this.",
      "revId": "bbb49453b5a850b832da35c820a3dd707c741640",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e9e7265_60c0c713",
        "filename": "src/chromiumos/tast/common/network/iw/runner.go",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2022-04-28T21:27:01Z",
      "side": 1,
      "message": "can we define an enum for this?",
      "range": {
        "startLine": 89,
        "startChar": 14,
        "endLine": 89,
        "endChar": 20
      },
      "revId": "bbb49453b5a850b832da35c820a3dd707c741640",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97f5ddb4_6caa85a7",
        "filename": "src/chromiumos/tast/common/network/iw/runner_test.go",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2022-04-28T21:27:01Z",
      "side": 1,
      "message": "maybe add a couple more lines to verify that it can parse multiple. For example, trogdor looks like:\n\n\tvalid interface combinations:\n\t\t * #{ managed } \u003c\u003d 2, #{ AP, P2P-client, P2P-GO } \u003c\u003d 2, #{ P2P-device } \u003c\u003d 1,\n\t\t   total \u003c\u003d 4, #channels \u003c\u003d 1\n\t\t * #{ managed } \u003c\u003d 2, #{ P2P-client } \u003c\u003d 2, #{ AP, P2P-GO } \u003c\u003d 1, #{ P2P-device } \u003c\u003d 1,\n\t\t   total \u003c\u003d 4, #channels \u003c\u003d 2\n\t\t * #{ managed } \u003c\u003d 1, #{ IBSS } \u003c\u003d 1,\n\t\t   total \u003c\u003d 2, #channels \u003c\u003d 1",
      "revId": "bbb49453b5a850b832da35c820a3dd707c741640",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adfe7f4e_d29fbe70",
        "filename": "src/chromiumos/tast/local/bundles/cros/wifi/concurrency_caps.go",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2022-04-28T21:27:01Z",
      "side": 1,
      "message": "add yourself as owner?",
      "revId": "bbb49453b5a850b832da35c820a3dd707c741640",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34992e32_5e8ec13d",
        "filename": "src/chromiumos/tast/local/bundles/cros/wifi/concurrency_caps.go",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2022-04-28T21:27:01Z",
      "side": 1,
      "message": "So there\u0027s actually a little more subtlety to this. AIUI \"P2P-device\" includes both P2P-client and P2P-GO, so in the below example:\n\n\t\t * #{ managed } \u003c\u003d 2, #{ AP, P2P-client, P2P-GO } \u003c\u003d 2, #{ P2P-device } \u003c\u003d 1,\n\t\t   total \u003c\u003d 4, #channels \u003c\u003d 1`\n\nsupportsConcurrency(..., [P2P-client, P2P-GO]) should return false, but your implementation will return true.",
      "revId": "bbb49453b5a850b832da35c820a3dd707c741640",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6691ee2a_03af0719",
        "filename": "src/chromiumos/tast/local/bundles/cros/wifi/concurrency_caps.go",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2022-04-28T21:27:01Z",
      "side": 1,
      "message": "can we do this by allocating zeroes and incrementing instead (checking against limit.MaxCount)? It\u0027s clearer that way.",
      "revId": "bbb49453b5a850b832da35c820a3dd707c741640",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}