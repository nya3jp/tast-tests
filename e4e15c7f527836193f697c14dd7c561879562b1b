{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7790b200_969e1077",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-11-05T08:12:11Z",
      "side": 1,
      "message": "If that is the case, you need to increase the timeout of the tests as well. It\u0027s easier to review if done in this CL.",
      "range": {
        "startLine": 19,
        "startChar": 49,
        "endLine": 19,
        "endChar": 65
      },
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69d1cf81_e01edae4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-11-06T02:37:24Z",
      "side": 1,
      "message": "There are a lot of tests using WaitUntilIdle and it\u0027s not clear how much time would need to be added to each, so it might be better to just fix whenever it\u0027s clear a test requires a longer timeout.",
      "parentUuid": "7790b200_969e1077",
      "range": {
        "startLine": 19,
        "startChar": 49,
        "endLine": 19,
        "endChar": 65
      },
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e80c7093_e61aaa7a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-11-06T10:03:11Z",
      "side": 1,
      "message": "Not sure if that is the right way to fix this, changing shared code should not break tests.",
      "parentUuid": "69d1cf81_e01edae4",
      "range": {
        "startLine": 19,
        "startChar": 49,
        "endLine": 19,
        "endChar": 65
      },
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "612152b9_6e223cbb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-11-10T02:57:09Z",
      "side": 1,
      "message": "It wouldn\u0027t break tests, it would just change the error that is shown.",
      "parentUuid": "e80c7093_e61aaa7a",
      "range": {
        "startLine": 19,
        "startChar": 49,
        "endLine": 19,
        "endChar": 65
      },
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72abccaf_d6508925",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-11-05T02:00:44Z",
      "side": 1,
      "message": "Thanks for reviewing!",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "539e7f50_ac4516e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-11-05T02:49:39Z",
      "side": 1,
      "message": "Hi David, I noted in https://crbug.com/1143647#c16 and https://crbug.com/1143647#c17 that the patch did not work on my local eve-arc-r DUT.  Also that I found a suspicious error in messages log within ARC that should be ruled out.\n\nPlease help take a look before deciding whether to submit current CL.  Thanks!",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db0a15fe_068156a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-11-05T03:40:34Z",
      "side": 1,
      "message": "Thanks for checking Alan! I guess we could still submit this CL as it shouldn\u0027t affect general test functioning, and might still reduce flakiness.",
      "parentUuid": "539e7f50_ac4516e7",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "303af2f2_b9977f85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-11-05T04:11:14Z",
      "side": 1,
      "message": "SG.",
      "parentUuid": "db0a15fe_068156a4",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0180ea20_5fa7d41b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-11-05T04:27:42Z",
      "side": 1,
      "message": "One change request if the 300 seconds number is not back by data.  arc.AppLoadingPerf.vm WaitUntilIdle() error is still under investigation (https://crbug.com/1143647#c18) and it is still failing due to high CPU utilization after 300 seconds.  \n\nIf we change the timeout to match the timeout of the test itself, the stainless error will change to the test context timing out.  Since the CPU utilization in this case has not gone down and there is still a wait for CPU idle failure, I prefer not to mask that error.  \n\nCan we change to doubling (or less than double) the timeout to max of 240 seconds?  \n\nhttps://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/arc/app_loading_perf.go;rcl\u003d016f5347777ca29a41f18d1f74620257f6a65fe3;l\u003d286",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4ed9d2d_50641977",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-11-05T04:33:15Z",
      "side": 1,
      "message": "And changing the test context timeout to be greater than 300 seconds doesn\u0027t make sense in this case because it won\u0027t fix the actual issue which is TBD.  WDYT?",
      "parentUuid": "0180ea20_5fa7d41b",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "242bd99c_f32e12b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-11-05T04:43:14Z",
      "side": 1,
      "message": "The value of 300s is chosen arbitrarily but I don\u0027t think adapting the timeout to suite one of the many tests that use this function makes much sense.\n\nIdeally every test that uses this function should do something like\n  Timeout: cpu.IdleTimeout + testRunTime",
      "parentUuid": "f4ed9d2d_50641977",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a231d3b8_77e61b3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-11-05T05:00:43Z",
      "side": 1,
      "message": "Agree.  But changing the test context timeout by adding cpu.IdleTimeout may not work either?  For auth_perf.go below, the 90 second context is based on user optin timing requirement.  Adding cpu.IdleTimeout (which can change over time outside the control of the tast-test) may inflate the test context and bypass user requirement? \n\nhttps://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/arc/auth_perf.go;rcl\u003d6ac6d041a4d20ba6db9192232e22f2cb365366ba;l\u003d292\n\nI tested 200 seconds for arc.AppLoadingPerf.vm and it will still fail at cpu.WaitUntilIdle() with the expected error message (context deadline exceeded; last error follows: CPU not idle: got 44.4%; want \u003c 20.0%).",
      "parentUuid": "242bd99c_f32e12b2",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4299064a_46728b8a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-11-05T05:23:27Z",
      "side": 1,
      "message": "Some other thoughts: \n\nIn this case arc.AppLoadingPerf.vm is failing for high CPU utilization while waiting for Idle.  But the test itself is not `flaky` since the failure is very repeatable after M88-13574.0.0 on eve-arc-r, so there is likely a real user issue concern after ARCVM boot keeping the CPU utilization high (http://b/172519824).  \n\nSeeing the `CPU not idle` message and not masking it (arbitrarily increasing idle timeout) is more helpful here than just generic a tast \"context deadline exceeded\" error since it gives more context on the actual product issue which the test is finding (e.g. some process is keeping %CPU high).  \n\nIt\u0027s certainly a different story if the test itself is flaky. Are there such cases where the error is `CPU not idle` and the fault is the test and not that we are uncovering a real issue with the product being tested?  For those cases, I suggest fixing the flaky test.",
      "parentUuid": "a231d3b8_77e61b3b",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3643a657_5400003b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1414348
      },
      "writtenOn": "2020-11-05T20:49:16Z",
      "side": 1,
      "message": "Confirmed via revert on suspect CL for arc-adbd error (http://b/172519824) fixes the high CPU utilization errors in arc.AppLoadingPerf.vm. \n\nIn this case, cpu.WaitUntilIdle() is doing its job by helping to find issues where rogue processes are keeping %CPU high.  Again, changing the timeout to be arbitrarily high will mask the high CPU utilization error on tasts and hiding real bugs that can affect users. The cpu package is working as expected and flaky tests should be fixed instead.\n\nI suggest we abandon this CL don\u0027t make any further arbitrary changes to cpu.IdleTimeout unless there is a good reason to.",
      "parentUuid": "4299064a_46728b8a",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98d3e087_ebbd7e83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-11-06T02:37:24Z",
      "side": 1,
      "message": "There has been more flakiness in general related to cpu.WaitUntilIdle(), so giving a bit more time to wait for the CPU to stabilize on ARCVM wouldn\u0027t be a bad thing. The error would still be \"CPU not idle: got 44.4%; want \u003c 20.0%\", but might be temporary masked with a context timeout error until tests increase their runtime. This CL might still be useful to increase performance test resilience while ARCVM is being developed.\n\nstevensd@: What do you think?",
      "parentUuid": "3643a657_5400003b",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6153a60_ba98fff1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2020-11-06T03:56:03Z",
      "side": 1,
      "message": "To respond to what Alan said, increasing the timeout wouldn\u0027t mask rogue processes keeping the utilization high, as they\u0027d still cause WaitUntilIdle to fail.\n\nI\u0027m not opposed to increasing the timeout. However, I do think Alan raises a good point that increasing the deadline here would cause problems with the test context timing out. There definitely are occasional flakes due to \"CPU not idle\", but I don\u0027t think they\u0027re common enough that it actually causes problem with our metrics. And since the error message is clear, the test failures are easy to just ignore. I think if we want to increase the timeout here, we do need to add something like the cpu.IdleTimeout you mentioned earlier to prevent introducing tests with vague failure messages.",
      "parentUuid": "98d3e087_ebbd7e83",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75ff0d5c_29618695",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-11-10T02:57:09Z",
      "side": 1,
      "message": "Alright, thanks for the feedback! Let\u0027s keep it at 2min for now, and we can still expand it later if we want.",
      "parentUuid": "f6153a60_ba98fff1",
      "revId": "e4e15c7f527836193f697c14dd7c561879562b1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}