{
  "comments": [
    {
      "key": {
        "uuid": "91fdb91c_aee43fc3",
        "filename": "src/chromiumos/tast/local/assistant/assistant.go",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2019-12-30T02:02:46Z",
      "side": 1,
      "message": "nit: await here too?",
      "range": {
        "startLine": 86,
        "startChar": 5,
        "endLine": 86,
        "endChar": 65
      },
      "revId": "9d0e0af9f0fb2e7c7c483039fc6301d5a3d024f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "333368ed_390a3325",
        "filename": "src/chromiumos/tast/local/assistant/assistant.go",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-12-30T20:09:34Z",
      "side": 1,
      "message": "Do we need to wait for it if we intend to ignore the returned results?",
      "parentUuid": "91fdb91c_aee43fc3",
      "range": {
        "startLine": 86,
        "startChar": 5,
        "endLine": 86,
        "endChar": 65
      },
      "revId": "9d0e0af9f0fb2e7c7c483039fc6301d5a3d024f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7ef5d27_aa7c813b",
        "filename": "src/chromiumos/tast/local/assistant/assistant.go",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-01-06T23:01:53Z",
      "side": 1,
      "message": "I\u0027m not sure what\u0027s the best; await means that this ToggleUIWithHotkey will wait the key-release of assistant key to be processed by the browser process and generally I am guessing that is better.\n\nBut if not waiting for the key-release makes sense, I\u0027m fine.\n\n\nJust FYI but the launcher-key code is doing like not waiting for the key-press and waiting for the key-release.\nhttps://chromium.googlesource.com/chromiumos/platform/tast-tests.git/+/refs/heads/master/src/chromiumos/tast/local/chrome/ash/launcher.go#55\n\n(this is because the ordering of autotestPrivate is sequential; this is effectively doing \u0027key-press, then key-release, and then wait for the key-release finishes).",
      "parentUuid": "333368ed_390a3325",
      "range": {
        "startLine": 86,
        "startChar": 5,
        "endLine": 86,
        "endChar": 65
      },
      "revId": "9d0e0af9f0fb2e7c7c483039fc6301d5a3d024f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5bc9bb1_95062cfc",
        "filename": "src/chromiumos/tast/local/assistant/assistant.go",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2020-01-28T20:53:53Z",
      "side": 1,
      "message": "Thanks so much for the information Mukai!\n\nAs the release event of Assistant key is not registered as a valid accelerator, it seems like activateAccelerator() will only store it in the accelerator history and then return an error. So from this prospective, it kind of makes some sense to me that we don\u0027t need to wait for the async call to be finished as we already know there will be no further processing of the key event but just update the history, which should not be an expensive step. Also this ToggleUIWithHotkey should always be called followed by a ash::WaitForLauncherState, which help implicitly waiting for the key-release to finish if the autotest api calls are sequential.\n\nBut I agree in general it\u0027s safer to wait for the async in the same function. It seems like tast.promisify can\u0027t handle the case when we want to ignore an error response. So I was thinking something like:\n\nawait new Promise((resolve, reject) \u003d\u003e {\n            chrome.autotestPrivate.activateAccelerator(accel, ()\u003d\u003e {\n              resolve();\n            });\n      });\n\nDo you know a better way of doing this? Thanks!",
      "parentUuid": "c7ef5d27_aa7c813b",
      "range": {
        "startLine": 86,
        "startChar": 5,
        "endLine": 86,
        "endChar": 65
      },
      "revId": "9d0e0af9f0fb2e7c7c483039fc6301d5a3d024f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "241f1179_633135d0",
        "filename": "src/chromiumos/tast/local/assistant/assistant.go",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-01-29T02:03:55Z",
      "side": 1,
      "message": "ah, I didn\u0027t notice the chance of failures because of \u0027trigger-on-keypress\u0027 vs \u0027trigger-on-keyrelease\u0027. Then the current code makes sense to me. Thanks!\n\n(just fyi, you could deal with the case through the catch method, as `await tast.promisify(chrome.autotestPrivate.activateAccelerator)(accel).catch(()\u003d\u003e{})`, though I\u0027m not so sure it\u0027s worth doing so).",
      "parentUuid": "e5bc9bb1_95062cfc",
      "range": {
        "startLine": 86,
        "startChar": 5,
        "endLine": 86,
        "endChar": 65
      },
      "revId": "9d0e0af9f0fb2e7c7c483039fc6301d5a3d024f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fbe16f6_928261ac",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_embedded_ui_open_and_close_animation_perf.go",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2019-12-30T02:02:46Z",
      "side": 1,
      "message": "nit: recently I\u0027ve added a new mechanism for this pattern, maybe it would be better to use that.\nSee: https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/1977154",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 79,
        "endChar": 2
      },
      "revId": "9d0e0af9f0fb2e7c7c483039fc6301d5a3d024f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03494b69_811339c6",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_embedded_ui_open_and_close_animation_perf.go",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-12-30T20:09:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fbe16f6_928261ac",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 79,
        "endChar": 2
      },
      "revId": "9d0e0af9f0fb2e7c7c483039fc6301d5a3d024f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}