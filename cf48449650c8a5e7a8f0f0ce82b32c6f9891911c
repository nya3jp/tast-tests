{
  "comments": [
    {
      "key": {
        "uuid": "e91c8d17_5e9e51eb",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "nit:\nsince these constants seems to be used by a single function, it is better to define them closer to where they are used, and not as global constants.",
      "range": {
        "startLine": 31,
        "startChar": 1,
        "endLine": 38,
        "endChar": 31
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39ce6f95_7e6490b2",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "\"has a certain size\" perhaps ?",
      "range": {
        "startLine": 41,
        "startChar": 66,
        "endLine": 41,
        "endChar": 87
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e33aca3d_9d37fc47",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "\"wmSizeTestFunc\" perhaps?",
      "range": {
        "startLine": 41,
        "startChar": 3,
        "endLine": 41,
        "endChar": 18
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f41f01b1_eec391c8",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "nit:\nIf this test does what I think it does, 2 minutes seems good enough I guess.",
      "range": {
        "startLine": 53,
        "startChar": 15,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d591d2c_8f13b8e1",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "it seems that this is not being used by the subtets",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 72,
        "endChar": 16
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf7d7ca5_e257d480",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "nit:\nconsider calling the Ash version (unless you really do it from the Android side). E.g:\n\nash.SetARCAppWindowState(...)\n\nsee: https://godoc.org/chromium.googlesource.com/chromiumos/platform/tast-tests.git/src/chromiumos/tast/local/chrome/ash#SetARCAppWindowState",
      "range": {
        "startLine": 140,
        "startChar": 3,
        "endLine": 142,
        "endChar": 4
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb4950ee_caeab175",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "it is safer (and less flaky) to replace all \"act.WaitForIdle\" (the ones after act.SetwindowState()) with:\n\nash.WaitForARCAppWindowState(ctx, tconn, act.PackageName(), ash.WindowStateMaximized)\n\nSee: https://godoc.org/chromium.googlesource.com/chromiumos/platform/tast-tests.git/src/chromiumos/tast/local/chrome/ash#WaitForARCAppWindowState",
      "range": {
        "startLine": 144,
        "startChar": 3,
        "endLine": 146,
        "endChar": 4
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "886dd8bc_bb6d9dab",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "nit: (here and in the rest)\n\nwhen reporting a error msg that mentions that a value is out of range (or similar), it is recommended to use the \"got %f, want %f\" pattern. Also consider reporting the width as well.\ne.g:\n\n\"window width outside error margin: got %f%% (%dpx); want \u003c\u003d %f%% (%dpx)\", ....)",
      "range": {
        "startLine": 215,
        "startChar": 24,
        "endLine": 215,
        "endChar": 91
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e16ca52c_b7deeaa9",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "nit:\nwhen the return value is not obvious, consider using named variables. e.g:\n\n(width, height int, bounds arc.Rect, err, error)",
      "range": {
        "startLine": 239,
        "startChar": 80,
        "endLine": 239,
        "endChar": 105
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f284fbe_b35dd3aa",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "nit:\nyou can do:\n\n\"return compareWindowState(ctx, act, arc.WindowStateMaximized)\"\n\nAnd since this is a one-liner, you can inline it.",
      "range": {
        "startLine": 259,
        "startChar": 1,
        "endLine": 259,
        "endChar": 11
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fea0f6c_79e8c5d3",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 269,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "nit:\nsince they are of the same type, you can do it: \"bounds, workArea arc.Rect\"",
      "range": {
        "startLine": 269,
        "startChar": 19,
        "endLine": 269,
        "endChar": 53
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09207b9b_7bce2bb8",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "nit: to avoid losing some precision, you can \"float64\" it first, and then div-by-2. e.g:\n\nmath.Abs(float(bounds.Left) + float(bounds.Width) / 2)",
      "range": {
        "startLine": 270,
        "startChar": 43,
        "endLine": 270,
        "endChar": 55
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8e6015b_7fd7a8d2",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/window_default_bounds.go",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-10-14T18:39:54Z",
      "side": 1,
      "message": "see above (here and in the rest):\nconsider using the \"got , want\" pattern",
      "range": {
        "startLine": 272,
        "startChar": 59,
        "endLine": 272,
        "endChar": 70
      },
      "revId": "cf48449650c8a5e7a8f0f0ce82b32c6f9891911c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}