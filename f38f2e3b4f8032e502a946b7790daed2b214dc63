{
  "comments": [
    {
      "key": {
        "uuid": "05910ddb_5fe10be9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2019-10-24T17:10:52Z",
      "side": 1,
      "message": "We should probably clarify what this means. \nAs it stand nows, it could give the impression that we are actually checking against some regulatory\nstandard, whereas we are only sanity-checking the values (e.g. tx power \u003c 6 dBm is probably too low, even\nfor SAR-constrained tablets). Also why I am uncomfortable with the phrasing \"restrictive set of requirements\". \n\nIts probably good to put your pseudo-code/algorithm in the commit message itself, since we expect \nseveral non-SWEs to be looking at this.",
      "range": {
        "startLine": 13,
        "startChar": 31,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "f38f2e3b4f8032e502a946b7790daed2b214dc63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1bb75f4_c1f765d2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2019-10-24T17:10:52Z",
      "side": 1,
      "message": "\"Only Intel devices with Intel WiFi use ACPI to store the SAR table (which is read by the driver), and hence this test is run on devices with Intel WiFi.\"",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 74
      },
      "revId": "f38f2e3b4f8032e502a946b7790daed2b214dc63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e789a5f0_a891d104",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_sar_table.go",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2019-10-25T02:53:55Z",
      "side": 1,
      "message": "I\u0027ve pinged this CL and would like to see what others think of moving stuff like this function there:\nhttps://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/1754670\n\nThis isn\u0027t the only test that will want to know whether it is running on Intel WiFi hardware or not.",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f38f2e3b4f8032e502a946b7790daed2b214dc63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4bfac40_1ddd0c82",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_sar_table.go",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2019-10-25T02:25:54Z",
      "side": 1,
      "message": "limitCompliance looks like an enum to me? \nIt resembles this example from the link: https://yourbasic.org/golang/iota/\n\nconst (\n    C1 \u003d iota + 1\n    C2\n    C3\n)\nfmt.Println(C1, C2, C3) // \"1 2 3\"",
      "range": {
        "startLine": 118,
        "startChar": 40,
        "endLine": 118,
        "endChar": 71
      },
      "revId": "f38f2e3b4f8032e502a946b7790daed2b214dc63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9efa58c2_52c7085b",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_sar_table.go",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2019-10-25T02:53:55Z",
      "side": 1,
      "message": "Repeating what someone  (Trent?) commented in an earlier patch-set: I still see potential to factor this out into a function that returns void but can fail the test inside itself. so something like ValidateTable(decodedSSDT, key string) which adds the limit-checking in the common code and calls into getValuesFromASLWithKey.\nYou probably already implied this change yourself when you said you were going to combine the tablet/clamshell logic.",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 252,
        "endChar": 1
      },
      "revId": "f38f2e3b4f8032e502a946b7790daed2b214dc63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}