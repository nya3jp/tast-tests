{
  "comments": [
    {
      "key": {
        "uuid": "01200397_cfa451a3",
        "filename": "src/chromiumos/tast/common/wifi/security/eap/config.go",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-06-04T19:42:38Z",
      "side": 1,
      "message": "this needs a better explanation than just \"we\u0027re doing what Autotest did.\" Are we starting at a high number because some other entity owns lower numbers? What\u0027s the contract here? Is someone else clearing out object IDs before we get to the WiFi tests? If not, what happens if I run 2 tests in a row in separate \u0027tast\u0027 invocations? They\u0027ll both use 8800 -- is that good or bad?\n\nI see there\u0027s a previous comment thread about what the legal values are. Those aren\u0027t documented anywhere, AFAICT.",
      "range": {
        "startLine": 26,
        "startChar": 16,
        "endLine": 26,
        "endChar": 20
      },
      "revId": "992e8b3005dbd50c1ac4c73a8c827c019ea5cca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a858e55_447119b8",
        "filename": "src/chromiumos/tast/common/wifi/security/eap/config.go",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-06-05T09:22:27Z",
      "side": 1,
      "message": "I ask zuan@ (the author of base CL) about this and he said, every call to NewTPMStore will create a blank keystore and all ids are available -- so \u00278800\u0027 is probably someone\u0027s lucky number.\n\nFor the last question, I guess it\u0027s fine to use the same id in the consequent \u0027tast\u0027, since ResetTPMStore do remove the vault, and NewTPMStore even remove it again before it create a new one.",
      "parentUuid": "01200397_cfa451a3",
      "range": {
        "startLine": 26,
        "startChar": 16,
        "endLine": 26,
        "endChar": 20
      },
      "revId": "992e8b3005dbd50c1ac4c73a8c827c019ea5cca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}