{
  "comments": [
    {
      "key": {
        "uuid": "a5310dea_f59e3d37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2020-08-12T19:18:48Z",
      "side": 1,
      "message": "LGTM",
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d52ea2be_339a3194",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 167,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-13T17:17:03Z",
      "side": 1,
      "message": "nit: Can we make this a standalone function with comments on each of the inputs? I think that will make it more readable than having the comment in the function.",
      "range": {
        "startLine": 167,
        "startChar": 1,
        "endLine": 167,
        "endChar": 93
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09078fb4_5740e8d7",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 167,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-08-13T19:24:44Z",
      "side": 1,
      "message": "To make this a standalone function, getProperty at L53 also have to be standalone, but getProperty uses ctx, s, and a.\n\nI could add\n\nfunc getProperty(ctx context.Context, s *testing.State, a *arc.ARC, propertyName string) string {\n  ..\n}\n\nand then\n\nfunc checkPropertiesMatch(ctx context.Context, s *testing.State, a *arc.ARC, partitions []string, allProperties map[string]bool, referenceProperty, prefixToReplace, replacementFormat string) {\n ..\n}\n\nbut this seemed too verbose. Is there a better way? (I\u0027m new to Tast/Go.)",
      "parentUuid": "d52ea2be_339a3194",
      "range": {
        "startLine": 167,
        "startChar": 1,
        "endLine": 167,
        "endChar": 93
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c66dd69_18713fdf",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 167,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-13T23:51:00Z",
      "side": 1,
      "message": "The simplest option is probably just to pass in the getProperty function to checkPropertiesMatch function.\n\n func checkPropertiesMatch(getProperty func(string) string, referenceProperty, prefixToReplace, \n replacementFormat string) { ... }\n\nOtherwise, you are correct checkPropertiesMatch would likely have a lot of parameters. This is decently common in Tast/Go.\nOther options include, making a struct that contains the core parameters so that you can just pass the struct around ex:\n\n func getProperty(someStruct SomeStruct, propName string) string { ... }\n func checkPropertiesMatch(someStruct SomeStruct, partitions []string, allProperties \n map[string]bool, referenceProperty, prefixToReplace, replacementFormat string) { ... }\n\nor creating a function that takes in some of the arguments and returns a functions that only needs a subset of the arguments. ex:\n\n func createPropertiesMatcher(ctx context.Context, s *testing.State, a *arc.ARC, partitions \n []string, partitions []string, allProperties map[string]bool, referenceProperty, \n prefixToReplace, replacementFormat string) {\n   return func(referenceProperty, prefixToReplace, replacementFormat string) {\n     ...\n   }\n }\n\nAlso, a lot of the time instead of passing s into a function, errors are returned from a function and s is used outside of the function to do something with the error.\n\nDon\u0027t feel like you have to change this, but if any of the above suggests sound good, go for it.",
      "parentUuid": "09078fb4_5740e8d7",
      "range": {
        "startLine": 167,
        "startChar": 1,
        "endLine": 167,
        "endChar": 93
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ce7e0b5_00d7813a",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-13T17:17:03Z",
      "side": 1,
      "message": "nit: this can be moved up a line out of the for loop",
      "range": {
        "startLine": 169,
        "startChar": 3,
        "endLine": 169,
        "endChar": 51
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80af316d_0961bf1e",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-08-13T19:24:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ce7e0b5_00d7813a",
      "range": {
        "startLine": 169,
        "startChar": 3,
        "endLine": 169,
        "endChar": 51
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb7ec4ec_ef858d55",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-13T17:17:03Z",
      "side": 1,
      "message": "nit: You may want this to be Errorf so that the test can print out all properties that fail instead of just the first one.",
      "range": {
        "startLine": 178,
        "startChar": 6,
        "endLine": 178,
        "endChar": 12
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cb1e255_daa9431d",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-08-13T19:24:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb7ec4ec_ef858d55",
      "range": {
        "startLine": 178,
        "startChar": 6,
        "endLine": 178,
        "endChar": 12
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adee4870_07b42831",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 189,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-13T17:17:03Z",
      "side": 1,
      "message": "nit: You can merge these two lines",
      "range": {
        "startLine": 188,
        "startChar": 2,
        "endLine": 189,
        "endChar": 42
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "156f7342_15679e60",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 189,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-08-13T19:24:44Z",
      "side": 1,
      "message": "|prefix| is used at L191 so.. can I keep this as-is?",
      "parentUuid": "adee4870_07b42831",
      "range": {
        "startLine": 188,
        "startChar": 2,
        "endLine": 189,
        "endChar": 42
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36c540b7_6b4b3c8a",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 189,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-13T23:51:00Z",
      "side": 1,
      "message": "Since prefix is just reassigned and the same value isn\u0027t needed, I was assuming you could do:\n\n if prefix :\u003d \"ro.biuld.\"; strings.HasPrefix(property, prefix){\n   ...\n } else if prefix :\u003d \"ro.product.\"; strings.HasPrefix(property, prefix){\n   ...\n }\n\nIf that doesn\u0027t work, feel free to leave it as is.",
      "parentUuid": "156f7342_15679e60",
      "range": {
        "startLine": 188,
        "startChar": 2,
        "endLine": 189,
        "endChar": 42
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4eb262e8_75427b85",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-13T17:17:03Z",
      "side": 1,
      "message": "nit: You can merge these lines and make it an else if",
      "range": {
        "startLine": 192,
        "startChar": 2,
        "endLine": 194,
        "endChar": 42
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b557592c_c38f5bd4",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-08-13T19:24:44Z",
      "side": 1,
      "message": "Same, prefix is used below. Added else for now.",
      "parentUuid": "4eb262e8_75427b85",
      "range": {
        "startLine": 192,
        "startChar": 2,
        "endLine": 194,
        "endChar": 42
      },
      "revId": "df2e682bc8f6c11805a2635ada0031c22b750c4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}