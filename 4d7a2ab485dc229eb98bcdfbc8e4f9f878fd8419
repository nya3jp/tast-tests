{
  "comments": [
    {
      "key": {
        "uuid": "dc9c03fb_3d2cdc8a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1285903
      },
      "writtenOn": "2020-09-28T14:41:14Z",
      "side": 1,
      "message": "A quick heads-up here.\n\nLooks like this has an unfortunate consequence of taking longer time out of tests.\nThe default timeout for a local Tast test is 2 minutes. If we fail to wait for CPU to become idle, this takes all the time a local test with default timeout has.\n\nYou\u0027ll a clear \"failure transition\" in some tests, e.g., this one: https://tastboard.corp.google.com/test/camera.HAL3JDA",
      "revId": "4d7a2ab485dc229eb98bcdfbc8e4f9f878fd8419",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e5db362_34de148f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1285903
      },
      "writtenOn": "2020-09-28T14:43:38Z",
      "side": 1,
      "message": "I personally think the better, more sensical long term solution is to make the wait-for-idle process a precondition, rather than consuming the context of the main test.\n\nWhat do you think?",
      "parentUuid": "dc9c03fb_3d2cdc8a",
      "revId": "4d7a2ab485dc229eb98bcdfbc8e4f9f878fd8419",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "895baae4_c5b618a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2020-09-30T01:52:48Z",
      "side": 1,
      "message": "Making it a precondition could be useful. One possible concern is that it\u0027s possible some tests rely on WaitUntilIdle to wait for setup work done in the test body (although the tests I work with don\u0027t).",
      "parentUuid": "6e5db362_34de148f",
      "revId": "4d7a2ab485dc229eb98bcdfbc8e4f9f878fd8419",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e080eb29_de139e3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-09-30T02:56:39Z",
      "side": 1,
      "message": "I\u0027m not sure if a precondition would work here. If preconditions are shared between tests, CPU usage might still be high from a previous test run on the same device. Having a separate WaitUntilIdle function also gives test writers more control. This is e.g. useful in encoder tests to wait for the CPU to become Idle only after extracting the input webm video to create the raw YUV input file.",
      "parentUuid": "895baae4_c5b618a2",
      "revId": "4d7a2ab485dc229eb98bcdfbc8e4f9f878fd8419",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9f72dc5_12e85d10",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2020-09-30T03:07:05Z",
      "side": 1,
      "message": "What do you mean about preconditions being shared between tests? My impression was that although preconditions are allowed to reuse state from the previous test (e.g. ARC++ session), they are still supposed to guarantee that the appropriate preconditions are met. So WaitUntilIdle as a precondition would wait on any leftover work from the previous test run.\n\nIs extracting the raw YUV file synchronous or asynchronous?",
      "parentUuid": "e080eb29_de139e3e",
      "revId": "4d7a2ab485dc229eb98bcdfbc8e4f9f878fd8419",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ad3be76_95472f0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-09-30T04:50:36Z",
      "side": 1,
      "message": "From what I understand preconditions were introduced to allow state to be shared between tests, e.g. running multiple tests that require ARC to be booted would only result in ARC being set up once. So my fear is that changing WaitUntilIdle to a precondition would cause WaitUntilIdle to only be called once for multiple tests.\n\nThe extraction of the YUV file is synchronous.",
      "parentUuid": "c9f72dc5_12e85d10",
      "revId": "4d7a2ab485dc229eb98bcdfbc8e4f9f878fd8419",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39659488_c37eb3ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2020-09-30T05:11:33Z",
      "side": 1,
      "message": "Preconditions were added to reuse state between tests, but they still need to ensure that the state from the previous test is actually valid for the current test. For example, if the arc precondition finds that it can\u0027t reuse the existing session here [1], then it needs to reinitialize everything (p.checkUsable is actually broken on ARCVM, which is why ARCVM sessions never get reused).\n\nIf the extraction of the YUV file is synchronous, then there shouldn\u0027t be any extra CPU usage once the extraction completes.\n\n[1] https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/arc/pre.go;rcl\u003d55de04c8237747cf48fa0a81c44d3e6e7e7ebc4f;l\u003d142",
      "parentUuid": "6ad3be76_95472f0d",
      "revId": "4d7a2ab485dc229eb98bcdfbc8e4f9f878fd8419",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85dfd7ff_4e0be411",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1285903
      },
      "writtenOn": "2020-09-30T06:33:21Z",
      "side": 1,
      "message": "Dumb question: Can we make WaitUntilIdle conditionally reusable by always checking the current CPU usage?",
      "parentUuid": "39659488_c37eb3ac",
      "revId": "4d7a2ab485dc229eb98bcdfbc8e4f9f878fd8419",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5c6f4ea_77c7b24b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2020-09-30T07:20:55Z",
      "side": 1,
      "message": "I\u0027m not sure I understand what you\u0027re asking. What do you mean by conditionally reusable?",
      "parentUuid": "85dfd7ff_4e0be411",
      "revId": "4d7a2ab485dc229eb98bcdfbc8e4f9f878fd8419",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}