{
  "comments": [
    {
      "key": {
        "uuid": "4dc6b342_7b728128",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-07T23:04:59Z",
      "side": 1,
      "message": "nit: mind also documenting gtestDir?\n\n  // gtestDir should be the outDir arg passed to an earlier call to Run or RunAsync.",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c857699b_edc2f66c",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-02-08T10:56:30Z",
      "side": 1,
      "message": "Thanks. added at this comment.\nSince gtestDir is not equal to outDir but a directory under it, I changed the sentence little bit.",
      "parentUuid": "4dc6b342_7b728128",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff7a94a9_2169b71e",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-07T23:04:59Z",
      "side": 1,
      "message": "it\u0027s a huge nit, but i\u0027m wondering if it\u0027d be clearer to make the argument order (ctx, exec, args, outDir). i typically try to list arguments in order of decreasing importance (with the caveat that ctx always comes first in go functions), and the command that\u0027s being run (and its args) feel more important to me than where we tell gtest to write its logs. feel free to disregard this if you disagree, though.",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7791f2e7_523b3cf5",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-02-08T10:56:30Z",
      "side": 1,
      "message": "Your suggested order makes more sense. Thanks.",
      "parentUuid": "ff7a94a9_2169b71e",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5fbc84d_5106e66c",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-07T23:04:59Z",
      "side": 1,
      "message": "nit: i think that most os functions return the path name, so you can probably just return err directly here instead of wrapping it (or should we always advise wrapping to get better stack traces, nya@?)",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dacefb7f_f125f5e3",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-02-08T02:25:22Z",
      "side": 1,
      "message": "Yes, os.Mkdir will return an error with path name. I think we can return err directly in this case.",
      "parentUuid": "e5fbc84d_5106e66c",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75d0ccba_678b8168",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-02-08T10:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dacefb7f_f125f5e3",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7896d7f_a55d0f56",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-07T23:04:59Z",
      "side": 1,
      "message": "nit: same comment applies here",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0576155b_713ae20a",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-02-08T10:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7896d7f_a55d0f56",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ae78e39_3cfca115",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-02-08T02:25:22Z",
      "side": 1,
      "message": "This will clear all unlisted envs, such as famous $PATH, which can cause unexpected behavior of the new process.\n\nI recommend:\n\n env :\u003d append(os.Environ(), fmt.Sprintf(...))\n\nNote that latter entries take precedence for duplicated entries.\n\nhttps://godoc.org/os/exec#Cmd",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 64
      },
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeffe4f5_3710e964",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-02-08T10:56:30Z",
      "side": 1,
      "message": "We cannot use os.Environ() here. So, I wrote the reason as a result.\n\nActually, the current implementation doesn\u0027t use os.Environ() and is working well. So, I think it\u0027s okay to clear envs for now.\n(Though the current implementation is trying to pass os.Environ(), but it\u0027s ignored due to lack of -E option for sudo)",
      "parentUuid": "7ae78e39_3cfca115",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 64
      },
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5ae749_805a2684",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-07T23:04:59Z",
      "side": 1,
      "message": "nit: since i think that uid and username need to match, mind defining them both at the top of this file instead to make the relationship more clear?\n\n  const (\n      username \u003d \"chronos\" // user used to run test process\n      uid \u003d 1000 // username\u0027s UID\n  )",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67874898_775faf51",
        "filename": "src/chromiumos/tast/local/chrome/bintest/bintest.go",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-02-08T10:56:30Z",
      "side": 1,
      "message": "Done.\nI added it above the definition of Run",
      "parentUuid": "ff5ae749_805a2684",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bce9fec_4d08193a",
        "filename": "src/chromiumos/tast/local/chrome/bintest/parse.go",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-07T23:04:59Z",
      "side": 1,
      "message": "nit: since i think that this type is only used within extractFailedTests, i\u0027d consider defining it there to make it clear that it\u0027s less important than googleTestCase (in terms of scope).\n\nyou might even be able to make it an anonymous struct:\n\n  res :\u003d struct {\n      TestSuites ...\n  }",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "356cc208_d1d3fd31",
        "filename": "src/chromiumos/tast/local/chrome/bintest/parse.go",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-02-08T10:56:30Z",
      "side": 1,
      "message": "make sense. Thanks!",
      "parentUuid": "5bce9fec_4d08193a",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93c39ba0_94471b47",
        "filename": "src/chromiumos/tast/local/chrome/bintest/parse_test.go",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-07T23:04:59Z",
      "side": 1,
      "message": "nit: please move this to just after the googleTestCase definition in the previous file so the member appears next to the type",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7717c307_89cf9a25",
        "filename": "src/chromiumos/tast/local/chrome/bintest/parse_test.go",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-02-08T10:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93c39ba0_94471b47",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2c8f525_3b8183f4",
        "filename": "src/chromiumos/tast/local/chrome/bintest/parse_test.go",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-02-07T23:04:59Z",
      "side": 1,
      "message": "nit: const data \u003d `{",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7ae327d_99738663",
        "filename": "src/chromiumos/tast/local/chrome/bintest/parse_test.go",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-02-08T10:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2c8f525_3b8183f4",
      "revId": "eac03e766a241141a71434b08e44720f761b4d58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}