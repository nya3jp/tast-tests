{
  "comments": [
    {
      "key": {
        "uuid": "7a9b8d25_2098b952",
        "filename": "src/chromiumos/tast/common/firmware/const.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2020-03-14T00:39:45Z",
      "side": 1,
      "message": "Is there a good reason to have 3 representations of available boot modes in pb, common, and local?  Originally the code just had to deal with pb and local versions.\n\nIt should be possible to factor out the BootMode enum at the pb level and reuse it in fwpb and and boot_mode.CheckBootMode.",
      "revId": "4a26daf7a1045577b625cf08e4f0e7907c6a19d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d97e417_ae4ae0cc",
        "filename": "src/chromiumos/tast/common/firmware/const.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-03-16T13:40:42Z",
      "side": 1,
      "message": "Using proto directly SGTM.",
      "parentUuid": "7a9b8d25_2098b952",
      "revId": "4a26daf7a1045577b625cf08e4f0e7907c6a19d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7328d24_370bfbc7",
        "filename": "src/chromiumos/tast/common/firmware/const.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-03-16T17:48:21Z",
      "side": 1,
      "message": "This CL removes the local BootMode definitions. The only definitions remaining are in pb and common. My rationale is that the .pb.go objects are intended to be used with the RPC server, so it would be useful to have a definition for non-RPC contexts.\n\nBut if using the proto directly is preferred, then that makes this change irrelevant.",
      "parentUuid": "7d97e417_ae4ae0cc",
      "revId": "4a26daf7a1045577b625cf08e4f0e7907c6a19d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b26f4478_dd36cbd6",
        "filename": "src/chromiumos/tast/common/firmware/const.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-03-17T16:18:03Z",
      "side": 1,
      "message": "What would you like to abstract by introducing common package?\nThe all use looks like related to RPC stuff...?\nCould you clarify your intention a bit more details?",
      "parentUuid": "b7328d24_370bfbc7",
      "revId": "4a26daf7a1045577b625cf08e4f0e7907c6a19d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5b8e80c_125348c0",
        "filename": "src/chromiumos/tast/common/firmware/const.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-03-17T22:51:37Z",
      "side": 1,
      "message": "My first intention is to make test code cleaner. It will be common to call CheckBootMode and the upcoming SwitchBootMode RPCs. In Autotest, over 60% of firmware tests call the equivalent of SwitchBootMode. It would be cleaner to call:\n\n    verified, err :\u003d firmware.CheckBootMode(ctx, fwUtils, fwCommon.BootModeDev)\n\nrather than:\n\n    req :\u003d \u0026fwpb.CheckBootModeRequest{BootMode: fwpb.BootMode_BOOT_MODE_DEV}\n    res, err :\u003d fwUtils.CheckBootMode(ctx, req)\n    verified :\u003d res.GetVerified\n\nAs for a non-RPC use case... I thought I had one, but currently I can\u0027t think of any. So, perhaps it\u0027s better to save this discussion until we actually need it.\n\nGenerally speaking, if there were a common, non-RPC use case, would you still recommend using the proto directly as opposed to duplicating the enum?",
      "parentUuid": "b26f4478_dd36cbd6",
      "revId": "4a26daf7a1045577b625cf08e4f0e7907c6a19d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}