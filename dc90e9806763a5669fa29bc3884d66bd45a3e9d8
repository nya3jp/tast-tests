{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "65ee21cf_11781de3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2022-10-07T01:35:50Z",
      "side": 1,
      "message": "please wait for technical team member review before submitting",
      "revId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cf7ddd0_e6449e99",
        "filename": "src/chromiumos/tast/local/bundles/cros/hps/tool.go",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1454332
      },
      "writtenOn": "2022-10-07T04:20:26Z",
      "side": 1,
      "message": "Don\u0027t we want to restart hpsd as well?",
      "revId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3db1379a_08a9ba15",
        "filename": "src/chromiumos/tast/local/bundles/cros/hps/tool.go",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1508123
      },
      "writtenOn": "2022-10-07T04:31:09Z",
      "side": 1,
      "message": "As noted in the comment right above this, binding the kernel driver triggers hpsd to be started due to our udev rule.",
      "parentUuid": "0cf7ddd0_e6449e99",
      "revId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27cfdbcf_ba4dc324",
        "filename": "src/chromiumos/tast/local/bundles/cros/hps/tool.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1454332
      },
      "writtenOn": "2022-10-07T04:20:26Z",
      "side": 1,
      "message": "It will fail if it doesn\u0027t start within 250ms. Is such short timeout deliberate?",
      "revId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58f1587b_c21b74ee",
        "filename": "src/chromiumos/tast/local/bundles/cros/hps/tool.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1508123
      },
      "writtenOn": "2022-10-07T04:31:09Z",
      "side": 1,
      "message": "Good question! It was deliberate yesterday... but now that I look at it with fresh eyes today I am wondering where I got this 250ms from. I think this should be either 0 or more like 1 second. I will double check it and fix it up.",
      "parentUuid": "27cfdbcf_ba4dc324",
      "revId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c46d448_15d8e3c3",
        "filename": "src/chromiumos/tast/local/bundles/cros/hps/tool.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1508123
      },
      "writtenOn": "2022-10-10T03:36:07Z",
      "side": 1,
      "message": "The answer to this specific question is that it\u0027s nacking during stage1 signature verification which is normally 850ms, but because WP is off it nacks for only a very brief amount of time (perhaps \u003c1ms).\n\nHowever while I was fixing up this polling loop and testing this out, I realised that to make this test fully reliable I would need to re-implement all the different polling and delays and error handling that we already have in hpsd. Otherwise this test will never get promoted out of informational.\n\nBut having this hugely complicated pile of logic here, using the hps command to mimic hpsd, isn\u0027t really serving any useful purpose. Particularly since the hps command shares most of its code with hpsd anyway, so we can be pretty confident that if hpsd works then so does hps.\n\nSo I\u0027m going to just abandon this.",
      "parentUuid": "58f1587b_c21b74ee",
      "revId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "dc90e9806763a5669fa29bc3884d66bd45a3e9d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}