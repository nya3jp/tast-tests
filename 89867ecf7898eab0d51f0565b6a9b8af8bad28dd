{
  "comments": [
    {
      "key": {
        "uuid": "d08fa606_cc8a1358",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-05-07T23:08:14Z",
      "side": 1,
      "message": "nit: there\u0027s no need for a single-use constant like this; just inline \"5*time.Second\" on the next line",
      "revId": "89867ecf7898eab0d51f0565b6a9b8af8bad28dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3df2d415_0cb722ad",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 6
      },
      "lineNbr": 55,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-05-07T23:08:14Z",
      "side": 1,
      "message": "but instead of sleeping, is there some sort of lightweight no-op query that you can perform repeatedly to wait for readiness? that will be both faster and less likely to be flaky if initialization sometimes takes longer than 5 seconds. you could add a new waitForAssistant or similar function that calls testing.Poll with a function that calls assistant.SendTextQuery and checks for a nil error.",
      "revId": "89867ecf7898eab0d51f0565b6a9b8af8bad28dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}