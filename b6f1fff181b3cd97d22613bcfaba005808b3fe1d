{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d0bf6c69_d4e7ecb1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-10-19T04:03:07Z",
      "side": 1,
      "message": "Can you split this change into two?\n\n1. Extracting arc.CPUSet test without modifying the test scenario\n2. Enhancing arc.CPUSet to test the ARCVM case.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "b6f1fff181b3cd97d22613bcfaba005808b3fe1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e7ca150_a2cfae97",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-10-16T22:19:33Z",
      "side": 1,
      "message": "Please add Cq-Depend: on the ebuild fix.",
      "revId": "b6f1fff181b3cd97d22613bcfaba005808b3fe1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b19a054_13e950d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1221932
      },
      "writtenOn": "2020-10-02T07:26:16Z",
      "side": 1,
      "message": "PTAL",
      "revId": "b6f1fff181b3cd97d22613bcfaba005808b3fe1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02339a99_c29eb912",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-10-16T22:18:14Z",
      "side": 1,
      "message": "lgtm, thanks!",
      "revId": "b6f1fff181b3cd97d22613bcfaba005808b3fe1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17704f39_ee7c8a62",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/containermount/containermount.go",
        "patchSetId": 2
      },
      "lineNbr": 421,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-10-16T22:18:14Z",
      "side": 1,
      "message": "remove the TODO",
      "revId": "b6f1fff181b3cd97d22613bcfaba005808b3fe1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "728162a8_f0369392",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/cpu_set.go",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-10-19T04:03:07Z",
      "side": 1,
      "message": "This function (and generally PID handling in this test) is tricky because the target PID namespace is different depending on whether it\u0027s ARC++ or ARCVM:\n\n- For ARC++, getRootPID returns PIDs in the Chrome OS PID namespace\n- For ARCVM, getRootPID returns PIDs in the VM\n\nThis means that interpretation of PIDs depends on the value of params.ARCVM. Generally I recommend avoiding this kind of entanglement for readability.\n\n\nInstead you can introduce an abstraction of readCPUSetInfo to handle ARC++/ARCVM difference in a single place. For example:\n\n func newCPUSetReader() func(ctx context.Context, t string) ([]byte, error) {\n   ...\n }",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 93,
        "endChar": 59
      },
      "revId": "b6f1fff181b3cd97d22613bcfaba005808b3fe1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b946d356_6d85f03d",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/cpu_set.go",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-10-19T04:03:07Z",
      "side": 1,
      "message": "shutil.Escape(path)",
      "range": {
        "startLine": 170,
        "startChar": 79,
        "endLine": 170,
        "endChar": 83
      },
      "revId": "b6f1fff181b3cd97d22613bcfaba005808b3fe1d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}