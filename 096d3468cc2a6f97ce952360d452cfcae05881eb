{
  "comments": [
    {
      "key": {
        "uuid": "21d3254b_dfebf462",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-01T10:15:36Z",
      "side": 1,
      "message": "Not sure we should check \"len(packets) !\u003d 0\" here. I guess it is possible that DUT finds a visible service with passive scan and no probe request is sent as a result?",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9fd61e9_2b012534",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-07T07:01:06Z",
      "side": 1,
      "message": "If so, the goal of the test cannot be met. Can we set a long beacon interval on AP, say 1000 TU (10 seconds), so that passive scan does not find a service just before DUT sends out an active scan?",
      "parentUuid": "21d3254b_dfebf462",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae585d71_01cb0741",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-07T08:00:10Z",
      "side": 1,
      "message": "Hmm..., but not quite sure when the very first beacon is sent. Need to look deeper into the related behavior (e.g. how hostapd schedules beacons, how DUT reacts to a beacon of a new service) I\u0027ll update here if I find some more hints.",
      "parentUuid": "b9fd61e9_2b012534",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8ab16d8_30716662",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-02T11:45:27Z",
      "side": 1,
      "message": "For visible network, is \"\" SSID also expected?",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3f2c335_42845eed",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-03T05:39:02Z",
      "side": 1,
      "message": "For visible network, usually we only see the wildcard (i.e. \"\") SSID.",
      "parentUuid": "d8ab16d8_30716662",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d23d513f_c888e4b4",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-07T07:01:06Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b3f2c335_42845eed",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c6efed2_5ccdf798",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 185,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-02T11:45:27Z",
      "side": 1,
      "message": "What\u0027s the intention of the function? From the code itself, it is used to override the return tuple when there\u0027s an error in defer function after return is called. \"collectErr\" is not correct as it only collect error when the original retErr is nil. How about:\n\nmayOverrideReturn :\u003d func(err error) {\n  if err \u003d\u003d nil {\n    return\n  }\n  testing.ContextLog(ctx, \"Error in defer func in connectAndCollectPcap: \", err)\n  if retErr \u003d\u003d nil {\n    ret \u003d nil\n    retConf \u003d nil\n    retErr \u003d err\n  }\n}\n\nAnd defer func can be modified like:\ndefer func(ctx) {\n  mayOverrideReturn(tf.DeconfigAP(ctx, ap))\n}",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5fa3083_0fadb3c3",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 185,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-03T05:39:02Z",
      "side": 1,
      "message": "\"collectFirstErr\" was used for some similar functions, and I think it is common for golang functions to return nil values when err is non-nil so I guess \"collectFirstErr\" this is OK here?\n\nFor the usage in defer, I think the log might be more readable with one more wrap, so probably still worth a few more lines?",
      "parentUuid": "6c6efed2_5ccdf798",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9539a08_292b5474",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 185,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-07T07:01:06Z",
      "side": 1,
      "message": "The name \"collectFirstErr\" looks better.",
      "parentUuid": "f5fa3083_0fadb3c3",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32fd0897_332dbabf",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-02T11:45:27Z",
      "side": 1,
      "message": "Call tf.WifiClient().DeleteEntriesForSSID()?",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad271af1_fdfe6c2e",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/connect_scan.go",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-03T05:39:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32fd0897_332dbabf",
      "revId": "096d3468cc2a6f97ce952360d452cfcae05881eb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}