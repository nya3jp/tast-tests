{
  "comments": [
    {
      "key": {
        "uuid": "bd3711d9_55da4f2c",
        "filename": "src/chromiumos/tast/local/vm/util.go",
        "patchSetId": 4
      },
      "lineNbr": 324,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-26T17:52:47Z",
      "side": 1,
      "message": "Could you add some (even) short message what failed?",
      "range": {
        "startLine": 324,
        "startChar": 32,
        "endLine": 324,
        "endChar": 47
      },
      "revId": "8cb44f7099c884adf5bc36fa3ef440ce16b4d0d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c25138e9_99366001",
        "filename": "src/chromiumos/tast/local/vm/util.go",
        "patchSetId": 4
      },
      "lineNbr": 328,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-26T17:52:47Z",
      "side": 1,
      "message": "vmInstance needs to be stopped in case of error.\n\noptional: BTW, in this CL and in the next CL, vmInstance is mistakenly not stopped.\nHow about just giving up to let caller handle the error, instead, handle stopping the VM in CreateDefaultContainer? I.e., passing the ownership of vmInstance always to CreateDefaultContainer. WDYT?",
      "revId": "8cb44f7099c884adf5bc36fa3ef440ce16b4d0d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}