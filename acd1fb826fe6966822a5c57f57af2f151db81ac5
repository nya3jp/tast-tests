{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3270f129_ed6ce0bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2021-05-11T06:34:23Z",
      "side": 1,
      "message": "Perfect!\n\nPo-Hsien, PTAL?",
      "revId": "acd1fb826fe6966822a5c57f57af2f151db81ac5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4df14f4e_dac5c848",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/drm.go",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2021-05-11T22:30:33Z",
      "side": 1,
      "message": "Note that if err is returned, we could\u0027nt trust the output of the command.\n\nThus, I suggest move the code a little bit to check the error first.\n\nif err :\u003d cmd.Run(...); err !\u003d nil {\n    s.Errorf(...)\n}\n\nf.Seeek(0, 0)\nerrorLine :\u003d getErrorLog(f)\n...",
      "revId": "acd1fb826fe6966822a5c57f57af2f151db81ac5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69ca0b29_e16cf693",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/drm.go",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2021-05-11T22:32:18Z",
      "side": 1,
      "message": "I believe in the case of err !\u003d nil, we should call s.Fatal",
      "parentUuid": "4df14f4e_dac5c848",
      "revId": "acd1fb826fe6966822a5c57f57af2f151db81ac5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "984f247a_d3c8c436",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/drm.go",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2021-05-12T16:28:41Z",
      "side": 1,
      "message": "The test is ending, so s.Fatal makes no difference.\n\nI don\u0027t know what you mean with not trusting the output of the command. The whole point is to parse the output to the logs first and report the very first error and only if there is not to report on silent crashes.\n\nThe code you are suggesting is precisely the code we started from (look to the left) and is not what we want.",
      "parentUuid": "69ca0b29_e16cf693",
      "revId": "acd1fb826fe6966822a5c57f57af2f151db81ac5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80ce184d_45f046fb",
        "filename": "src/chromiumos/tast/local/bundles/cros/graphics/drm.go",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2021-05-12T22:34:50Z",
      "side": 1,
      "message": "if error is not nil, then maybe the command doesn\u0027t even executed properly and the content of the output file might corrupted.\n\nWith patchset 5, it tries to getErrorLog no matter if err is nil or not, which is wrong. \n\nI think the correct way to write is\nif err :\u003d cmd.Run(...); err !\u003d nil {\n    s.Fatalf(...)\n}\nf.Seeek(0, 0)\nif errorLine :\u003d getErrorLog(f); errorLine !\u003d \"\"{\n    s.Error(errorLines)\n}\n\nNote the above is different from the base as it tries to get the ErrorLine from the logs.",
      "parentUuid": "984f247a_d3c8c436",
      "revId": "acd1fb826fe6966822a5c57f57af2f151db81ac5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}