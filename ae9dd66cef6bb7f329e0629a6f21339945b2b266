{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5516e495_1fbee102",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2021-11-25T04:24:18Z",
      "side": 1,
      "message": "Is there some way we can split this CL into smaller CLs? Looks like there are three components to the CL listed in the description, can it be split up via that?",
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bf7dcaa_942b5c92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-11-25T04:49:41Z",
      "side": 1,
      "message": "Introducing new structs (the first two bullet points) is doable and perhaps shortens the diff on setup.go. However, the _big_ changes here (unifying `Start()`, `StartIPPUSB()`, and `StartScanner()` under one function) will still result in a big diff in setup.go.\n\nI\u0027m not sure how granular you want this, like so?\n1. Add all new structs\n2. Add all new boilerplate (copy-pasting existing implementation wherever it\u0027s reused)\n3. Migrate all callers\n4. Remove all old boilerplate\n\nThis will take some time to rewrite and does not solve the core problem of heavy churn in setup.go. I am happy to do it if you feel strongly that it improves reviewability, but please confirm directly if you want to see it exploded in this much detail.",
      "parentUuid": "5516e495_1fbee102",
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c36f290e_4dc6370c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2021-11-25T05:05:08Z",
      "side": 1,
      "message": "Yeah fair enough, imo splitting up the adding, migration, and removing is probably not worth it. Had a bit more of a look and it seems like the pulling out constants could be done in a separate CL. WDYT?\n\nAnyway, I am the shadow reviewer so happy to wait to hear from Oleh about this.",
      "parentUuid": "5bf7dcaa_942b5c92",
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e7ecad2_b3b82dfd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-11-25T05:18:26Z",
      "side": 1,
      "message": "Yeah, performing the constant migration in a separate CL seems much more doable. I\u0027m happy to rework that into its own CL once I\u0027m back in office (unless Oleh opines that a larger-scale rewrite is desirable).",
      "parentUuid": "c36f290e_4dc6370c",
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25c938d7_a1d8f46c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-11-25T14:12:45Z",
      "side": 1,
      "message": "I also would like to see smaller CLs just because it will be much easier to review and you will be able to submit your changes faster. I think in each CL the piece of code you introduce must be used in some test and we should not submit code that we don\u0027t use. So, we should avoid adding all structs in CL \"A\" and use them in CL \"B\".\n\nInstead, for example, you can migrate just Start() function to the new approach and modify it\u0027s callers. In another CL, you will migrate StartIPPUSB() and so on.\n\nWDYT?",
      "parentUuid": "2e7ecad2_b3b82dfd",
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22bc3e63_3629b68c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-11-29T20:06:48Z",
      "side": 1,
      "message": "Okay, I\u0027ll start reworking this into a chain of CLs.",
      "parentUuid": "25c938d7_a1d8f46c",
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dfda7fd_c62a1274",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-11-30T02:03:09Z",
      "side": 1,
      "message": "Reworked into patchset 5.",
      "parentUuid": "22bc3e63_3629b68c",
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edc625b7_3f15d609",
        "filename": "src/chromiumos/tast/local/printing/usbprinter/setup.go",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-11-25T14:12:45Z",
      "side": 1,
      "message": "You should design your library in the way that this really will be required.\n\nPlease take a look on options pattern in Go: https://www.sohamkamani.com/golang/options-pattern/",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 51,
        "endChar": 13
      },
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81605df7_33c58dc4",
        "filename": "src/chromiumos/tast/local/printing/usbprinter/setup.go",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-11-29T20:06:48Z",
      "side": 1,
      "message": "Would it suffice to modify `Start()` to return an error if `Descriptors` is not given? I don\u0027t see clear guidance from the page you linked about how to require a value.\n\nAlso, this appears to describe the builder pattern, which our internal docs appear to discourage: go/go/dev/forjava/builders (though I personally quite like it). Is there a tast / Chromium-OS-specific override?",
      "parentUuid": "edc625b7_3f15d609",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 51,
        "endChar": 13
      },
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb0037ed_17dd85aa",
        "filename": "src/chromiumos/tast/local/printing/usbprinter/setup.go",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-11-29T21:09:38Z",
      "side": 1,
      "message": "Sorry, that link does not have info about required parameters. You can have next Start function:\n```\nfunc Start(ctx context.Context, descriptors string, options Option...) error\n```\n\n\nLooks like that guide is OK about functional options pattern if you handler errors correctly:\ngo/go/dev/forjava/builders#functional-options\n\n\nYou also can have multiple \"public\" constructors are you have right now, but internally use Options structure or functional options pattern.\n\n\nfunctional options pattern heavily used in chrome and uiauto packages, but I am not aware of some guideline about this pattern in Tast.",
      "parentUuid": "81605df7_33c58dc4",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 51,
        "endChar": 13
      },
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65bae829_7b7d812f",
        "filename": "src/chromiumos/tast/local/printing/usbprinter/setup.go",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-11-29T21:10:23Z",
      "side": 1,
      "message": "*constructors AS you have right now",
      "parentUuid": "bb0037ed_17dd85aa",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 51,
        "endChar": 13
      },
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1667dff4_ba19b397",
        "filename": "src/chromiumos/tast/local/printing/usbprinter/setup.go",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-11-30T02:03:09Z",
      "side": 1,
      "message": "Okay, I implemented the functional options pattern in patchset 5. Please correct me if you see anything amiss.",
      "parentUuid": "65bae829_7b7d812f",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 51,
        "endChar": 13
      },
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed642fa9_5fa020cf",
        "filename": "src/chromiumos/tast/local/printing/usbprinter/setup.go",
        "patchSetId": 4
      },
      "lineNbr": 258,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-11-25T14:12:45Z",
      "side": 1,
      "message": "nit: no need to pass context here",
      "range": {
        "startLine": 258,
        "startChar": 22,
        "endLine": 258,
        "endChar": 41
      },
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abd41472_e41930ed",
        "filename": "src/chromiumos/tast/local/printing/usbprinter/setup.go",
        "patchSetId": 4
      },
      "lineNbr": 258,
      "author": {
        "id": 1323140
      },
      "writtenOn": "2021-11-30T02:03:09Z",
      "side": 1,
      "message": "Done in patchset 5.",
      "parentUuid": "ed642fa9_5fa020cf",
      "range": {
        "startLine": 258,
        "startChar": 22,
        "endLine": 258,
        "endChar": 41
      },
      "revId": "ae9dd66cef6bb7f329e0629a6f21339945b2b266",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}