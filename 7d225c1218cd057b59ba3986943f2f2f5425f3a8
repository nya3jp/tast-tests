{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "db027a03_e6f03020",
        "filename": "src/chromiumos/tast/local/memory/crosvm_fincore.go",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-10T17:07:50Z",
      "side": 1,
      "message": "Is the old format version going to be around for a while, or can it eventually be removed?",
      "revId": "7d225c1218cd057b59ba3986943f2f2f5425f3a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "209ea803_ae09ae03",
        "filename": "src/chromiumos/tast/local/memory/crosvm_fincore.go",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-10T17:07:50Z",
      "side": 1,
      "message": "I think this error could be hard to read in Stainless/Tastboard, where it will be shown on a single line. The reader will have to look at `bytes` and figure out why parsing failed themselves.\n\nSeems like it would be best to use errors.Wrapf here to make it easier to understand why parsing failed (assuming json.Unmarshal\u0027s error output contains useful info). There are 2 errors at this point though so it\u0027s a little tricky. For the sake of surfacing the error info, perhaps it would be good to split this into 2 functions for v1 and v2 formats and have each wrap json.Unmarshal\u0027s error if it fails?",
      "range": {
        "startLine": 82,
        "startChar": 20,
        "endLine": 82,
        "endChar": 26
      },
      "revId": "7d225c1218cd057b59ba3986943f2f2f5425f3a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}