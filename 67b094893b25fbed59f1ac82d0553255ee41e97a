{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "05ba2390_2d5d515f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-11-18T07:01:09Z",
      "side": 1,
      "message": "Hi reviewers,\nI catch some bugs like \"redundant |Prepare()| call on test precondition\". Still the adb failed problem happen sometimes. I doubt that it\u0027s something to do with my glinux. Is possible to test it in lab\u0027s test host? Or we can just land this test first to see how\u0027s run on scheduled test host?",
      "revId": "67b094893b25fbed59f1ac82d0553255ee41e97a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcdd78d1_55ff11ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-11-25T02:34:39Z",
      "side": 1,
      "message": "Hi Reviewers, please take a look again. jaydeepmehta@ also agree that due to the schedule of ITS. We can try to land the CL and run it in the lab first.",
      "revId": "67b094893b25fbed59f1ac82d0553255ee41e97a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e107fda8_011c2096",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-12-01T03:15:51Z",
      "side": 1,
      "message": "Hi Jasmine, can you help take another look at the CL?",
      "revId": "67b094893b25fbed59f1ac82d0553255ee41e97a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13f451b7_678bd002",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1402747
      },
      "writtenOn": "2020-12-08T07:57:13Z",
      "side": 1,
      "message": "Thanks Inker@ \n",
      "revId": "67b094893b25fbed59f1ac82d0553255ee41e97a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "825c1d1e_6882e409",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1285903
      },
      "writtenOn": "2020-12-08T08:11:21Z",
      "side": 1,
      "message": "Note that this change is being put on hold due to the Python 2 dependency.\n\nChrome OS Build team would like to remove Python 2 completely.\nInker is talking to Android CameraITS owner at b/169303835 to figure out how to make CameraITS run with Python3.",
      "revId": "67b094893b25fbed59f1ac82d0553255ee41e97a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dae945fa_1b2d8ef9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-12-08T08:14:08Z",
      "side": 1,
      "message": "Actually the vapier@ only revert the CL for installing package for full mode test(only enable on kukui so far). So if we merge this right now, it should be enable to pass in all our existing camerabox setup(all limited mode device).\nJaydeep and I want to see how it run in the lab first. So it should be good to merge this CL.",
      "parentUuid": "825c1d1e_6882e409",
      "revId": "67b094893b25fbed59f1ac82d0553255ee41e97a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "859abecf_a6811bf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-12-08T08:14:08Z",
      "side": 1,
      "message": "Hi hidehiko@,\n\nPTAL.",
      "revId": "67b094893b25fbed59f1ac82d0553255ee41e97a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9cc3512_ef3e7197",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1285903
      },
      "writtenOn": "2020-12-08T08:24:31Z",
      "side": 1,
      "message": "Hmm... Thanks for the information there.\n\nI think it\u0027s still an issue because they\u0027re planning on removing Python2 from the DUT (see go/chromeos-python3).\n\nI\u0027m referring to the \"hijack\" in its_pre.go quoted below. I think this will fail as soon as they remove Python2 from the DUT.\n\n```\n\t// Hijack default python path with a symbolic link to python2.\n\tpy2Path, err :\u003d binPath(ctx, \"python2\")\n\tif err !\u003d nil {\n\t\ts.Fatal(\"Failed to get python2 path: \", err)\n\t}\n\ttempPyPath :\u003d path.Join(p.dir, \"python\")\n\tif err :\u003d os.Symlink(py2Path, tempPyPath); err !\u003d nil {\n\t\ts.Fatalf(\"Failed to create symlink for python2 path %v: %v\", py2Path, err)\n\t}\n\tif pyPath, err :\u003d binPath(ctx, \"python\"); err !\u003d nil {\n\t\ts.Fatal(\"Failed to get python path: \", err)\n\t} else if pyPath !\u003d tempPyPath {\n\t\ts.Fatalf(\"Failed to hijack python path from %v to %v\", pyPath, tempPyPath)\n\t}\n```",
      "parentUuid": "dae945fa_1b2d8ef9",
      "revId": "67b094893b25fbed59f1ac82d0553255ee41e97a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bd79520_f9659e67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-12-08T09:23:24Z",
      "side": 1,
      "message": "Right, sadly the python2 will be removed at Q4. In that case, we still need to porting ITS to python3 before merge.",
      "parentUuid": "e9cc3512_ef3e7197",
      "revId": "67b094893b25fbed59f1ac82d0553255ee41e97a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}