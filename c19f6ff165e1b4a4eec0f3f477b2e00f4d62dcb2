{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "65cbe824_eb2b9ee9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-04-16T13:13:02Z",
      "side": 1,
      "message": "PTAL",
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7db01f6_fc486e5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-19T02:37:07Z",
      "side": 1,
      "message": "Hmm. Ideally the chrome support library should know the correct timeout without making individual tests responsible for setting correct timeout. Can we detect managed user login automatically?",
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "000af697_504964d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-04-19T06:45:54Z",
      "side": 1,
      "message": "The determination if a user is managed depends on the configuration of FakeDMS. Theoretically it could be done by tast, but it would require duplicating the logic present in Chrome.",
      "parentUuid": "f7db01f6_fc486e5e",
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec5419ac_1212128e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-19T07:12:00Z",
      "side": 1,
      "message": "I see. But it\u0027s still nice to let the chrome support library responsible for determining the timeout...\n\nInstead of an option that allows specifying arbitrary timeout, what do you think about introducing an option that declares that a login user is managed, whose only effect is to increase the timeout?",
      "parentUuid": "000af697_504964d3",
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d23ca98a_9cb01a44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-04-19T07:24:51Z",
      "side": 1,
      "message": "What about enrollment? That takes longer than a managed user login. Would it make sense to add an ExtraLoginTime option for flexibility?\n\nI prefer giving fixtures/tests more control, but the timeouts can be calculated in the support library.",
      "parentUuid": "ec5419ac_1212128e",
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a211a91b_29e8b1cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-19T07:31:27Z",
      "side": 1,
      "message": "OK. Then what about just defining timeout constants in the chrome package? Then we have at least a central place to manage timeouts.",
      "parentUuid": "d23ca98a_9cb01a44",
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf8483af_64870183",
        "filename": "src/chromiumos/tast/local/chrome/internal/config/config.go",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-19T08:19:51Z",
      "side": 1,
      "message": "nit: Can you name it \"CustomLoginTimeout\"? It might make it easier to notice that this value can be zero.",
      "range": {
        "startLine": 162,
        "startChar": 17,
        "endLine": 162,
        "endChar": 29
      },
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b090a055_173a146d",
        "filename": "src/chromiumos/tast/local/chrome/internal/config/config.go",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-19T07:32:14Z",
      "side": 1,
      "message": "Can\u0027t we use time.Duration here?",
      "range": {
        "startLine": 244,
        "startChar": 33,
        "endLine": 244,
        "endChar": 36
      },
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c0ba76f_42a48cec",
        "filename": "src/chromiumos/tast/local/chrome/internal/config/config.go",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-04-19T07:58:00Z",
      "side": 1,
      "message": "It can\u0027t be serialized to JSON.",
      "parentUuid": "b090a055_173a146d",
      "range": {
        "startLine": 244,
        "startChar": 33,
        "endLine": 244,
        "endChar": 36
      },
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "440005bc_fc37d127",
        "filename": "src/chromiumos/tast/local/chrome/internal/config/config.go",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-19T08:19:51Z",
      "side": 1,
      "message": "OK, that\u0027s unfortunate...\n\nCan you store nanoseconds in int64? It\u0027s finest granularity in time.Duration.",
      "parentUuid": "6c0ba76f_42a48cec",
      "range": {
        "startLine": 244,
        "startChar": 33,
        "endLine": 244,
        "endChar": 36
      },
      "revId": "c19f6ff165e1b4a4eec0f3f477b2e00f4d62dcb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}