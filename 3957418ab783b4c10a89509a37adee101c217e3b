{
  "comments": [
    {
      "key": {
        "uuid": "2a90bed2_b935536b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2019-09-10T12:58:16Z",
      "side": 1,
      "message": "If you pass a file handle as --startup-pipe, I think it attempts to write the length of a string and then the string itself which will be a JSON structure containing \u0027port\u0027.\n\nWaiting for that to be written is also how the C++ side currently determines that the server is ready to accept incoming requests.\n\nPython side impl:\nhttps://cs.chromium.org/chromium/src/components/policy/test_support/policy_testserver.py?l\u003d1746\u0026rcl\u003d6c33e7e917890a932ab14174413ba1a15b1156e2\n\nhttps://cs.chromium.org/chromium/src/net/tools/testserver/testserver_base.py?l\u003d255\u0026rcl\u003d567df473cf35b412f32b5dc1ea8c5055590b7068\n\nhttps://cs.chromium.org/chromium/src/net/tools/testserver/testserver_base.py?l\u003d227\u0026rcl\u003d567df473cf35b412f32b5dc1ea8c5055590b7068\n\nC++ side usage:\nhttps://cs.chromium.org/chromium/src/net/test/spawned_test_server/local_test_server_posix.cc?l\u003d127\u0026rcl\u003d58d2b3ae88e2f1513cd39184519e55e61e9d9800\n\nhttps://cs.chromium.org/chromium/src/net/test/spawned_test_server/local_test_server_posix.cc?l\u003d169\u0026rcl\u003d58d2b3ae88e2f1513cd39184519e55e61e9d9800",
      "range": {
        "startLine": 21,
        "startChar": 69,
        "endLine": 22,
        "endChar": 65
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c1ddccd_396d1d3e",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Could you add package document?",
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f0797c4_dd44763d",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Unused other than initialization.",
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd0d186f_33c94c4d",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Unused other than initialization.",
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fee59ad7_b40b758a",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1313390
      },
      "writtenOn": "2019-08-30T22:08:02Z",
      "side": 1,
      "message": "Is there any chance other areas of Tast will need to get a TCP port? IF so maybe move this to a utils file somewhere?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 56,
        "endChar": 25
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ec4c424_d7054810",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2019-08-30T23:50:57Z",
      "side": 1,
      "message": "It hurt me enough to add this code to this CL, I\u0027d like to discourage anyone from using this solution and hiding it here helps with that...",
      "parentUuid": "fee59ad7_b40b758a",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 56,
        "endChar": 25
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d3e4deb_f917ba5b",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1313390
      },
      "writtenOn": "2019-08-30T22:08:02Z",
      "side": 1,
      "message": "Maybe change the name to be a little more descriptive? \"NewDMsServer\" or something like that?",
      "range": {
        "startLine": 62,
        "startChar": 5,
        "endLine": 62,
        "endChar": 8
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e46d7b6e_79990fef",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2019-08-30T23:50:57Z",
      "side": 1,
      "message": "whoever calls it will have to say fdms :\u003d fakedms.New(), so it will be clear",
      "parentUuid": "0d3e4deb_f917ba5b",
      "range": {
        "startLine": 62,
        "startChar": 5,
        "endLine": 62,
        "endChar": 8
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdb49986_c7a575b6",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Could you create the instance at the latest point?\nIn this case, just before the return.",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 5
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99266cac_350aa554",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1313390
      },
      "writtenOn": "2019-08-30T22:08:02Z",
      "side": 1,
      "message": "A suggestion:\n\nConsider adding \"client-state\", and a proper way to handle this arg (you will need to create a directory to write/read this file from).\n\nClient-state (as you showed me) allows you to easily/stop/start the DM server. In autotest (tast might be different due to go-routines) a test will not end when there is a server running. therefor, for continuous logged in tests you will need to stop/start the DM server between each test and point to the client-state file for everyone after the first.\n\nHowever: If the DM server is being written with the same idea as chrome() in tast (Ie it lives at the test runner level, not the test level), this might not be an issue as you can simply pickup the currently existing DM server.",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 83,
        "endChar": 35
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecb62bca_859ebb9c",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2019-08-30T23:50:57Z",
      "side": 1,
      "message": "Noted, though I don\u0027t want to add that in this CL.  I\u0027d like to have fake dms as a precondition eventually, so you\u0027re right that it may not be needed.  But I\u0027ve filed a bug regardless, to make sure the idea gets revisited: crbug.com/999751",
      "parentUuid": "99266cac_350aa554",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 83,
        "endChar": 35
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d857a68_860bed3c",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Could you leave the TODO comment with the filed bug here?",
      "parentUuid": "ecb62bca_859ebb9c",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 83,
        "endChar": 35
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f066fa2_0abbf060",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Could you return nil on error?",
      "range": {
        "startLine": 95,
        "startChar": 8,
        "endLine": 95,
        "endChar": 12
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e6ddda4_0aa86a7c",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1313390
      },
      "writtenOn": "2019-08-30T22:08:02Z",
      "side": 1,
      "message": "Suggestion:\nSince this is a health check, consider naming this \"checkPing\" or \"CheckServerStatus\" or something to show you aren\u0027t just pinging for fun, but to make sure \"all is well\"",
      "range": {
        "startLine": 99,
        "startChar": 21,
        "endLine": 99,
        "endChar": 25
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44a58c19_898520f8",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2019-08-30T23:50:57Z",
      "side": 1,
      "message": "I do prefer ping here - it\u0027s short, at least somewhat conveys what the function is doing, and is in the url already.  Ideally a test should never want to call this.",
      "parentUuid": "7e6ddda4_0aa86a7c",
      "range": {
        "startLine": 99,
        "startChar": 21,
        "endLine": 99,
        "endChar": 25
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f23f98a7_53e5f51b",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2019-09-10T12:58:16Z",
      "side": 1,
      "message": "nit: starts? :)",
      "range": {
        "startLine": 111,
        "startChar": 3,
        "endLine": 111,
        "endChar": 13
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1bfadda_c6893b1d",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Looks redundant. DumpLog logs the subprocess\u0027s unconsumed output. Here it failed to start, so there\u0027d be no logs.",
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "024e30c6_714b3798",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Could you log the error, too?",
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a8a460b_6a2e053e",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "You can pass testexec.DumpLogOnError to Wait(), instead.",
      "range": {
        "startLine": 122,
        "startChar": 3,
        "endLine": 122,
        "endChar": 24
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b5f399e_59805aba",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "pingDone :\u003d make(chan error, 1)\n\nOtherwise, L130 will block until pingDone is consumed.",
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c851c6f6_7baf1243",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "govet errors.\n\nsrc/chromiumos/tast/local/policy/fakedms/fakedms.go:128: the pingCancel function is not used on all paths (possible context leak)\nsrc/chromiumos/tast/local/policy/fakedms/fakedms.go:146: this return statement may be reached without using the pingCancel var defined on line 128\n\npingCancel needs to be called in the defer function immediately followed by this line.\n\nRecommendation:\n\ndefer func() {\n  pingCancel()\n  \u003c- pingDone\n}()\n\nhere. Then you can remove L137-L139.\nAlso, you can close pingDone at the end of goroutine, so that this could handle success case, too.",
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94f7e34_089536ef",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2019-09-10T12:58:16Z",
      "side": 1,
      "message": "I think we could avoid this and maybe only do one thing as a sanity check if we use the --startup-pipe .",
      "range": {
        "startLine": 130,
        "startChar": 14,
        "endLine": 130,
        "endChar": 26
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27d1bf86_b3cb2e32",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Could you check the error, and handle it (at lease logging)?\nDitto for below.",
      "range": {
        "startLine": 144,
        "startChar": 3,
        "endLine": 144,
        "endChar": 18
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eca1bcff_4cc3484b",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Could you respect the timeout of ctx, too?",
      "range": {
        "startLine": 135,
        "startChar": 1,
        "endLine": 148,
        "endChar": 2
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faf34279_8044494f",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "nit/style:\n\nfdms.URL + \"/configuration/test/exit\"\n\nto concat two terms.",
      "range": {
        "startLine": 155,
        "startChar": 23,
        "endLine": 155,
        "endChar": 74
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b35bbdd0_4030df14",
        "filename": "src/chromiumos/tast/local/policy/fakedms/fakedms.go",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-09-05T15:46:28Z",
      "side": 1,
      "message": "Could you respect timeout of ctx, too?",
      "range": {
        "startLine": 164,
        "startChar": 3,
        "endLine": 164,
        "endChar": 38
      },
      "revId": "3957418ab783b4c10a89509a37adee101c217e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}