{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "76b41fba_5c28d9f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-04-26T17:22:06Z",
      "side": 1,
      "message": "Shuhei, could you review this change? CUJ tries to use KeepState() option in fixtures but the account doesn\u0027t have device ownership if it is pre-owned by other account.",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f379be6b_f99d1321",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-27T09:51:01Z",
      "side": 1,
      "message": "I\u0027m not sure what it means to keep user directories while clearing ownership.\n\nVictor, what do you think?\n",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "767d3899_aaf537f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-04-27T10:01:29Z",
      "side": 1,
      "message": "For enrolled devices this makes no sense whatsoever, clearing ownership will break the device in subtle ways.\n\nFor consumer devices I\u0027m not sure if ownership can be transferred. Why not simply create the user + its state after ownership is cleared?",
      "parentUuid": "f379be6b_f99d1321",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4417903f_bd33ebfc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-04-27T16:12:16Z",
      "side": 1,
      "message": "Thanks Victor and Shuhei for your comments.\n\nWe want to use KeepState between multiple tast runs to avoid some time consuming configuration setup and app installation for the same account. (It\u0027s ok to do the setup in the initial run.) But with KeepState, if the DUT was logged in with another account before the first run, the ownership remains to the old account and we see some undesired behavior. I hope this problem statement makes sense.\n\nDo you know if there is an API in ChromeOS to query the current owner of the device? If so, I think we can compare the login account with the device owner. If they are the same, then keep state / ownership. Otherwise, clear the ownership and also remove user directories.\n\nAnother question: If the ownership should not be cleared for an enrolled device, how do we avoid running most of the tast tests, which clears ownership, on those devices?",
      "parentUuid": "767d3899_aaf537f9",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4496612_cbc320bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-04-27T16:54:35Z",
      "side": 1,
      "message": "Tast runs on consumer owned devices (and fails some tests if not), but there is a fixture that performs enrollment. All tests using that fixture need to use KeepEnrollment when starting Chrome.\n\nRegarding your tests, ready.go already clears ownership before tests start. You can simply use KeepState in that case.\nhttps://osscs.corp.google.com/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/ready/ready.go;l\u003d347?q\u003dfile:ready.go\n\nWhat kind of tests are you writing? What undesired behavior are you encountering when running your tests?",
      "parentUuid": "4417903f_bd33ebfc",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "608e9e53_9e41c8db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-04-27T17:25:08Z",
      "side": 1,
      "message": "Hi Victor, I\u0027ve add comments in crbug.com/1202797 for more information of what we encountered during our critical user journey (CUJ test). More discussion about this issue (along with other issues) can be found at b:184890503\n\nAlso, per my test, I don\u0027t think the ready.go policy cleanup takes effect - the policy.1 file under /var/lib/whitelist still has the account of the previous device owner when KeepState is used. \n\nThe ClearDeviceOwnership() has a comment:\n\n// The UI must be stopped while we do this, or the session_manager will\n// write the policy and key files out again.\n\nI guess in ready.go, UI is not stopped so policy.1 is re-written.",
      "parentUuid": "f4496612_cbc320bd",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc3e024d_8b314dca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-04-28T08:22:02Z",
      "side": 1,
      "message": "This still seems like the wrong way to fix the encountered issues and hiding other problems. This is not how Chrome OS devices normally operate.\n\nUsers should still be able log in even if they are not the owner of the device. That seems like the issue that needs to be fixed. Clearing the Welcome screen should also be added to tast as it will impact more tests.\n\nnya@:\n Are you aware of any issues with GAIA login with other existing users?\n Should all dialogs already be cleared by tast?\n Do we want to merge this change until the other issues are fixed in tast?\n\nxiliu@:\n  Are the tests designed to only be run manually?\n  Do you actually need the users to be device owners for the tests (for the extra permissions)? I would expect meet to work in other accounts.\n  From the test I see you just do a GAIA login. Will this change in the future? \nhttps://osscs.corp.google.com/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/ui/conference_service.go;l\u003d110?q\u003dRunGoogleMeetScenario",
      "parentUuid": "608e9e53_9e41c8db",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f3fd296_091230ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-28T08:50:57Z",
      "side": 1,
      "message": "\u003e  Are you aware of any issues with GAIA login with other existing users?\n\u003e  Should all dialogs already be cleared by tast?\n\nRecently I saw a CL crrev.com/c/2850407 that skips a new user creation screen in OOBE (b/186175663). Is it related?\n\n\u003e  Do we want to merge this change until the other issues are fixed in tast?\n\nFrom what Victor said, I\u0027m afraid that clearing the ownership with keeping user data is not expected in Chrome OS, so I\u0027m hesitant to introduce this option.\n\nRather an approach Xibin mentioned sounds better:\n\n\u003e Do you know if there is an API in ChromeOS to query the current owner of the device? If so, I think we can compare the login account with the device owner. If they are the same, then keep state / ownership. Otherwise, clear the ownership and also remove user directories.\n\nI\u0027m not sure if querying the current owner without logging in is possible. But even if it\u0027s impossible, we should be able to log in to the Chrome once with keeping all states, and if the current user doesn\u0027t have ownership, restart the session and re-login with clearing the state. That is, introducing a new option like chrome.KeepStateIfOwnerMatches().",
      "parentUuid": "dc3e024d_8b314dca",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d74828f7_590fbc97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-04-28T16:45:03Z",
      "side": 1,
      "message": "\u003e We should be able to log in to the Chrome once with keeping all states, and if the current user doesn\u0027t have ownership, restart the session and re-login with clearing the state.\nActually the first-time login account cannot log in. \n- Without KeepState, it needs to click the \"accept\" button during OOBE on the \"Welcome to your new account\" screen. This is another issue that tast OOBE should handle but for CUJ, we can live with it by manually click it the first time. \n- With KeepState, the OOBE will stuck at the adding new user screen at the first run.\n\n\u003e Are the tests designed to only be run manually? Do you actually need the users to be device owners for the tests (for the extra permissions)? I would expect meet to work in other accounts.\nVictor, the test is designed to run automatically. We don\u0027t need the users to be the device owner in GoogleMeetCUJ. But for the situation I described in the bug, without clearing the previous ownership, the user can not do login.\n\nThis CL resolves the issue for our special use case (partner get an account that has never been used before), also trying to tackle a general problem that login account might not have the device ownership when KeepState is used.",
      "parentUuid": "5f3fd296_091230ce",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f6248b6_f2e02931",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-05-01T00:31:35Z",
      "side": 1,
      "message": "nya@\nWithout knowing the current device owner, as a workaround, can we write tast login information on the DUT each time Chrome.New() is called. The information can include whether KeepState is used, and the last login user. Next time in Chrome.New it can decide if ownership needs to be cleared.",
      "parentUuid": "d74828f7_590fbc97",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1daf0425_3bec0a20",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-05-04T01:07:09Z",
      "side": 1,
      "message": "Hi Shuhei, any feedback on my proposed solution? We are seeing more similar problems reported by partners (when they use a Google generated account which is never used before). I can remove the KeepState option at this time so partners can see the \"Welcome to your new account\" screen during login and manually click \"accept\" button. But this means for each CUJ, some setup procedures will have to be repeated between multiple iterations because state is not kept.",
      "parentUuid": "5f6248b6_f2e02931",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b24875dc_41ab16a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-05-06T05:19:07Z",
      "side": 1,
      "message": "Hi Xibin, now I\u0027m back from 1-week long national holiday.\n\nI see at least 3 orthogonal issues involved here. Let me try to describe them, and please correct me if I\u0027m wrong.\n\n1. When logging with a brand-new Google account, \"Welcome to your new account\" screen is shown and Tast doesn\u0027t know how to handle it.\n\n\u003d\u003e IIUC this screen is asking the user to accept Google TOS before logging in. If so, once logging in, the screen should not appear on later logins, regardless of whether chrome.KeepState is used or not.\n\n2. When logging in with a real GAIA account, \"Who would you like to add to this Chromebook?\" screen is shown and Tast doesn\u0027t know how to handle it.\n\n\u003d\u003e This screen was enabled by default recently (crbug.com/1101318, crrev.com/c/2831531), and Tast support library has been already fixed to handle this screen (crrev.com/c/2850407, b/186175663).\n\n3. When logging in with chrome.KeepState, the user might not be the device owner, which prevents tests from performing certain operations.\n\n\u003d\u003e As Victor said, this is expected. If a test needs the device ownership to run its scenario, it should call chrome.New without chrome.KeepState to clear device states and create a new user with device ownership.\n\n--------\n\n\u003e Without knowing the current device owner, as a workaround, can we write tast login information on the DUT each time Chrome.New() is called. The information can include whether KeepState is used, and the last login user. Next time in Chrome.New it can decide if ownership needs to be cleared.\n\nAfter thinking more about this again, I\u0027m getting hesitant to add a new option to the chrome package. The usage of chrome.KeepState in CUJ tests are very unusual (IIUC they want to avoid re-logins across multiple \"tast run\") and don\u0027t want to introduce more complexity to the chrome package for this particular use case.\n\nRather what do you think about handling this in CUJ-specific fixtures? That is, to write a fixture that performs following:\n\n- Log into a session with chrome.KeepState\n- Check if the current user is the device owner. If it\u0027s not the case, re-login to a session without chrome.KeepState",
      "parentUuid": "1daf0425_3bec0a20",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98ac31fc_372e850e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-05-08T04:13:20Z",
      "side": 1,
      "message": "Hi Shuhei, thanks for the summary.\nIssue #1: yes your description is correct.\nIssue #2: \n\u003e When logging in with a real GAIA account, \"Who would you like to add to this Chromebook?\" screen is shown and Tast doesn\u0027t know how to handle it.\nThis only happens to the brand-new account when KeepState is used but the DUT has an owner already (from previous test). The login will stuck in the \"Who would you like to add to this Chromebook?\" screen. If the account has logged in before (not brand new), tast can handle this screen correctly.\nIssue #3: I tried to tackle the general problem of KeepState is used by DUT is owned by other account, but actually I just want to bypass issue #2 when KeepState is used. If #2 can be resolved, we can continue to use KeepState without changing DUT owner, and we don\u0027t have to introduce a new option.\n\nI\u0027ve already submitted workaround to remove KeepState for some CUJ tests, so we can continue the test with manual \"accept\" when #1 issue happens. The side effect is the test has to re-install all apps during different tast runs. (we usually run CUJ 10 iterations to better measure the performance result)",
      "parentUuid": "b24875dc_41ab16a7",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2869e4b6_f20bae08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-05-10T09:31:00Z",
      "side": 1,
      "message": "\u003e Hi Shuhei, thanks for the summary.\n\u003e Issue #1: yes your description is correct.\n\u003e Issue #2: \n\u003e \u003e When logging in with a real GAIA account, \"Who would you like to add to this Chromebook?\" screen is shown and Tast doesn\u0027t know how to handle it.\n\u003e This only happens to the brand-new account when KeepState is used but the DUT has an owner already (from previous test). The login will stuck in the \"Who would you like to add to this Chromebook?\" screen. If the account has logged in before (not brand new), tast can handle this screen correctly.\n\nHmm, I could not reproduce the issue. I used Chrome OS R92-13961.0.0 and a test from crrev.com/c/2883116 to attempt:\n\n1. Log in with a GAIA account\n2. Log out\n3. Log in with a different GAIA account and KeepState\n\nAnd the test ran successfully. I also verified the user creation screen is shown at (3) and the test clicks a button to proceed without problems. Can you double-check that the fix (crrev.com/c/2850407) is included in your repository?\n\nAlso, what do you mean by \"brand new\" here? Does it mean that a Google account has not agreed with Google TOS? If that\u0027s the case we can attempt to log in with the account manually just once and the problem should be gone...\n\n\n\u003e Issue #3: I tried to tackle the general problem of KeepState is used by DUT is owned by other account, but actually I just want to bypass issue #2 when KeepState is used. If #2 can be resolved, we can continue to use KeepState without changing DUT owner, and we don\u0027t have to introduce a new option.\n\u003e \n\u003e I\u0027ve already submitted workaround to remove KeepState for some CUJ tests, so we can continue the test with manual \"accept\" when #1 issue happens. The side effect is the test has to re-install all apps during different tast runs. (we usually run CUJ 10 iterations to better measure the performance result)\n\nI agree that it\u0027s undesirable to install all apps every time.",
      "parentUuid": "98ac31fc_372e850e",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92373385_25f6f05b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1483212
      },
      "writtenOn": "2021-05-10T17:42:49Z",
      "side": 1,
      "message": "I agree that for issue #1, manually clicking Accept once per account is reasonable. We can do this for each test account we create",
      "parentUuid": "2869e4b6_f20bae08",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9fa62b4_ee688dcf",
        "filename": "src/chromiumos/tast/local/chrome/option.go",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-04-27T10:01:29Z",
      "side": 1,
      "message": "This also needs to be updated.",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07bb8a54_5cc7987a",
        "filename": "src/chromiumos/tast/local/chrome/option.go",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-04-27T16:12:16Z",
      "side": 1,
      "message": "I\u0027m not quite sure what change to make for this code line. I think we should keep it because we don\u0027t want to clear ownership when KeepEnrollment() is called.",
      "parentUuid": "b9fa62b4_ee688dcf",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43045d5a_8a3b2c01",
        "filename": "src/chromiumos/tast/local/chrome/option.go",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-04-27T16:54:35Z",
      "side": 1,
      "message": "Add for consistency:\ncfg.KeepState \u003d false",
      "parentUuid": "07bb8a54_5cc7987a",
      "revId": "d42c252de1bf231c0e4f2bc10d1f8156355744ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}