{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3092c957_e28507c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003044
      },
      "writtenOn": "2021-06-09T06:49:43Z",
      "side": 1,
      "message": "ptal, thanks!",
      "revId": "f8753550c0a67a62b4f676f5510581b311940189",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c2cf213_65293728",
        "filename": "src/chromiumos/tast/local/crostini/ui/settings/settings.go",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2021-06-09T07:04:02Z",
      "side": 1,
      "message": "This seems to accept any error returned by NodesInfo. Rather than assuming an error indicates there are no shared folders, what about keeping the old logic which checks for the \"Shared folders will appear here\" message and only returning the empty slice in this case?\n\n(i.e. keep lines 161-191 of the old method as-is, just add the extra condition 170-172 that ensures both emptyMsg and listHeader are not showing concurrently.)",
      "range": {
        "startLine": 176,
        "startChar": 1,
        "endLine": 180,
        "endChar": 2
      },
      "revId": "f8753550c0a67a62b4f676f5510581b311940189",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b1d2f98_92ba30fb",
        "filename": "src/chromiumos/tast/local/crostini/ui/settings/settings.go",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1003044
      },
      "writtenOn": "2021-06-09T07:21:58Z",
      "side": 1,
      "message": "Adding the new condition here and leaving everything else will fix the issue I\u0027m trying to fix, but it leaves a different race condition if the last shared folder is deleted:\n\n- Page is already initialized, and there is one shared folder\n- Evaluate 164-167: textErr not nil, listErr nil\n- The folder is unshared as it is deleted (since otherwise you have to use this settings page to unshare), and this event reaches the settings page\n- Evaluate 175-178: No shared folders are found, error raised\n\nIdeally NodesInfo would just return an empty array (in fact its comment suggests that it should, but it is unhappy about not finding the ancestor) so we wouldn\u0027t need any special casing, but short of that, this is the best approach I came up with.",
      "parentUuid": "8c2cf213_65293728",
      "range": {
        "startLine": 176,
        "startChar": 1,
        "endLine": 180,
        "endChar": 2
      },
      "revId": "f8753550c0a67a62b4f676f5510581b311940189",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67e9287d_e6d034cf",
        "filename": "src/chromiumos/tast/local/crostini/ui/settings/settings.go",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2021-06-09T07:35:03Z",
      "side": 1,
      "message": "What about chucking the whole thing in a testing.Poll (cutting out the uiauto retry in your new condition as it would be redundant?) so that you can loop back around in case a race condition?\n\nPsudocode:\n\nerr :\u003d testing.Poll(ctx, func(ctx context.Context) error {\n   if textErr \u003d\u003d nil \u0026\u0026 listErr \u003d\u003d nil \n      return errors.New(\"still initialising\")\n   } else if textErr \u003d\u003d nil \u0026\u0026 textErr !\u003d nil {\n      return testing.PollBreak(errors.New(\"failed to find list of \u0027Shared folders\u0027 or \u0027Shared folders will appear here\u0027\"))\n   } else if listErr \u003d\u003d nil {\n\t// Found \"Shared folders\".\n\t...\n\t// Errors that could be due to races (e.g. Shared folders disappearing)\n\t// NOT wrapped in testing.PollBreak().\n   }\n   \n   // No shared folder.\n   return nil, nil\n\n})\nif err !\u003d nil {\n   ...\n}",
      "parentUuid": "0b1d2f98_92ba30fb",
      "range": {
        "startLine": 176,
        "startChar": 1,
        "endLine": 180,
        "endChar": 2
      },
      "revId": "f8753550c0a67a62b4f676f5510581b311940189",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc4327c_441731a3",
        "filename": "src/chromiumos/tast/local/crostini/ui/settings/settings.go",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1003044
      },
      "writtenOn": "2021-06-09T08:31:03Z",
      "side": 1,
      "message": "Is dropping these errors such a big deal? It seems like the proper way to fix this is to make NodesInfo not return an error in this case. The suggested approach here is structurally pretty different and more complicated to how I would expect to see this function written, and it seems like it is both introducing and working around a race condition for the sake of catching this error. Also note we can\u0027t even make such an error break the polling loop.",
      "parentUuid": "67e9287d_e6d034cf",
      "range": {
        "startLine": 176,
        "startChar": 1,
        "endLine": 180,
        "endChar": 2
      },
      "revId": "f8753550c0a67a62b4f676f5510581b311940189",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}