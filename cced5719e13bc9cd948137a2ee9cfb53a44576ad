{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7513a4d2_f1de750d",
        "filename": "src/chromiumos/tast/local/bundles/cros/health/probe_stateful_partition_info.go",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2021-04-22T10:50:13Z",
      "side": 1,
      "message": "Is it ok to continue here if the file doesn\u0027t open? Should be a fatal if not.",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 9
      },
      "revId": "cced5719e13bc9cd948137a2ee9cfb53a44576ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "431dfc15_6bd05681",
        "filename": "src/chromiumos/tast/local/bundles/cros/health/probe_stateful_partition_info.go",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2021-04-22T10:50:13Z",
      "side": 1,
      "message": "Might be better to make these s.Fatal\u0027s to bail out early and avoid the if else. e.g.\n```\nif statefulPartitionInfo \u003d\u003d nil {\n\ts.Fatal(\"Failed to find stateful partition info in mtab\")\n}\nif statefulPartitionInfo[2] !\u003d vals[2] {\n\ts.Fatalf(\"Wrong filesystem info: got %s; want %s\", vals[2], statefulPartitionInfo[2])\n} \nif statefulPartitionInfo[0] !\u003d vals[3] {\n\ts.Fatalf(\"Wrong mount source info: got %s; want %s\", vals[3], statefulPartitionInfo[0])\n}\n```\ns.Error is usually used to indicate an overall failure but you wish to continue execution (e.g. a loop of assertions where you want to verify all but a failure on any fails the whole test)",
      "range": {
        "startLine": 109,
        "startChar": 4,
        "endLine": 109,
        "endChar": 9
      },
      "revId": "cced5719e13bc9cd948137a2ee9cfb53a44576ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}