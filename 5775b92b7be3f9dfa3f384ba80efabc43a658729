{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "43cb89dc_f53ccdc0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1537587
      },
      "writtenOn": "2022-11-02T21:44:33Z",
      "side": 1,
      "message": "@yawano@google.com Hi Yuki, could you PLAT again? Thanks!\n\nI try to replicate this bug in the chromium side but failed: the avatar could always be clicked and selected. This confirms that it is a UI sync issue from the tast-test side rather than the product side.\n\nI tried to run this test for 20+ times in D/L mode, different boards and models, etc., none of which failed to select back the default avatar.\n\nObserving the screenshots, I realized that all the failure cases are triggered in light mode, so I enforce this test to run in light mode, wishing that it could fix the issue temporarily.",
      "revId": "5775b92b7be3f9dfa3f384ba80efabc43a658729",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8f3397b_f8fbc58a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1537587
      },
      "writtenOn": "2022-11-02T21:47:14Z",
      "side": 1,
      "message": "To add to this. Last time fixing this bug, I tried to add a \"wait for 3 seconds before verification\", but the `WithTimeout` is overridden by `WaitUntilExists`. To stabilize the operation we should use `uiauto.Retry` instead.",
      "parentUuid": "43cb89dc_f53ccdc0",
      "revId": "5775b92b7be3f9dfa3f384ba80efabc43a658729",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be32aef1_05704bc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-11-02T22:02:33Z",
      "side": 1,
      "message": "Thank you!",
      "revId": "5775b92b7be3f9dfa3f384ba80efabc43a658729",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb57867f_dd29b55d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-11-02T22:02:33Z",
      "side": 1,
      "message": "Thank you for trying to reproduce this issue!\n\nMy concern of this type of change is that this can hide a real problem/regression. For example, we might introduce a regression later that clicking the profile button fails to change the icon back to the profile image for 100% of the time. The retry logic will hide the regression.",
      "parentUuid": "a8f3397b_f8fbc58a",
      "revId": "5775b92b7be3f9dfa3f384ba80efabc43a658729",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bafdeb2_7b873c65",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1537587
      },
      "writtenOn": "2022-11-02T22:18:17Z",
      "side": 1,
      "message": "Solid concern. Let\u0027s get some input from the tast owners.",
      "parentUuid": "cb57867f_dd29b55d",
      "revId": "5775b92b7be3f9dfa3f384ba80efabc43a658729",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9e04ffc_6303e8a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-02T23:48:11Z",
      "side": 1,
      "message": "Hi Yuki, you are right. Retry might hide some potential failure. Honestly, Tast is not a perfect automation tool for desktop UIs. It has its own limitation and no implicit checks. It can often be affected by device performance, cross-platform/window interactions. As a trade-off, we have to use RETRY sometimes to compromise it.\n\nOption 1: Strict test, but slightly flaky. It prevents the test running in CQ so no coverage at all.\n\nOption 2: Loose test with retries. It might hide potential failures at first time, but it is not a high priority (P2?)\n\nI would say I have to choose Option 2 in these cases.\n\nMore comments on the failure, in the test it tries to click a general node `googleProfilePhotoContainer`, which might not be ready to receive the click event even it appears in A11y tree. Along with the page rendering, the node state in A11y tree is also changing. https://source.chromium.org/chromiumos/chromiumos/codesearch/+/HEAD:src/platform/tast-tests/src/chromiumos/tast/local/chrome/uiauto/state/constants.go;l\u003d14\n\nUnfortunately I do not have the knowledge to answer how Chrome renders the page and bind the event listener.",
      "parentUuid": "5bafdeb2_7b873c65",
      "revId": "5775b92b7be3f9dfa3f384ba80efabc43a658729",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aff014e6_7088e7a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1537587
      },
      "writtenOn": "2022-11-03T17:55:14Z",
      "side": 1,
      "message": "Thank you!",
      "parentUuid": "d9e04ffc_6303e8a0",
      "revId": "5775b92b7be3f9dfa3f384ba80efabc43a658729",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5ae82cc_a526b3fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1537587
      },
      "writtenOn": "2022-11-03T18:02:51Z",
      "side": 1,
      "message": "Added a comment to explain the possible root cause and why we use `Retry` here.",
      "parentUuid": "aff014e6_7088e7a6",
      "revId": "5775b92b7be3f9dfa3f384ba80efabc43a658729",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}