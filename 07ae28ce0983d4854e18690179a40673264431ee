{
  "comments": [
    {
      "key": {
        "uuid": "68961731_008b5868",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-06-18T16:39:57Z",
      "side": 1,
      "message": "Nit: Per https://chris.beams.io/posts/git-commit/ (linked from the Chromium OS Developer Guide), please wrap the commit message body at 72 characters. This line is 73, which makes it look odd in Gerrit.",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "544be193_a6e6d7fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68961731_008b5868",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f15933f_afab5056",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-06-18T16:39:57Z",
      "side": 1,
      "message": "Please use Cq-Depend to make this CL dependent on the manifest key. https://chromium.googlesource.com/chromiumos/docs/+/master/contributing.md#CQ-DEPEND",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c99c9c9f_a8d33f34",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f15933f_afab5056",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "572df06f_e4c7fcdc",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 272,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-06-18T16:39:57Z",
      "side": 1,
      "message": "nit: \"loads a\"",
      "range": {
        "startLine": 272,
        "startChar": 30,
        "endLine": 272,
        "endChar": 35
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76886983_57f73f82",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 272,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Hm, I think it\u0027s actually \"the\" because we allow only one :)",
      "parentUuid": "572df06f_e4c7fcdc",
      "range": {
        "startLine": 272,
        "startChar": 30,
        "endLine": 272,
        "endChar": 35
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc409fdd_cded9af0",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-06-22T09:17:11Z",
      "side": 1,
      "message": "nit: These names a bit long per Go\u0027s standard... how about naming them signinExt{Key,ID,Dir,Conn}?",
      "range": {
        "startLine": 307,
        "startChar": 1,
        "endLine": 310,
        "endChar": 25
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b99b1271_a36d5b5b",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc409fdd_cded9af0",
      "range": {
        "startLine": 307,
        "startChar": 1,
        "endLine": 310,
        "endChar": 25
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f52b64c_f553b5c4",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 637,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-06-18T16:39:57Z",
      "side": 1,
      "message": "You can combine this branch with L614-622 by writing the built-in test extension (and thus defining c.extDirs) before writing the test extension key:\n\n    func (c *Chrome) PrepareExtensions(ctx, context.Context) error {\n        ctx, st :\u003d timing.Start(ctx, \"prepare_extensions\")\n        defer st.End()\n        \n        // Write the built-in test extension.\n        // L623-631\n        dirsToChown :\u003d c.extDirs // L636\n\n        // Write the test extension key.\n        if len(c.testSigninProfileExtKey) \u003e 0 {\n            // L615-621\n            dirsToChown \u003d append(dirsToChown, c.testSigninProfileExtDir) // L638\n        }\n        \n        // Chown dirs\n        // L640-648\n        \n        return nil\n    }\n\nThis won\u0027t work if you need the test extension key in order to write the built-in test extension, which is beyond my subject-matter knowledge.",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c59768f_cd9986e6",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 637,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f52b64c_f553b5c4",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68d78750_ee350a12",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 905,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-06-18T16:39:57Z",
      "side": 1,
      "message": "In case other functions get added in between TestAPIConn and TestSigninProfileAPIConn, please refer explicitly to the name of the other function:\n\n    // TestSigninProfileAPIConn is the same as TestAPIConn, but for signin profile test extension.",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "604f4e25_5ea289c6",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 905,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68d78750_ee350a12",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "014c9ac4_368e88ff",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 906,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-06-22T09:17:11Z",
      "side": 1,
      "message": "huge nit: SigninProfileTestAPIConn may sound more natural, but I\u0027m not very sure.",
      "range": {
        "startLine": 906,
        "startChar": 17,
        "endLine": 906,
        "endChar": 41
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a254a9a_3055e8f4",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 906,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Agreed",
      "parentUuid": "014c9ac4_368e88ff",
      "range": {
        "startLine": 906,
        "startChar": 17,
        "endLine": 906,
        "endChar": 41
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "988338e5_1a12b5b3",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 910,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-06-18T16:39:57Z",
      "side": 1,
      "message": "nit: \"builds a test API connection\"",
      "range": {
        "startLine": 910,
        "startChar": 20,
        "endLine": 910,
        "endChar": 46
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2370559_d5afbfe3",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 910,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "988338e5_1a12b5b3",
      "range": {
        "startLine": 910,
        "startChar": 20,
        "endLine": 910,
        "endChar": 46
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a7ce9f6_c3f49840",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 911,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-06-22T09:17:11Z",
      "side": 1,
      "message": "I guess we don\u0027t have a plan to call this method from outside the chrome package. Can you unexport it, e.g. \"buildTestAPIConn\"?\n\nAlso, given that this method may not build a new connection if there\u0027s a cached connection, we might want to use a different name. Maybe \"testAPIConnFor\" (to differentiate from TestAPIConn)?",
      "range": {
        "startLine": 911,
        "startChar": 17,
        "endLine": 911,
        "endChar": 33
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c17cf000_386f9dd7",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 911,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a7ce9f6_c3f49840",
      "range": {
        "startLine": 911,
        "startChar": 17,
        "endLine": 911,
        "endChar": 33
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28eb31f3_fb813661",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-06-22T09:17:11Z",
      "side": 1,
      "message": "We want to cache test API connections, but extConn will never be non-nil. It is like we have to pass **Conn instead.",
      "range": {
        "startLine": 912,
        "startChar": 0,
        "endLine": 914,
        "endChar": 2
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cdd27a3_d027fc4d",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Right! good catch.",
      "parentUuid": "28eb31f3_fb813661",
      "range": {
        "startLine": 912,
        "startChar": 0,
        "endLine": 914,
        "endChar": 2
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03385174_7192aede",
        "filename": "src/chromiumos/tast/local/chrome/extensions.go",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-06-18T16:39:57Z",
      "side": 1,
      "message": "Is this random text or is it from a particular data-source? If it\u0027s random text, it might be safer and clearer to randomly generate a text string. That, or to directly indicate somewhere in the string what the ID indicates (i.e. \"signinprofiletestextensionidasdfghjkl\"). Alternatively, if this string *is* used outside of this test, please document the source. Ditto for TestExtensionID.",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bce13e6_fc49d824",
        "filename": "src/chromiumos/tast/local/chrome/extensions.go",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03385174_7192aede",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1092e91_abb0eced",
        "filename": "src/chromiumos/tast/local/chrome/extensions.go",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-06-22T09:17:11Z",
      "side": 1,
      "message": "huge nit: \"writeTestExtensionKey\" sounds like a function to write a key, not an extension.\n\nHow about keeping the name as-is (writeTestExtension), and defining a constant for the key for the test extension?\n\n const testExtensionKey \u003d \"MIGf...\"\n\n func writeTestExtension(dir, key string) (id string, err error)",
      "range": {
        "startLine": 121,
        "startChar": 5,
        "endLine": 121,
        "endChar": 26
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33e11dd0_b117a9e8",
        "filename": "src/chromiumos/tast/local/chrome/extensions.go",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1092e91_abb0eced",
      "range": {
        "startLine": 121,
        "startChar": 5,
        "endLine": 121,
        "endChar": 26
      },
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3a185c6_9fc2ee98",
        "filename": "src/chromiumos/tast/local/chrome/extensions.go",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-06-18T16:39:57Z",
      "side": 1,
      "message": "I think that this is less clear than defining manifest directly. Since we\u0027re not reusing manifestFmt, I recommend changing to a `var manifest`:\n\n    var manifest \u003d fmt.Sprintf(`{\n        ...\n    }`, key)",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae0dc9af_36b50121",
        "filename": "src/chromiumos/tast/local/chrome/extensions.go",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3a185c6_9fc2ee98",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20063120_76c70839",
        "filename": "src/chromiumos/tast/local/chrome/extensions.go",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-06-18T16:39:57Z",
      "side": 1,
      "message": "Is this change relevant to this CL?",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82aa220d_a5d32a3f",
        "filename": "src/chromiumos/tast/local/chrome/extensions.go",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1111144
      },
      "writtenOn": "2020-07-01T16:47:24Z",
      "side": 1,
      "message": "Yes, this is needed for signin profile as the login runs in the incognito.",
      "parentUuid": "20063120_76c70839",
      "revId": "07ae28ce0983d4854e18690179a40673264431ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}