{
  "comments": [
    {
      "key": {
        "uuid": "02b36f03_b6a96d55",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/chrome.go",
        "patchSetId": 11
      },
      "lineNbr": 15,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "policies previously served by the FakeDMS",
      "range": {
        "startLine": 15,
        "startChar": 45,
        "endLine": 15,
        "endChar": 57
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28bf23c8_0bd98877",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/chrome.go",
        "patchSetId": 11
      },
      "lineNbr": 15,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02b36f03_b6a96d55",
      "range": {
        "startLine": 15,
        "startChar": 45,
        "endLine": 15,
        "endChar": 57
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97452ee5_5a3427b3",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "what about calling this file policyutil instead?",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "956b1057_c0b8eb71",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97452ee5_5a3427b3",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5edc4e11_960ced6c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "add a note that some policies cannot be set this way and require a restart instead",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f66759a_61feb465",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "policies served by",
      "range": {
        "startLine": 16,
        "startChar": 30,
        "endLine": 16,
        "endChar": 39
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5410dcf3_9e28106e",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f66759a_61feb465",
      "range": {
        "startLine": 16,
        "startChar": 30,
        "endLine": 16,
        "endChar": 39
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af5483f_4066a7b8",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5edc4e11_960ced6c",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b0f7ef2_a36ede22",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "I don\u0027t love this name, especially since policyutil.UpdatePolicies uses \"policy\" twice and \"update\" is so generic.  Unfortunately I can\u0027t think of a better one that conveys both \"causes the given policies to be served by the given FakeDMS\" and \"tells Chrome to refresh the policies which affect it\" that isn\u0027t also way longer.  What about policyutil.ServeAndRefresh?  Then UpdateBlob could be ServeBlobAndRefresh.  Though Refresh and Reload are very similar and easily misremembered for each other...  ServePolicies?  ServeAndGetPolicies?  I\u0027m sure you\u0027ve considered a bunch of options already!\n\nIdeally what the function does is guessable from the name, so that someone reading the test or precondition code doesn\u0027t have to come here to this file.  So I think longer but clearer is better in this case.",
      "range": {
        "startLine": 17,
        "startChar": 5,
        "endLine": 17,
        "endChar": 19
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0c5293c_e614d093",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "ServeAndRefresh/ServeBlobAndRefresh seems more appropriate. I hope that the existing tests serve as an example to make things easier.",
      "parentUuid": "8b0f7ef2_a36ede22",
      "range": {
        "startLine": 17,
        "startChar": 5,
        "endLine": 17,
        "endChar": 19
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7873eb5_9f93dc36",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "policies",
      "range": {
        "startLine": 23,
        "startChar": 63,
        "endLine": 23,
        "endChar": 67
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f207218_7119d71a",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policyutil/policy.go",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7873eb5_9f93dc36",
      "range": {
        "startLine": 23,
        "startChar": 63,
        "endLine": 23,
        "endChar": 67
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "544734e0_ac113164",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "Given that the functions below are wrapper functions now and calling the policyutil version is only one input longer, what about having fakedms and chrome in the pre directly, rather than in a sub struct?  It adds an extra line when declaring cr and fdms, but I think it makes the resulting code cleaner and looking more like other tests.  e.g. cr.Foo() instead of helper.Chrome.Foo()",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c679b0d_724884b7",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "Tests still need access to chrome.Chrome to perform checks. FakeDMS is not required directly, but is required to refresh policies. Besides using s.PreValue() I don\u0027t know of any way to forward the instances of Chrome and FakeDMS to a test. s.PreValue() could be a tuple containing both, but I like that with the helper tests don\u0027t interact with FakeDMS at all. \n\nDo you have any other ideas? I am not attached to UserPoliciesHelper (might also need a better name), but don\u0027t see anything better.",
      "parentUuid": "544734e0_ac113164",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68e8e2b7_95efdbdd",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T19:37:05Z",
      "side": 1,
      "message": "You\u0027re right that both have to be returned by Prepare() somehow, and in a struct is the way to do that.  I\u0027m thinking of something more in line with how ARC++ pre returns both Android and Chrome.  Rather than using the arc.PreData struct directly, tests define cr :\u003d s.PreValue().(arc.PreData).Chrome and a :\u003d s.PreValue().(arc.PreData).ARC.\n\nPolicy tests using this pre could do that for cr and fdms variables.\n\nI see your point about hiding the FakeDMS from tests since it\u0027s not directly useful in most cases - but I think it\u0027s simpler in the long run to make tests that use the precondition as similar as possible to tests that do not use the precondition.  If we use the variable fdms everywhere it makes it easier to start from existing code - the same way most (maybe all) tests use cr for Chrome.\n\nI don\u0027t think it\u0027s any more challenging to use FakeDMS struct vs. this struct.  If anything, having test authors aware that Chrome is fetching policies from a fake DMS (and not, say, writing policies directly on the DUT somehow) seems like a good thing.",
      "parentUuid": "4c679b0d_724884b7",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aedbbfa9_0a9e7efe",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-07T08:52:23Z",
      "side": 1,
      "message": "Ack. Moved to using an API like ARC. Added NOLINT to be consistent with existing APIs.",
      "parentUuid": "68e8e2b7_95efdbdd",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09796e04_6ebebee8",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 30,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "ResetChrome",
      "range": {
        "startLine": 30,
        "startChar": 45,
        "endLine": 30,
        "endChar": 67
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16656a61_a90e299c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 30,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09796e04_6ebebee8",
      "range": {
        "startLine": 30,
        "startChar": 45,
        "endLine": 30,
        "endChar": 67
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cb2ac55_1adb7799",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "I don\u0027t see this function in policyutil",
      "range": {
        "startLine": 35,
        "startChar": 19,
        "endLine": 35,
        "endChar": 30
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26c877ea_22e2e804",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "see chrome.go",
      "parentUuid": "3cb2ac55_1adb7799",
      "range": {
        "startLine": 35,
        "startChar": 19,
        "endLine": 35,
        "endChar": 30
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65f33d7a_b65e63b1",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T19:37:05Z",
      "side": 1,
      "message": "Oh right.  Why split them up into different files?  There probably won\u0027t be that many functions total which live in policyutil",
      "parentUuid": "26c877ea_22e2e804",
      "range": {
        "startLine": 35,
        "startChar": 19,
        "endLine": 35,
        "endChar": 30
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8789f300_a2bc4151",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-07T08:52:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65f33d7a_b65e63b1",
      "range": {
        "startLine": 35,
        "startChar": 19,
        "endLine": 35,
        "endChar": 30
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "061c1113_c9b655f3",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "UpdateBlob",
      "range": {
        "startLine": 38,
        "startChar": 54,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2e22c8c_8c44e7a2",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "061c1113_c9b655f3",
      "range": {
        "startLine": 38,
        "startChar": 54,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14bc62d8_748d8c3c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1002858
      },
      "writtenOn": "2020-02-06T09:56:35Z",
      "side": 1,
      "message": "end with .",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01ad0906_17803167",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/pre/pre.go",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2020-02-06T10:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14bc62d8_748d8c3c",
      "revId": "aff4f60ab693b20709d994b7606243387de89338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}