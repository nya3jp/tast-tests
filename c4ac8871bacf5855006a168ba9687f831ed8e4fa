{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "53bbdb7a_acadcf4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2021-08-25T17:42:51Z",
      "side": 1,
      "message": "I just made a comment. Please take a look. Thanks.",
      "revId": "c4ac8871bacf5855006a168ba9687f831ed8e4fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c8048c8_9d9c46cc",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2021-08-25T17:42:51Z",
      "side": 1,
      "message": "I don\u0027t think you need windowReady and waitForWindowReady. They just make the code more complicate. Will this do the same thing?\n```\nif err :\u003d app.WaitForVideoActive(ctx); err !\u003d nil {\n\treturn errors.Wrap(err, ErrVideoNotActive)\n}\nif err :\u003d app.WaitForState(ctx, \"view-camera\", true); err !\u003d nil {\n\treturn errors.Wrap(err, \"failed to wait for view-camera becomes true\")\n}\ndefer func(cleanupCtx context.Context) {\n\tif err :\u003d app.Close(cleanupCtx); err !\u003d nil {\n\t    testing.ContextLog(cleanupCtx, \"Failed to close app: \", err)\n\t}\n}()",
      "revId": "c4ac8871bacf5855006a168ba9687f831ed8e4fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c77f3f4_2566a9ca",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-08-26T03:47:09Z",
      "side": 1,
      "message": "I think we need to put the \"defer func()\" part in front of those two statements so that when they hit timeout, the defer function will be executed. As a result, |windowReady| might still be needed. But please correct me if I am wrong. Thanks!",
      "parentUuid": "7c8048c8_9d9c46cc",
      "revId": "c4ac8871bacf5855006a168ba9687f831ed8e4fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6669da17_66ca0257",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2021-08-26T04:03:16Z",
      "side": 1,
      "message": "According to your original code, your defer func did nothing unless windowReady is true and windowReady is not going to equal to true unless both WaitForVideoActive and WaitForState are successful because you set it at the end of waitForWindowReady. Therefore, I suggest you to put it after. IF you need close app regardless the status of WaitForVideoActive and WaitForState, then you don\u0027t need line 355 to 358.",
      "parentUuid": "8c77f3f4_2566a9ca",
      "revId": "c4ac8871bacf5855006a168ba9687f831ed8e4fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6e86c09_0c568ef9",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-08-26T04:14:59Z",
      "side": 1,
      "message": "Let\u0027s assume we hit timeout when waiting for |app.WaitForVideoActive(ctx)|, since the |err| is not |nil| it will return an error and the remaining codes in the function won\u0027t be executed. If we put the defer function later than |app.WaitForVideoActive(ctx)|, since we haven\u0027t registered the defer function to close the app, the defer function will not be called so the app will not be closed properly.\n\nThe logic I wrote is like: Registering a defer function just in case if any of the following statements fails and returns \"(app) nil, (err) err\". If it indeed happened, we make sure the app can be closed. But if they all pass and reach the |windowReady \u003d true|, we don\u0027t do any cleanup.",
      "parentUuid": "6669da17_66ca0257",
      "revId": "c4ac8871bacf5855006a168ba9687f831ed8e4fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3fe2907_c2033e62",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2021-08-26T04:20:09Z",
      "side": 1,
      "message": "I see. Then I have one more question. \nWhat will happen if we close app when WaitForState is successful? \n\nThanks.",
      "parentUuid": "b6e86c09_0c568ef9",
      "revId": "c4ac8871bacf5855006a168ba9687f831ed8e4fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5779c6d7_3227ba8b",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-08-26T04:36:11Z",
      "side": 1,
      "message": "Sorry, I don\u0027t quite get it.\nIf |WaitForState()| succeed, we will reach |windowReady \u003d true| so app won\u0027t be closed in the defer function.",
      "parentUuid": "d3fe2907_c2033e62",
      "revId": "c4ac8871bacf5855006a168ba9687f831ed8e4fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a12cf923_d31447e7",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2021-08-26T04:39:08Z",
      "side": 1,
      "message": "My question, what happen if you close it? Will the test crash or has some side effect? If not, then just close it anyway.",
      "parentUuid": "d3fe2907_c2033e62",
      "revId": "c4ac8871bacf5855006a168ba9687f831ed8e4fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}