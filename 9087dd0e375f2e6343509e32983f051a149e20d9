{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c2acdb59_69a54b1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2022-08-09T14:58:32Z",
      "side": 1,
      "message": "LGTM",
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "572ea967_2dc86173",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-08-09T15:25:02Z",
      "side": 1,
      "message": "Why are there several suggestion popup views? Do these represent different suggestions? How do you know that the first one is always the right one? Could we instead make finder query more specific to find the right one?",
      "range": {
        "startLine": 209,
        "startChar": 97,
        "endLine": 209,
        "endChar": 105
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89581fdf_d0fe058c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-08-09T15:59:44Z",
      "side": 1,
      "message": "I don\u0027t know why this is happening exactly, but I saw at one of the runs the same popup view repeated, so it\u0027s the same data for autofill, so I just selected the first, since they are the same anyway.",
      "parentUuid": "572ea967_2dc86173",
      "range": {
        "startLine": 209,
        "startChar": 97,
        "endLine": 209,
        "endChar": 105
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aabd113_75a468a0",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-08-09T16:34:07Z",
      "side": 1,
      "message": "I checked ~10 UI tree dumps from recent test failures and couldn\u0027t find a single example when we have more than one element with class AutofillPopupSuggestionView. Do you have an example run demoing this?",
      "parentUuid": "89581fdf_d0fe058c",
      "range": {
        "startLine": 209,
        "startChar": 97,
        "endLine": 209,
        "endChar": 105
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3136f2c6_50cb3911",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-08-09T20:23:51Z",
      "side": 1,
      "message": "I tried it on a betty board\nthis was the error\n```\n2022-08-09T20:13:10.411929Z [20:13:03.978] Error at autofill_address_enabled.go:215: allow: Failed to trigger and use address autofill: failed to clicking the Email field and choosing the suggested address on step 2: context deadline exceeded; last error follows: click may not have been received yet: Uncaught (in promise): \"multiple nodes matched, if you expect this and only want the first use First(): {className: \\\"AutofillPopupSuggestionView\\\", role: listBoxOption}\"\n2022-08-09T20:13:10.412070Z [20:13:03.978] Stack trace:\nallow: Failed to trigger and use address autofill\n\tat chromiumos/tast/local/bundles/cros/policy.AutofillAddressEnabled.func1 (autofill_address_enabled.go:215)\n\tat chromiumos/tast/internal/testing.(*State).Run.func1 (state.go:648)\n\tat runtime.goexit (asm_amd64.s:1571)\nfailed to clicking the Email field and choosing the suggested address on step 2\n\tat chromiumos/tast/common/action.Combine.func1 (action.go:42)\n\tat chromiumos/tast/local/bundles/cros/policy.AutofillAddressEnabled.func1 (autofill_address_enabled.go:214)\n\tat chromiumos/tast/internal/testing.(*State).Run.func1 (state.go:648)\n\tat runtime.goexit (asm_amd64.s:1571)\ncontext deadline exceeded; last error follows\n\tat chromiumos/tast/internal/testingutil.Poll (poll.go:87)\n\tat chromiumos/tast/testing.Poll (util.go:43)\n\tat chromiumos/tast/local/chrome/uiauto.(*Context).DoDefaultUntil.func1 (automation.go:796)\n\tat chromiumos/tast/common/action.Combine.func1 (action.go:41)\n\tat chromiumos/tast/local/bundles/cros/policy.AutofillAddressEnabled.func1 (autofill_address_enabled.go:214)\n\tat chromiumos/tast/internal/testing.(*State).Run.func1 (state.go:648)\n\tat runtime.goexit (asm_amd64.s:1571)\nclick may not have been received yet\n\tat chromiumos/tast/local/chrome/uiauto.(*Context).DoDefaultUntil.func1.1 (automation.go:801)\n\tat chromiumos/tast/internal/testingutil.Poll (poll.go:64)\n\tat chromiumos/tast/testing.Poll (util.go:43)\n\tat chromiumos/tast/local/chrome/uiauto.(*Context).DoDefaultUntil.func1 (automation.go:796)\n\tat chromiumos/tast/common/action.Combine.func1 (action.go:41)\n\tat chromiumos/tast/local/bundles/cros/policy.AutofillAddressEnabled.func1 (autofill_address_enabled.go:214)\n\tat chromiumos/tast/internal/testing.(*State).Run.func1 (state.go:648)\n\tat runtime.goexit (asm_amd64.s:1571)\nUncaught (in promise): \"multiple nodes matched, if you expect this and only want the first use First(): {className: \\\"AutofillPopupSuggestionView\\\", role: listBoxOption}\"\n\tat chromiumos/tast/local/chrome/internal/cdputil.(*Conn).Eval (conn.go:124)\n\tat chromiumos/tast/local/chrome/internal/driver.(*Conn).Eval (conn.go:107)\n\tat chromiumos/tast/local/chrome/internal/driver.(*TestConn).Eval (conn.go:256)\n\tat chromiumos/tast/local/chrome/uiauto.(*Context).Exists.func1 (automation.go:452)\n\tat chromiumos/tast/local/chrome/uiauto.(*Context).DoDefaultUntil.func1.1 (automation.go:797)\n\tat chromiumos/tast/internal/testingutil.Poll (poll.go:64)\n\tat chromiumos/tast/testing.Poll (util.go:43)\n\tat chromiumos/tast/local/chrome/uiauto.(*Context).DoDefaultUntil.func1 (automation.go:796)\n```\n\nand this was the screenshot https://screenshot.googleplex.com/32FQpoNViVu8JxN.png\nbut it\u0027s interesting, it\u0027s not duplicated in the ui_tree itself which is strange.",
      "parentUuid": "8aabd113_75a468a0",
      "range": {
        "startLine": 209,
        "startChar": 97,
        "endLine": 209,
        "endChar": 105
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d197bfd2_3c699a76",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1521721
      },
      "writtenOn": "2022-08-09T20:41:05Z",
      "side": 1,
      "message": "It\u0027s also weird how the second item there on the list has a name of \"TesterS\".\n\nI think it\u0027s because there is something racing on the type vs changing the input field on the form because it seems like the first letter of the second value on the list of addressValues (`fieldValue: \"Some address 123\", htmlFieldID: \"street-address\"`) has ended up as part of the name field\u0027s value (`fieldValue: \"Tester\", htmlFieldID: \"name\"`). If I remember correctly, I have seen a similar error in the AutofillCreditCardEnabled test where the first letter of the following value has ended up as part of the previous input field\u0027s value.",
      "parentUuid": "3136f2c6_50cb3911",
      "range": {
        "startLine": 209,
        "startChar": 97,
        "endLine": 209,
        "endChar": 105
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1d18aaf_20a0912c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-08-10T11:26:52Z",
      "side": 1,
      "message": "Turns out I was looking at different kind of failures and for a different test (same name, but without \".lacros\" suffix). My screenshots show settings page with 2  configured addresses (https://screenshot.googleplex.com/6oj9QSd4tjjMDFs), not a web page where they are to be autocompleted. The bug associated with this CL is for \".lacros\" variant, which seems to fail because Lacros browser does not start at all: https://screenshot.googleplex.com/3v7wL8xHCNcFuWM. My suspicion is that relevant error message is in chrome.log:\n\n```\n2022-08-06T00:07:40.092279Z WARNING chrome[1265:1265]: [browser_manager.cc(1279)] Mojo to lacros-chrome is disconnected. Terminating lacros-chrome\n```\n\nHence, IMHO this CL either needs to be assigned to a different bug, e.g. http://b/239151610. It is still useful, but having current bug (https://crbug.com/1350107) on it is misleading.\n\n+1 to figuring out why we have two suggestions with different names, but as a temporary fix, I would recommend to match by `name\u003dTester` in additional to matching by `className\u003dAutofillPopupSuggestionView`. Just picking the first has a risk of the order being non-deterministic and test failing flakily.",
      "parentUuid": "d197bfd2_3c699a76",
      "range": {
        "startLine": 209,
        "startChar": 97,
        "endLine": 209,
        "endChar": 105
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd74ebc8_b1618fc1",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-08-10T11:28:28Z",
      "side": 1,
      "message": "Of course, since CL is already merged, you won\u0027t be able to change the bug number, but please use correct bug ID for the follow-up.",
      "parentUuid": "f1d18aaf_20a0912c",
      "range": {
        "startLine": 209,
        "startChar": 97,
        "endLine": 209,
        "endChar": 105
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "894ffba3_ae1f059a",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1521721
      },
      "writtenOn": "2022-08-10T12:21:20Z",
      "side": 1,
      "message": "\u003e As a temporary fix, I would recommend to match by  name\u003dTester  in additional to matching by  className\u003dAutofillPopupSuggestionView . Just picking the first has a risk of the order being non-deterministic and test failing flakily.\n\nThis has to do with the same racing (when moving to the next text field \u0026 typing to the field) as described in the bug you linked (b/239151610). Not sure if `name\u003dTester` will remove all the flakiness since due to the racing, it can be that there is only one suggestion having the name `TesterS` instead of the wanted `Tester` in which case the test would again fail. If choosing `First()` shouldn\u0027t the items on the list always be alphabetically ordered? So `Tester` should always be before `TesterS` on the list?",
      "parentUuid": "fd74ebc8_b1618fc1",
      "range": {
        "startLine": 209,
        "startChar": 97,
        "endLine": 209,
        "endChar": 105
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff77b6c8_96e37f3c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-08-10T12:56:21Z",
      "side": 1,
      "message": "Yeah the problem is with `Type` function in the keyboard, I\u0027m not sure why this behavior is happening, I even tried to close the keyboard and create a new one in the loop during entering the field values, but it\u0027s still the same issue.\n\nI did few trials and I think to make the clicking stable we need to make sure that the element is visible first, so the following is stable for the clicking issue:\n```\nsuggestionPopup :\u003d nodewith.Role(role.ListBoxOption).ClassName(\"AutofillPopupSuggestionView\")\nif err :\u003d uiauto.Combine(\"clicking the Email field and choosing the suggested address\",\n\tui.WaitUntilExists(nodewith.Name(\"OK\").Role(role.Button).ClassName(\"test-target-button\")),\n\tui.MakeVisible(nodewith.Role(role.InlineTextBox).Name(\"Email\")),\n\tui.DoDefault(nodewith.Role(role.InlineTextBox).Name(\"Email\")),\n\tui.WithTimeout(45*time.Second).WaitUntilExists(suggestionPopup),\n\tui.DoDefault(suggestionPopup),\n\tui.WaitUntilExists(nodewith.Role(role.InlineTextBox).Name(addressValues[1].fieldValue)),\n)(ctx); err !\u003d nil {\n\ts.Fatal(\"Failed to trigger and use address autofill: \", err)\n}\n```\n\nHowever the race condition for typing the fields is still persistent, and I don\u0027t understand why it\u0027s happening? Is there any threading here?",
      "parentUuid": "894ffba3_ae1f059a",
      "range": {
        "startLine": 209,
        "startChar": 97,
        "endLine": 209,
        "endChar": 105
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14d4ddf1_1946b7da",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-08-09T15:25:02Z",
      "side": 1,
      "message": "Why is click replaced with default action here? Is doing a default action more universal somehow?",
      "range": {
        "startLine": 212,
        "startChar": 8,
        "endLine": 212,
        "endChar": 22
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "079f4253_822be076",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-08-09T15:25:02Z",
      "side": 1,
      "message": "This will repeatedly click on Email field for suggestion popup to show up. I wouldn\u0027t expect normal users having to do the same. Why do we need to do that in the test?\n\nSame for accepting the suggestion below.",
      "range": {
        "startLine": 212,
        "startChar": 8,
        "endLine": 212,
        "endChar": 22
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd2c805c_2ce95d2b",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-08-09T15:59:44Z",
      "side": 1,
      "message": "The problem is some times the popup is a bit slow to appear and the first click miss, so we need to do another click.\nI\u0027d argue that this is actually what the users will do, if they are clicking quickly and the first ones miss somehow, then they will click till the popup appears.",
      "parentUuid": "079f4253_822be076",
      "range": {
        "startLine": 212,
        "startChar": 8,
        "endLine": 212,
        "endChar": 22
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8b8f861_89510c6a",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-08-09T15:59:44Z",
      "side": 1,
      "message": "more details are here: https://docs.google.com/document/d/1RRo30-R83YWabBFb-Y1zsyl2UcogjaZj0_JuOQ8anBk/edit?usp\u003dsharing\u0026resourcekey\u003d0-7ju-AaBFfUVgXjkm39TlTA",
      "parentUuid": "14d4ddf1_1946b7da",
      "range": {
        "startLine": 212,
        "startChar": 8,
        "endLine": 212,
        "endChar": 22
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "012bd6b4_ee10ef1b",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/autofill_address_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-08-09T16:34:07Z",
      "side": 1,
      "message": "IMHO we should be fixing for the suggestion to show up after the first click rather than simulating frustrated user experience in tests. In other words, this test is failing correctly and what needs to be fixed is how the feature works. Have you also tried increasing timeout? Could it be that suggestion pop does show up, but needs more time to do so?",
      "parentUuid": "bd2c805c_2ce95d2b",
      "range": {
        "startLine": 212,
        "startChar": 8,
        "endLine": 212,
        "endChar": 22
      },
      "revId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "9087dd0e375f2e6343509e32983f051a149e20d9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}