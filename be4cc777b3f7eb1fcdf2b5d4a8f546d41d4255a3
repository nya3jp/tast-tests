{
  "comments": [
    {
      "key": {
        "uuid": "f3b1e119_1723c67e",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 401,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-01-21T08:39:36Z",
      "side": 1,
      "message": "style: Please avoid naked returns.\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#naked-returns",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 401,
        "endChar": 7
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce9beee8_d3a89167",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 401,
      "author": {
        "id": 1314760
      },
      "writtenOn": "2020-02-27T19:57:18Z",
      "side": 1,
      "message": "Named result parameters are used in order to document the return values. iirc naked returns are required for named result parameters.\n\nPlease let me know if I should avoid named result parameters here or if there\u0027s a way to use named result parameters but not use naked returns. Thank you.",
      "parentUuid": "f3b1e119_1723c67e",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 401,
        "endChar": 7
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "458308f3_10fc78ed",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 401,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-28T07:00:36Z",
      "side": 1,
      "message": "Named results are perfectly fine, but naked returns are not. From the referenced guide:\n\n\u003e Naked returns are okay if the function is a handful of lines. Once it\u0027s a medium sized function, be explicit with your return values. Corollary: it\u0027s not worth it to name result parameters just because it enables you to use naked returns. Clarity of docs is always more important than saving a line or two in your function.\n\nFor example,\n\n returnedErr \u003d errors.Errorf(\"missing parameters in token status output, got: %v\", params)\n return\n\nshould be\n\n return \"\", \"\", 0, errors.Errorf(\"missing parameters in token status output, got: %v\", params)\n\ninstead.",
      "parentUuid": "ce9beee8_d3a89167",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 401,
        "endChar": 7
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dcef881_78a626ff",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 401,
      "author": {
        "id": 1314760
      },
      "writtenOn": "2020-03-02T13:43:39Z",
      "side": 1,
      "message": "Thanks. Done.",
      "parentUuid": "458308f3_10fc78ed",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 401,
        "endChar": 7
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c52b574_4061bb37",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 410,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-01-21T08:39:36Z",
      "side": 1,
      "message": "nit: In usual convention in Go, if a function returns (T, error), the T value is unspecified if non-nil error is returned. Therefore could you reverse the order here, i.e.\n\n out, err :\u003d ...\n if err !\u003d nil {\n   ...\n }\n cmdOutput \u003d string(out)",
      "range": {
        "startLine": 410,
        "startChar": 2,
        "endLine": 410,
        "endChar": 25
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e6ed0af_2852b37c",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 410,
      "author": {
        "id": 1314760
      },
      "writtenOn": "2020-02-27T19:57:18Z",
      "side": 1,
      "message": "The reason why this is done this way is because I want to leave the error message in the returned error. i.e. cmdOutput is used in errors.Wrapf().\n\nThe CryptohomeBinary.* series have result parameters that are similar to Cmd.Output() in https://chromium.googlesource.com/chromiumos/platform/tast-tests/+/master/src/chromiumos/tast/local/testexec/testexec.go\nWhereby the resulting command output is still valid/defined (nil or the command output) even when an error is returned. For instance, a process may terminate with a non-zero error code, and we\u0027ll still get its stdout/stderr output.",
      "parentUuid": "8c52b574_4061bb37",
      "range": {
        "startLine": 410,
        "startChar": 2,
        "endLine": 410,
        "endChar": 25
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2268bca0_49ad6653",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 410,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-28T07:00:36Z",
      "side": 1,
      "message": "I see, you\u0027re right. Thanks for the explanation.",
      "parentUuid": "6e6ed0af_2852b37c",
      "range": {
        "startLine": 410,
        "startChar": 2,
        "endLine": 410,
        "endChar": 25
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1758e0ad_c99dc5d0",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 412,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-28T07:00:36Z",
      "side": 1,
      "message": "huge nit: mind removing the trailing space?",
      "range": {
        "startLine": 412,
        "startChar": 67,
        "endLine": 412,
        "endChar": 68
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3784192f_40e39ae8",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 412,
      "author": {
        "id": 1314760
      },
      "writtenOn": "2020-03-02T13:43:39Z",
      "side": 1,
      "message": "Nice catch. Done.",
      "parentUuid": "1758e0ad_c99dc5d0",
      "range": {
        "startLine": 412,
        "startChar": 67,
        "endLine": 412,
        "endChar": 68
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "942542de_8f1524e2",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 418,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-01-21T08:39:36Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 417,
        "startChar": 2,
        "endLine": 418,
        "endChar": 17
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9f5d8dd_f0dc380b",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 418,
      "author": {
        "id": 1314760
      },
      "writtenOn": "2020-02-27T19:57:18Z",
      "side": 1,
      "message": "As explained above.",
      "parentUuid": "942542de_8f1524e2",
      "range": {
        "startLine": 417,
        "startChar": 2,
        "endLine": 418,
        "endChar": 17
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a35e4af_224e3f80",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 424,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-01-21T08:39:36Z",
      "side": 1,
      "message": "How long will this string be? If it\u0027s too long it might be unsuitable to include in error.",
      "range": {
        "startLine": 424,
        "startChar": 66,
        "endLine": 424,
        "endChar": 75
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c101f9d6_3812304f",
        "filename": "src/chromiumos/tast/common/hwsec/utility_cryptohome_binary.go",
        "patchSetId": 30
      },
      "lineNbr": 424,
      "author": {
        "id": 1314760
      },
      "writtenOn": "2020-02-27T19:57:18Z",
      "side": 1,
      "message": "Usually it\u0027s one line, please see:\nhttps://chromium.googlesource.com/chromiumos/platform2/+/4ebd8fac7c94aca1d0d372106720ef7cdb5dfef3/cryptohome/cryptohome.cc#1929",
      "parentUuid": "7a35e4af_224e3f80",
      "range": {
        "startLine": 424,
        "startChar": 66,
        "endLine": 424,
        "endChar": 75
      },
      "revId": "be4cc777b3f7eb1fcdf2b5d4a8f546d41d4255a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}