{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8a4f964c_37111bc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2021-02-24T02:00:27Z",
      "side": 1,
      "message": "PTAL, as discussed offline this CL now only adds 720px{vp9,h264} ~~~",
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "541ed7d1_05e4d0dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2021-03-01T01:31:17Z",
      "side": 1,
      "message": "Some comments. I think they apply to the \nfollow-up CLs so we can discuss here first.",
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca1e206c_433e0dc4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2021-03-01T05:16:59Z",
      "side": 1,
      "message": "SGTM~!",
      "parentUuid": "541ed7d1_05e4d0dd",
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cb5c578_820eec06",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/playback_perf.go",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2021-03-01T01:31:17Z",
      "side": 1,
      "message": "Instead of adding an extra enumeration, which itself needs a \ncomparison etc, what about:\n- adding here directly a string\n- only initializing it in the new _lacros variants\n- comparing it to null in l.691, and if not null then using it for lacros.Setup ?\nThat way there\u0027ll be less changed lines overall.",
      "range": {
        "startLine": 21,
        "startChar": 1,
        "endLine": 21,
        "endChar": 30
      },
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb73f356_a9226808",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/playback_perf.go",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2021-03-01T05:16:59Z",
      "side": 1,
      "message": "Are we concerned about the number of changed lines?\n\nThis pattern is used a number of other tests so IMO it is better to stick to the existing pattern rather than having multiple patterns used over the codebase.\n\nWDYT?",
      "parentUuid": "2cb5c578_820eec06",
      "range": {
        "startLine": 21,
        "startChar": 1,
        "endLine": 21,
        "endChar": 30
      },
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30f3ac1e_8aac7d6b",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/playback_perf.go",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2021-03-01T17:04:00Z",
      "side": 1,
      "message": "\u003e Are we concerned about the number of changed lines?\nMore than that, I guess one day LaCrOS will be shipped and all\nthese tests will just run on it by default, right? If yes then\nhaving a default value for this parameter would be best, so we\ndon\u0027t have to come back and change this file again when we\nflip the feature flag (we\u0027ll only need to remove the _lacros\nvariants).\n\nMaybe we could have a small parameter constructor function here\nand give this parameter a default value?\n\n\u003e \n\u003e This pattern is used a number of other tests so IMO it is better to stick to the existing pattern rather than having multiple patterns used over the codebase.\n\u003e \n\u003e WDYT?",
      "parentUuid": "fb73f356_a9226808",
      "range": {
        "startLine": 21,
        "startChar": 1,
        "endLine": 21,
        "endChar": 30
      },
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "352eb767_24ea9468",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/playback_perf.go",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-03-02T04:16:36Z",
      "side": 1,
      "message": "\u003e \u003e Are we concerned about the number of changed lines?\n\u003e More than that, I guess one day LaCrOS will be shipped and all\n\u003e these tests will just run on it by default, right? If yes then\n\u003e having a default value for this parameter would be best, so we\n\u003e don\u0027t have to come back and change this file again when we\n\u003e flip the feature flag (we\u0027ll only need to remove the _lacros\n\u003e variants).\n\u003e \n\nMaybe introducing a constant for default flag? Then, the change on flipping should be smaller.\nI think it\u0027s optional, though, because for long term, we\u0027ll run only on lacros, so the enum can be removed eventually.\n\n\u003e Maybe we could have a small parameter constructor function here\n\u003e and give this parameter a default value?\n\nPlease, please do not introduce functions for creating test metadata (testing.Test).\nTest metadata must be statically fixed. Although, it is written in go,\nfor developers convenience, we do not expect that is \"calculated\" somehow under the environment, but we expect it is \"declared\" somehow.\nThis is because cros infra needs to understand it.\nIf we introduce a function, it is very difficult to ensure the situation.\nI understand it may look somewhat verbose, specifically this specific case,\nbut it is important from overall maintenance point of view, and thank you for your understanding.\n\n\u003e \n\u003e \u003e \n\u003e \u003e This pattern is used a number of other tests so IMO it is better to stick to the existing pattern rather than having multiple patterns used over the codebase.\n\u003e \u003e \n\u003e \u003e WDYT?",
      "parentUuid": "30f3ac1e_8aac7d6b",
      "range": {
        "startLine": 21,
        "startChar": 1,
        "endLine": 21,
        "endChar": 30
      },
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82b75159_6913f24a",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/playback_perf.go",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2021-03-02T19:50:17Z",
      "side": 1,
      "message": "I\u0027m not sure I said what I meant: a parameter generator would only\naffect the |Val| entry, and it\u0027s used for example in [1] for to\ncompose different small variations of the test parameters.\n\n[1] https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/video/encode_accel.go?q\u003dencode_accel.go%20encode.Make",
      "parentUuid": "352eb767_24ea9468",
      "range": {
        "startLine": 21,
        "startChar": 1,
        "endLine": 21,
        "endChar": 30
      },
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39098553_36d9bc3d",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/playback_perf.go",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2021-03-03T09:48:44Z",
      "side": 1,
      "message": "I think that usage of functions to construct Tast test Val params isn\u0027t strictly in-line with idiomatic Tast, like hidehiko@ said. Functionally it looks fine but idealistically the configuration should be static IIUC.\n\nW.R.T. reducing the number of lines. My understanding is that idiomatic Go favours explicitness over implicitness or reducing number of lines, and that this is the idiomatic Tast and Go way to do this, rather than using default values. But, I\u0027m happy to do it a different way if you want, e.g. relying on the default value for ChromeType. It won\u0027t be a simple switch of default value in the future though, since we will probably need some special configuration for lacros - we\u0027d have to at least audit each default value usage in the future before switching them.\n\nWDYT?",
      "parentUuid": "82b75159_6913f24a",
      "range": {
        "startLine": 21,
        "startChar": 1,
        "endLine": 21,
        "endChar": 30
      },
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dd17323_c556ff15",
        "filename": "src/chromiumos/tast/local/media/pre/fixture.go",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2021-03-01T01:31:17Z",
      "side": 1,
      "message": "Why modify all these and not use |chromeVModuleArgs| which\nis already a chrome.ExtraArgs on ToT?\n\nI think we could convert a chrome.ExtraArgs into an args...\nfor the conversions in e.g. l.40. (i.e. []string should be\nconvertible to ...string).",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69a3dc4f_e3f81450",
        "filename": "src/chromiumos/tast/local/media/pre/fixture.go",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1179631
      },
      "writtenOn": "2021-03-01T05:16:59Z",
      "side": 1,
      "message": "chrome.ExtraArgs isn\u0027t a []string, it\u0027s a closure that appends arguments to the config.Config struct. I may have misunderstood your comment - but I don\u0027t see an easy way to convert from a chrome.ExtraArgs to a []string.\n\nI\u0027m happy to do this bit in a different way though. FWIW I also looked into making lacros accept chrome.ExtraArgs directly but it turns out to be a very messy way to do it (and a huge CL).",
      "parentUuid": "9dd17323_c556ff15",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0570eb8_9aa0ab5d",
        "filename": "src/chromiumos/tast/local/media/pre/fixture.go",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2021-03-01T17:04:00Z",
      "side": 1,
      "message": "\u003e chrome.ExtraArgs isn\u0027t a []string, it\u0027s a closure that appends arguments to the config.Config struct. I may have misunderstood your comment - but I don\u0027t see an easy way to convert from a chrome.ExtraArgs to a []string.\n\nAh I see - well if there\u0027s no easy way to get the arguments \"back out\" from\nchrome.ExtraArgs as a []string, then what we do here is fine.\n\n\u003e \n\u003e I\u0027m happy to do this bit in a different way though. FWIW I also looked into making lacros accept chrome.ExtraArgs directly but it turns out to be a very messy way to do it (and a huge CL).",
      "parentUuid": "69a3dc4f_e3f81450",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "f6b656f72d87c496d448388dcbcff63b8003dd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}