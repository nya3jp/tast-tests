{
  "comments": [
    {
      "key": {
        "uuid": "6bb2645b_14ab97b2",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 9
      },
      "lineNbr": 263,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-03-10T13:01:18Z",
      "side": 1,
      "message": "I think this should be ShelfInfo.\nIIUC, *ShelfInfo is a pointer to ShelfInfo which is initialized as nil, and no space for actual ShelfInfo is allocated.",
      "range": {
        "startLine": 263,
        "startChar": 7,
        "endLine": 263,
        "endChar": 17
      },
      "revId": "2149161032e149c4516b6e7ac4dbf1a4adbcb527",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae9de548_5beffc6b",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 9
      },
      "lineNbr": 265,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-03-10T13:01:18Z",
      "side": 1,
      "message": "Could you try\nc.Call, which is recently added? https://cs.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/chrome/conn.go?type\u003dcs\u0026q\u003dCall+Conn+chrome\u0026sq\u003dpackage:%5Echromeos_public$%7C%5Echromeos_internal$\u0026g\u003d0\u0026l\u003d203",
      "range": {
        "startLine": 265,
        "startChar": 11,
        "endLine": 265,
        "endChar": 45
      },
      "revId": "2149161032e149c4516b6e7ac4dbf1a4adbcb527",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8c20821_23bf9b61",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 9
      },
      "lineNbr": 278,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-03-10T13:01:18Z",
      "side": 1,
      "message": "nit: () is not needed.",
      "range": {
        "startLine": 278,
        "startChar": 9,
        "endLine": 278,
        "endChar": 40
      },
      "revId": "2149161032e149c4516b6e7ac4dbf1a4adbcb527",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f3af061_d0541af2",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 9
      },
      "lineNbr": 288,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-03-10T13:01:18Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 288,
        "startChar": 9,
        "endLine": 288,
        "endChar": 32
      },
      "revId": "2149161032e149c4516b6e7ac4dbf1a4adbcb527",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df4fdd0f_13e4fd72",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 9
      },
      "lineNbr": 357,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-03-10T13:01:18Z",
      "side": 1,
      "message": "Looks the err already contains this information.\nI\u0027d write return err.",
      "range": {
        "startLine": 357,
        "startChar": 27,
        "endLine": 357,
        "endChar": 57
      },
      "revId": "2149161032e149c4516b6e7ac4dbf1a4adbcb527",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdf34f03_2ec6007c",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 9
      },
      "lineNbr": 361,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-03-10T13:01:18Z",
      "side": 1,
      "message": "err is nil here. No need to wrap.",
      "range": {
        "startLine": 361,
        "startChar": 23,
        "endLine": 361,
        "endChar": 26
      },
      "revId": "2149161032e149c4516b6e7ac4dbf1a4adbcb527",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb46e8d3_523a9a97",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 9
      },
      "lineNbr": 361,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-03-10T13:01:18Z",
      "side": 1,
      "message": "What\u0027s got should come first.\nhttps://github.com/golang/go/wiki/TestComments#got-before-want\n\nHow about:\nreturn errors.Errorf(\"got hotseat (state, animating) \u003d (%v, %v); want (%v, false)\", info.HotseatState, info.IsAnimating, state)",
      "range": {
        "startLine": 361,
        "startChar": 29,
        "endLine": 361,
        "endChar": 151
      },
      "revId": "2149161032e149c4516b6e7ac4dbf1a4adbcb527",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "357d0f11_c5198de6",
        "filename": "src/chromiumos/tast/local/chrome/ash/shelf.go",
        "patchSetId": 9
      },
      "lineNbr": 380,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-03-10T13:01:18Z",
      "side": 1,
      "message": "Just return the err, or could you report some information in the context of SwipeUpHotseatAndWaitForCompletion, instead of the operation that returned the error?",
      "range": {
        "startLine": 380,
        "startChar": 26,
        "endLine": 380,
        "endChar": 56
      },
      "revId": "2149161032e149c4516b6e7ac4dbf1a4adbcb527",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}