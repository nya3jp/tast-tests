{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "66bf3215_0f9ad4de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2022-05-23T16:05:43Z",
      "side": 1,
      "message": "Still LGTM",
      "revId": "2550d9601c6b58144bbeb22cdd0647f102811548",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bc221f1_e959d60e",
        "filename": "src/chromiumos/tast/local/graphics/perf.go",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2022-05-23T16:08:55Z",
      "side": 1,
      "message": "nit: Dram -\u003e DRAM\n\nhttps://g3doc.corp.google.com/go/g3doc/style/decisions.md?cl\u003dhead#initialisms",
      "range": {
        "startLine": 484,
        "startChar": 12,
        "endLine": 484,
        "endChar": 17
      },
      "revId": "2550d9601c6b58144bbeb22cdd0647f102811548",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ec1f4f8_9cdcaf5a",
        "filename": "src/chromiumos/tast/local/graphics/perf.go",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1526622
      },
      "writtenOn": "2022-05-23T16:56:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bc221f1_e959d60e",
      "range": {
        "startLine": 484,
        "startChar": 12,
        "endLine": 484,
        "endChar": 17
      },
      "revId": "2550d9601c6b58144bbeb22cdd0647f102811548",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9c6f2d8_76f2b897",
        "filename": "src/chromiumos/tast/local/graphics/perf.go",
        "patchSetId": 2
      },
      "lineNbr": 497,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2022-05-23T16:08:55Z",
      "side": 1,
      "message": "this should be be avoided.\n\nThe Tast philosophy is that the test either passes or fails... but there is no \"not supported\".\n\nAnd the \"only run on supported hw\" is managed by the dependencies. Perhaps a new one should be added for this case: http://go/tast-deps",
      "range": {
        "startLine": 496,
        "startChar": 0,
        "endLine": 497,
        "endChar": 12
      },
      "revId": "2550d9601c6b58144bbeb22cdd0647f102811548",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f62d4415_bc136acf",
        "filename": "src/chromiumos/tast/local/graphics/perf.go",
        "patchSetId": 2
      },
      "lineNbr": 497,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2022-05-23T16:14:10Z",
      "side": 1,
      "message": "I disagree on the basis that this is a performance metric that may\nor may not be reported. Plenty of examples abound of such situation.\nThe test itself would not fail based on this metric not being \npresent; OTOH duplicating the test to have a dependency would \nintroduce an unwieldy maintenance complexity (see e.g. \nBatteryDischarge test variants all over).",
      "parentUuid": "c9c6f2d8_76f2b897",
      "range": {
        "startLine": 496,
        "startChar": 0,
        "endLine": 497,
        "endChar": 12
      },
      "revId": "2550d9601c6b58144bbeb22cdd0647f102811548",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38a0d76f_a4095ae7",
        "filename": "src/chromiumos/tast/local/graphics/perf.go",
        "patchSetId": 2
      },
      "lineNbr": 497,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2022-05-23T17:08:02Z",
      "side": 1,
      "message": "Fine if that metric is not reported on unsupported platforms.\n\nBut the problem is that the test assumes that \"exec.Command()\" fails because mtk_dram_tool is run on unsupported platforms... but it could be failing for other reasons. And that should be avoidewd.\n\nOne possibly way to solve it:\n\n- Add a different check, something that guarantees mtk_dram_tool can run on the platform... I\u0027m not familiar with mtk_dram_tool, but perhaps there is something that is exposed in /proc or /sys or something\n\n- rename the function from `MeasureDRAMBandwidth` to `MaybeMeasureDRAMBandwidth`...  so that it implies that it might not run\n\n- and update the docstring of the function",
      "parentUuid": "f62d4415_bc136acf",
      "range": {
        "startLine": 496,
        "startChar": 0,
        "endLine": 497,
        "endChar": 12
      },
      "revId": "2550d9601c6b58144bbeb22cdd0647f102811548",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6cd0b04_a01b4fde",
        "filename": "src/chromiumos/tast/local/graphics/perf.go",
        "patchSetId": 2
      },
      "lineNbr": 497,
      "author": {
        "id": 1526622
      },
      "writtenOn": "2022-05-23T17:22:41Z",
      "side": 1,
      "message": "FWIW unsupported platform is supposed to be the only reason mtk_dram_tool will fail. If there are bugs in that tool, the system is fairly likely to panic anyway.\n\nChecking if mtk_dram_tool is supported on a given platform requires parsing the device tree, which feels fairly involved for a test. As a compromise, would we maybe be able to parse the output of a failed mtk_dram_tool run and check if it contains the string \"Error! Incompatible device!\" ?",
      "parentUuid": "38a0d76f_a4095ae7",
      "range": {
        "startLine": 496,
        "startChar": 0,
        "endLine": 497,
        "endChar": 12
      },
      "revId": "2550d9601c6b58144bbeb22cdd0647f102811548",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}