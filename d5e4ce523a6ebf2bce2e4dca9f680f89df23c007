{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "73fbca67_c511b157",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_english_typing.go",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2021-11-29T01:30:29Z",
      "side": 1,
      "message": "This seems dangerous. Why is it shared between tests? Was this a design decision or is it just how preconditions work? It seems like it shouldn\u0027t be shared - is there anything we can do about this?",
      "revId": "d5e4ce523a6ebf2bce2e4dca9f680f89df23c007",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0bfce27_b888f0ff",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_english_typing.go",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-11-29T21:30:48Z",
      "side": 1,
      "message": "UserContext is designed to work along the chrome instance. A precondition can work for multiple tests with the same Chrome instance reused. It is the design.\n\nbtw, UserContext and UserAction both have attributes and tags.\n\nUC attributes and tags will be permanent available in the Chrome instance whilst UA attributes and tags only valid in the single action.\n\nIn this test, since all validations are using one single input field, so I use uc.attribute instead of ua.attribute.",
      "parentUuid": "73fbca67_c511b157",
      "revId": "d5e4ce523a6ebf2bce2e4dca9f680f89df23c007",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11f79061_fc0057a6",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_english_typing.go",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2021-11-29T23:34:05Z",
      "side": 1,
      "message": "Instead of resetting it, could we make sure that we always copy the UC from the precondition, instead of modifying it? Seems like this could result in AttributeInputField being set in non-input tests which also use this precondition?",
      "parentUuid": "f0bfce27_b888f0ff",
      "revId": "d5e4ce523a6ebf2bce2e4dca9f680f89df23c007",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "702f1749_08edd453",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_english_typing.go",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-11-29T23:57:26Z",
      "side": 1,
      "message": "Thanks for the comment, Matt.\n\nOnce precondition / fixture enabled, it is used across tests. precondition status is not maintained in Tast infra so far. \n\nFor example:\n1. Start precondition (e.g. PreTablet) in tablet mode\n2. in the first test, it manually switch device to Clamshell mode but do not revert it back after test.\n3. in the second test using `PreTablet`, it will assume the device mode is still Tablet as claimed.\n\nSo there are 2 ways to maintain test state:\n1. In precondition implementation: check real-time device information and expectation, reset Chrome instance if it is out-of-sync.\n\n2. Using precondition wide variable (UserContext) to record the latest state if a major change is made. This is not ideal, but can avoid extra step to query the real device state. Secondly, each test can maintain its own interest fact of the device without touch precondition. \n\nLast, AttributeInputField attribute is removed in the next line defer function. Why do you think it can remain to the next non-input tests?",
      "parentUuid": "11f79061_fc0057a6",
      "revId": "d5e4ce523a6ebf2bce2e4dca9f680f89df23c007",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "773b40b0_2b89eb0c",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_english_typing.go",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2021-11-30T01:36:42Z",
      "side": 1,
      "message": "My concern comes not from this test, but from the API design itself. I don\u0027t think we can rely on users of the library to remove attributes once they are done, because it\u0027s heavily ingrained into a user\u0027s mind that variables aren\u0027t maintained between tests. This is made worse by the fact that sometimes, it\u0027s correct to remove attributes after the test, and sometimes you shouldn\u0027t (eg. if you change state of the device).\n\nIMO, we should divide UserAction attributes into device config and test config. The device config would store any state that should not be reset between tests, and the test config should store any state that should be reset between tests, and be automatically cleared at the start of the test. Does this seem reasonable? Am I misunderstanding something?",
      "parentUuid": "702f1749_08edd453",
      "revId": "d5e4ce523a6ebf2bce2e4dca9f680f89df23c007",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a342084_97395e3b",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2021-11-29T01:30:29Z",
      "side": 1,
      "message": "does inputfield need to be converted to string? (also in other files)",
      "revId": "d5e4ce523a6ebf2bce2e4dca9f680f89df23c007",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9182dfb_5f72ddcc",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-11-29T21:30:48Z",
      "side": 1,
      "message": "Yes, it is required otherwise compiler complains.",
      "parentUuid": "5a342084_97395e3b",
      "revId": "d5e4ce523a6ebf2bce2e4dca9f680f89df23c007",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82bc06e3_3aeb443b",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2021-11-30T01:36:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d9182dfb_5f72ddcc",
      "revId": "d5e4ce523a6ebf2bce2e4dca9f680f89df23c007",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}