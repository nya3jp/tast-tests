{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8fea8329_2c8cb3d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-07-11T16:12:37Z",
      "side": 1,
      "message": "A future alternative may be to move this option to the `click` function as an optional argument, and have it accept the selector of a \u0027safe\u0027 element, i.e.\n\n`uidetection.click(..., WithMoveMouseAfterClick(\u003cselector of known element\u003e))`\n\nThat way each step clearly defines additional logic which could help address flakiness if doing it at this general level starts to show stability problems.",
      "revId": "be26996a47e5cadae739ad8992b44b0ba128f59d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad3f0aa7_1ddfd6f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-07-11T23:52:48Z",
      "side": 1,
      "message": "Could we just create a new method `uidetection.LeftClickAndMoveMouseAfter` instead of adding an option?",
      "parentUuid": "8fea8329_2c8cb3d4",
      "revId": "be26996a47e5cadae739ad8992b44b0ba128f59d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10059831_e77b3eba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1368712
      },
      "writtenOn": "2022-07-12T08:30:37Z",
      "side": 1,
      "message": "I\u0027ve just added uda.Move and uda.MoveToPoint actions, since the retry logic won\u0027t help a failed click anyways (the mouse would move away, but would not be able to detect the click didn\u0027t go through, so we\u0027ll fail anyways).\n\nUsing move, we can compose a few actions to be able to retry clicks e.g.:\n```\nuiauto.Retry(3, uiauto.Combine(\"Select Royale High\",\n\tuda.MoveToPoint(safePoint),\n\tuda.LeftClick(uidetection.CustomIcon(s.DataPath(icon))),\n\tuda.WaitUntilExists(uidetection.CustomIcon(s.DataPath(\"roblox-launch-game.png\"))),\n)),\n```\n\nShould something like this be in a helper? In uidetection?",
      "parentUuid": "ad3f0aa7_1ddfd6f0",
      "revId": "be26996a47e5cadae739ad8992b44b0ba128f59d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f88f812_e486b975",
        "filename": "src/chromiumos/tast/local/uidetection/automation.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-07-11T06:57:18Z",
      "side": 1,
      "message": "could you reserve the type as `*Options`?",
      "range": {
        "startLine": 53,
        "startChar": 20,
        "endLine": 53,
        "endChar": 27
      },
      "revId": "be26996a47e5cadae739ad8992b44b0ba128f59d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aae9e67_5c822165",
        "filename": "src/chromiumos/tast/local/uidetection/automation.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-07-11T16:12:37Z",
      "side": 1,
      "message": "Is the timing necessary here? 0 should move it instantly and since the `mouse.Move` above has a timing, that should still account for the issue that was fixed previously. \n\nI have some concerns that there could be elements between `loc` and `top right` that have `onHover` handlers, which may get triggered when the mouse moves in this way. \n\nThere\u0027s still a chance that going from `top right` to `next element` triggers those events, but at least we\u0027d be eliminating 1 of the opportunities for that to happen.",
      "range": {
        "startLine": 153,
        "startChar": 69,
        "endLine": 153,
        "endChar": 89
      },
      "revId": "be26996a47e5cadae739ad8992b44b0ba128f59d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}