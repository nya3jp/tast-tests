{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "87875025_7a71aa9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-19T02:59:27Z",
      "side": 1,
      "message": "LGTM with minor comments.\n",
      "revId": "5e1ad9586f9e62378a957115e6d85222f9ccddf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d43d534_c6e82b9d",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/diag/api.go",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-19T02:59:27Z",
      "side": 1,
      "message": "- Slice length is often not enough to debug mismatch issues, so printing whole Problems would be better\n- This logic assumes that elements in Problems are unique; otherwise mismatch is dismissed\n\nSo I\u0027d recommend comparing whole slices with elements sorted. One method is to use go-cmp.\nhttps://pkg.go.dev/github.com/google/go-cmp/cmp\n\n sortInts :\u003d cmpopts.SortSlices(func(a, b int) bool { return a \u003c b })\n if !cmp.Equal(result.Problems, expectedResult.Problems, sortInts) {\n   return errors.Errorf(\"unexpected routine problems: got %v, want %v\", ...)\n }",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 148,
        "endChar": 2
      },
      "revId": "5e1ad9586f9e62378a957115e6d85222f9ccddf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "409bd7a7_05059d0a",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/diag/api.go",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1304442
      },
      "writtenOn": "2021-04-19T17:05:08Z",
      "side": 1,
      "message": "That\u0027s much better! Thanks for the suggestion.",
      "parentUuid": "5d43d534_c6e82b9d",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 148,
        "endChar": 2
      },
      "revId": "5e1ad9586f9e62378a957115e6d85222f9ccddf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54d71657_afaed85e",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/diag/api.go",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-04-19T02:59:27Z",
      "side": 1,
      "message": "Not related to this CL, but calling testing.PollBreak has no side effect; we need \"return\" here.",
      "range": {
        "startLine": 190,
        "startChar": 3,
        "endLine": 190,
        "endChar": 20
      },
      "revId": "5e1ad9586f9e62378a957115e6d85222f9ccddf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b76d6e6_7461a73d",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/diag/api.go",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1304442
      },
      "writtenOn": "2021-04-19T17:05:08Z",
      "side": 1,
      "message": "Good catch!",
      "parentUuid": "54d71657_afaed85e",
      "range": {
        "startLine": 190,
        "startChar": 3,
        "endLine": 190,
        "endChar": 20
      },
      "revId": "5e1ad9586f9e62378a957115e6d85222f9ccddf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}