{
  "comments": [
    {
      "key": {
        "uuid": "76bb5174_ad4da2b1",
        "filename": "src/chromiumos/tast/local/arc/file.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-21T08:31:41Z",
      "side": 1,
      "message": "Considering the use case, the file should be closed immediately.",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "539176e7_e59e6361",
        "filename": "src/chromiumos/tast/local/arc/file.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-21T15:10:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "76bb5174_ad4da2b1",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b79409f9_f528b14d",
        "filename": "src/chromiumos/tast/local/arc/file.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-21T08:31:41Z",
      "side": 1,
      "message": "Note: double Close() should not be problematic here, because f.Close() should just report an error, unlike close(2) syscall with raw FD.",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b32971d_8334185b",
        "filename": "src/chromiumos/tast/local/arc/file.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-21T15:10:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b79409f9_f528b14d",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6015e59_3a66deea",
        "filename": "src/chromiumos/tast/local/arc/file.go",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-21T08:31:41Z",
      "side": 1,
      "message": "Note: In case of partial write, err should be non-nil, according to the document.",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5237a005_052aecb6",
        "filename": "src/chromiumos/tast/local/bundles/cros/audio/microphone.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-21T08:31:41Z",
      "side": 1,
      "message": "Note: Handled close error.",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95fcb518_4f0cef57",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-21T08:31:41Z",
      "side": 1,
      "message": "Note: now, instead of output the data directly to the tempfile (then read it for md5sum), uses pipe, and process md5sum on memory, before writing the encoded data into the tempfile.\nI looked at the test data files, and assume that the files are small enough to handle it on memory.",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc8cdd6e_5d852ac0",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-21T15:10:36Z",
      "side": 1,
      "message": "hash.Hash implements io.Writer. can you just connect it to the process\u0027s stdout instead? then there are no problems if the file is large.",
      "parentUuid": "95fcb518_4f0cef57",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54ecf0b0_c35461c4",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-12-02T15:49:09Z",
      "side": 1,
      "message": "Actually, stdout is used not only for the md5sum calculation, but it is also dumped into the file on md5sum check success, so anyway we still need it.\nI changed to create the file only when the check is succeeded, in order to simplify the IO and its error handling.",
      "parentUuid": "bc8cdd6e_5d852ac0",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116db102_dff58760",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-21T08:31:41Z",
      "side": 1,
      "message": "Note: Wrapped errors by errors package for stack trace.",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a89033a6_9eb59b99",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-21T15:10:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "116db102_dff58760",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10402283_d3d5ab31",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-21T08:31:41Z",
      "side": 1,
      "message": "Note: original code didn\u0027t explicitly Close() the file. IIUC, the file is closed on GC so eventually it wouldn\u0027t be a leak, but I still think it is better to close at the proper timing.",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f422bd57_db89d8f5",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/encode/yuv.go",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-21T15:10:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "10402283_d3d5ab31",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cff019ca_4a251005",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-21T08:31:41Z",
      "side": 1,
      "message": "Note: TBH, I\u0027m not very sure if we\u0027re much interested in the error handling in this file, because this is an offline tool to generate source. Though, I did so just for code consistency across this repository. Dan, WDYT?",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c530d902_797f07e0",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-21T15:10:36Z",
      "side": 1,
      "message": "this looks fine to me. thanks!",
      "parentUuid": "cff019ca_4a251005",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "719abbb5_66d27cdb",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-21T15:10:36Z",
      "side": 1,
      "message": "if you name the error return value above, you could change this to:\n\n  if cerr :\u003d f.Close(); cerr !\u003d nil {\n      if err \u003d\u003d nil {\n          err \u003d cerr\n      }\n      os.Remove(f.Name())\n  }\n\nthen you can also get rid of the \u0027f \u003d nil\u0027 call and the other f.Close() call.\n\nthere\u0027s lots of discussion about how this works online, but my understanding is:\n\n- the named return variable gets updated when you e.g. \"return nil\" at the top level\n- within deferred functions, you can assign to it",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5897a3c_a6ef1bb6",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-12-02T15:49:09Z",
      "side": 1,
      "message": "Thank you for suggestion.\nI updated code to check \"err\", which should be refer to the err var declared at L209,\nand updated at L221, 225 and 229 in latest PS.\n\nIn case of success, we don\u0027t want to run the teardown (technically, there\u0027s a chance that another process creates a file at f.Name() after the renaming).\nIf template.Must() fails, we should close the file, and then remove the file.\nIf f.Close() fails, I guess something critical error happens on device, so I guess the teardown could work well, but anyway trying it should not be problematic.\nIf os.Rename() fails, the file is successfully closed, but is still remaining there.\nCalling f.Close() twice is not problematic (unlike close(2) system call), and we should remove the file.\n\nTo prioritize err returned from the main code, teardown should not update it by the errors of f.Close() and os.Remove().",
      "parentUuid": "719abbb5_66d27cdb",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a1b635f_3b3d61eb",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-21T15:10:36Z",
      "side": 1,
      "message": "nit: consider:\n\n  if err :\u003d os.Rename(...); err !\u003d nil {",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bffb5421_2547bc1d",
        "filename": "src/chromiumos/tast/local/input/gen/gen_constants.go",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-12-02T15:49:09Z",
      "side": 1,
      "message": "good catch. Fixed.",
      "parentUuid": "6a1b635f_3b3d61eb",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9af91589_409be18a",
        "filename": "src/chromiumos/tast/local/vm/crosvm.go",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-21T08:31:41Z",
      "side": 1,
      "message": "Note: This approach has timing issue (some other process may create the file at file.Name() after the removal). Though, IIUC, there\u0027s no proper way to ensure, and this is best effort. As the timing issue has been in the original code, fixing it is out of scope of this CL.",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0d9dc70_3a6d55bb",
        "filename": "src/chromiumos/tast/local/vm/crosvm.go",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-21T15:10:36Z",
      "side": 1,
      "message": "sounds fine to me to punt, but does it need to be removed here, or can we just create the file with proper ownership so it can be used? i.e. does the code that the path is passed to require that the file not exist already?",
      "parentUuid": "9af91589_409be18a",
      "revId": "8f54031da3f53da5a9537030fbd4c71125f05251",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}