{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7ae86e5f_80d4e010",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1229022
      },
      "writtenOn": "2022-03-31T22:38:49Z",
      "side": 1,
      "message": "Is it not possible to wait until the arrow button is ready, before clicking? Repeatedly clicking feels as janky as Sleep-ing.\n\nPlease loop in David and/or Kyle for their input and sign-off, I defer to them on what is appropriate.",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 65
      },
      "revId": "cf25e9920ae423b33ab417039e44e44f48ac0155",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43349851_d3225b0e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1529147
      },
      "writtenOn": "2022-03-31T23:03:25Z",
      "side": 1,
      "message": "So I tried to look for a solution that would wait for the animation, however ran into a roadblock when I realized that it is the LoginAuthFactorView that is translating instead of the arrow button, which is a child of LoginAuthFactorsView. When I attempted to use Finder to find a ClassName(\"LoginAuthFactorsView\") node, it  couldn\u0027t find one. I saw that we use repeated clicks within a time duration for other tests, so I thought it made sense to use here. I am interested to know if there is a way we can find and wait for the LoginAuthFactorsView translation",
      "parentUuid": "7ae86e5f_80d4e010",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 65
      },
      "revId": "cf25e9920ae423b33ab417039e44e44f48ac0155",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d36c18f_f69e637c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2022-04-05T02:16:12Z",
      "side": 1,
      "message": "It\u0027s hard to visualize without seeing the tree.\n\nThe problem is that the element is not clickable until the animation completes? Could a user hit the same problem?",
      "parentUuid": "43349851_d3225b0e",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 65
      },
      "revId": "cf25e9920ae423b33ab417039e44e44f48ac0155",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5b52390_b873c1ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2022-04-05T21:13:29Z",
      "side": 1,
      "message": "One suggestion is to try checking the UI node info for any indicator of state:\nhttps://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/chrome/uiauto/automation.go;l\u003d152-181\n\nThe `State`, `Restriction`, `Value`, and `HTMLAttributes` fields may contain some information about whether or not the button is ready to click. It all depends on the individual UI element so I can\u0027t guarantee there will be something useful there, but I think it\u0027s worth a shot.\n\nIf there ends up being no good way to check though, I\u0027m personally fine with repeated clicking (I\u0027m the one who originally added `LeftClickUntil` lol, to deal with situations where I just couldn\u0027t find better options)",
      "parentUuid": "5d36c18f_f69e637c",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 65
      },
      "revId": "cf25e9920ae423b33ab417039e44e44f48ac0155",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "759bd7fa_58c9c9b6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1529147
      },
      "writtenOn": "2022-04-06T20:14:58Z",
      "side": 1,
      "message": "Thank you for your suggestion @Kyle! After digging a bit deeper and attempting to use ImmediateLocation of NodesInfo of LoginAuthFactorsView, it seems that the reported location is relative to its parent node which is a NonAccessibleNode that we cannot easily assign Metadata Header to.\n\nTherefore, I think the easiest solution at this time is to utilize multiple clicks.\n\n@David, this is not a problem for the user because the element is clickable at any time during the animation. The test flakes every once in a while when the attempt to click on the arrow button misses by a hair because either the animation started later or the ClickSmartLockArrowButton call happened a bit earlier.",
      "parentUuid": "c5b52390_b873c1ad",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 65
      },
      "revId": "cf25e9920ae423b33ab417039e44e44f48ac0155",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6f65cbe_24857a47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2022-04-05T02:16:12Z",
      "side": 1,
      "message": "Yeh I know we ",
      "revId": "cf25e9920ae423b33ab417039e44e44f48ac0155",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7a104cb_27d80be1",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/lockscreen/lockscreen.go",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2022-04-05T21:13:29Z",
      "side": 1,
      "message": "if we do end up going with LeftClickUntil, I\u0027d suggest setting the polling interval (`.WithInterval(...)`) to something like ~1 second, just to be a little more realistic and not hammer the button with clicks",
      "range": {
        "startLine": 179,
        "startChar": 8,
        "endLine": 179,
        "endChar": 33
      },
      "revId": "cf25e9920ae423b33ab417039e44e44f48ac0155",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}