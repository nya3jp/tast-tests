{
  "comments": [
    {
      "key": {
        "uuid": "22ba07d0_a4001bbf",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/blogbench.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-27T09:37:20Z",
      "side": 1,
      "message": "Rather than simple strings, I recommend introducing an enum type to avoid typo.\n\n type storageType int\n const (\n   block storageType \u003d iota\n   fs\n   p9\n )",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 21
      },
      "revId": "da2224e35d45aa65adeb3c79b460e26ffcab3c8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb13ced4_972b1453",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/blogbench.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-27T09:37:20Z",
      "side": 1,
      "message": "nit: If timeout is the same for all parameters, you can set it to the base test instead.\n\n testing.AddTest(\u0026testing.Test{\n   ...\n   Timeout: 5*time.Minute,\n   Params: ...\n })",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 44,
        "endChar": 29
      },
      "revId": "da2224e35d45aa65adeb3c79b460e26ffcab3c8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26e775ae_e259b331",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/blogbench.go",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-27T09:37:20Z",
      "side": 1,
      "message": "FYI: Actually Tast sets $TMPDIR to /usr/local/tmp before running tests, so this matches with the default. It\u0027s totally good to explicitly specify the directory of course.",
      "range": {
        "startLine": 61,
        "startChar": 1,
        "endLine": 61,
        "endChar": 81
      },
      "revId": "da2224e35d45aa65adeb3c79b460e26ffcab3c8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1203135_27c70b89",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/blogbench.go",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-27T09:37:20Z",
      "side": 1,
      "message": "Since td is a temporary dir to be cleaned up, I think we don\u0027t need to call ioutil.TempDir again, but we can do:\n\n shared :\u003d filepath.Join(td, \"shared\")\n if err :\u003d os.Mkdir(shared, 0755); err !\u003d nil { ... }\n\nSame for the block file.",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 79,
        "endChar": 27
      },
      "revId": "da2224e35d45aa65adeb3c79b460e26ffcab3c8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11b1c616_61808ae0",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/blogbench.go",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-27T09:37:20Z",
      "side": 1,
      "message": "f.Close must be called in this case as well.\n\n f, err :\u003d os.Create(filepath.Join(td, \"block\"))\n if err !\u003d nil { ... }\n defer f.Close()\n if err :\u003d f.Truncate(...); err !\u003d nil { ... }",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 7
      },
      "revId": "da2224e35d45aa65adeb3c79b460e26ffcab3c8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62fa2d20_1531f51e",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/blogbench.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-27T09:37:20Z",
      "side": 1,
      "message": "Setting the rlimit of the current process may affect other tests, so it\u0027s great if we can avoid this.\n\nCan we use prlimit(1) instead for example?",
      "range": {
        "startLine": 94,
        "startChar": 1,
        "endLine": 100,
        "endChar": 2
      },
      "revId": "da2224e35d45aa65adeb3c79b460e26ffcab3c8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7280bb4_49f7bcf5",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/data/run-blogbench.sh",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1368712
      },
      "writtenOn": "2020-02-27T01:03:28Z",
      "side": 1,
      "message": "-i 12 means we run for 12 10s intervals?\nHow hard would it be to parse out metrics for all intervals so we can get a better idea of variability (and provide that as a metric too?)\n\nIdeally we would just use a multiple metric, but I don\u0027t think crosbolt does anything more than averaging, so it\u0027s not like we\u0027d get better regression protection or anything.",
      "revId": "da2224e35d45aa65adeb3c79b460e26ffcab3c8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28f98a90_5725953f",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/data/run-blogbench.sh",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1002983
      },
      "writtenOn": "2020-02-27T05:03:37Z",
      "side": 1,
      "message": "The test does print out intermediate metrics but I\u0027m not sure how useful that would be.  For example, the write score is the number of \"articles\" that were written so that number keeps increasing with each interval and the read score is a combination of the number of \"comments\" and \"articles\" read by the reader threads.",
      "parentUuid": "b7280bb4_49f7bcf5",
      "revId": "da2224e35d45aa65adeb3c79b460e26ffcab3c8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}