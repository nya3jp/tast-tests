{
  "comments": [
    {
      "key": {
        "uuid": "601c0057_b8cf3878",
        "filename": "src/chromiumos/tast/local/uhid/deviceNodes.go",
        "patchSetId": 24
      },
      "lineNbr": 1,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-04-29T18:17:51Z",
      "side": 1,
      "message": "the filename should be \"device_nodes.go\" instead of \"deviceNodes.go\"\n\nI wonder why the linter didn\u0027t catch it?",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 2
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1da9d184_9b8edb0e",
        "filename": "src/chromiumos/tast/local/uhid/deviceNodes.go",
        "patchSetId": 24
      },
      "lineNbr": 1,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "601c0057_b8cf3878",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 2
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47b47b5d_d799f903",
        "filename": "src/chromiumos/tast/local/uhid/deviceNodes.go",
        "patchSetId": 24
      },
      "lineNbr": 89,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "I find it a confusing to have a large function definition inside an `if` assignment, as looking at the indentation I\u0027d wrongly assume that the function body was the `if` body instead. Maybe split this out into its own statement?",
      "range": {
        "startLine": 78,
        "startChar": 4,
        "endLine": 89,
        "endChar": 52
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9633bb96_f1c34f62",
        "filename": "src/chromiumos/tast/local/uhid/deviceNodes.go",
        "patchSetId": 24
      },
      "lineNbr": 89,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "I agree and moved it into it\u0027s own statement. However, searching for testing.Poll in code search shows it is mostly used in this way so maybe that is the preferred way https://source.chromium.org/search?q\u003dtesting.Poll%5C(\u0026sq\u003d\u0026ss\u003dchromiumos%2Fchromiumos%2Fcodesearch:src%2Fplatform%2Ftast-tests%2Fsrc%2Fchromiumos%2Ftast%2Flocal%2F. I\u0027ll change it for now but would defer to Ricardo on how it\u0027s usually done.",
      "parentUuid": "47b47b5d_d799f903",
      "range": {
        "startLine": 78,
        "startChar": 4,
        "endLine": 89,
        "endChar": 52
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "403d2d21_64734855",
        "filename": "src/chromiumos/tast/local/uhid/deviceNodes.go",
        "patchSetId": 24
      },
      "lineNbr": 107,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "Maybe use `path.Join` here, in case `path` doesn\u0027t end with a slash.",
      "range": {
        "startLine": 107,
        "startChar": 36,
        "endLine": 107,
        "endChar": 51
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "519ab095_768fbb19",
        "filename": "src/chromiumos/tast/local/uhid/deviceNodes.go",
        "patchSetId": 24
      },
      "lineNbr": 107,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "403d2d21_64734855",
      "range": {
        "startLine": 107,
        "startChar": 36,
        "endLine": 107,
        "endChar": 51
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe970202_1228de1f",
        "filename": "src/chromiumos/tast/local/uhid/deviceNodes.go",
        "patchSetId": 24
      },
      "lineNbr": 113,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "Similarly, `path.Join`.",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 63
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0a1b4c0_8f33a1f9",
        "filename": "src/chromiumos/tast/local/uhid/deviceNodes.go",
        "patchSetId": 24
      },
      "lineNbr": 113,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe970202_1228de1f",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 63
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2ee4c0e_8f786120",
        "filename": "src/chromiumos/tast/local/uhid/parse.go",
        "patchSetId": 24
      },
      "lineNbr": 30,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-04-29T18:17:51Z",
      "side": 1,
      "message": "huge nit: replace \u0027.\u0027 with \u0027:\u0027",
      "range": {
        "startLine": 30,
        "startChar": 55,
        "endLine": 30,
        "endChar": 56
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46c8a30d_7cd5dc0e",
        "filename": "src/chromiumos/tast/local/uhid/parse.go",
        "patchSetId": 24
      },
      "lineNbr": 34,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-04-29T18:17:51Z",
      "side": 1,
      "message": "see comment below about returning errors.\nperhaps might be better to return: \n   return errors.Wrap(err, \"failed to parse bus\")",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 12
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b989745a_6b31a396",
        "filename": "src/chromiumos/tast/local/uhid/parse.go",
        "patchSetId": 24
      },
      "lineNbr": 54,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "This looks very similar to `parseData`; any chance they can be merged? (or most of the logic from this replaced with a call to `parseData`?)",
      "range": {
        "startLine": 54,
        "startChar": 5,
        "endLine": 54,
        "endChar": 20
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b49ce69f_29b5a973",
        "filename": "src/chromiumos/tast/local/uhid/parse.go",
        "patchSetId": 24
      },
      "lineNbr": 54,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "You are absolutely right, they were almost line by line the same function, can\u0027t believe I didn\u0027t notice it before.",
      "parentUuid": "b989745a_6b31a396",
      "range": {
        "startLine": 54,
        "startChar": 5,
        "endLine": 54,
        "endChar": 20
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b05985a5_e8987eeb",
        "filename": "src/chromiumos/tast/local/uhid/parse.go",
        "patchSetId": 24
      },
      "lineNbr": 55,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "Any reason for the different approach here compared to `parseInfo`?",
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08b3ae9e_3730da44",
        "filename": "src/chromiumos/tast/local/uhid/parse.go",
        "patchSetId": 24
      },
      "lineNbr": 55,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "parseInfo receives a fixed length string containing a fixed number of elements, making it representable with a regex. My new patch contains a more represenative regex rather than the current one that just looks for numbers.",
      "parentUuid": "b05985a5_e8987eeb",
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f3ba64a_8b058d5a",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 149,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "Comment is incomplete.",
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33320c15_6aa212ce",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 149,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f3ba64a_8b058d5a",
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4b113a8_7b8a6663",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 200,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "Nit: new sentence?",
      "range": {
        "startLine": 200,
        "startChar": 23,
        "endLine": 200,
        "endChar": 25
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "199adf36_b3916834",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 200,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4b113a8_7b8a6663",
      "range": {
        "startLine": 200,
        "startChar": 23,
        "endLine": 200,
        "endChar": 25
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be7cf641_21f32800",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 203,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "I don\u0027t know Go that well, but do these types of methods really need to check if the object they\u0027re called on is nil?",
      "range": {
        "startLine": 203,
        "startChar": 4,
        "endLine": 203,
        "endChar": 15
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67ecc3c6_509bb6b8",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 203,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "There are situations in which the object being nil can be a problem. For example: https://play.golang.org/p/ddFSsKCjLw_o. I don\u0027t know if this is one of those situations though. As far as I understand it, from the point of view of the function, its receiver (the argument at the left of its name) is just another argument so it is perfectly possible that it might be nil.",
      "parentUuid": "be7cf641_21f32800",
      "range": {
        "startLine": 203,
        "startChar": 4,
        "endLine": 203,
        "endChar": 15
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53af4907_ff8960c8",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 240,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-04-29T18:17:51Z",
      "side": 1,
      "message": "is this protocol documented somewhere?\nIf so add reference... perhaps to the file in hidtools that generates it?",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 34
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be9119da_36d92316",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 240,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53af4907_ff8960c8",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 34
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "371236c5_408a708f",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 246,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-04-29T18:17:51Z",
      "side": 1,
      "message": "in these error, try to be more descriptive.\n\neither parseInfo should return a useful error, or here... I\u0027d go with adding more descriptive errros in parse.go\n\nrule of thumb:\n - reporting good errors is very important. tests fail all the time. reading a good error will save time to engineers.\n - just don\u0027t return \"return err\" if the error does not contain useful info",
      "range": {
        "startLine": 246,
        "startChar": 4,
        "endLine": 246,
        "endChar": 19
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cc57835_1826dae1",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 246,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "371236c5_408a708f",
      "range": {
        "startLine": 246,
        "startChar": 4,
        "endLine": 246,
        "endChar": 19
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6737b45_e3058580",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 262,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-04-29T18:17:51Z",
      "side": 1,
      "message": "I think it would be better to move the replay/record functionality to a new file. easier to read the file.",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 262,
        "endChar": 33
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8002d793_d2e0d3d0",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 262,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6737b45_e3058580",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 262,
        "endChar": 33
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf620fe8_9db42bfc",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 281,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "In the vein of improving error messages, it would help massively to include the current line number and file name in any error message raised within this loop (and similarly in `Recorded`). That could make debugging malformed recordings much quicker. For example, just here the error could be \"foo-recording.txt:46: malformed timestamp\".",
      "range": {
        "startLine": 281,
        "startChar": 10,
        "endLine": 281,
        "endChar": 13
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea14d4ba_06e54b14",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 281,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "When logging with testing.State.Fatal it prints out the stack trace with the corresponding line numbers. Even if it didn\u0027t, I believe manually writing the line number in the error messages would quickly become unmaintainable, given that whenever someone adds or removes a line they would have to update every error message.",
      "parentUuid": "bf620fe8_9db42bfc",
      "range": {
        "startLine": 281,
        "startChar": 10,
        "endLine": 281,
        "endChar": 13
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e83815c5_22699e8f",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 285,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-04-29T18:17:51Z",
      "side": 1,
      "message": "nit: end with period. start with capital letter.",
      "range": {
        "startLine": 285,
        "startChar": 5,
        "endLine": 285,
        "endChar": 44
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7a99510_b9d91d7b",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 285,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e83815c5_22699e8f",
      "range": {
        "startLine": 285,
        "startChar": 5,
        "endLine": 285,
        "endChar": 44
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f476a915_d98c671c",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 299,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-04-29T23:54:29Z",
      "side": 1,
      "message": "Nit: I\u0027d say this is an implementation detail that doesn\u0027t need to be a docstring.",
      "range": {
        "startLine": 299,
        "startChar": 10,
        "endLine": 299,
        "endChar": 59
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6db0eff4_4c98744c",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 299,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f476a915_d98c671c",
      "range": {
        "startLine": 299,
        "startChar": 10,
        "endLine": 299,
        "endChar": 59
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7abc5acc_3f0ac9fe",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 420,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-04-29T18:06:54Z",
      "side": 1,
      "message": "add docstring",
      "range": {
        "startLine": 420,
        "startChar": 17,
        "endLine": 420,
        "endChar": 29
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de17d5cc_ae63eee3",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 420,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7abc5acc_3f0ac9fe",
      "range": {
        "startLine": 420,
        "startChar": 17,
        "endLine": 420,
        "endChar": 29
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c83d022_57c6b3db",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 427,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-04-29T18:06:54Z",
      "side": 1,
      "message": "docstring",
      "range": {
        "startLine": 427,
        "startChar": 17,
        "endLine": 427,
        "endChar": 35
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45ad1092_ef78593b",
        "filename": "src/chromiumos/tast/local/uhid/uhid.go",
        "patchSetId": 24
      },
      "lineNbr": 427,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-04-30T08:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c83d022_57c6b3db",
      "range": {
        "startLine": 427,
        "startChar": 17,
        "endLine": 427,
        "endChar": 35
      },
      "revId": "bf0d6d74fd6d063089f36644d06b97e087f471e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}