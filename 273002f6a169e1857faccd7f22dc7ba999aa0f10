{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "277337cf_f7efa4bd",
        "filename": "src/chromiumos/tast/local/bundles/cros/privacyhub/settings_page.go",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T01:14:54Z",
      "side": 1,
      "message": "This menu is a constant in this test case. It does not need to be in the function argument.",
      "range": {
        "startLine": 44,
        "startChar": 67,
        "endLine": 44,
        "endChar": 71
      },
      "revId": "273002f6a169e1857faccd7f22dc7ba999aa0f10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2df823a_57db3bd5",
        "filename": "src/chromiumos/tast/local/bundles/cros/privacyhub/settings_page.go",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T01:14:54Z",
      "side": 1,
      "message": "You can probably create a function named assertMenuExists(ctx, tconn, shouldExist bool)",
      "range": {
        "startLine": 44,
        "startChar": 5,
        "endLine": 44,
        "endChar": 20
      },
      "revId": "273002f6a169e1857faccd7f22dc7ba999aa0f10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ef175e7_37eb9cd1",
        "filename": "src/chromiumos/tast/local/bundles/cros/privacyhub/settings_page.go",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T01:14:54Z",
      "side": 1,
      "message": "This function is redundant. It simply equals `uiauto.New(tconn).WaitUntilExists(menu)`",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 49,
        "endChar": 1
      },
      "revId": "273002f6a169e1857faccd7f22dc7ba999aa0f10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0c6030e_c491cb16",
        "filename": "src/chromiumos/tast/local/bundles/cros/privacyhub/settings_page.go",
        "patchSetId": 14
      },
      "lineNbr": 52,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T01:14:54Z",
      "side": 1,
      "message": "The default timeout is 15s. I do not think you really want to wait for that long.",
      "range": {
        "startLine": 52,
        "startChar": 11,
        "endLine": 52,
        "endChar": 50
      },
      "revId": "273002f6a169e1857faccd7f22dc7ba999aa0f10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c5ce7fe_35810dfe",
        "filename": "src/chromiumos/tast/local/bundles/cros/privacyhub/settings_page.go",
        "patchSetId": 14
      },
      "lineNbr": 61,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T01:14:54Z",
      "side": 1,
      "message": "The pointer is misused in this script.",
      "range": {
        "startLine": 61,
        "startChar": 46,
        "endLine": 61,
        "endChar": 50
      },
      "revId": "273002f6a169e1857faccd7f22dc7ba999aa0f10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da67a14c_22895aa0",
        "filename": "src/chromiumos/tast/local/bundles/cros/privacyhub/settings_page.go",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T01:14:54Z",
      "side": 1,
      "message": "The error is dismissed in the return. Please use errors.Wrapf",
      "range": {
        "startLine": 63,
        "startChar": 3,
        "endLine": 63,
        "endChar": 70
      },
      "revId": "273002f6a169e1857faccd7f22dc7ba999aa0f10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5067f631_9bc3fac6",
        "filename": "src/chromiumos/tast/local/bundles/cros/privacyhub/settings_page.go",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T01:14:54Z",
      "side": 1,
      "message": "This is not the right coding practice we are following. Please keep it consistent.",
      "range": {
        "startLine": 69,
        "startChar": 34,
        "endLine": 69,
        "endChar": 44
      },
      "revId": "273002f6a169e1857faccd7f22dc7ba999aa0f10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85549c6c_2135eab0",
        "filename": "src/chromiumos/tast/local/bundles/cros/privacyhub/settings_page.go",
        "patchSetId": 14
      },
      "lineNbr": 117,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T01:14:54Z",
      "side": 1,
      "message": "I do not think you really understand cleanupCtx and ctx.",
      "range": {
        "startLine": 117,
        "startChar": 27,
        "endLine": 117,
        "endChar": 44
      },
      "revId": "273002f6a169e1857faccd7f22dc7ba999aa0f10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a4da7d_763de2cd",
        "filename": "src/chromiumos/tast/local/bundles/cros/privacyhub/settings_page.go",
        "patchSetId": 14
      },
      "lineNbr": 121,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T01:14:54Z",
      "side": 1,
      "message": "nit: is not",
      "range": {
        "startLine": 121,
        "startChar": 71,
        "endLine": 121,
        "endChar": 74
      },
      "revId": "273002f6a169e1857faccd7f22dc7ba999aa0f10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}