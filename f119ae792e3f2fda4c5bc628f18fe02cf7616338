{
  "comments": [
    {
      "key": {
        "uuid": "3a09e367_34b5328c",
        "filename": "src/chromiumos/tast/local/shill/dbus.go",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2019-10-18T22:08:47Z",
      "side": 1,
      "message": "can we name this DBusObject or something more descriptive?",
      "range": {
        "startLine": 10,
        "startChar": 5,
        "endLine": 10,
        "endChar": 9
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35e59e10_ee6f4943",
        "filename": "src/chromiumos/tast/local/shill/dbus.go",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2019-10-18T20:19:03Z",
      "side": 1,
      "message": "This seems generic; maybe nya@ and the tast frameworks team could look at using something like this in the grpc service as well.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 1
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5fb968a_04f63972",
        "filename": "src/chromiumos/tast/local/shill/device.go",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2019-10-18T22:08:47Z",
      "side": 1,
      "message": "again, can we name this something more descriptive?",
      "range": {
        "startLine": 36,
        "startChar": 1,
        "endLine": 36,
        "endChar": 5
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24a0a809_74963b83",
        "filename": "src/chromiumos/tast/local/shill/device.go",
        "patchSetId": 7
      },
      "lineNbr": 48,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2019-10-18T22:08:47Z",
      "side": 1,
      "message": "let\u0027s avoid dbus since we import a package called dbus.",
      "range": {
        "startLine": 48,
        "startChar": 1,
        "endLine": 48,
        "endChar": 5
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2580156_872a04fa",
        "filename": "src/chromiumos/tast/local/shill/device.go",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "Shall we provide two functions:\nGetProperties()  // Gets latest refreshed properties.\nRefreshProperties()  // Refresh properties.",
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c6927b2_7cc1f299",
        "filename": "src/chromiumos/tast/local/shill/device.go",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-21T06:10:28Z",
      "side": 1,
      "message": "Ah we already have Properties() which gets the latest cached properties.\n\nTo make this more self-explained, how about naming it as RefreshProperties() ?",
      "parentUuid": "f2580156_872a04fa",
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33ff0fd2_7b77d497",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "m means matrix?",
      "range": {
        "startLine": 19,
        "startChar": 1,
        "endLine": 19,
        "endChar": 2
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9e56e25_a2559411",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "Not sure if it is worth to make it a type alias.",
      "range": {
        "startLine": 19,
        "startChar": 6,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fa09b5b_d2a437b9",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "How about \"props\" (golang prefer shorter variable names) or \"properties\" (easier to read)?",
      "range": {
        "startLine": 24,
        "startChar": 5,
        "endLine": 24,
        "endChar": 13
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d924948_80a4b102",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "Would it be better to consolidate Has() and Get():\nfunc (p *Properties) Get(prop string) (interface{}, error)\nso it has the same return structure as GetString()?",
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5ab1601_5369132a",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "corresponding",
      "range": {
        "startLine": 73,
        "startChar": 55,
        "endLine": 73,
        "endChar": 66
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67db8707_267ba6bd",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 93,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "How about:\nWaitAll waits for all expected properties were shown on at least one \"PropertyChanged\" signal.",
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0879e53b_2c9c9c8f",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 94,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "How about rename it as \"pw\"? Otherwise, it is likely to have name conflict as \"p\" for property (line 104).",
      "range": {
        "startLine": 94,
        "startChar": 6,
        "endLine": 94,
        "endChar": 7
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c18e4c28_7f1b5884",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "Name conflict for PropertiesWatcher.",
      "range": {
        "startLine": 104,
        "startChar": 9,
        "endLine": 104,
        "endChar": 10
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a7252a3_2b2c97c9",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "It is generally not a good idea manipulating iterator target when performing iterations. In this case, you want to pop the matched property, right? After the pop, you may just exit the for loop.",
      "range": {
        "startLine": 106,
        "startChar": 12,
        "endLine": 106,
        "endChar": 18
      },
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e770e14d_21a7a1ac",
        "filename": "src/chromiumos/tast/local/shill/property.go",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-10-19T03:31:15Z",
      "side": 1,
      "message": "Nice encapsulation!",
      "revId": "f119ae792e3f2fda4c5bc628f18fe02cf7616338",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}