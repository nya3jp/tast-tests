{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1ebb6f55_da0f8546",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2022-04-05T20:59:04Z",
      "side": 1,
      "message": "LGTM with some suggestions for saving UI info on failure",
      "revId": "d041a72518115cd4f1521ba72919668536438e2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04063a53_30051f79",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/google_slides_cuj.go",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2022-04-05T20:59:04Z",
      "side": 1,
      "message": "This may be more useful if you move it inside of the `recorder.Run` block (probably with a different hasError function), after all of the other deferred calls to close the browser window.\n\nDefers are executed in LIFO order, so with it up here, your browser windows will be closed by the time this executes and the UI tree won\u0027t accurately reflect the UI state at the time of failure.\n\nAlternatively you could skip calling `slidesConn.CloseTarget` to leave the browser window open (so long as the fixture resets windows properly). You\u0027d still get an accurate UI tree dump here in that case.",
      "revId": "d041a72518115cd4f1521ba72919668536438e2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1be45ff5_1f909139",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/google_slides_cuj.go",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2022-04-05T20:59:04Z",
      "side": 1,
      "message": "this is probably the right spot for deferring saving a UI tree dump. there\u0027s also the `DumpUITreeWithScreenshotOnError` variant that you might find useful. Tast automatically saves a screenshot on failure but it\u0027s usually after all of the test cleanup, explicitly saving one along with the UI tree can be pretty useful for debugging",
      "revId": "d041a72518115cd4f1521ba72919668536438e2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}