{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "82b3c614_6d1c33af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2021-12-31T01:50:57Z",
      "side": 1,
      "message": "Hi Seewai, Kyle, David,\nHere is another one. Can I please get your help in reviewing this?\nThanks,\nJonathan\n",
      "revId": "1b84d9ebf4b100923e8f2c94bef61bcf840a22db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8971215_70f02f79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2022-01-04T21:39:44Z",
      "side": 1,
      "message": "If enum type is not shared by more than one message, I think we should put it inline instead. Also, I have concern about exposing the low level API through GRPC service. I think we have seen UI delay issues to make tests flaky. I think it may be worse by using GRPC interface. I would suggest to support higher level operation such as Drag instead. The Drag request can be specified by node specification or position. We can even add an expected event in the request so that it can check before it return.\n\n",
      "revId": "1b84d9ebf4b100923e8f2c94bef61bcf840a22db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21168fb0_adcc5c3a",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/automation_service.go",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2021-12-31T01:50:57Z",
      "side": 1,
      "message": "There is a fair amount of functions to convert the artifacts from proto and uiauto.  Curious if there is a smart way of handling this?",
      "revId": "1b84d9ebf4b100923e8f2c94bef61bcf840a22db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e03e3fd3_3d78d767",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/automation_service.go",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2022-01-05T19:37:39Z",
      "side": 1,
      "message": "Can you use golang struct tags (e.g like json annotations) to do this? I\u0027ve used them before to convert similar-but-not-quite-equal data sets \n\nThe fact that one half here is auto-generated from the proto and the other is setup to convert from javascript to golang probably means you cannot edit either side though :-/",
      "parentUuid": "21168fb0_adcc5c3a",
      "revId": "1b84d9ebf4b100923e8f2c94bef61bcf840a22db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfc904e4_1b7ae076",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/automation_service_test.go",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2021-12-31T01:50:57Z",
      "side": 1,
      "message": "This portion corresponding to the State (state.State, bool) came out quite clunky. Would definitely love to pick your brain on proto def on making this pretty.",
      "revId": "1b84d9ebf4b100923e8f2c94bef61bcf840a22db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "361b15ce_253f1644",
        "filename": "src/chromiumos/tast/services/cros/ui/automation_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2021-12-31T01:50:57Z",
      "side": 1,
      "message": "In order for the enum values not to conflict, I found two suggested ways:\n1) Wrapped with message (Like in this CL)\n2) Prefix enum value with type, like:\nenum ClickType {\n    CLICK_TYPE_UNSPECIFIED \u003d 0;\n    CLICK_TYPE_LEFT_CLICK \u003d 1;\n    CLICK_TYPE_RIGHT_CLICK \u003d 2;\n    CLICK_TYPE_DOUBLE_CLICK \u003d 3;\n  }\n  \nIs there a google convention for this?",
      "revId": "1b84d9ebf4b100923e8f2c94bef61bcf840a22db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fbdc7cb_d3353efb",
        "filename": "src/chromiumos/tast/services/cros/ui/automation_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2022-01-04T21:39:44Z",
      "side": 1,
      "message": "You can declare ClickType inside \n\n```\nmessage MouseClickAtLocationRequest {\n  enum ClickType {\n    UNSPECIFIED \u003d 0;\n    LEFT_CLICK \u003d 1;\n    RIGHT_CLICK \u003d 2;\n    DOUBLE_CLICK \u003d 3;\n  }\n  // ClickType describes how user clicks mouse.\n  ClickType click_type \u003d 1;\n  // Point is the coordinates for the click.\n  Point point \u003d 2;\n}\n```",
      "parentUuid": "361b15ce_253f1644",
      "revId": "1b84d9ebf4b100923e8f2c94bef61bcf840a22db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}