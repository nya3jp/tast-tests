{
  "comments": [
    {
      "key": {
        "uuid": "e3b8d7ba_f6621385",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-18T08:41:51Z",
      "side": 1,
      "message": "Sorry for previous ambiguous comments. I meant;\ncr.Close() does not logs out Chrome nor, a.Close() does not shut down ARC.\nIt just disconnects to some pages / logcats, but leaves the DUT in the running state.\n\nCould you update the comment?",
      "range": {
        "startLine": 81,
        "startChar": 76,
        "endLine": 81,
        "endChar": 95
      },
      "revId": "c8288f75e3f9cd305e683013e2b8c90193ee7255",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56190d40_5242f7d0",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1307765
      },
      "writtenOn": "2019-01-22T00:25:36Z",
      "side": 1,
      "message": "OK. I\u0027ve now read through the arc and chrome tast packages. It\u0027s non-intuitive that these kinds of things are asymmetrical.",
      "parentUuid": "e3b8d7ba_f6621385",
      "range": {
        "startLine": 81,
        "startChar": 76,
        "endLine": 81,
        "endChar": 95
      },
      "revId": "c8288f75e3f9cd305e683013e2b8c90193ee7255",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80771f15_4af39ad9",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-22T01:31:18Z",
      "side": 1,
      "message": "would better comments on chrome.New and arc.New (or on their Close methods) have helped here? or is it just inherently weird? :-)\n\nthe pattern of having a \"New\" (or similar) function that returns a new instance of an object, and a \"Close\" method that releases the instance\u0027s resources without undoing all of its side effects, is fairly common in go. see e.g. os.Create, which creates a file and returns an *os.File wrapping the FD, and os.File.Close, which closes the FD but doesn\u0027t delete the underlying file.\n\ni initially considered making chrome.Chrome.Close restart the ui job but ultimately decided against it for the reasons described at https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Startup-and-shutdown.",
      "parentUuid": "56190d40_5242f7d0",
      "range": {
        "startLine": 81,
        "startChar": 76,
        "endLine": 81,
        "endChar": 95
      },
      "revId": "c8288f75e3f9cd305e683013e2b8c90193ee7255",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c239a37c_a2714171",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1307765
      },
      "writtenOn": "2019-01-22T01:51:33Z",
      "side": 1,
      "message": "I think so yes. chrome.New has various login options but nothing about logging out. As a new user of this framework, it\u0027s not obvious to me how to accomplish this. Comments providing some guidelines about how to do would be helpful I think. E.g. is upstart.RestartJob(\"ui\") the best or only way to do so? *That* seems a little weird because I need to use a different package (upstart) to undo something in chrome. What happens if I chrome.New(nologin) is one is already running?\n\nI guess I wouldn\u0027t immediately think of these same way, that is, creating a new file and logging into some subsystem. I was intuitively thinking of this like an RPC connection or some kind of session, where closing the handle would disconnect, especially absent something like a Logout func analogous to os.Remove.",
      "parentUuid": "80771f15_4af39ad9",
      "range": {
        "startLine": 81,
        "startChar": 76,
        "endLine": 81,
        "endChar": 95
      },
      "revId": "c8288f75e3f9cd305e683013e2b8c90193ee7255",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}