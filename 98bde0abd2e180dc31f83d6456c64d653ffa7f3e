{
  "comments": [
    {
      "key": {
        "uuid": "66425e1f_014f1cdb",
        "filename": "src/chromiumos/tast/common/crypto/certificate/cert.go",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2020-01-27T09:52:54Z",
      "side": 1,
      "message": "nit: the certificate and the private key",
      "range": {
        "startLine": 107,
        "startChar": 18,
        "endLine": 107,
        "endChar": 20
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0d0bd52_91f2b0b6",
        "filename": "src/chromiumos/tast/common/crypto/certificate/cert.go",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66425e1f_014f1cdb",
      "range": {
        "startLine": 107,
        "startChar": 18,
        "endLine": 107,
        "endChar": 20
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472a9971_f6fd4464",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "I am confused by two things, no clue if my confusion is legit.\n1. Should we call it ethernetEAPConf ? HostapdConf should be a lot more than just these 4 EAP fields. \n2. If 1 is right, it is weird that the hostapd log path is part of this and not the wiredHostapdServer struct below? That struct contains the command and the parameters, the output/log file is usually specified with the parameters.",
      "range": {
        "startLine": 98,
        "startChar": 5,
        "endLine": 98,
        "endChar": 27
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1d75dac_bddf6d5a",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2020-01-27T09:52:54Z",
      "side": 1,
      "message": "Could we move hostapd stuff into its own file for easier reuse/understanding?",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 30
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c37c00ad_bff0dfca",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "I suppose. I intentionally don\u0027t want to advertise this as a common package for other tests, as it\u0027s still pretty intimately tied to the use case here (and for instance, will have fairly different requirements than the hostapd server package being developed for WiFi [1]). But it could probably stand as a support package within this test directory.\n\n[1] https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/1935952",
      "parentUuid": "f1d75dac_bddf6d5a",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 30
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25667e03_5561c097",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "\u003e I am confused by two things, no clue if my confusion is legit.\n\u003e 1. Should we call it ethernetEAPConf ?\n\u003e HostapdConf should be a lot more than just these 4 EAP fields.\n\nThis is all the input needed to establish hostapd for a wired connection. (IMO, EAP was implied, because there\u0027s no purpose for hostapd on a \"wired\" connection otherwise.)\n\n\u003e 2. If 1 is right, it is weird that the hostapd log path is part of this and not the wiredHostapdServer struct below? That struct contains the command and the parameters, the output/log file is usually specified with the parameters.\n\nThe intention was that this struct serves solely as input (configuration) to the server and wiredHostapdServer contains only long-lived stuff or output. Stuff like \u0027log\u0027 (path) is not an output of the server.\n\nMaybe I don\u0027t know my golang idioms very well, or maybe I need to document better.",
      "parentUuid": "472a9971_f6fd4464",
      "range": {
        "startLine": 98,
        "startChar": 5,
        "endLine": 98,
        "endChar": 27
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeb4857b_9e9e5903",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "With moving this into a separate package, it\u0027s easier to hide certain members, so I ended up with a split more like your suggestion:\n\n * WiredHostapdServer -\u003e user initializes the public fields\n * EAPConf -\u003e a sub-field of WiredHostapdServer, since it\u0027s logically separate from some of the general hostapd config\n * a Start() method that initializes the private members and gets things running",
      "parentUuid": "25667e03_5561c097",
      "range": {
        "startLine": 98,
        "startChar": 5,
        "endLine": 98,
        "endChar": 27
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80f0d6f9_99d44da9",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c37c00ad_bff0dfca",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 30
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99c4ce0c_1289c18f",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2020-01-27T09:52:54Z",
      "side": 1,
      "message": "This is the certificate that hostapd will expose, correct? (probably worth commenting)",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 34
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6842f4ca_7af33c4c",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "Yes, will do",
      "parentUuid": "99c4ce0c_1289c18f",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 34
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abddfb83_7d414da4",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6842f4ca_7af33c4c",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 34
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "181dc718_28d6645c",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 115,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2020-01-27T09:52:54Z",
      "side": 1,
      "message": "Is this a dbus interface path? I think this is worth commenting :-)",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 17
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "013720a9_eff382b6",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 115,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "No, and agreed :)",
      "parentUuid": "181dc718_28d6645c",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 17
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21e0477d_28693c8f",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 115,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "013720a9_eff382b6",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 17
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37810f90_1568978e",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2020-01-27T09:52:54Z",
      "side": 1,
      "message": "Just checking - does this wait for the server to actually exit? (before calling RemoveAll)",
      "range": {
        "startLine": 122,
        "startChar": 13,
        "endLine": 122,
        "endChar": 23
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0a17599_109ca8b2",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "Good catch: it doesn\u0027t:\n\nhttps://godoc.org/chromium.googlesource.com/chromiumos/platform/tast-tests.git/src/chromiumos/tast/local/testexec#Cmd.Kill\n\nI should probably actually use SIGTERM though, so I\u0027ll have to switch to cmd.Signal().",
      "parentUuid": "37810f90_1568978e",
      "range": {
        "startLine": 122,
        "startChar": 13,
        "endLine": 122,
        "endChar": 23
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ec76f51_c68e60a2",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0a17599_109ca8b2",
      "range": {
        "startLine": 122,
        "startChar": 13,
        "endLine": 122,
        "endChar": 23
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4320b476_9360549d",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "wiredHostapdServer struct has a Start method, why not make this a struct method as well? \n\n\nfunc (t *myType) Start() error {\n}\n\nfunc (t *myType) Stop() error {\n}\n\nhas a nice symmetry to it.",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 144,
        "endChar": 98
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9a339af_b1c43cc8",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done. This does look nicer, once I\u0027ve moved more stuff into private fields.",
      "parentUuid": "4320b476_9360549d",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 144,
        "endChar": 98
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2edbe842_f24cc306",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "Writing these 5 files could use refactoring and moving into a separate function.",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 200,
        "endChar": 2
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75c54a92_ebc364bf",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-28T01:44:38Z",
      "side": 1,
      "message": "Codelab#2 makes a case for using a shortened context when there is a non-trivial amount of cleanup to be done by a test, does that apply here?",
      "range": {
        "startLine": 233,
        "startChar": 0,
        "endLine": 233,
        "endChar": 59
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd4804f5_f3ccd0a2",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "I never noticed that. (Look who didn\u0027t read the codelabs closely! Actually, I think that one didn\u0027t exist when I first started trying my hand at Tast.)\n\nVery little of this cleanup is absolutely critical (subsequent tests that care should be cleaning the initial state), and many of the slow / meat-of-the-test steps (particularly, waitForDeviceProperty) already have a defined timeout.\n\nBut that seems like it could still be useful.",
      "parentUuid": "75c54a92_ebc364bf",
      "range": {
        "startLine": 233,
        "startChar": 0,
        "endLine": 233,
        "endChar": 59
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff722f8f_dc8d4913",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd4804f5_f3ccd0a2",
      "range": {
        "startLine": 233,
        "startChar": 0,
        "endLine": 233,
        "endChar": 59
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8c9c989_de1ee651",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "I don\u0027t know profiles enough, can this have side-effects? (e.g. other profile entries that only make sense if etherneteap_all is present?)",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 39
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c5a24e8_addfe977",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-01-28T02:24:57Z",
      "side": 1,
      "message": "For a device that\u0027s connected via Ethernet 802.1X, deleting the etherneteap_all entry will probably just deauth it and force it to reauthenticate from scratch. It shouldn\u0027t have any impact other than that.",
      "parentUuid": "b8c9c989_de1ee651",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 39
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67cbbd31_8ac62f23",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "*resolve*",
      "parentUuid": "1c5a24e8_addfe977",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 39
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17ef9593_c018159d",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 287,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "Refactor? \n\nDefine this outside test: \nfunc cleanupTestProfile(m* shill.Manager) {\n     if err :\u003d m.PopProfile(ctx, testProfile); err !\u003d nil {\n\ts.Logf(\"Failed to pop profile %q: %v\", testProfile, err)\n     } else if err \u003d m.RemoveProfile(ctx, testProfile); err !\u003d nil {\n\ts.Logf(\"Failed to remove profile %q: %v\", testProfile, err)\n     }\n}\n\nwithin test:\n\ncleanupTestProfile(m)\n\nif _, err :\u003d m.CreateProfile(ctx, testProfile); err !\u003d nil {\n\t\ts.Fatal(\"Failed to create profile: \", err)\n\t}\n\ttestProfilePath, err :\u003d m.PushProfile(ctx, testProfile)\n\tif err !\u003d nil {\n\t\ts.Fatal(\"Failed to push profile: \", err)\n\t}\n\n\ndefer cleanupTestProfile(m)",
      "range": {
        "startLine": 271,
        "startChar": 1,
        "endLine": 287,
        "endChar": 4
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37b827a1_55dcd105",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 287,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "I tried something like this. I\u0027m not sure your suggestion is great as-is, since it externalizes use of testing.State, but it\u0027s similar.",
      "parentUuid": "17ef9593_c018159d",
      "range": {
        "startLine": 271,
        "startChar": 1,
        "endLine": 287,
        "endChar": 4
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9e8d90b_68a026a1",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 331,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-01-28T02:24:57Z",
      "side": 1,
      "message": "Why not just use the result of WaitAll?",
      "range": {
        "startLine": 331,
        "startChar": 6,
        "endLine": 331,
        "endChar": 38
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa11c426_f316b15a",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 331,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "I still need to call GetProperties() the first iteration, so there was less verbosity to just use it in the loop. Also, the return value is un-typed (interface{}), so it\u0027s slightly more annoying to deal with. (I guess I could teach WaitAll() to return Properties?)\n\nI\u0027ll look at trying this out, I suppose.\n\n(Alternatively: if I call CreateWatcher() before I expect the first transition, then I don\u0027t really need GetProperties(). But that shifts the surrounding test logic around quite a bit.)",
      "parentUuid": "e9e8d90b_68a026a1",
      "range": {
        "startLine": 331,
        "startChar": 6,
        "endLine": 331,
        "endChar": 38
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "228ad29b_3c029890",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 331,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done: I did the simplest translation for now.",
      "parentUuid": "fa11c426_f316b15a",
      "range": {
        "startLine": 331,
        "startChar": 6,
        "endLine": 331,
        "endChar": 38
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fa0fd4d_f7fc8f77",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 335,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "Does this function definition have to be inside the test?",
      "range": {
        "startLine": 309,
        "startChar": 1,
        "endLine": 335,
        "endChar": 2
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "712e0d3c_120044ae",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 335,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "I suppose not. At one point it was a hack for using Fatal() (mostly discouraged outside the main test body), but that\u0027s not a good reason.",
      "parentUuid": "7fa0fd4d_f7fc8f77",
      "range": {
        "startLine": 309,
        "startChar": 1,
        "endLine": 335,
        "endChar": 2
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a82796e_e2a04c55",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 335,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "712e0d3c_120044ae",
      "range": {
        "startLine": 309,
        "startChar": 1,
        "endLine": 335,
        "endChar": 2
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6335b07_d38ba651",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 419,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "Do you need to define a separate function if you are only using it once?",
      "range": {
        "startLine": 416,
        "startChar": 15,
        "endLine": 419,
        "endChar": 4
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "275c6e52_26ebe91f",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 419,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "It has moved around a few times. At this point, it\u0027s pretty useless -- I guess I\u0027ll inline it.",
      "parentUuid": "b6335b07_d38ba651",
      "range": {
        "startLine": 416,
        "startChar": 15,
        "endLine": 419,
        "endChar": 4
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21a8701e_e2b11b99",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 419,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "275c6e52_26ebe91f",
      "range": {
        "startLine": 416,
        "startChar": 15,
        "endLine": 419,
        "endChar": 4
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af76f2f4_761f730e",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 431,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "Same comment as waitForDeviceProperty, does this definition have to be inside the test body?",
      "range": {
        "startLine": 401,
        "startChar": 0,
        "endLine": 431,
        "endChar": 0
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62d5b17d_b23d2745",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 431,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "I should probably move it out.",
      "parentUuid": "af76f2f4_761f730e",
      "range": {
        "startLine": 401,
        "startChar": 0,
        "endLine": 431,
        "endChar": 0
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf04463d_9bff34e7",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 431,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62d5b17d_b23d2745",
      "range": {
        "startLine": 401,
        "startChar": 0,
        "endLine": 431,
        "endChar": 0
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a39c738_6c472765",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 443,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "Isn\u0027t this strictly less readable than:\n\nerr :\u003d m.PopProfile(ctx, testProfile)\nif err !\u003d nil { \n...\n\n\nAnd if there is a reason to use this version, it is confusing why line 435 (err1 :\u003d checkSTAStatus..., if err1 !\u003d nil ...) is different?",
      "range": {
        "startLine": 443,
        "startChar": 1,
        "endLine": 443,
        "endChar": 55
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cf22895_741aeaff",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 443,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "This is an extremely common pattern:\n\nhttps://tour.golang.org/flowcontrol/6\n\nIt allows scoping your variable.\n\n## A rough grepping\n$ git grep \u0027if err :\u003d\u0027 | wc -l\n3156\n$ git grep \u0027if err \u003d\u0027 | wc -l\n299\n\nI generally try to do that unless otherwise needed. At line 435, I intend to use both \u0027err\u0027 and \u0027err1\u0027 in a compound conditional, so they both need to be in scope.",
      "parentUuid": "7a39c738_6c472765",
      "range": {
        "startLine": 443,
        "startChar": 1,
        "endLine": 443,
        "endChar": 55
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a66b97f_9440ddb3",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 443,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T00:29:22Z",
      "side": 1,
      "message": "\u003e ## A rough grepping\n\u003e $ git grep \u0027if err :\u003d\u0027 | wc -l\n\u003e 3156\n\u003e $ git grep \u0027if err \u003d\u0027 | wc -l\n\u003e 299\n\nOh, that definitely wasn\u0027t a fair comparison. This is more like it:\n\n$ git grep -n \u0027if err [!\u003d]\u0027 | wc -l\n3078\n\nSo roughly 50/50.",
      "parentUuid": "9cf22895_741aeaff",
      "range": {
        "startLine": 443,
        "startChar": 1,
        "endLine": 443,
        "endChar": 55
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40294459_231c1ccd",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 448,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "eap_completion_err ?",
      "range": {
        "startLine": 448,
        "startChar": 1,
        "endLine": 448,
        "endChar": 5
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12dfe5f4_f9fb33b9",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 448,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-28T23:27:39Z",
      "side": 1,
      "message": "https://github.com/golang/go/wiki/CodeReviewComments#variable-names\nhttps://golang.org/doc/effective_go.html#mixed-caps\n\nI\u0027m not sure how strictly to apply the first one, but I don\u0027t see why the long name is necessary.",
      "parentUuid": "40294459_231c1ccd",
      "range": {
        "startLine": 448,
        "startChar": 1,
        "endLine": 448,
        "endChar": 5
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "777ad4f9_213c92e0",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 450,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "eap_logoff_err ?",
      "range": {
        "startLine": 450,
        "startChar": 1,
        "endLine": 450,
        "endChar": 7
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08e7614a_d41b2d7e",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/ethernet_8021x.go",
        "patchSetId": 5
      },
      "lineNbr": 468,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-26T01:51:41Z",
      "side": 1,
      "message": "err/err1 naming: same as line 448/450.",
      "range": {
        "startLine": 466,
        "startChar": 1,
        "endLine": 468,
        "endChar": 11
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58cf52ec_05ba7538",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 5
      },
      "lineNbr": 256,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T00:52:41Z",
      "side": 1,
      "message": "Note to self: delete this. (The properties behavior changed recently.)",
      "range": {
        "startLine": 252,
        "startChar": 0,
        "endLine": 256,
        "endChar": 2
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22b7b08a_269babaf",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 5
      },
      "lineNbr": 256,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58cf52ec_05ba7538",
      "range": {
        "startLine": 252,
        "startChar": 0,
        "endLine": 256,
        "endChar": 2
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "746bf174_c5bd540d",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 5
      },
      "lineNbr": 279,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2020-01-27T01:22:38Z",
      "side": 1,
      "message": "I was able to replace lines 269-279 with: \n\nwanted :\u003d  \"/device/\" + iface\nif strings.Compare(wanted, dev.String()) \u003d\u003d 0 {\n    return dev, nil\n}\n\n\ndbusObject implements Stringer interface. \n\nThis isn\u0027t a great suggestion, but the only one I have so far in trying to reduce the complexity of this function (which seems a lift from GetDevicesByTechnology?). Both GetDevicesByTechnology and this function seem convoluted. Also, why does Manager.GetDevices return []dbusObjectPath, not []dbusObject?",
      "range": {
        "startLine": 269,
        "startChar": 0,
        "endLine": 279,
        "endChar": 3
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d24e9b40_6b1a74e5",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 5
      },
      "lineNbr": 279,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T00:52:41Z",
      "side": 1,
      "message": "\u003e I was able to replace lines 269-279 with: \n\u003e \n\u003e wanted :\u003d  \"/device/\" + iface\n\u003e if strings.Compare(wanted, dev.String()) \u003d\u003d 0 {\n\u003e     return dev, nil\n\u003e }\n\u003e \n\u003e \n\u003e dbusObject implements Stringer interface. \n\nI don\u0027t think \u0027/device/${Interface}\u0027 is actually a part of the documented D-Bus API. From .../shill/doc/device-api.txt:\n\nObject path     [variable prefix]/{device0,device1,...}\n\n\u003e Also, why does Manager.GetDevices return []dbusObjectPath, not []dbusObject?\n\nDunno -- maybe because path is the natural boundary between these objects? One object gives you a list of \u003cObjectType\u003e paths; you construct the new \u003cObjectType\u003e using those paths.\n\nOne could maybe argue that Manager.GetDevices() should return []Device? I can\u0027t think of a case where the caller doesn\u0027t really want to connect() to that object (to learn more about it).",
      "parentUuid": "746bf174_c5bd540d",
      "range": {
        "startLine": 269,
        "startChar": 0,
        "endLine": 279,
        "endChar": 3
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c27e7ff_e896f411",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 5
      },
      "lineNbr": 279,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T01:00:59Z",
      "side": 1,
      "message": "\u003e One could maybe argue that Manager.GetDevices() should return []Device? I can\u0027t think of a case where the caller doesn\u0027t really want to connect() to that object (to learn more about it).\n\nHmm, if I apply that to all similar objects:\n\nGetProfiles() isn\u0027t quite as nice -- there are tests that depend on the ordering of paths, and so they know they can just look at the \"last\" profile. To change GetProfiles() to return a D-Bus object would mean that we add unnecessary D-Bus connect calls.\n\nNot a huge deal I guess, but I think it\u0027s a decent property to have Get\u003cOBJECT\u003es() APIs look similar, within reason.",
      "parentUuid": "d24e9b40_6b1a74e5",
      "range": {
        "startLine": 269,
        "startChar": 0,
        "endLine": 279,
        "endChar": 3
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b60a6157_d33681a0",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 5
      },
      "lineNbr": 279,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-29T02:36:46Z",
      "side": 1,
      "message": "Resolving as WontFix, unless there are better suggestions.",
      "parentUuid": "0c27e7ff_e896f411",
      "range": {
        "startLine": 269,
        "startChar": 0,
        "endLine": 279,
        "endChar": 3
      },
      "revId": "98bde0abd2e180dc31f83d6456c64d653ffa7f3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}