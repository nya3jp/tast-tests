{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c45e2899_6728faa2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-02-02T11:53:14Z",
      "side": 1,
      "message": "sorry for taking longer time than usual for this iteration.",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2aa324bb_eda0d78b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1402113
      },
      "writtenOn": "2022-02-03T07:29:28Z",
      "side": 1,
      "message": "all good no worries! thank you for detailed reviews!",
      "parentUuid": "c45e2899_6728faa2",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "062acddb_91c4470d",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/fw_flash_erasers.go",
        "patchSetId": 18
      },
      "lineNbr": 63,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-02-02T11:53:14Z",
      "side": 1,
      "message": "(sorry overlooked at the prev iteration).\nmultiline log is discouraged. Could you output into log file, instead?",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00023c44_4eee7cf9",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/fw_flash_erasers.go",
        "patchSetId": 18
      },
      "lineNbr": 63,
      "author": {
        "id": 1402113
      },
      "writtenOn": "2022-02-03T07:29:28Z",
      "side": 1,
      "message": "What are the reasons why multiline log is discouraged? I seems normal thing to do for this test, I can explain why.\nThe whole console output from the test run is many lines anyway, and it is useful because you can clearly see from console output what\u0027s going on. Specifically, it is useful to have output from command line runs in console output, because it gives the needed information.\nOr do you mean to say that in addition to console output test should also create a log file with the same information?",
      "parentUuid": "062acddb_91c4470d",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bb60a26_6afd4266",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/fw_flash_erasers.go",
        "patchSetId": 18
      },
      "lineNbr": 63,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2022-02-04T06:42:20Z",
      "side": 1,
      "message": "Firstly, the logging guideline is here:\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#formatting\n\n\u003e In all cases, please avoid multiline strings since they make logs difficult to read. To preserve multiline output from an external program, please write it to an output file instead of logging it.\n\nI think another reasons is that, automated processings of logs can parse each line. If there is multiline log, they need to identify which lines correspond to a single log, but it is ill-posed problem when multiline log can contain confusing contents in it.\n\n\nSecondly, logs are primarily for helping identifying cause of issues when test failed or something went wrong.\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#when-to-log\n\nIf you are writing something that needs to be monitored continuously even when the test is success, it would be better to output to a separate result file (like done for performance tests) so that it could be manupulated by other tasks more reliably and flexibly.",
      "parentUuid": "00023c44_4eee7cf9",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c356931a_c2cef042",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/fw_flash_erasers.go",
        "patchSetId": 18
      },
      "lineNbr": 63,
      "author": {
        "id": 1402113
      },
      "writtenOn": "2022-02-07T03:20:47Z",
      "side": 1,
      "message": "Thank you for the explanation! Also, I read the links you provided.\nI understand there is a generic approach, but I don\u0027t think we have to apply it rigidly in this case. I have few questions, it would be great to make sure we are on the same page, and talking about the same things. Thanks!\n\n\u003e please avoid multiline strings since they make logs difficult to read\nDifficult for whom? For us (which means, people who are reading the logs for this test) this is exactly desired output. We are happy to read it.\n\n\u003e automated processings of logs can parse each line. If there is multiline log, they need to identify which lines correspond to a single log\nWhich exactly automated processings you are referring to? My goal is to optimise for actual usages of this test, when someone runs the test and then reads the output from console.\n\n\u003e it would be better to output to a separate result file\nI think there are two different things we are talking about: one is console output from running test, second is output into a log file. Do you mean I should create a result log file, in addition to console output, with the same content as console output? I can do this, would this resolve this comment thread?",
      "parentUuid": "7bb60a26_6afd4266",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78ae32f9_4bd72ae9",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/fw_flash_erasers.go",
        "patchSetId": 18
      },
      "lineNbr": 63,
      "author": {
        "id": 1166720
      },
      "writtenOn": "2022-02-07T05:31:38Z",
      "side": 1,
      "message": "\u003e \u003e please avoid multiline strings since they make logs difficult to read\n\u003e Difficult for whom?\nI am not the author of the document, but my theory is, \"for any programs in the automation systems that runs in the Chromium development and its infra ecosystem, which already exist and added in the future\".\n\u003e For us (which means, people who are reading the logs for this test) this is exactly desired output. We are happy to read it.\nI agree. So I think\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Output-files\nis the thing that fits your usage, because it assures to keep the original content as-is.\n\n\u003e Which exactly automated processings you are referring to? My goal is to optimise for actual usages of this test, when someone runs the test and then reads the output from console.\nI think this is the important point.\nWhat is the actual usage? Is this test run on the luci infra for a ceratin builder or CQ, besides manual testing by a developer?\n\n\u003e I think there are two different things we are talking about: one is console output from running test, second is output into a log file.\nLogs written by the logging function of Tast is output to both the dedicated logging file(s) and the console, by default. So these two things are linked actually, as long as we use the testing.ContextLog here. So writing an output file separated from the logging, \"Output Files\" in the above linked document, it will be resolved.",
      "parentUuid": "c356931a_c2cef042",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52c3d46e_1f54cc40",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/fw_flash_erasers.go",
        "patchSetId": 18
      },
      "lineNbr": 221,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-02-02T11:53:14Z",
      "side": 1,
      "message": "could you error message of the surrounding context?\n\nDitto for all below.",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6e6d91d_e7cf8908",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/fw_flash_erasers.go",
        "patchSetId": 18
      },
      "lineNbr": 221,
      "author": {
        "id": 1402113
      },
      "writtenOn": "2022-02-03T07:29:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52c3d46e_1f54cc40",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58bbb3da_5a96d1e3",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/fw_flash_erasers.go",
        "patchSetId": 18
      },
      "lineNbr": 228,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-02-02T11:53:14Z",
      "side": 1,
      "message": "style:\n\ns.Fatalf(\"Flashrom read into file %s failed: %v\", biosImagePath, err)\n\nditto for below.",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fec8b2ec_a0b4fa72",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/fw_flash_erasers.go",
        "patchSetId": 18
      },
      "lineNbr": 228,
      "author": {
        "id": 1402113
      },
      "writtenOn": "2022-02-03T07:29:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58bbb3da_5a96d1e3",
      "revId": "a2071e5ac09a7d4464e4ec26ffc025ebafecc366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}