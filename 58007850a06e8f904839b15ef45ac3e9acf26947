{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3cbe88c9_955c7782",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 181,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-09-12T23:02:46Z",
      "side": 1,
      "message": "Can you explain further how the DUT\u0027s hostname is used to get the callbox\u0027s hostname? This example does not reference the DUT\u0027s hostname, it is unclear where `\u003ccallbox\u003e` and `\u003cn\u003e` come from. These are also not referenced in the code, it\u0027s not clear to me how to get the callbox name from just the DUT hostname. Please provide a full example of how a DUT hostname is used to deduce its callbox hostname.\n\nWificells have routers and pcap hosts that are specific to each DUT and have hostnames that reflect this, which is why their hostnames can be deduced from the DUT hostname. Is that going to be the same for callboxes?",
      "range": {
        "startLine": 181,
        "startChar": 2,
        "endLine": 181,
        "endChar": 101
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ebaee82_3d3e4138",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 181,
      "author": {
        "id": 1541462
      },
      "writtenOn": "2022-09-13T16:01:23Z",
      "side": 1,
      "message": "Expanded the comment to give a complete example.\n\nYes, it\u0027s basically the same as what is done in wificells, here `callbox` is the hostname of the callbox and `n` is the DUT \"host number\" where each callbox can have multiple DUTs attached to it. So for a single callbox named:\n`chromeos1-donutlab-callbox1` valid DUT names could be:\n`chromeos1-donutlab-callbox1.host1`\n`chromeos1-donutlab-callbox1.host2`\n`chromeos1-donutlab-callbox1.host3`\n`...`",
      "parentUuid": "3cbe88c9_955c7782",
      "range": {
        "startLine": 181,
        "startChar": 2,
        "endLine": 181,
        "endChar": 101
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74dc1d7f_d6510ee6",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 182,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-09-12T23:02:46Z",
      "side": 1,
      "message": "This function seems to return the DUT hostname minus the last token delineated by `-` and add `.cros` to it. \ne.g.\n`chromeos-dev-host1` \u003d\u003e `chromeos-dev.cros`. \n\nIs there something I\u0027m missing here? How does that return the hostname of a callbox (e.g. `chromeos1-donutlab-callbox1`)?",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 182,
        "endChar": 52
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93da881e_35606976",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 182,
      "author": {
        "id": 1541462
      },
      "writtenOn": "2022-09-13T16:01:23Z",
      "side": 1,
      "message": "Yes, that\u0027s exactly what it does: `chromeos1-donutlab-callbox1-host1` \u003d\u003e `chromeos1-donutlab-callbox1.cros`",
      "parentUuid": "74dc1d7f_d6510ee6",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 182,
        "endChar": 52
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "116da7f2_12b4245f",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 182,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-09-13T20:57:21Z",
      "side": 1,
      "message": "Oh I didn\u0027t realize that the DUT hostnames were localized to the callbox hosts as well, that\u0027s a significant difference than every other DUT hostname. Thanks for clarifying.",
      "parentUuid": "93da881e_35606976",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 182,
        "endChar": 52
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ccd2ec3_e040c249",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 201,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-09-12T23:02:46Z",
      "side": 1,
      "message": "If this is a requirement you need to make sure that it is always present and that you are not adding the suffix if it is already there. \n\nA simple way to do this is by removing the suffix if it exists and then always adding it. Using `strings.TrimSuffix` you can easily ensure a string has a suffix by doing something like:\n\n```\n// assuming hostname is already resolved correctly otherwise at this point\nhostname \u003d strings.TrimSuffix(hostname, \".cros\") + \".cros\"\n```",
      "range": {
        "startLine": 201,
        "startChar": 19,
        "endLine": 201,
        "endChar": 60
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e277a449_1e4b6d9f",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 201,
      "author": {
        "id": 1541462
      },
      "writtenOn": "2022-09-13T16:01:23Z",
      "side": 1,
      "message": "Added. \n\nThough I\u0027m not aware of a scenario in which this can actually occur since jobs run in the lab just use the DUT hostname without a .cros ending and tests launched locally would be passed in as ssh tunnels which would be caught earlier.",
      "parentUuid": "0ccd2ec3_e040c249",
      "range": {
        "startLine": 201,
        "startChar": 19,
        "endLine": 201,
        "endChar": 60
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9532a388_42405670",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 201,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-09-13T20:57:21Z",
      "side": 1,
      "message": "I don\u0027t see a change in the latest patchset, where was this added?\n\nI\u0027d rather keep it flexible here since it\u0027s easy to do and then if for whatever reason our scheduling includes it (or if it\u0027s called another way without tunnels, like from the lab manually) then it just works anyways. It\u0027s just a requirement that we don\u0027t need since it can be easily accounted for.\n\nWe just don\u0027t want a case where it tries to connect to `somecallbox.cros.cros` since it isn\u0027t checked here when another `.cros` is added.",
      "parentUuid": "e277a449_1e4b6d9f",
      "range": {
        "startLine": 201,
        "startChar": 19,
        "endLine": 201,
        "endChar": 60
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6331f821_8e6b4bb3",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 201,
      "author": {
        "id": 1541462
      },
      "writtenOn": "2022-09-13T21:44:15Z",
      "side": 1,
      "message": "That makes sense, the change is added in line 190, I added it there to keep the changes to `dutHost` in the same area",
      "parentUuid": "9532a388_42405670",
      "range": {
        "startLine": 201,
        "startChar": 19,
        "endLine": 201,
        "endChar": 60
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db3be00e_d996b9e7",
        "filename": "src/chromiumos/tast/remote/cellular/callbox/manager/fixture.go",
        "patchSetId": 15
      },
      "lineNbr": 201,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-09-13T21:46:25Z",
      "side": 1,
      "message": "Ah I see that now, thanks!",
      "parentUuid": "6331f821_8e6b4bb3",
      "range": {
        "startLine": 201,
        "startChar": 19,
        "endLine": 201,
        "endChar": 60
      },
      "revId": "58007850a06e8f904839b15ef45ac3e9acf26947",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}