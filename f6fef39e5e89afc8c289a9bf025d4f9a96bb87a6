{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d503eded_b503b93f",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 16
      },
      "lineNbr": 464,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-09-12T13:36:38Z",
      "side": 1,
      "message": "nit: curious, is there any advantage to using `partition` as oppose to `split`? The latter doesn\u0027t return the separators and you don\u0027t need `_` before the equality sign.",
      "range": {
        "startLine": 464,
        "startChar": 48,
        "endLine": 464,
        "endChar": 57
      },
      "revId": "f6fef39e5e89afc8c289a9bf025d4f9a96bb87a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d79163cd_0a4ba6b3",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 16
      },
      "lineNbr": 557,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-09-12T13:36:38Z",
      "side": 1,
      "message": "Odd, but I see these lines as added even when diffing with base, despite them being on the main branch: https://chromium.googlesource.com/chromiumos/platform/tast-tests/+/main/src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py#542. Can you please rebase this CL one more time so that they disappear in Gerrit?",
      "range": {
        "startLine": 556,
        "startChar": 0,
        "endLine": 557,
        "endChar": 69
      },
      "revId": "f6fef39e5e89afc8c289a9bf025d4f9a96bb87a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4f9272a_2aaa954a",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 16
      },
      "lineNbr": 29,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-09-12T13:37:44Z",
      "side": 1,
      "message": "IMHO the doc explaining how to use these two fields should be here and not just on MarshalJSON function.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 65
      },
      "revId": "f6fef39e5e89afc8c289a9bf025d4f9a96bb87a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eb3b0b5_de406fca",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 16
      },
      "lineNbr": 43,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-09-12T13:36:38Z",
      "side": 1,
      "message": "Is all of this supported by C++ server? AFAICT, we only support the following properties: https://source.chromium.org/chromium/chromium/src/+/main:components/policy/test_support/fake_dmserver.cc;l\u003d33-36;drc\u003dcf1447ded73fd2f37875ba200a33bd54d7e3fcd1. If you want to keep these and add support for them later, please add a comment. Notably, some of these are supported by the PolicyStorage class (and its depedencies), but are not exposed through the FakeDMServer\u0027s JSON API, e.g. see https://source.chromium.org/chromium/chromium/src/+/main:components/policy/test_support/signature_provider.h;l\u003d77-80;drc\u003d9e249731c0b1aab0e53fb776b9c11e673e721c45 \nand https://source.chromium.org/chromium/chromium/src/+/main:components/policy/test_support/policy_storage.h;l\u003d67-72;drc\u003d67bcf8b40d5ddff3fc62f826d93be97f2fa8b63a.",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 43,
        "endChar": 90
      },
      "revId": "f6fef39e5e89afc8c289a9bf025d4f9a96bb87a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e6aa191_7ef6ba99",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 16
      },
      "lineNbr": 154,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-09-12T13:36:38Z",
      "side": 1,
      "message": "nit: they\n\nsame below",
      "range": {
        "startLine": 154,
        "startChar": 74,
        "endLine": 154,
        "endChar": 76
      },
      "revId": "f6fef39e5e89afc8c289a9bf025d4f9a96bb87a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c07ea58_c7c0972d",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 16
      },
      "lineNbr": 156,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-09-12T13:36:38Z",
      "side": 1,
      "message": "I am not sure I understand this. Does user need to set DevicePolicies, DeviceProto or both? Why can\u0027t we just have DevicePolicies and create DeviceProto while serializing JSON?",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 156,
        "endChar": 81
      },
      "revId": "f6fef39e5e89afc8c289a9bf025d4f9a96bb87a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5994a0c2_aaf3a5d7",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 16
      },
      "lineNbr": 189,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-09-12T13:36:38Z",
      "side": 1,
      "message": "Do we really want to modify the struct while serializing it to JSON? Shouldn\u0027t we just use a local variable? What\u0027s probably even better is to initialize this field in NewBlob function above.",
      "revId": "f6fef39e5e89afc8c289a9bf025d4f9a96bb87a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}