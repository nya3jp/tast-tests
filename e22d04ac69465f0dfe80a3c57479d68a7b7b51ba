{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f4d2229a_cd7402c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1399098
      },
      "writtenOn": "2022-03-01T05:17:15Z",
      "side": 1,
      "message": "CL to delete the creds file https://chrome-internal-review.git.corp.google.com/c/chromeos/platform/tast-tests-private/+/4582372",
      "revId": "e22d04ac69465f0dfe80a3c57479d68a7b7b51ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38165d5a_a12693a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1519467
      },
      "writtenOn": "2022-03-01T18:37:04Z",
      "side": 1,
      "message": "LGTM.\n\nI am assuming the \"parallel testing\" comes from many lab DUTs using the same account at the same time? And the 50 limit is for all regular users and not just for testing accounts.",
      "revId": "e22d04ac69465f0dfe80a3c57479d68a7b7b51ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d288832f_0e4d91bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1399098
      },
      "writtenOn": "2022-03-01T18:41:23Z",
      "side": 1,
      "message": "Yes, due to test running with variations on different models. And this 50 tokens limit is universal (including test accounts).",
      "parentUuid": "38165d5a_a12693a2",
      "revId": "e22d04ac69465f0dfe80a3c57479d68a7b7b51ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59593615_06cf903f",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/optin_managed.go",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1519467
      },
      "writtenOn": "2022-03-01T18:37:04Z",
      "side": 1,
      "message": "small nit: If this line is after `loginPoolVar`, the change to this line would be minimal, i.e. only 4 -\u003e 5.",
      "revId": "e22d04ac69465f0dfe80a3c57479d68a7b7b51ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fc47490_c87bc273",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/optin_managed.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1519467
      },
      "writtenOn": "2022-03-01T18:37:04Z",
      "side": 1,
      "message": "Just curious what adding this helps (since there are also other fields in the struct).",
      "revId": "e22d04ac69465f0dfe80a3c57479d68a7b7b51ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86fce6b7_d6492e0c",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/optin_managed.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1399098
      },
      "writtenOn": "2022-03-01T18:41:23Z",
      "side": 1,
      "message": "The default user specified in the struct is tast-user@managedchrome.com so when a different user is used in the test while the fake policy user doesn\u0027t match, the policy is rejected and the session is ended so the test fails.",
      "parentUuid": "0fc47490_c87bc273",
      "revId": "e22d04ac69465f0dfe80a3c57479d68a7b7b51ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "e22d04ac69465f0dfe80a3c57479d68a7b7b51ba",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "e22d04ac69465f0dfe80a3c57479d68a7b7b51ba",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "e22d04ac69465f0dfe80a3c57479d68a7b7b51ba",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}