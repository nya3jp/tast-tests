{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f5668898_39393ae6",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_coexistence.go",
        "patchSetId": 6
      },
      "lineNbr": 75,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2022-05-13T17:00:52Z",
      "side": 1,
      "message": "not relate to this CL:\ni\u0027d recommend to don\u0027t pass 2 contexts. Instead create cleanupCtx inside each function from ctx.\n\ncleanupCtx that you pass here is actually derived from ctx you receive in CCAUICoexistence, but ctx in this function you receive in s.Run function.",
      "range": {
        "startLine": 75,
        "startChar": 38,
        "endLine": 75,
        "endChar": 49
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30681a9c_7609207d",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_coexistence.go",
        "patchSetId": 6
      },
      "lineNbr": 75,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f5668898_39393ae6",
      "range": {
        "startLine": 75,
        "startChar": 38,
        "endLine": 75,
        "endChar": 49
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a53ab8d_3bbb0786",
        "filename": "src/chromiumos/tast/local/camera/features/control_test.go",
        "patchSetId": 6
      },
      "lineNbr": 99,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2022-05-16T04:10:08Z",
      "side": 1,
      "message": "nit: The structure could be simplified as:\n\n```\nif p, err :\u003d ...; err !\u003d nil {\n  t.Errorf(\"...\", err)\n} else if p !\u003d expPath {\n  t.Errorf(\"...\", p}\n}\n```",
      "range": {
        "startLine": 92,
        "startChar": 1,
        "endLine": 99,
        "endChar": 0
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "147056b3_30e9d16f",
        "filename": "src/chromiumos/tast/local/camera/features/control_test.go",
        "patchSetId": 6
      },
      "lineNbr": 99,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a53ab8d_3bbb0786",
      "range": {
        "startLine": 92,
        "startChar": 1,
        "endLine": 99,
        "endChar": 0
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32ba198c_b3c3b4b5",
        "filename": "src/chromiumos/tast/local/camera/features/control_test.go",
        "patchSetId": 6
      },
      "lineNbr": 106,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2022-05-16T04:10:08Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 100,
        "startChar": 1,
        "endLine": 106,
        "endChar": 2
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be54b413_12ea2583",
        "filename": "src/chromiumos/tast/local/camera/features/control_test.go",
        "patchSetId": 6
      },
      "lineNbr": 106,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32ba198c_b3c3b4b5",
      "range": {
        "startLine": 100,
        "startChar": 1,
        "endLine": 106,
        "endChar": 2
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22cab16d_832d2dc9",
        "filename": "src/chromiumos/tast/local/camera/features/control_test.go",
        "patchSetId": 6
      },
      "lineNbr": 160,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2022-05-16T04:10:08Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 153,
        "startChar": 1,
        "endLine": 160,
        "endChar": 0
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28e7fd7f_646d57a8",
        "filename": "src/chromiumos/tast/local/camera/features/control_test.go",
        "patchSetId": 6
      },
      "lineNbr": 160,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22cab16d_832d2dc9",
      "range": {
        "startLine": 153,
        "startChar": 1,
        "endLine": 160,
        "endChar": 0
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e42d997_c926311c",
        "filename": "src/chromiumos/tast/local/camera/perf/profiler.go",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2022-05-13T17:00:52Z",
      "side": 1,
      "message": "Don\u0027t store context in structs, pass directly to functions.\nhttps://pkg.go.dev/context",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 20
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b27c3f9_40370096",
        "filename": "src/chromiumos/tast/local/camera/perf/profiler.go",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e42d997_c926311c",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 20
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3713a89_57f997ca",
        "filename": "src/chromiumos/tast/local/camera/perf/profiler.go",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2022-05-13T17:00:52Z",
      "side": 1,
      "message": "Maybe instead of introducing new Profiler, you can figure out how to run graphics.MeasureCPUUsageAndPower using existing \"profiler\" package?",
      "range": {
        "startLine": 82,
        "startChar": 13,
        "endLine": 82,
        "endChar": 45
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9af1a34_f1cd532e",
        "filename": "src/chromiumos/tast/local/camera/perf/profiler.go",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "It\u0027ll require a large refactor of the `graphics.Measure*` functions because these functions were designed to run for a given duration and then report the results, while the existing profiler package wants the profiler instances to stop through callback.\n\nThere are several existing tests using the `graphics.Measure*` functions today and I don\u0027t want to make such large scale changes in this CL. If we find a need to do it, I\u0027d prefer we do it in another CL.",
      "parentUuid": "a3713a89_57f997ca",
      "range": {
        "startLine": 82,
        "startChar": 13,
        "endLine": 82,
        "endChar": 45
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a048acb_af5af44a",
        "filename": "src/chromiumos/tast/local/camera/perf/profiler.go",
        "patchSetId": 6
      },
      "lineNbr": 144,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2022-05-13T17:00:52Z",
      "side": 1,
      "message": "Don\u0027t ignore error.",
      "range": {
        "startLine": 144,
        "startChar": 1,
        "endLine": 144,
        "endChar": 14
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8be0071_afb80a54",
        "filename": "src/chromiumos/tast/local/camera/perf/profiler.go",
        "patchSetId": 6
      },
      "lineNbr": 144,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2022-05-13T17:00:52Z",
      "side": 1,
      "message": "Maybe use cpu.WaitUntilIdle instead?\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/graphics/perf.go;l\u003d524?q\u003dgraphics.MeasureCPUUsageAndPower",
      "range": {
        "startLine": 144,
        "startChar": 25,
        "endLine": 144,
        "endChar": 47
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb878bdd_e22931d7",
        "filename": "src/chromiumos/tast/local/camera/perf/profiler.go",
        "patchSetId": 6
      },
      "lineNbr": 144,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a048acb_af5af44a",
      "range": {
        "startLine": 144,
        "startChar": 1,
        "endLine": 144,
        "endChar": 14
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeb31e82_470411fc",
        "filename": "src/chromiumos/tast/local/camera/perf/profiler.go",
        "patchSetId": 6
      },
      "lineNbr": 144,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "The stabilize duration here is for the camera workload itself to settle. `cpu.WaitUntilIdle` doesn\u0027t work very well here because we start the profiler after the camera workload. I think what we can do is to add a `cpu.WaitUntilIdle` at the very beginning of the test to kind of make sure the system isn\u0027t busy with something else when we run the test.",
      "parentUuid": "f8be0071_afb80a54",
      "range": {
        "startLine": 144,
        "startChar": 25,
        "endLine": 144,
        "endChar": 47
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bf5777c_a86e512b",
        "filename": "src/chromiumos/tast/local/camera/testpage/camera_page.go",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2022-05-13T17:00:52Z",
      "side": 1,
      "message": "nit: no need to give a name for this error",
      "range": {
        "startLine": 78,
        "startChar": 70,
        "endLine": 78,
        "endChar": 76
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aff6f33f_aa1312d8",
        "filename": "src/chromiumos/tast/local/camera/testpage/camera_page.go",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bf5777c_a86e512b",
      "range": {
        "startLine": 78,
        "startChar": 70,
        "endLine": 78,
        "endChar": 76
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "120dc801_5b9e5c0e",
        "filename": "src/chromiumos/tast/local/camera/testpage/camera_page.go",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2022-05-13T17:00:52Z",
      "side": 1,
      "message": "retErr already might be not nil, so please log all errors. Usually function returns firstErr, not last error\n\n```\nif err :\u003d w.trackState.Release(ctx); err !\u003d nil {\n  testing.ContextLog(\"Failed to ...\", err)\n  if firstErr \u003d\u003d nil {\n    firstErr \u003d err\n  }\n}\n```",
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a10273d2_ca61caa8",
        "filename": "src/chromiumos/tast/local/camera/testpage/camera_page.go",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "I\u0027m not sure if the cascaded `retErr` here is by design.\n\nWei/Shik - Do you have any comments? I can update the code if returning the first error is what we need for the errors returned from CDP.",
      "parentUuid": "120dc801_5b9e5c0e",
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3672a149_f9f02df1",
        "filename": "src/chromiumos/tast/local/camera/testpage/camera_page.go",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2022-05-16T04:40:21Z",
      "side": 1,
      "message": "The intention here is to make sure all the cleanup tasks are executed even if there is any error happens. And I agree that we should return the first error instead of the last one. As a result, maybe we can have a helper function to log the new error  if the `retErr` is already filled. Something like:\n```\nfunc firstError(ctx context, Context, first, second error) error {\n  if first \u003d\u003d nil {\n    return second\n  }\n\n  if second !\u003d nil {\n    testing.ContextLog(ctx, second)\n  }\n  return first\n}\n\nif err :\u003d doCleanup1(); err !\u003d nil {\n  retErr \u003d firstError(ctx, retErr, err)\n}\n\nif err :\u003d doCleanup2(); err !\u003d nil {\n  retErr \u003d secondError(ctx, retErr, err)\n}\n\n// ...\n```",
      "parentUuid": "a10273d2_ca61caa8",
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c51ed3b_473144af",
        "filename": "src/chromiumos/tast/local/camera/testpage/data/camera_page.html",
        "patchSetId": 6
      },
      "lineNbr": 2,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2022-05-13T17:00:52Z",
      "side": 1,
      "message": "nit: 2022?",
      "range": {
        "startLine": 2,
        "startChar": 15,
        "endLine": 2,
        "endChar": 19
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dfc524d_05bc4eb3",
        "filename": "src/chromiumos/tast/local/camera/testpage/data/camera_page.html",
        "patchSetId": 6
      },
      "lineNbr": 2,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2022-05-16T04:23:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c51ed3b_473144af",
      "range": {
        "startLine": 2,
        "startChar": 15,
        "endLine": 2,
        "endChar": 19
      },
      "revId": "c53153fe58763b029cf74297f27740443f2930e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}