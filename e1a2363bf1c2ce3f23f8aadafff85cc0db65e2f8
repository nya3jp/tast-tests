{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2477bb96_992ccb40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1163499
      },
      "writtenOn": "2020-12-14T07:46:03Z",
      "side": 1,
      "message": "PTAL. Thanks!",
      "revId": "e1a2363bf1c2ce3f23f8aadafff85cc0db65e2f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e7a1b7e_f11efc86",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/physical_keyboard.go",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1195459
      },
      "writtenOn": "2020-12-15T06:26:47Z",
      "side": 1,
      "message": "What causes this to happen? Does this also happen in other tests, or is it specific to this  test? Also, perhaps we should handle the returned error.",
      "range": {
        "startLine": 222,
        "startChar": 3,
        "endLine": 227,
        "endChar": 4
      },
      "revId": "e1a2363bf1c2ce3f23f8aadafff85cc0db65e2f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00127612_75dabe98",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/physical_keyboard.go",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1163499
      },
      "writtenOn": "2020-12-15T07:46:54Z",
      "side": 1,
      "message": "One example is pressing BACK key. It closes the app. I\u0027ll add error handling.",
      "parentUuid": "5e7a1b7e_f11efc86",
      "range": {
        "startLine": 222,
        "startChar": 3,
        "endLine": 227,
        "endChar": 4
      },
      "revId": "e1a2363bf1c2ce3f23f8aadafff85cc0db65e2f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "209c2e58_97329a4d",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/physical_keyboard.go",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1163499
      },
      "writtenOn": "2020-12-15T14:56:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00127612_75dabe98",
      "range": {
        "startLine": 222,
        "startChar": 3,
        "endLine": 227,
        "endChar": 4
      },
      "revId": "e1a2363bf1c2ce3f23f8aadafff85cc0db65e2f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12c32797_9731b215",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/physical_keyboard.go",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1195459
      },
      "writtenOn": "2020-12-15T06:26:47Z",
      "side": 1,
      "message": "Is there a way to wait for the key to be delivered to the activity (perhaps it\u0027s difficult because some keys are simply discarded by Android framework)?",
      "revId": "e1a2363bf1c2ce3f23f8aadafff85cc0db65e2f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baf107fa_8111ddff",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/physical_keyboard.go",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1163499
      },
      "writtenOn": "2020-12-15T07:46:54Z",
      "side": 1,
      "message": "I couldn\u0027t come up with any good way to detect it. In addition to Android framework, ChromeOS system can consume several key events even before sending them to ARC++. Do you have any ideas?",
      "parentUuid": "12c32797_9731b215",
      "revId": "e1a2363bf1c2ce3f23f8aadafff85cc0db65e2f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e15cab4_373d6d8c",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/physical_keyboard.go",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1195459
      },
      "writtenOn": "2020-12-16T13:29:37Z",
      "side": 1,
      "message": "How about that: It is roughly guaranteed* that the input is processed in order, so inject KEY_A or some visible character before every key input, then check that it\u0027s received by the app.\n\nThere are some corner cases to the approach e.g. BACK key so how about explicitly listing these keys in the test and do special-case handling along with act.Start()?\n\n*) subsequent action e.g. closing the activity from BACK press may run asynchronously but events should at least reach Ozone or InputReaderArc in order.",
      "parentUuid": "baf107fa_8111ddff",
      "revId": "e1a2363bf1c2ce3f23f8aadafff85cc0db65e2f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "435950ee_0cb0aaae",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/physical_keyboard.go",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1163499
      },
      "writtenOn": "2020-12-22T10:44:41Z",
      "side": 1,
      "message": "Sending another key event to make sure it\u0027s working before typing the test target is an interesting idea. However, I\u0027d like to avoid the special logic for specific key codes because it introduces a dependency from this test to Chrome\u0027s behavior. It will be difficult to keep the test updated everytime when Chrome changes the behavior of some special key. WDYT?",
      "parentUuid": "4e15cab4_373d6d8c",
      "revId": "e1a2363bf1c2ce3f23f8aadafff85cc0db65e2f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67cae4aa_3b031b51",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/physical_keyboard.go",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1195459
      },
      "writtenOn": "2020-12-23T09:04:01Z",
      "side": 1,
      "message": "OK, then can we document corner cases we\u0027re aware of in the test so that we can make improvement later?\n\nThere are following corner cases I can imagine:\n\ncase #1:\n\n1. A key (e.g. back button) is pressed that closes the activity\n2. focusField() runs before the key #1 is processed by Android and succeeds, because there\u0027s no wait\n2. A key that leads to ARC crash or mojo disconnection is sent, but it\u0027s not sent to Android\n3. Because it\u0027s not received by Android, it fails to catch the regression\n\ncase #2:\n\n1. A key that leads to ARC crash or mojo disconnection is sent as a last case\n2. As there\u0027s no wait after the loop, done is sent to the logcat goroutine before the crash message is received\n3. Because the test returns without error, it fails to catch the regression",
      "parentUuid": "435950ee_0cb0aaae",
      "revId": "e1a2363bf1c2ce3f23f8aadafff85cc0db65e2f8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}