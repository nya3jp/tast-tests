{
  "comments": [
    {
      "key": {
        "uuid": "92bf8174_845c9b18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-13T05:40:21Z",
      "side": 1,
      "message": "lgtm modulo nya@\u0027s comment about rebooting.",
      "revId": "f6b23f60e9dc3bf55ced18f6ffa26c0082953f05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8777cc7_e75db560",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 6
      },
      "lineNbr": 55,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-13T05:50:47Z",
      "side": 1,
      "message": "Could you add json annotations for these fields too, so that the result of unmarshaling is not variable name sensitive?",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 55,
        "endChar": 2
      },
      "revId": "f6b23f60e9dc3bf55ced18f6ffa26c0082953f05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e7b5ced_d10f2f6f",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1359576
      },
      "writtenOn": "2020-08-13T00:21:33Z",
      "side": 1,
      "message": "why only the first line?",
      "range": {
        "startLine": 82,
        "startChar": 21,
        "endLine": 82,
        "endChar": 32
      },
      "revId": "f6b23f60e9dc3bf55ced18f6ffa26c0082953f05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e23d1907_164a9eac",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-08-13T04:16:26Z",
      "side": 1,
      "message": "Full log is dumped to output dir (for debugging). This is just an error message in test log.",
      "parentUuid": "7e7b5ced_d10f2f6f",
      "range": {
        "startLine": 82,
        "startChar": 21,
        "endLine": 82,
        "endChar": 32
      },
      "revId": "f6b23f60e9dc3bf55ced18f6ffa26c0082953f05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6164bebf_1f607a36",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/power_control.go",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-08-13T04:04:09Z",
      "side": 1,
      "message": "Usually rebooting the DUT in local tests is unexpected. But in this case it sounds okay, because it\u0027s solely to avoid disturbing other tests.\n\nBut can you make following changes to make the intent clear?\n\n1. Add a comment that you know that rebooting the DUT in local tests is unusual, but we have to reboot the DUT to avoid going into suspend while other tests are running.\n2. After running reboot, wait indefinitely to make sure that the next test never runs before reboot. For example:\n\n if err :\u003d testexec.CommandContext(ctx, \"reboot\").Run(testexec.DumpLogOnError); err !\u003d nil {\n   testing.ContextLog(...)\n }\n var ch \u003c-chan struct{}\n \u003c-ch // wait for reboot indefinitely",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 69
      },
      "revId": "f6b23f60e9dc3bf55ced18f6ffa26c0082953f05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14d62b5d_42cae6a8",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/power_control.go",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-08-13T04:16:26Z",
      "side": 1,
      "message": "I actually did several experiments on a few different DUTs trying to fail the test purposely.\nAs it is currently implemented, the test runner waits for the reboot to finish (until the OS is loaded) and then stops the test with an error.",
      "parentUuid": "6164bebf_1f607a36",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 69
      },
      "revId": "f6b23f60e9dc3bf55ced18f6ffa26c0082953f05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}