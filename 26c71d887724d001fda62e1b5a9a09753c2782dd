{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c2d2eac3_22a9caec",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/fusebox.go",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1345446
      },
      "writtenOn": "2022-05-30T05:29:48Z",
      "side": 1,
      "message": "Instead of `s.Error` + `return`, you can use `s.Fatal`.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 57,
        "endChar": 0
      },
      "revId": "26c71d887724d001fda62e1b5a9a09753c2782dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4866e5ba_9a728eab",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/fusebox.go",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2022-05-30T05:37:48Z",
      "side": 1,
      "message": "Will the prior defers be called?  Using .Error which I cribbed from other .go tests using Mount suggested to me that .Error was the way to go.  No question that the defers will be called in that case.",
      "parentUuid": "c2d2eac3_22a9caec",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 57,
        "endChar": 0
      },
      "revId": "26c71d887724d001fda62e1b5a9a09753c2782dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4603d06f_301339ee",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/fusebox.go",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1345446
      },
      "writtenOn": "2022-05-30T05:57:31Z",
      "side": 1,
      "message": "I think that the deferred function will always be called. But maybe Ben can confirm?",
      "parentUuid": "4866e5ba_9a728eab",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 57,
        "endChar": 0
      },
      "revId": "26c71d887724d001fda62e1b5a9a09753c2782dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10a1459b_e1edb788",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/fusebox.go",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1109754
      },
      "writtenOn": "2022-05-30T06:16:33Z",
      "side": 1,
      "message": "Ben is OOO today.  I will force the Fatal line 62 below ...\n\n  if err !\u003d nil \u003d\u003e if err \u003d\u003d nil {\n    s.Fatal(\"blah\")\n\nand see if this test\u0027s fusebox FUSE mount point is Unmounted. If so, then the `defer Umount(ctx ...)` is being called and removes the test\u0027s mount point, which is kinda the goal.",
      "parentUuid": "4603d06f_301339ee",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 57,
        "endChar": 0
      },
      "revId": "26c71d887724d001fda62e1b5a9a09753c2782dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}