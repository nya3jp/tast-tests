{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "25f8a79d_3af2a098",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "Hi Bisakh,\n\nThanks for your CL! I have some comments! Also it will be good to see how this service is used in real test, so we can figure out the right design for it.",
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aef70c3a_8ad88994",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "What benefits do we have using testing.Closers?",
      "range": {
        "startLine": 46,
        "startChar": 12,
        "endLine": 46,
        "endChar": 27
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca12f58b_b95a34c3",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-06-29T12:29:28Z",
      "side": 1,
      "message": "Nothing Great. Just a repository kind of thing to collect all the closers and close it during cleanup with a shortened context. Instead of playing with 2 ctx objects.\nIf you suggest, I am totally fine without it.",
      "parentUuid": "aef70c3a_8ad88994",
      "range": {
        "startLine": 46,
        "startChar": 12,
        "endLine": 46,
        "endChar": 27
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7112722d_c26d6280",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "ca12f58b_b95a34c3",
      "range": {
        "startLine": 46,
        "startChar": 12,
        "endLine": 46,
        "endChar": 27
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "306288ab_7569feab",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "hm... you actually trying to stop \"powerd\" which you will use next in the code to get power status updates. How did it work for you when you test it?",
      "range": {
        "startLine": 53,
        "startChar": 31,
        "endLine": 53,
        "endChar": 37
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a052183_5cba46c4",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-06-29T12:29:28Z",
      "side": 1,
      "message": "I got this suggestions from here https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/third_party/autotest/files/client/cros/service_stopper.py;l\u003d36",
      "parentUuid": "306288ab_7569feab",
      "range": {
        "startLine": 53,
        "startChar": 31,
        "endLine": 53,
        "endChar": 37
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2480ae3_51055299",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Hey I looked into it, turns out powerd is a daemon that initiates dimming the screen, suspending the system, etc. Doesn\u0027t look that much important to me now. What do you think!\n\nQuerying power status after stopping it works fine.",
      "parentUuid": "6a052183_5cba46c4",
      "range": {
        "startLine": 53,
        "startChar": 31,
        "endLine": 53,
        "endChar": 37
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c21cbe1d_0cf945c6",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "If we don\u0027t stop them, how much longer we will charge the DUT?\n\nEven though it might speed up charging, this RPC performs some unexpected things. What if some test will use in parallel another RPCs which relies on UI or other services?",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 60,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "565b8385_b30d8812",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "I have removed \"ui\" from the list of services.\n\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/third_party/autotest/files/client/cros/service_stopper.py;l\u003d36\nAccording to this, the rest three should be stopped during running power tests.\nPlease share your views. Thanks.",
      "parentUuid": "c21cbe1d_0cf945c6",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 60,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2666b3c_37bd6eee",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-07-05T20:20:31Z",
      "side": 1,
      "message": "You should not stop powerd daemon for this test, because powerd daemon writes policy to the EC driver. Without this service running, there is no way to test policy properly.\n\nI\u0027d just ignore that stop services logic unless you prove we have to stop something.",
      "parentUuid": "565b8385_b30d8812",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 60,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "696e4d73_b08a1c8e",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-06T05:56:31Z",
      "side": 1,
      "message": "One thing, is powerd responsible for controlling the rate at which DUT is filling it\u0027s battery?\n\nAs in regular life I notice, charging from 10 to 60 is extremely fast, 60 to 90 medium, and 90 to 100 (OMG) it super slow (ig some sort of trickle charging goes on to prevent battery wear out). We need to kill that service.\nAfter killing these three, I haven\u0027t faced such scenarios.\n\nIg, what you are asking is what if some concurrent testing is going on while battery is being charged, right?",
      "parentUuid": "a2666b3c_37bd6eee",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 60,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5fb12fd_3cf87995",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-07-06T11:53:26Z",
      "side": 1,
      "message": "IIUC, EC and battery itself are responsible for controlling that.\n\nPowerd sends configurations to the EC. So if you stop powerd, there is no way for EC to get new policy value.\n\nBattery charging behaviour does not depend on any services running on Chrome OS. Of course, they might slow down charging, but I don\u0027t think it will be dramatically. We need to measure if really want to stop some of them, otherwise we should not do that.",
      "parentUuid": "696e4d73_b08a1c8e",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 60,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d1beeaa_60c32c9e",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-11T07:39:05Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "a5fb12fd_3cf87995",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 60,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f35d2d9e_52a9fb1a",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "i\u0027d be less aggressive and keep some brightness because it might affect other tests if we fail to reset brightness after the test",
      "range": {
        "startLine": 62,
        "startChar": 39,
        "endLine": 62,
        "endChar": 40
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab762c24_b2b18842",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Yeah, you are right. I found 40% is default in chromebooks. So i am going with 10/20 percent.",
      "parentUuid": "f35d2d9e_52a9fb1a",
      "range": {
        "startLine": 62,
        "startChar": 39,
        "endLine": 62,
        "endChar": 40
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3626e5e6_f518a288",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-07-05T20:20:31Z",
      "side": 1,
      "message": "How much faster test will be running if we \"play\" with brightness?",
      "parentUuid": "ab762c24_b2b18842",
      "range": {
        "startLine": 62,
        "startChar": 39,
        "endLine": 62,
        "endChar": 40
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e0b23f7_1d02e3b7",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-06T05:56:31Z",
      "side": 1,
      "message": "Okay I\u0027ll share a report with you.\nIt\u0027s more like a precaution, what if last test failed to revert the brightness to original.",
      "parentUuid": "3626e5e6_f518a288",
      "range": {
        "startLine": 62,
        "startChar": 39,
        "endLine": 62,
        "endChar": 40
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9789cd0e_ed2e8786",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "nit: why not fail here? Of course, we can live with higher brightness, but this should never fail.\n\nIf we just ignore it (even though we log it), some bug might be there for a long time.",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9fda301_eb00cb41",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Actually, my intention was what if the DUT is connected to an external monitor or has no screen (in a grid, something like that). It\u0027s no hard requirement that\u0027s why I was skipping it.",
      "parentUuid": "9789cd0e_ed2e8786",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d03eb89b_09f41677",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-07-05T20:20:31Z",
      "side": 1,
      "message": "There is no such requirement at the moment. If we had such requirement we should not even call this method for DUT without monitor and fail on error for DUT with monitor 😊",
      "parentUuid": "f9fda301_eb00cb41",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85db1cfc_d8126d6a",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "nit: can\u0027t we just use double in the proto to don\u0027t convert it to float64?",
      "range": {
        "startLine": 80,
        "startChar": 14,
        "endLine": 80,
        "endChar": 21
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2be86783_dabb57c9",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-06-29T12:29:28Z",
      "side": 1,
      "message": "Definitely. Extra 32 bit over the wire doesn\u0027t matter in 5G era:)",
      "parentUuid": "85db1cfc_d8126d6a",
      "range": {
        "startLine": 80,
        "startChar": 14,
        "endLine": 80,
        "endChar": 21
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "696b6456_1d02c1fe",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2be86783_dabb57c9",
      "range": {
        "startLine": 80,
        "startChar": 14,
        "endLine": 80,
        "endChar": 21
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "234bba6e_44afa9d4",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "nit: i think it\u0027s good for debugging, but IMO it adds too much info to the logs",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 99,
        "endChar": 126
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "680d390b_3cb20d05",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-06-29T12:29:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "234bba6e_44afa9d4",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 99,
        "endChar": 126
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c27c27e_b9459893",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "I have added a periodicLog function that runs on a goroutine and prints some log periodically to avoid a complete blank terminal while running these tests as they are long running in nature.\nIt\u0027s not required though. If you think it\u0027s not useful, do let me know. I\u0027ll remove it.",
      "parentUuid": "680d390b_3cb20d05",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 99,
        "endChar": 126
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f601f290_e875aad3",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "I\u0027d decrease interval to 1 second. We can use fast charging which gives really a lot of power to the DUT: it might charge from 0 to 100 in something like 1 hour (don\u0027t remember exact numbers).",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 28
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b516e60_968f46cc",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f601f290_e875aad3",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 28
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58c1a2d3_0a9f532d",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "I think you should use powerd instead:\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform2/system_api/dbus/power_manager/backlight.proto;l\u003d21",
      "range": {
        "startLine": 130,
        "startChar": 12,
        "endLine": 130,
        "endChar": 33
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7ba9f49_91b7c4fc",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Wrote functions to tackle these.Turns out backlight-tool also supports percentage scheme.",
      "parentUuid": "58c1a2d3_0a9f532d",
      "range": {
        "startLine": 130,
        "startChar": 12,
        "endLine": 130,
        "endChar": 33
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3566b842_aa51714a",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-07-05T20:20:31Z",
      "side": 1,
      "message": "adding one more tool to the test/service will complicate it IMO.\n\nAlso you don\u0027t need to do any parsing if you work with proto.",
      "parentUuid": "c7ba9f49_91b7c4fc",
      "range": {
        "startLine": 130,
        "startChar": 12,
        "endLine": 130,
        "endChar": 33
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abab1b84_8ffebcd5",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-11T07:39:05Z",
      "side": 1,
      "message": "Hi I looked into it. The SetBrightness is okay, but I am getting trouble with GetBrightnessPercent method. It returns a float64 value, currently we don\u0027t have proto message type to accept that. The CallProtoMethod function from dbusutil package takes request and response in proto.Message interface. I tried with SetBacklightBrightnessRequest struct as it implements Message interface as well as has a percent field. But the protomethod returns an error something like, failed to serialize float64 into .. struct (due to https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/dbusutil/proto.go;l\u003d45?q\u003dCallProtoMethodWithSequence%20file:go\u0026ss\u003dchromiumos%2Fchromiumos%2Fcodesearch\nI think we should have a method that just takes interface Ptr and that\u0027s it)\n\n```\n\t_, obj, err :\u003d dbusutil.Connect(ctx, dbusName, dbusPath)\n\tif err !\u003d nil {\n\t\treturn nil, err\n\t}\n\tbuff :\u003d pmpb.SetBacklightBrightnessRequest{}\n\tif err :\u003d dbusutil.CallProtoMethod(ctx, obj, dbusInterface+\".GetScreenBrightnessPercent\", nil, \u0026buff); err !\u003d nil{\n\t\ttesting.ContextLog(ctx, \"FAILED: \",err)\n\t}\n\ttesting.ContextLogf(ctx,\"\\n\\n\\n%+v\\n\\n\\n\", buff)\n```\nThis it is a stable way to communicate, i feel like it adds a lot of unnecessary code to the implementation. Maybe a better way would be making the `obj` field public here https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/power/power_manager.go;l\u003d37?q\u003dNewPowerManager%20file:go\u0026ss\u003dchromiumos",
      "parentUuid": "3566b842_aa51714a",
      "range": {
        "startLine": 130,
        "startChar": 12,
        "endLine": 130,
        "endChar": 33
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6d76792_3308f810",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "I think you got errors and just ignored them, but we should never ignore errors. I think in your cases it indicates some problems with that method.\n\nIt looks like this method you are trying to use is using some \"backlight_tool\" executable which is not present on drallion and sarien devices: \nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/power/setup/setup_screen_backlight.go;l\u003d51?q\u003dsetup.SetBacklightLux",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 132,
        "endChar": 78
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51ba986c_db892a53",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Now I have updated it with percentage.",
      "parentUuid": "f6d76792_3308f810",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 132,
        "endChar": 78
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01e7088c_6a8a41bb",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "Please also call CloseTarget to actually close that tab. If you call only Close(), you just drop connection between Tast and Chrome tab, but Chrome tab still remains open.",
      "range": {
        "startLine": 154,
        "startChar": 7,
        "endLine": 154,
        "endChar": 17
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f05f9a70_ce0bbb3b",
        "filename": "src/chromiumos/tast/local/bundles/cros/power/power_service.go",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-06-29T12:29:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "01e7088c_6a8a41bb",
      "range": {
        "startLine": 154,
        "startChar": 7,
        "endLine": 154,
        "endChar": 17
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb2cf4fc_454de518",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "Do we actually need methods to drain and charge or we just need to have battery at some target level? Also how do you know which method to call, I mean is there a way to get current battery charge level?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8051559_d3d92025",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-06-29T12:29:28Z",
      "side": 1,
      "message": "Yes, Instead of waiting for the response of an extra rpc to query the battery level. We could just expose a single rpc and 2 local methods BatteryCharge and Battery Drain.",
      "parentUuid": "bb2cf4fc_454de518",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9ba736b_ef2fbbc1",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Added a remote method EnsureBatteryPercentage for the same.\nSingle RPC isn\u0027t sufficient for this case, as here servo is an external factor that need to be operated based on charge/drain.\nI intentionally skipped grpc streaming as it lacks acknowledgement.",
      "parentUuid": "a8051559_d3d92025",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e48cca6_e59eb7ac",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-07-05T20:20:31Z",
      "side": 1,
      "message": "Why not have just one EnsureBatteryPercentage RPC method? Logic looks more complicated if you do some part of work locally and some part remote. Let\u0027s do everything locally for simplicity. WDYT?",
      "parentUuid": "b9ba736b_ef2fbbc1",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c812739_c5d9e387",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-06T05:56:31Z",
      "side": 1,
      "message": "Hi thanks for asking. I guess we can\u0027t do it, can we. As we need to operate servo alongside depending upon the current battery percentage. At present, if it above threshold, I\u0027m putting servo power delivery to snk and makes a call to BatteryDrain else servo to src and BatteryCharge.\nAlso if you are suggesting to one rpc we could use BiDi but we\u0027d lose acknowledgement. Unary seems to be best way to tackle this.",
      "parentUuid": "5e48cca6_e59eb7ac",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fd7da58_336a4a07",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-07-06T11:53:26Z",
      "side": 1,
      "message": "Ack. Thanks for explaining!",
      "parentUuid": "9c812739_c5d9e387",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aac55325_531a048e",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "We already have some sort of timeout in the RPC context, not sure we need to introduce another one.",
      "range": {
        "startLine": 16,
        "startChar": 10,
        "endLine": 16,
        "endChar": 17
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36fb89a8_727240eb",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-06-29T12:29:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "aac55325_531a048e",
      "range": {
        "startLine": 16,
        "startChar": 10,
        "endLine": 16,
        "endChar": 17
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e00d97c3_6a13976f",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "Probably if you want to use this field you need somehow to know current battery charge level, which is not available IIUC.",
      "range": {
        "startLine": 20,
        "startChar": 10,
        "endLine": 20,
        "endChar": 31
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbabc49e_2c15d499",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-06-29T12:29:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e00d97c3_6a13976f",
      "range": {
        "startLine": 20,
        "startChar": 10,
        "endLine": 20,
        "endChar": 31
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b2bec3a_05d2a0c5",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-29T10:38:40Z",
      "side": 1,
      "message": "We should rely on \"battery_percent\" proto field for our policies, instead of other parameters:\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform2/power_manager/powerd/system/power_supply.cc;l\u003d237\n\n\n\"battery_percent\" is the battery charge percent visible to the user and policy implementation relies on this value even though real battery percentage is slightly different.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "acb43664_6dfddb07",
        "filename": "src/chromiumos/tast/services/cros/power/power_service.proto",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1512082
      },
      "writtenOn": "2021-07-03T22:47:54Z",
      "side": 1,
      "message": "Thanks for notifying. Yes, each messages has only one proto field now i.e. \"percentage\" that is sufficient and internally they makes comparison with DisplayPercentage.",
      "parentUuid": "3b2bec3a_05d2a0c5",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "revId": "d871283f3340f65455617b1f9881c347a073c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}