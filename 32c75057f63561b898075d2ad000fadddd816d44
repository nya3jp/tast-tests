{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4711a951_28cba45b",
        "filename": "android/ArcTtsTest/src/org/chromium/arc/ttsengine/ArcTtsService.java",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-06-29T06:11:01Z",
      "side": 1,
      "message": "can this be wrapped by try-finally?",
      "range": {
        "startLine": 52,
        "startChar": 8,
        "endLine": 67,
        "endChar": 24
      },
      "revId": "32c75057f63561b898075d2ad000fadddd816d44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72c90ef3_ea8363ec",
        "filename": "android/ArcTtsTest/src/org/chromium/arc/ttsengine/ArcTtsService.java",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1274627
      },
      "writtenOn": "2021-06-30T07:23:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4711a951_28cba45b",
      "range": {
        "startLine": 52,
        "startChar": 8,
        "endLine": 67,
        "endChar": 24
      },
      "revId": "32c75057f63561b898075d2ad000fadddd816d44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6ed8566_26cbaa0c",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/text_to_speech.go",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-06-29T06:11:01Z",
      "side": 1,
      "message": "the test may be stuck if, END event is not accidentally delivered, but callback is called without lastError?",
      "revId": "32c75057f63561b898075d2ad000fadddd816d44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aad8fe76_a477b8da",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/text_to_speech.go",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1274627
      },
      "writtenOn": "2021-06-30T07:23:24Z",
      "side": 1,
      "message": "does this new patch set address your concern?",
      "parentUuid": "c6ed8566_26cbaa0c",
      "revId": "32c75057f63561b898075d2ad000fadddd816d44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c6e19e8_05482cd5",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/text_to_speech.go",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-06-30T14:25:23Z",
      "side": 1,
      "message": "question? do you need to check callback, too?\nOr, onEvent is called always even if the callback has error?",
      "parentUuid": "aad8fe76_a477b8da",
      "revId": "32c75057f63561b898075d2ad000fadddd816d44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e4b6aef_c473b164",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/text_to_speech.go",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1355245
      },
      "writtenOn": "2021-07-01T01:29:42Z",
      "side": 1,
      "message": "Regarding to the case where \"END event is not accidentally delivered\", I wonder if the current PS is addressing this. Many modules involve this event delivery.\n\nInstead of the current implementation, how about doing something like blow:\n\nWhen we query to speak,we can resolve the promise quickly and accumulate callbacks to the array:\n```\nval ttsEvents \u003d [];\nawait tast.promisify(chrome.tts.speak)(%q, {\n  ...,\n  onEvent: function(event) {\n    ttsEvents.push(event);\n  }\n})\n````\n\nAnd then from tast, poll ttsEvents and check it.\n\nThis approach also gives us flexibility to check more types of events in the future (if we want)",
      "parentUuid": "4c6e19e8_05482cd5",
      "revId": "32c75057f63561b898075d2ad000fadddd816d44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f89c4c88_0acae10b",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/text_to_speech.go",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-07-01T17:10:06Z",
      "side": 1,
      "message": "I wouldn\u0027t recommend to the environment dirtier.\nAlso, if the goal is just a polling (maybe with timeout), then, you can use ctx with timeout instead.\n\nTo me, the question is:\n- What are expected event sequences?\n\nAll the cases should be covered, including success and on *any types of* errors. What is guaranteed by APIs? What is expected error handling flow for the tts APIs? Can we follow the design?",
      "parentUuid": "2e4b6aef_c473b164",
      "revId": "32c75057f63561b898075d2ad000fadddd816d44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79ec2030_96c18972",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/text_to_speech.go",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1274627
      },
      "writtenOn": "2021-07-02T01:26:42Z",
      "side": 1,
      "message": "So here, we have to places that can generate events:\n- TTSEngine (which is ArcTtsService.java, from this CL)\n- TTSController (https://source.chromium.org/chromium/chromium/src/+/main:content/browser/speech/tts_controller_impl.cc)\n\nand chrome.tts acts as a client to both of these.\n\nFrom ArcTtsService, we can specify the types of events we want to send (which I already added a few in this CL).\nThe TTSController is able to generate more errors, that may not be related to engine (ArcTtsService.java) itself. \nfor instance:\n1. \n(sending an error)\nhttps://source.chromium.org/chromium/chromium/src/+/main:content/browser/speech/tts_controller_impl.cc;l\u003d557\n\n2.\n(sending interrupted)\nhttps://source.chromium.org/chromium/chromium/src/+/main:content/browser/speech/tts_controller_impl.cc;l\u003d581\n\n\n\n\u003e What are expected event sequences?\nTTSController will dispatch received event from TTSEngine to chrome.tts.speak(), and will also dispatch error/cancel/interrupted when necessary.\n\n\n\n\u003e What is expected error handling flow for the tts APIs?\nError will be sent by either TTSEngine, or TTSController. TTSController will also send other events, such as cancel/ interrupted. \n\n\n\n\u003e What is guaranteed by APIs? \nI hope this is covered by the answers to the above Q.",
      "parentUuid": "f89c4c88_0acae10b",
      "revId": "32c75057f63561b898075d2ad000fadddd816d44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}