{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "42bdb674_a82efe28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-03-14T17:32:29Z",
      "side": 1,
      "message": "LGTM",
      "revId": "fc0f77dc28ba94b4f0bc8cc00a7412c632e16f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49efd91e_72632593",
        "filename": "src/chromiumos/tast/local/bundles/cros/arcappgameperf/amongus_gpu_benchmark.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-03-14T17:32:29Z",
      "side": 1,
      "message": "What\u0027s the reasoning behind using a different paradigm (i.e. Device objects instead of ACUITI) for clicking this particular button?",
      "revId": "fc0f77dc28ba94b4f0bc8cc00a7412c632e16f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe97f10c_e9f30e30",
        "filename": "src/chromiumos/tast/local/bundles/cros/arcappgameperf/amongus_gpu_benchmark.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-03-14T17:47:36Z",
      "side": 1,
      "message": "In my mind, ACUITI is our last resort when XML elements aren\u0027t rendered since it requires a service call (which could be slow) and an underlying implementation that may change, causing our images to fail recognition. I think we can consider those cases rare, but in this case, the UIAutomator (which is a standard UI library) is guaranteed to work because this element is visible in the XML layout.\n\nIn this case, it\u0027s the right tool for the job and there\u0027s no need to pull in ACUITI.",
      "parentUuid": "49efd91e_72632593",
      "revId": "fc0f77dc28ba94b4f0bc8cc00a7412c632e16f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ace7c4e_9d4b74c6",
        "filename": "src/chromiumos/tast/local/bundles/cros/arcappgameperf/testutil/uiwrapper.go",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1525085
      },
      "writtenOn": "2022-03-14T18:18:43Z",
      "side": 1,
      "message": "Are you sure the scope of apputil is limited? I cherry picked your CL, imported and referenced from apputil, and it compiled just fine.\n\nCL: https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/3523481",
      "revId": "fc0f77dc28ba94b4f0bc8cc00a7412c632e16f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edf5e81a_daff0af8",
        "filename": "src/chromiumos/tast/local/bundles/cros/arcappgameperf/testutil/uiwrapper.go",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1510282
      },
      "writtenOn": "2022-03-14T18:21:22Z",
      "side": 1,
      "message": "It\u0027s a Tast specific lint they added, not a golang limitation. The tast team chose to disallow this use case (documented here https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Scoping-and-shared-code). Since it\u0027s a lint, and not compile error, you\u0027ll only see the error appear when running pre-checks via `repo upload`.",
      "parentUuid": "5ace7c4e_9d4b74c6",
      "revId": "fc0f77dc28ba94b4f0bc8cc00a7412c632e16f75",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "fc0f77dc28ba94b4f0bc8cc00a7412c632e16f75",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "fc0f77dc28ba94b4f0bc8cc00a7412c632e16f75",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "fc0f77dc28ba94b4f0bc8cc00a7412c632e16f75",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}