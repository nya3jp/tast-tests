{
  "comments": [
    {
      "key": {
        "uuid": "f729c8fc_6d18e96d",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/play.go",
        "patchSetId": 9
      },
      "lineNbr": 177,
      "author": {
        "id": 1113991
      },
      "writtenOn": "2020-02-04T17:35:56Z",
      "side": 1,
      "message": "ihf@ comments:\n\n\u003e 1) Forced fresh login to guest mode (avoids Android and some other activity).\n\u003e 2) Forced reboot before.\n\nI still need to add these conditions, will work on that.\n\n\u003e 3) Run payload many times + approximate memory compare. Warning if delta is small?\n\u003e 4) Identification of graphics memory object plus tracking the ones cause by the video payload. Or ignore anything that doesn\u0027t look video size/full screen-ish?\n\u003e \n\nGood idea for this test in particular, so added it. There should be no other\n1280x720 objects around unless this is the dimensions of the main FB, but then\nagain the amount of such buffers before-after should stay constant.\n\n\u003e Maybe also instead of pass/fail plot the memory delta on crosbolt/chromeperf?\n\u003e\n\u003e Also help debugging: If failure, dump enough before/after supporting information and all the delta objects, not just the count. It will aid triage/fixing.\n\nI have to indeed work on dumping the actual contents in case of failure.\nGood point.",
      "range": {
        "startLine": 177,
        "startChar": 21,
        "endLine": 177,
        "endChar": 53
      },
      "revId": "7a00d5b95ec64c2b886667b752a90801573bc241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95df0e32_e8150528",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 1134874
      },
      "writtenOn": "2020-02-04T20:10:47Z",
      "side": 1,
      "message": "Optional: alternatively, I think it also works to assign into framebuffers directly instead of copying numFbs.",
      "range": {
        "startLine": 65,
        "startChar": 1,
        "endLine": 65,
        "endChar": 7
      },
      "revId": "7a00d5b95ec64c2b886667b752a90801573bc241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2a7cb26_aa303ac9",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 9
      },
      "lineNbr": 69,
      "author": {
        "id": 1134874
      },
      "writtenOn": "2020-02-04T20:10:47Z",
      "side": 1,
      "message": "Optional: this can be consolidated with the line below (even with the reading into fbWidth/Height)",
      "revId": "7a00d5b95ec64c2b886667b752a90801573bc241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d83414bf_860731af",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 9
      },
      "lineNbr": 78,
      "author": {
        "id": 1134874
      },
      "writtenOn": "2020-02-04T20:10:47Z",
      "side": 1,
      "message": "Just to check: we\u0027ll be returning the last error encountered (if any), right? So when we invoke ReadFrameBufferCount in L159, if we\u0027re returning for any non-nil error, that will happen if we hit /any/ error while reading the framebuffers? If so, maybe we can just return in L71 instead of continuing?",
      "range": {
        "startLine": 78,
        "startChar": 1,
        "endLine": 78,
        "endChar": 7
      },
      "revId": "7a00d5b95ec64c2b886667b752a90801573bc241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c050c9b0_c9e5b11b",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 9
      },
      "lineNbr": 78,
      "author": {
        "id": 1134874
      },
      "writtenOn": "2020-02-04T22:23:29Z",
      "side": 1,
      "message": "My error (no pun intended): err here would be scoped to the if statement, so we\u0027re not actually returning the Sscanf error. Thanks for renaming to e which makes it even clearer!",
      "parentUuid": "d83414bf_860731af",
      "range": {
        "startLine": 78,
        "startChar": 1,
        "endLine": 78,
        "endChar": 7
      },
      "revId": "7a00d5b95ec64c2b886667b752a90801573bc241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf848cac_e59984a4",
        "filename": "src/chromiumos/tast/local/graphics/dri.go",
        "patchSetId": 9
      },
      "lineNbr": 124,
      "author": {
        "id": 1134874
      },
      "writtenOn": "2020-02-04T20:10:47Z",
      "side": 1,
      "message": "`TODO:(`?",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 124,
        "endChar": 10
      },
      "revId": "7a00d5b95ec64c2b886667b752a90801573bc241",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}