{
  "comments": [
    {
      "key": {
        "uuid": "c3703b87_e1266da4",
        "filename": "src/chromiumos/tast/local/bundles/cros/hwsec/cert_provision.go",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-05T13:00:26Z",
      "side": 1,
      "message": "Generally, when calling s.Fatal/s.Error because of an error, include err in the error message. It\u0027s difficult to debug failures without details.",
      "revId": "85e232c2fc028a7d0dc9ca65c6af198021477cff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cc2a919_b8ff6407",
        "filename": "src/chromiumos/tast/local/bundles/cros/hwsec/cert_provision.go",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-05T13:00:26Z",
      "side": 1,
      "message": "Optional: IMO it\u0027s much more readable to inline these constants. But I don\u0027t have strong opinion.",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 63,
        "endChar": 2
      },
      "revId": "85e232c2fc028a7d0dc9ca65c6af198021477cff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7df1a52_7727b79f",
        "filename": "src/chromiumos/tast/local/bundles/cros/hwsec/cert_provision.go",
        "patchSetId": 8
      },
      "lineNbr": 95,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-05T13:00:26Z",
      "side": 1,
      "message": "Optional: You might want to use testing.State.Run to run subtests.",
      "range": {
        "startLine": 95,
        "startChar": 18,
        "endLine": 95,
        "endChar": 63
      },
      "revId": "85e232c2fc028a7d0dc9ca65c6af198021477cff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a6d4cfc_63460f53",
        "filename": "src/chromiumos/tast/local/bundles/cros/hwsec/cert_provision_no_database.go",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-05T13:00:26Z",
      "side": 1,
      "message": "Generally, when calling s.Fatal/s.Error because of an error, include err in the error message. It\u0027s difficult to debug failures without details.",
      "revId": "85e232c2fc028a7d0dc9ca65c6af198021477cff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f45bc582_777999b5",
        "filename": "src/chromiumos/tast/local/bundles/cros/hwsec/cert_provision_no_database.go",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-05T13:00:26Z",
      "side": 1,
      "message": "Doing these operations in sequence is fragile to errors. For example, when Wipe fails attestation is kept stopped, which is likely not we want.\n\nIIUC we do these 4 steps because:\n\n- to wipe, attestation must be stopped beforehand\n- after restarting attestation, we have to restart cryptohome\n\nam I right? Then I would write this as:\n\n if err :\u003d func() (retErr error) {\n   if err :\u003d dCtrl.StopAttestation(ctx); err !\u003d nil {\n     return errors.Wrap(err, \"failed to stop attestationd\")\n   }\n   defer func() {\n     if err :\u003d dCtrl.StartAttestation(ctx); err !\u003d nil \u0026\u0026 retErr \u003d\u003d nil {\n       retErr \u003d errors.Wrap(err, \"failed to restart attestationd\")\n     }\n     if err :\u003d dCtrl.RestartCryptohome(ctx); err !\u003d nil \u0026\u0026 retErr \u003d\u003d nil {\n       retErr \u003d errors.Wrap(err, \"failed to restart cryptohome\")\n     }\n   }()\n   return fw.Wipe(ctx, hwsec.AttestationDBPath)\n }(); err !\u003d nil {\n   s.Fatal(\"Failed to wipe out attestation database: \", err)\n }",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 89,
        "endChar": 2
      },
      "revId": "85e232c2fc028a7d0dc9ca65c6af198021477cff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5620e029_2cc744d5",
        "filename": "src/chromiumos/tast/local/bundles/cros/hwsec/cert_provision_no_database.go",
        "patchSetId": 8
      },
      "lineNbr": 117,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-05T13:00:26Z",
      "side": 1,
      "message": "Don\u0027t drop err.",
      "range": {
        "startLine": 117,
        "startChar": 8,
        "endLine": 117,
        "endChar": 9
      },
      "revId": "85e232c2fc028a7d0dc9ca65c6af198021477cff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}