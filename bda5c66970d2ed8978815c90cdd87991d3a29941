{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "055eecdc_f22fac06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-06-14T17:18:51Z",
      "side": 1,
      "message": "Hi Matt,\nSorry that this fell through the crack. \nIt is smart that you moved the function to chrome package so we can leverage `cfg, err :\u003d config.NewConfig(opts)` to make ToOptions more testable.\nThanks,\nJonathan",
      "revId": "bda5c66970d2ed8978815c90cdd87991d3a29941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e6d5356_5109a80e",
        "filename": "src/chromiumos/tast/local/chrome/options_converter.go",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-06-20T12:58:23Z",
      "side": 1,
      "message": "Could you move this to services/cros/ui package?\nI don\u0027t think chrome package would like to depend on it.",
      "revId": "bda5c66970d2ed8978815c90cdd87991d3a29941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bab07231_785c1966",
        "filename": "src/chromiumos/tast/local/chrome/options_converter.go",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2022-06-21T01:41:51Z",
      "side": 1,
      "message": "The code was originally in the services/cros/ui package, but I moved it here because it was untestable in there. This is the comment that used to be in the code which I was resolving.\n\n// TODO(jonfan): Find a creative way to unit test this function. The underlying object Config and MutableConfig are private. chrome.Option are callback functions that work on Config, and they cannot be compared easily without having access to Config or its Mock Interface.",
      "parentUuid": "3e6d5356_5109a80e",
      "revId": "bda5c66970d2ed8978815c90cdd87991d3a29941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8773b191_9b779d81",
        "filename": "src/chromiumos/tast/local/chrome/options_converter.go",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-06-21T02:30:05Z",
      "side": 1,
      "message": "I see. So it\u0027s a limitation of function.\nHow about switching it to wrapper struct?\nActually, we were thinking to do so for sharing the args with lacros.\nFYI: edcourtney@, hyungtaekim@, neis@.",
      "parentUuid": "bab07231_785c1966",
      "revId": "bda5c66970d2ed8978815c90cdd87991d3a29941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df8f8408_a7cdf197",
        "filename": "src/chromiumos/tast/local/chrome/options_converter.go",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2022-06-21T03:11:24Z",
      "side": 1,
      "message": "IMO, a wrapper struct is also a hacky solution to this that avoids the underlying problem.\n\nIs there any reason why chrome.NewConfig / chrome.Config needs to be internal? There\u0027s nothing dangerous you can do with it, as it only contains getters (MutableConfig is a separate type).",
      "parentUuid": "8773b191_9b779d81",
      "revId": "bda5c66970d2ed8978815c90cdd87991d3a29941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3ba1dd3_3bf4707d",
        "filename": "src/chromiumos/tast/local/chrome/options_converter.go",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-06-21T05:58:38Z",
      "side": 1,
      "message": "It\u0027s internal implementation details, rather than public API for chrome package.\nWhat cros/ui needs is public API i.e. chrome.Option, so making it testable sounds more reasonable to me. Thoughts?",
      "parentUuid": "df8f8408_a7cdf197",
      "revId": "bda5c66970d2ed8978815c90cdd87991d3a29941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6a82334_2da14d41",
        "filename": "src/chromiumos/tast/local/chrome/options_converter.go",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2022-06-21T06:22:49Z",
      "side": 1,
      "message": "You\u0027re correct that what we only use public APIs for the non-test code. We only use the private stuff in the tests to validate that the options generated are correct.\n\nWhat we need is some way of retrieving the value of the config generated by a set of options, but we only need it for tests. I\u0027m happy to use whatever strategy will achieve this.\n\nI\u0027m not too familiar with go best practices, but IMO the best solution, if we were using java, for example, would be to expose chrome.Config with @VisibleForTesting. We could do something like \"type ConfigForTestingOnly \u003d internal.Config\", but I don\u0027t know if that\u0027s considered reasonable in go?\n\nWhich approach do you think is the most appropriate one to take?",
      "parentUuid": "b3ba1dd3_3bf4707d",
      "revId": "bda5c66970d2ed8978815c90cdd87991d3a29941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}