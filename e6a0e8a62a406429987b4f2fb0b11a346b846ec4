{
  "comments": [
    {
      "key": {
        "uuid": "bbf50e1c_03b5ac75",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-10-05T02:43:02Z",
      "side": 1,
      "message": "I\u0027m afraid this check is not enough to catch the ui-respawn race. The ui job\u0027s goal will be set to stop by above runStop call, and it may reach stop/waiting state for some moment before the ui-respawn job starts the ui job again.\n\nSo if we want to treat ui job specially, I propose following way:\n\n stop the target job\n if the target job is ui {\n    // if the above stop succeeded, then ui-respawn job will not restart the ui job because it\u0027s forced stop.\n    // otherwise, there can be two possible reasons of failure:\n    // 1. the ui job was already stopped. then doing operations below is harmless.\n    // 2. the ui job was stopping. then the ui-respawn job should have been already kicked and\n    //    should have state other than stop/waiting if it\u0027s not completed yet (this also has\n    //    a subtle race, but it\u0027s fairly unlikely because it\u0027s about job state consistency\n    //    inside upstart process). So doing operations below should work.\n    wait for the ui-respawn job to reach stop/waiting\n    stop the target job (again)\n }\n wait for the target job to reach stop/waiting",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 141,
        "endChar": 78
      },
      "revId": "e6a0e8a62a406429987b4f2fb0b11a346b846ec4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e7984f9_38aa8b9c",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-10-05T04:56:18Z",
      "side": 1,
      "message": "I wonder if this new approach may work or not.\nui-respawn.conf is triggered via \"start on stopping ui\" stanza.\nSo, theoretically, the second \"stop\" also can trigger ui-respawn.\n(Manually I made sure it is).\n\nThen\n\nstop ui\nif ui {\n  wait ui-respawn to stop/waiting \u003c- potential race? ui-respawn may be triggered by stop ui just above, but may not yet.\n  stop ui\n  // Here, ui-respawn is triggered\n}\nwait ui to stop/waiting \u003c- this would never happen?\n\nI couldn\u0027t figure out why \"stop ui\" command practically works well, though...",
      "parentUuid": "bbf50e1c_03b5ac75",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 141,
        "endChar": 78
      },
      "revId": "e6a0e8a62a406429987b4f2fb0b11a346b846ec4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd856e43_22c2601a",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-05T05:01:32Z",
      "side": 1,
      "message": "nya@: thanks for catching this!\n\ni\u0027ve gone with an approach of waiting for the ui job to have a \"start\" goal or be in \"stop/waiting\" while ui-respawn is also \"stop/waiting\". i think that waiting for a \"start\" goal rather than \"start/running\" is sufficient, as ui-respawn shouldn\u0027t be involved at that point.\n\nit\u0027s possible that there\u0027s still a small race between the checks of the two jobs\u0027 statuses, but i\u0027m unsure. :-(\n\nhidehiko@: hmm. i may be misunderstanding, but i think that ui-respawn never starts the ui job if it is triggered in response to \"stop ui\" rather than session_manager exiting.",
      "parentUuid": "bbf50e1c_03b5ac75",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 141,
        "endChar": 78
      },
      "revId": "e6a0e8a62a406429987b4f2fb0b11a346b846ec4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e93195ef_fb692505",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-10-05T05:06:20Z",
      "side": 1,
      "message": "If the ui job is stopped by stop command, RESULT\u003dok is set to ui-respawn environment, which is checked by ui-respawn and it avoids restarting ui.",
      "parentUuid": "0e7984f9_38aa8b9c",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 141,
        "endChar": 78
      },
      "revId": "e6a0e8a62a406429987b4f2fb0b11a346b846ec4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "084a949c_1233beac",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-10-05T05:23:15Z",
      "side": 1,
      "message": "Oh, I see. Thank you for explanation, and sorry for false alarm.",
      "parentUuid": "e93195ef_fb692505",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 141,
        "endChar": 78
      },
      "revId": "e6a0e8a62a406429987b4f2fb0b11a346b846ec4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66c79f16_199d5bf8",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-10-05T02:43:02Z",
      "side": 1,
      "message": "I\u0027m generally hesitant of doing special handling in functions that sound like general. Unless one reads implementation of this function, they never think it does such special handling.\n\nI have several possible alternatives, provided that we go this way:\n\n1. Create a new function StopUIJob dedicated for ui, and making StopJob to always return an error if job is \"ui\". Then we need to rewrite all calls of StopJob(\"ui\") in tests, of course.\n2. Remove job \u003d\u003d \"ui\" condition and always retry if job is restarted. This can be risky because the change affects many tests, but changing behavior of stopping ui will affect many tests anyway.\n3. Just update the function doc comment to mention that this function treats ui job specially.",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 142,
        "endChar": 92
      },
      "revId": "e6a0e8a62a406429987b4f2fb0b11a346b846ec4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6070b9c3_f669fff8",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-10-05T02:51:37Z",
      "side": 1,
      "message": "Sorry, this comment is stale. Please ignore the second option.",
      "parentUuid": "66c79f16_199d5bf8",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 142,
        "endChar": 92
      },
      "revId": "e6a0e8a62a406429987b4f2fb0b11a346b846ec4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e839345d_5ac100c7",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-05T05:01:32Z",
      "side": 1,
      "message": "i\u0027ve documented this as suggested in #3, if that\u0027s okay with you. for #1, i think we\u0027d also need a RestartUIJob function for consistency, and restarting some existing callers like example.DBus seems like it could be ugly.",
      "parentUuid": "6070b9c3_f669fff8",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 142,
        "endChar": 92
      },
      "revId": "e6a0e8a62a406429987b4f2fb0b11a346b846ec4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}