{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a860ae35_e1e5717e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1494105
      },
      "writtenOn": "2021-08-06T09:07:48Z",
      "side": 1,
      "message": "Most comments have been addressed, with modifications made accordingly.",
      "revId": "d183b3f6eb97f7c8d2b1ce1b8a2c3aacd7ba8bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0fe27c5_4c2ec1c4",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-08-06T18:24:29Z",
      "side": 1,
      "message": "If err \u003d\u003d nil, then err.Error() will throw a runtime panic. See the following demo on Playground: https://play.golang.com/p/365Qi6YHvSY\n\nHere\u0027s one way you could address this...\n\n    if err \u003d\u003d nil {\n        return errors.New(\"unexpectedly able to take screenshot after setting display power off\")\n    } else if !strings.Contains(err.Error(), \"CRTC not found. Is the screen on?\") {\n        return errors.Wrap(err, \"unexpected error when taking screenshot\")\n    }",
      "revId": "d183b3f6eb97f7c8d2b1ce1b8a2c3aacd7ba8bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5065d6b4_0db236d5",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1494105
      },
      "writtenOn": "2021-08-09T14:51:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0fe27c5_4c2ec1c4",
      "revId": "d183b3f6eb97f7c8d2b1ce1b8a2c3aacd7ba8bc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}