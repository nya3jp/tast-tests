{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c917fc88_e4a178e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-02-15T00:12:15Z",
      "side": 1,
      "message": "Adjusted commit message to stay within 72 characters per line",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83e1c86e_ddd0815e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-02-15T21:41:30Z",
      "side": 1,
      "message": "Added explicit symbolic link evaluation and comments for dir permissions and link handling.",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b57e6f03_57e8953b",
        "filename": "src/chromiumos/tast/common/wifi/security/eap/config.go",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2022-02-15T05:43:20Z",
      "side": 1,
      "message": "Since this is the only place this is used, and it does not use any directories, is it really necessary to write such a general PutFiles method?  Why not just call linuxssh.WriteFile in the loop for each file?",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b31a2bb_5090024d",
        "filename": "src/chromiumos/tast/common/wifi/security/eap/config.go",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-02-15T21:41:30Z",
      "side": 1,
      "message": "While we could do this, I still see the value in having this generalized function as with the way OpenWrt works we may want to be transferring config files or other files in the future and our regular PutFiles does not work.",
      "parentUuid": "b57e6f03_57e8953b",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fca35651_82b084ab",
        "filename": "src/chromiumos/tast/common/wificell/router/fileutil.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2022-02-15T05:43:20Z",
      "side": 1,
      "message": "How are symbolic links treated?",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35934d79_025be8ca",
        "filename": "src/chromiumos/tast/common/wificell/router/fileutil.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-02-15T21:41:30Z",
      "side": 1,
      "message": "I looked into this and the Stat function (not LStat), which is used to determine whether or not it\u0027s a directory, does follow symbolic links so it should be treated just like it was any other file. I added explicit logic to evaluate symbolic links to account for directory path tracking and noted it in the function doc.",
      "parentUuid": "fca35651_82b084ab",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52ccb527_47620d27",
        "filename": "src/chromiumos/tast/common/wificell/router/fileutil.go",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2022-02-15T05:43:20Z",
      "side": 1,
      "message": "optional: there is a lot of file and directory code here, does it need unit tests?\n\nHow did you verify that it works?",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0deaaa38_ff65a2f7",
        "filename": "src/chromiumos/tast/common/wificell/router/fileutil.go",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-02-15T21:41:30Z",
      "side": 1,
      "message": "I verified that it works by running the remote tests that use it with tast, specifically wifi.SimpleConnect.8021xwep. If it didn\u0027t work that would fail because the files would transfer incorrectly.\n\nI do agree that it would be better with more tests, though I have not created those yet for this project and I\u0027m not sure of the procedure for a test like that which requires a remote system. If you think it\u0027s necessary let me know.",
      "parentUuid": "52ccb527_47620d27",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9519dda1_b1393878",
        "filename": "src/chromiumos/tast/common/wificell/router/fileutil.go",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2022-02-15T05:43:20Z",
      "side": 1,
      "message": "a directory containing a link to itself (is this possible?) can create an infinite loop?",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6302d24_ba80eb1f",
        "filename": "src/chromiumos/tast/common/wificell/router/fileutil.go",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-02-15T21:41:30Z",
      "side": 1,
      "message": "If there is a symbolic link back up in the directory tree it would be possible. This check prevents an infinite loop by confirming that it doesn\u0027t queue up the same directory path twice. \n\nThough I realize this didn\u0027t actually fix that since it doesn\u0027t store the evaluated link so I adjusted the logic to always evaluate it manually.",
      "parentUuid": "9519dda1_b1393878",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eddd0aa1_04b34842",
        "filename": "src/chromiumos/tast/common/wificell/router/fileutil.go",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2022-02-15T05:43:20Z",
      "side": 1,
      "message": "do you need to set directory permissions on the remote host?",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c5e65cb_1f3597ba",
        "filename": "src/chromiumos/tast/common/wificell/router/fileutil.go",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-02-15T21:41:30Z",
      "side": 1,
      "message": "It just uses the default permissions on the host. Since the file permissions are kept I don\u0027t think it really matters to adjust the directory permissions since this is specifically for routers. I did add a note about this to the function.\n\nTo set the directory permissions it would make this more complicated and I don\u0027t think it\u0027s necessary enough to warrant the complexity addition.",
      "parentUuid": "eddd0aa1_04b34842",
      "revId": "6b95cab219d9375757b7e3fcc3a9118e7c92491d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}