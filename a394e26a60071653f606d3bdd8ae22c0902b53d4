{
  "comments": [
    {
      "key": {
        "uuid": "b15a8436_d11c3e32",
        "filename": "src/chromiumos/tast/local/gtest/gtest.go",
        "patchSetId": 9
      },
      "lineNbr": 63,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-20T12:08:03Z",
      "side": 1,
      "message": "How about removing |testcase| and passing them in flags?\nThe caller can pass `\"--gtest_filter\u003d\" + testcase` in |flags| instead.",
      "range": {
        "startLine": 63,
        "startChar": 49,
        "endLine": 63,
        "endChar": 59
      },
      "revId": "a394e26a60071653f606d3bdd8ae22c0902b53d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba178f21_0f501ae2",
        "filename": "src/chromiumos/tast/local/gtest/gtest.go",
        "patchSetId": 9
      },
      "lineNbr": 63,
      "author": {
        "id": 1299948
      },
      "writtenOn": "2019-06-21T05:44:13Z",
      "side": 1,
      "message": "Is there a benefit to doing that? I think that would make RunCaseWithFlags harder to use since now callers would each have to do the same thing to prepare the flags arguments if a testcases need to be passed.",
      "parentUuid": "b15a8436_d11c3e32",
      "range": {
        "startLine": 63,
        "startChar": 49,
        "endLine": 63,
        "endChar": 59
      },
      "revId": "a394e26a60071653f606d3bdd8ae22c0902b53d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81112667_791735e1",
        "filename": "src/chromiumos/tast/local/gtest/gtest.go",
        "patchSetId": 9
      },
      "lineNbr": 63,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-26T01:02:22Z",
      "side": 1,
      "message": "I don\u0027t think we have a special reason to treat \"gtest_filter\" in a special way. So, it\u0027d be natural to treat as one of GoogleTest flags.\n\n\u003e  I think that would make RunCaseWithFlags harder to use since now callers would each have to do the same thing to prepare the flags arguments if a testcases need to be passed.\n\nWe don\u0027t have to use \"gtest_filter\" so often because every test case should be run in usual cases. This flag should be used only when we need to blacklist/whitelist some test cases.\n(So, I also think we should run all test cases for libvda, too. Please see my comment on patchset 10.)",
      "parentUuid": "ba178f21_0f501ae2",
      "range": {
        "startLine": 63,
        "startChar": 49,
        "endLine": 63,
        "endChar": 59
      },
      "revId": "a394e26a60071653f606d3bdd8ae22c0902b53d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b4f5cc0_78b6f2a5",
        "filename": "src/chromiumos/tast/local/gtest/gtest.go",
        "patchSetId": 9
      },
      "lineNbr": 63,
      "author": {
        "id": 1299948
      },
      "writtenOn": "2019-06-26T02:42:24Z",
      "side": 1,
      "message": "I think the reason to treat gtest_filter in a different way is because gtest_filter is available in every gtest binary. This is a gtest package so I think it makes sense to abstract out details that are common to all gtests, specifying test cases being one of them.\n\nFrom this search, it looks like there are exists tests that are manually specifying gtest_filter: https://cs.corp.google.com/search/?q\u003dfile:go%24+gtest_filter\n\nSome in this search I believe also specify custom unit-test specific flags, which could make use of a function like RunCaseWithFlags.\n\nI think it\u0027s reasonable to provide a testcase parameter so that not every test needs to manually append a \"--gtest_filter\u003d\" string. Also, since RunCase supports it, I don\u0027t see a good reason to remove this functionality for RunCaseWithFlags, while adding another different functionality (ie. specifying flags).",
      "parentUuid": "81112667_791735e1",
      "range": {
        "startLine": 63,
        "startChar": 49,
        "endLine": 63,
        "endChar": 59
      },
      "revId": "a394e26a60071653f606d3bdd8ae22c0902b53d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36275b9f_42a07dc1",
        "filename": "src/chromiumos/tast/local/gtest/gtest.go",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-06-20T14:19:34Z",
      "side": 1,
      "message": "I think you need string array, instead of concatenating everything, which will become just one argument.",
      "revId": "a394e26a60071653f606d3bdd8ae22c0902b53d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "097943f8_7746f966",
        "filename": "src/chromiumos/tast/local/gtest/gtest.go",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 1299948
      },
      "writtenOn": "2019-06-21T05:44:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36275b9f_42a07dc1",
      "revId": "a394e26a60071653f606d3bdd8ae22c0902b53d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8067f0b5_cc91dbe0",
        "filename": "src/chromiumos/tast/local/gtest/gtest.go",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 1273836
      },
      "writtenOn": "2019-06-20T12:08:03Z",
      "side": 1,
      "message": "Let\u0027s use strings.Join.",
      "revId": "a394e26a60071653f606d3bdd8ae22c0902b53d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df27cba6_51467534",
        "filename": "src/chromiumos/tast/local/gtest/gtest.go",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 1299948
      },
      "writtenOn": "2019-06-21T05:44:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8067f0b5_cc91dbe0",
      "revId": "a394e26a60071653f606d3bdd8ae22c0902b53d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}