{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "600e041d_e2b77435",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1314845
      },
      "writtenOn": "2021-05-11T00:26:56Z",
      "side": 1,
      "message": "Note: there is no one available on my team for reviews, so we have to rely on Tast owner reviews for now. Thanks.",
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbdcff0e_71940c96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-05-11T08:35:51Z",
      "side": 1,
      "message": "LGTM % nits\nPlease wait for +1 from kyleshima before submitting.",
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5086a2a0_a3d88d01",
        "filename": "src/chromiumos/tast/remote/firmware/fingerprint/fingerprint_test_images.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-05-11T08:35:51Z",
      "side": 1,
      "message": "nit: Comments should be sentences ending with .\nThat\u0027s missing in all comments here.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 47
      },
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6f861dc_6ab1e17b",
        "filename": "src/chromiumos/tast/remote/firmware/fingerprint/fingerprint_test_images.go",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-11T03:25:01Z",
      "side": 1,
      "message": "I\u0027ve usually seen the inputs for command building functions be variadic like exec.CommandContext. Maybe this should be like:\n`hostCommand(ctx context.Context, name string, arg ...string)`\n\nNot sure if it\u0027s a style rule, but I think it is a bit cleaner and makes this robust against passing an empty slice or something like that.",
      "range": {
        "startLine": 107,
        "startChar": 42,
        "endLine": 107,
        "endChar": 50
      },
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f1f61b8_a7539235",
        "filename": "src/chromiumos/tast/remote/firmware/fingerprint/fingerprint_test_images.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-11T03:25:01Z",
      "side": 1,
      "message": "Do you need to log every command? Could we just execute the command directly here and include the parameters (firmwareFilePath, section) in the returned errors instead?",
      "range": {
        "startLine": 114,
        "startChar": 16,
        "endLine": 114,
        "endChar": 27
      },
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0e08095_070828d6",
        "filename": "src/chromiumos/tast/remote/firmware/fingerprint/fingerprint_test_images.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-05-11T08:35:51Z",
      "side": 1,
      "message": "+1 we should only log when errors occur or when something will take a while to process:\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#When-to-log",
      "parentUuid": "4f1f61b8_a7539235",
      "range": {
        "startLine": 114,
        "startChar": 16,
        "endLine": 114,
        "endChar": 27
      },
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "294c8c61_544143f6",
        "filename": "src/chromiumos/tast/remote/firmware/fingerprint/fingerprint_test_images.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1314845
      },
      "writtenOn": "2021-05-11T21:09:57Z",
      "side": 1,
      "message": "I find it very useful for debugging. Just logging the errors results in missing a lot of context. i.e., it\u0027s great to know something failed, but if you can\u0027t trace the sequence of events leading up to it, it\u0027s often hard to see why it failed. This is especially true when looking at failures on stainless. If you have a little bit more context in the logs, it\u0027s often possible to see what went wrong directly from the logs. If you only log the errors, you have to go through the code and try to infer what happened.",
      "parentUuid": "e0e08095_070828d6",
      "range": {
        "startLine": 114,
        "startChar": 16,
        "endLine": 114,
        "endChar": 27
      },
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7d9196c_f51a6543",
        "filename": "src/chromiumos/tast/remote/firmware/fingerprint/fingerprint_test_images.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-12T00:19:35Z",
      "side": 1,
      "message": "I\u0027m fine with additional logging if it makes debugging easier. Will defer to alexanderhartl@ for the final call there, though.",
      "parentUuid": "294c8c61_544143f6",
      "range": {
        "startLine": 114,
        "startChar": 16,
        "endLine": 114,
        "endChar": 27
      },
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae736ea1_595225e5",
        "filename": "src/chromiumos/tast/remote/firmware/fingerprint/fingerprint_test_images.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-05-12T08:38:21Z",
      "side": 1,
      "message": "Additional logging to help debugging is fine. However as the guidelines state this logging should be done after the error occured so it won\u0027t clutter the logs if no errors occur.\nSo you could do it like this:\n\noutput, err :\u003d exec.CommandContext(ctx, cmd[0], cmd[1:]...).Output()\nif err !\u003d nil {\n    testing.ContextLogf(ctx, \"Command: %s\", shutil.EscapeSlice(cmd))\n    return nil, errors.Wrap(err, \"failed to run futility dump_fmap\")\n}\n\nSame for the following errors if that logging is needed there too.",
      "parentUuid": "b7d9196c_f51a6543",
      "range": {
        "startLine": 114,
        "startChar": 16,
        "endLine": 114,
        "endChar": 27
      },
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46a7dbbb_19ee7f4f",
        "filename": "src/chromiumos/tast/remote/firmware/fingerprint/fingerprint_test_images.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1314845
      },
      "writtenOn": "2021-05-12T23:16:15Z",
      "side": 1,
      "message": "Unfortunately, logging only on error does not provide the context that is helpful for debugging. See my earlier comment about the sequence of events (not failures) leading up to the error being useful context to understand the situation that led up to the failure. I don\u0027t think there\u0027s any hard requirement about not doing this in Tast. See for example, this CL: https://crrev.com/c/2847137, which also has logging.",
      "parentUuid": "ae736ea1_595225e5",
      "range": {
        "startLine": 114,
        "startChar": 16,
        "endLine": 114,
        "endChar": 27
      },
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "394ae7a3_7fdb5e3f",
        "filename": "src/chromiumos/tast/remote/firmware/fingerprint/fingerprint_test_images.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-11T03:25:01Z",
      "side": 1,
      "message": "nit: lower case",
      "range": {
        "startLine": 209,
        "startChar": 33,
        "endLine": 209,
        "endChar": 39
      },
      "revId": "c97d9f783a454905c16cf8ea12c2d6bde2cea4b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}