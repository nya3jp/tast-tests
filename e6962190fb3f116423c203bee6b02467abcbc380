{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ced0ef78_9ee078f8",
        "filename": "src/chromiumos/tast/local/bundles/cros/firmware/fwupd_inhibit_suspend.go",
        "patchSetId": 10
      },
      "lineNbr": 34,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-08-10T08:57:00Z",
      "side": 1,
      "message": "For reading lines, bufio.Scanner is recommended:\nhttps://pkg.go.dev/bufio#Reader.ReadBytes\nhttps://pkg.go.dev/bufio#Scanner",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 34,
        "endChar": 25
      },
      "revId": "e6962190fb3f116423c203bee6b02467abcbc380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54b68d38_a31372eb",
        "filename": "src/chromiumos/tast/local/bundles/cros/firmware/fwupd_inhibit_suspend.go",
        "patchSetId": 10
      },
      "lineNbr": 42,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-08-10T08:57:00Z",
      "side": 1,
      "message": "nit: `err !\u003d nil` is sufficient.",
      "range": {
        "startLine": 42,
        "startChar": 3,
        "endLine": 42,
        "endChar": 35
      },
      "revId": "e6962190fb3f116423c203bee6b02467abcbc380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d56cccaf_ae961c1a",
        "filename": "src/chromiumos/tast/local/bundles/cros/firmware/fwupd_inhibit_suspend.go",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1312379
      },
      "writtenOn": "2021-08-10T02:01:48Z",
      "side": 1,
      "message": "Twain could you move that method here so your test does not depend on the other CL and we can get it landed ASAP?",
      "range": {
        "startLine": 62,
        "startChar": 12,
        "endLine": 62,
        "endChar": 25
      },
      "revId": "e6962190fb3f116423c203bee6b02467abcbc380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8be75a7e_d0ebb7d0",
        "filename": "src/chromiumos/tast/local/bundles/cros/firmware/fwupd_inhibit_suspend.go",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-08-10T08:57:00Z",
      "side": 1,
      "message": "Could you add a comment describing what this magic UUID is?",
      "range": {
        "startLine": 63,
        "startChar": 73,
        "endLine": 63,
        "endChar": 111
      },
      "revId": "e6962190fb3f116423c203bee6b02467abcbc380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "607b2ce7_65f9619c",
        "filename": "src/chromiumos/tast/local/bundles/cros/firmware/fwupd_inhibit_suspend.go",
        "patchSetId": 10
      },
      "lineNbr": 66,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-08-10T08:57:00Z",
      "side": 1,
      "message": "Fatalf",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 66,
        "endChar": 10
      },
      "revId": "e6962190fb3f116423c203bee6b02467abcbc380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb27d412_c13aa1ee",
        "filename": "src/chromiumos/tast/local/bundles/cros/firmware/fwupd_inhibit_suspend.go",
        "patchSetId": 10
      },
      "lineNbr": 72,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-08-10T08:57:00Z",
      "side": 1,
      "message": "Fatalf",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 10
      },
      "revId": "e6962190fb3f116423c203bee6b02467abcbc380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d3376b4_7826f112",
        "filename": "src/chromiumos/tast/local/bundles/cros/firmware/fwupd_inhibit_suspend.go",
        "patchSetId": 10
      },
      "lineNbr": 78,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-08-10T08:57:00Z",
      "side": 1,
      "message": "I think you want to handle the case where the process exits before printing the message.",
      "range": {
        "startLine": 78,
        "startChar": 1,
        "endLine": 78,
        "endChar": 2
      },
      "revId": "e6962190fb3f116423c203bee6b02467abcbc380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36ab55d8_884242aa",
        "filename": "src/chromiumos/tast/local/bundles/cros/firmware/fwupd_inhibit_suspend.go",
        "patchSetId": 10
      },
      "lineNbr": 85,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-08-10T08:57:00Z",
      "side": 1,
      "message": "1. cmd.Wait() must be always called after Start, e.g. even if we hit s.Fatal above, to release resources associated to the process.\n2. outch must be fully read. Otherwise, the background goroutine you started to send lines to a channel will be deadlocked.\n\nYou can use defer statements to solve these problems. Example:\n\n outch :\u003d streamOutput(stdout)\n defer func() {\n   for range outch {}\n }()\n\n if err :\u003d cmd.Start(); err !\u003d nil {\n   ...\n }\n defer func() {\n   cmd.Kill()\n   cmd.Wait()\n }()\n\n for str :\u003d range outch {\n   ...\n }\n if _, err :\u003d os.Stat(...); ... {\n   s.Fatal(...)\n }\n\n cmd.Wait()\n\n if _, err :\u003d os.Stat(...); ... {\n   s.Fatal(...)\n }",
      "range": {
        "startLine": 85,
        "startChar": 1,
        "endLine": 85,
        "endChar": 11
      },
      "revId": "e6962190fb3f116423c203bee6b02467abcbc380",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}