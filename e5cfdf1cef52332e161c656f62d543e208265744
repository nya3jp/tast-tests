{
  "comments": [
    {
      "key": {
        "uuid": "80492c94_4fba064e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1377300
      },
      "writtenOn": "2020-09-29T09:44:56Z",
      "side": 1,
      "message": "Thanks for having a look.\nI have updated the patch.",
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb48e33e_f3850b97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2020-09-29T10:11:05Z",
      "side": 1,
      "message": "Thanks for the CL",
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8176102_5550d4af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1377300
      },
      "writtenOn": "2020-09-29T11:03:10Z",
      "side": 1,
      "message": "Thanks for taking a look.\nI have replied to the comments.\nHope it is clearer now :)\n",
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ee72d15_b97d9e35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2020-09-29T11:15:02Z",
      "side": 1,
      "message": "Thanks for explaining!",
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d98b53d8_98dc8b5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1377300
      },
      "writtenOn": "2020-09-29T13:15:37Z",
      "side": 1,
      "message": "Thanks for taking a look.\nI have replied to the comments, PTAL.\n",
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "301f06eb_e9962500",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-09-29T12:02:17Z",
      "side": 1,
      "message": "What happens if you blocklist and allowlist filterImagesURL? Which onw has priority? Can you add a testcase for it?",
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7218923_493488c9",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1377300
      },
      "writtenOn": "2020-09-29T13:15:37Z",
      "side": 1,
      "message": "The policy documentation does not mention anything about the expected behaviour in such a conflicting case, so I am not sure what exactly to expect in the test here.\nAt the same time, I can see that some content setting policies mention that the related policies(eg WebUsbAllowDevicesForUrls, SerialBlockedForUrls, CookiesAllowedForUrls etc) should not conflict while some explicitly mentioning(eg URLAllowlist) which one takes priority.",
      "parentUuid": "301f06eb_e9962500",
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16de0b95_c25b5599",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-29T16:08:42Z",
      "side": 1,
      "message": "nit: instead of using a comment, these might be better as constants in policy.go. That is assuming there is some standardization of policy 1 and 2 values.\n\nOr even constants local to this test since they are used a lot.",
      "range": {
        "startLine": 49,
        "startChar": 69,
        "endLine": 49,
        "endChar": 70
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "197fa9b8_3f60a229",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-09-29T12:02:17Z",
      "side": 1,
      "message": "Do you expect different behaviour for  \"blocklist_unset_default_block\" and \"blocklist_set_default_block\"? I don\u0027t see how blocking \"https://chromium.org\" can change the outcome.",
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98f9851a_72f250ba",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1377300
      },
      "writtenOn": "2020-09-29T13:15:37Z",
      "side": 1,
      "message": "In both cases the expected outcome is to allow images for our test URL.\nBut both cases are slightly different in the sense that in the first one, there is no policy for blocklist. The second case helps to test that having the block list policy set does not affect the outcome. Having \"https://chromium.org\" should not affect the outcome and that is what we are testing here. \nDo you think we should keep only one case ?\n\nAnother case that could be considered in allowlist -\n\nImagesBlockedForUrls{Stat: policy.StatusUnset},\nImagesAllowedForUrls{Val: []string{\"https://chromium.org\", \"http://example.org\"}},\nDefaultImagesSetting{Val: 1}, // 1: Images are allowed by default\n\nSimilarly for blocklist.",
      "parentUuid": "197fa9b8_3f60a229",
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1280810_c0cd2dfb",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2020-09-29T10:11:05Z",
      "side": 1,
      "message": "Is this redundant?\nvalue 2 in DefaultImagesSetting policy means that we don\u0027t allow any site to show images, but here wantAllowed is true.",
      "range": {
        "startLine": 72,
        "startChar": 7,
        "endLine": 72,
        "endChar": 80
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9b02563_2f7164b7",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1377300
      },
      "writtenOn": "2020-09-29T11:03:10Z",
      "side": 1,
      "message": "This test case means it would run with all 3 policies applied together. In this case, the default value \u0027block\u0027 through DefaultImagesSetting would be overridden by ImagesAllowedForUrls which contains our test URL and hence, imaged would be allowed.\n\nThis is implemented on similar lines as\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/master:src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/policy/url_check.go",
      "parentUuid": "d1280810_c0cd2dfb",
      "range": {
        "startLine": 72,
        "startChar": 7,
        "endLine": 72,
        "endChar": 80
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9b9f109_7732c19d",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2020-09-29T10:11:05Z",
      "side": 1,
      "message": "Is this redundant?\nalready written in line 54.",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 80
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16271a3f_0b553c3f",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1377300
      },
      "writtenOn": "2020-09-29T11:03:10Z",
      "side": 1,
      "message": "This format of writing the test would lead to 3 different tests appearing in the Tast dashboard i.e. \npolicy.ImagesForURLCheck.default\npolicy.ImagesForURLCheck.allowlist\npolicy.ImagesForURLCheck.blocklist\n\nEach of these tests would then execute their internal test cases. For example, policy.ImagesForURLCheck.default would then execute 3 tests (similar to the for loop in your previous impl) i.e. allow, block, unset.",
      "parentUuid": "d9b9f109_7732c19d",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 80
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e93d9b9f_be02596c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2020-09-29T10:11:05Z",
      "side": 1,
      "message": "Is this redundant?\nvalue 1 in DefaultImagesSetting policy means that we allow all sites to show all images, but here wantAllowed is false.",
      "range": {
        "startLine": 95,
        "startChar": 7,
        "endLine": 95,
        "endChar": 80
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96e76c01_0dc6c1e7",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1377300
      },
      "writtenOn": "2020-09-29T11:03:10Z",
      "side": 1,
      "message": "I guess this is answered in my reply to the previous comments.",
      "parentUuid": "e93d9b9f_be02596c",
      "range": {
        "startLine": 95,
        "startChar": 7,
        "endLine": 95,
        "endChar": 80
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f35a2c64_748fed2b",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2020-09-29T10:11:05Z",
      "side": 1,
      "message": "Is this redundant?\nalready written in line 49.",
      "range": {
        "startLine": 104,
        "startChar": 7,
        "endLine": 104,
        "endChar": 80
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46d957f6_3873d1de",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 1377300
      },
      "writtenOn": "2020-09-29T11:03:10Z",
      "side": 1,
      "message": "I guess this is answered in my reply to the previous comments.",
      "parentUuid": "f35a2c64_748fed2b",
      "range": {
        "startLine": 104,
        "startChar": 7,
        "endLine": 104,
        "endChar": 80
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e7d36d0_3d51ec76",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-29T16:08:42Z",
      "side": 1,
      "message": "Just a note, this check shouldn\u0027t be needed. It should be fine to make this the same as Chrome and FakeDMS above.",
      "range": {
        "startLine": 121,
        "startChar": 1,
        "endLine": 123,
        "endChar": 2
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8fe6dac_2d9c667e",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-29T16:08:42Z",
      "side": 1,
      "message": "I believe there is conn.WaitForExpr that could potentially be used instead of this polling. Though it might not take a timeout, which would mean you would have to shorten the context to the timeout and then call it.",
      "range": {
        "startLine": 144,
        "startChar": 3,
        "endLine": 157,
        "endChar": 4
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a555a371_28f30117",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/images_for_url_check.go",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-29T16:08:42Z",
      "side": 1,
      "message": "nit: why errorf over fatalf here? It should make no difference since this is the last call in this test run instance.",
      "range": {
        "startLine": 166,
        "startChar": 6,
        "endLine": 166,
        "endChar": 12
      },
      "revId": "e5cfdf1cef52332e161c656f62d543e208265744",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}