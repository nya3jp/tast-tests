{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "edd347a7_7666dcd5",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-11-10T03:16:33Z",
      "side": 1,
      "message": "For tests that will exercise the CCA UI, usually we name it CCAUI* so that we can test it by running \"tast run [DUT] camera.CCAUI*\".\n\nHow about we rename it to cca_ui_hdrnet_e2e.go and CCAUIHDRNetE2E?\n(Btw, IIRC in Go we prefer using upper case for abbreviation. e.g. QRCode, URL)",
      "range": {
        "startLine": 21,
        "startChar": 16,
        "endLine": 21,
        "endChar": 25
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc3f32a8_5d3dc1be",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2021-11-10T04:19:19Z",
      "side": 1,
      "message": "CCA is more like a test vehicle in this test. Naming it with CCAUI... sounds like this test is a CCA UI test and is a bit confusing imho, since this test is actually an end-to-end test for the platform HDRnet pipeline.\n\nWe may want to add other test cases in the future, like using simple getUserMedia pages, so I\u0027m leaning towards keeping the current name. Wdyt?",
      "parentUuid": "edd347a7_7666dcd5",
      "range": {
        "startLine": 21,
        "startChar": 16,
        "endLine": 21,
        "endChar": 25
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0591cc1_27f9e891",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-11-10T04:55:52Z",
      "side": 1,
      "message": "I see. Let\u0027s use the name it is.",
      "parentUuid": "dc3f32a8_5d3dc1be",
      "range": {
        "startLine": 21,
        "startChar": 16,
        "endLine": 21,
        "endChar": 25
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea3d02d8_5933c5ba",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-11-10T03:16:33Z",
      "side": 1,
      "message": "\"defer\" will be triggered when leaving the function. I think what we want is to call cancel() after s.Run().",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 68,
        "endChar": 16
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c187725_a803b7fa",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2021-11-10T04:19:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea3d02d8_5933c5ba",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 68,
        "endChar": 16
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b52ee929_a91c613a",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-11-10T03:16:33Z",
      "side": 1,
      "message": "It seems that you will proactively close the app as part of the test flow. Then we can change to:\n```\ncca.SubTestParams{StopAppOnlyIfExist: true}\n```",
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d80bcdd0_9d7a5d21",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2021-11-10T04:19:19Z",
      "side": 1,
      "message": "This does not work for me since I need to close the app before inside the test function to upload the histograms, but StopAppOnlyIfExist defers the close.",
      "parentUuid": "b52ee929_a91c613a",
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b6d143c_1c5435a0",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-11-10T04:55:52Z",
      "side": 1,
      "message": "Ah, I mean, without the parameter, when the runSubTest() finishes, it will still try to stop app [1] even if you have stopped the app proactively in your test codes, which might cause issue. My suggestion is adding \"StopAppOnlyIfExist: true\" and keeping the app.Close() in the test codes so that when it tries to close the app in defer function, since the app has already been closed, it is acceptable and no error will be thrown.\n\n[1]: https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/camera/cca/fixture.go;rcl\u003d15013ab9845b2853d5cb6c7454799eacf0fbb200;l\u003d446",
      "parentUuid": "d80bcdd0_9d7a5d21",
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d71bf17_4e7e1d44",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2021-11-10T05:22:38Z",
      "side": 1,
      "message": "I see. Makes sense!",
      "parentUuid": "2b6d143c_1c5435a0",
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83c6527a_0b7eb205",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-11-10T03:16:33Z",
      "side": 1,
      "message": "We should also check its error.",
      "range": {
        "startLine": 193,
        "startChar": 1,
        "endLine": 193,
        "endChar": 31
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e75860ef_7a64905c",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2021-11-10T04:19:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83c6527a_0b7eb205",
      "range": {
        "startLine": 193,
        "startChar": 1,
        "endLine": 193,
        "endChar": 31
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "090092a6_641b483a",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-11-10T03:16:33Z",
      "side": 1,
      "message": "Hmm, I don\u0027t quite understand why do we need to have a recorder before switching mode and waits for it after switching. What will happen if we only start the recorder after switching mode? I thought we will call ClearHistogramTransferFile() when starting the recorder. Could you elaborate more?",
      "range": {
        "startLine": 229,
        "startChar": 1,
        "endLine": 238,
        "endChar": 2
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "054e1644_ce1a21f8",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2021-11-10T04:19:19Z",
      "side": 1,
      "message": "There will be histograms recorded for the Photo mode when we first launch CCA. This is to make sure we start recording after we get the histograms of the Photo mode, so that the diff recorded below is only from the test operations under Video mode.",
      "parentUuid": "090092a6_641b483a",
      "range": {
        "startLine": 229,
        "startChar": 1,
        "endLine": 238,
        "endChar": 2
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3ad70ce_ec347c0f",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-11-10T04:55:52Z",
      "side": 1,
      "message": "But when we call histogramTests.record() on Line 242, it will trigger ClearHistogramTransferFile(). Isn\u0027t it enough for truncating the previous histograms?",
      "parentUuid": "054e1644_ce1a21f8",
      "range": {
        "startLine": 229,
        "startChar": 1,
        "endLine": 238,
        "endChar": 2
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54a153d7_e18b8719",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/hdrnet_e2e.go",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1001646
      },
      "writtenOn": "2021-11-10T05:22:38Z",
      "side": 1,
      "message": "IIUC it works like this:\n\n1. cros-camera writes the histograms to histogramTransferFile\n2. Chrome picks up the histograms from histogramTransferFile periodically\n\nIf we don\u0027t wait for the old histograms to appear here and start the recorder right after we switch mode, it seems to me that there can be a potential race if 2) happens right after 1) and we will still pick up the histograms from Photo mode. Although the chance may be small, so the wait here is mainly to avoid test flakes.",
      "parentUuid": "f3ad70ce_ec347c0f",
      "range": {
        "startLine": 229,
        "startChar": 1,
        "endLine": 238,
        "endChar": 2
      },
      "revId": "ab940c177480a305e020ff992b27dd633e680c2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}