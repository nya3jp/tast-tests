{
  "comments": [
    {
      "key": {
        "uuid": "0c060e4f_6ce4fff9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-23T08:41:09Z",
      "side": 1,
      "message": "Generally LGTM. Yenlin, please confirm.",
      "revId": "8a99006e0250eb81c2bdad918273ae11b2f09531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7aeedd6_50c36abf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-23T10:06:18Z",
      "side": 1,
      "message": "only nits. Also add WiFi reviewers.",
      "revId": "8a99006e0250eb81c2bdad918273ae11b2f09531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f39b0aa8_5999de98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-07-23T18:04:43Z",
      "side": 1,
      "message": "I\u0027ll give this an actual code review soon, but can you answer me this:\nis there any case in which using \u0027iw event\u0027 is *not* racy, per these notes?\nhttps://bugs.chromium.org/p/chromium/issues/detail?id\u003d1041325#c8",
      "revId": "8a99006e0250eb81c2bdad918273ae11b2f09531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e11cfab_66728210",
        "filename": "src/chromiumos/tast/remote/network/iw/event_logger.go",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-23T08:41:09Z",
      "side": 1,
      "message": "a WiFi",
      "range": {
        "startLine": 16,
        "startChar": 34,
        "endLine": 16,
        "endChar": 38
      },
      "revId": "8a99006e0250eb81c2bdad918273ae11b2f09531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7909e621_dda55f12",
        "filename": "src/chromiumos/tast/remote/network/iw/event_logger.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-23T08:41:09Z",
      "side": 1,
      "message": "an event",
      "range": {
        "startLine": 31,
        "startChar": 43,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "8a99006e0250eb81c2bdad918273ae11b2f09531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e7591ef_f0550476",
        "filename": "src/chromiumos/tast/remote/network/iw/event_watcher.go",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-23T10:06:18Z",
      "side": 1,
      "message": "minor nit: I probably would move this line into start so the stop condition is closer to the go routine, but I don\u0027t have strong opinion.",
      "revId": "8a99006e0250eb81c2bdad918273ae11b2f09531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa1a7306_d2ab55a0",
        "filename": "src/chromiumos/tast/remote/network/iw/event_watcher.go",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-23T10:06:18Z",
      "side": 1,
      "message": "nit: not sure if this might be too complex. A comparable error already works if no further wrapping:\n\n  WatcherClosedErr :\u003d errors.New(\"event channel closed\")\n\n  func (e *EventWatcher) Wait(ctx context.Context) (*Event, error) {\n    ...\n    if !ok {\n      return nil, WatcherClosedErr\n    }\n    ...\n  }\n\n  // And caller:\n  if ev, err :\u003d watcher.Wait(ctx); err \u003d\u003d iw.WatcherClosedErr {\n    ...\n  }\n\nBut current code also LGTM.",
      "range": {
        "startLine": 128,
        "startChar": 15,
        "endLine": 128,
        "endChar": 82
      },
      "revId": "8a99006e0250eb81c2bdad918273ae11b2f09531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}