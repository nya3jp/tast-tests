{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "99ed5972_9d79997e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1510807
      },
      "writtenOn": "2021-05-05T01:04:01Z",
      "side": 1,
      "message": "https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/2873192-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1.4.2.2 (GNU/Linux)\n\nmQGiBEnnWD4RBACt9/h4v9xnnGDou13y3dvOx6/t43LPPIxeJ8eX9WB+8LLuROSV\nlFhpHawsVAcFlmi7f7jdSRF+OvtZL9ShPKdLfwBJMNkU66/TZmPewS4m782ndtw7\n8tR1cXb197Ob8kOfQB3A9yk2XZ4ei4ZC3i6wVdqHLRxABdncwu5hOF9KXwCgkxMD\nu4PVgChaAJzTYJ1EG+UYBIUEAJmfearb0qRAN7dEoff0FeXsEaUA6U90sEoVks0Z\nwNj96SA8BL+a1OoEUUfpMhiHyLuQSftxisJxTh+2QclzDviDyaTrkANjdYY7p2cq\n/HMdOY7LJlHaqtXmZxXjjtw5Uc2QG8UY8aziU3IE9nTjSwCXeJnuyvoizl9/I1S5\njU5SA/9WwIps4SC84ielIXiGWEqq6i6/sk4I9q1YemZF2XVVKnmI1F4iCMtNKsR4\nMGSa1gA8s4iQbsKNWPgp7M3a51JCVCu6l/8zTpA+uUGapw4tWCp4o0dpIvDPBEa9\nb/aF/ygcR8mh5hgUfpF9IpXdknOsbKCvM9lSSfRciETykZc4wrRCVGhlIEFuZHJv\naWQgT3BlbiBTb3VyY2UgUHJvamVjdCA8aW5pdGlhbC1jb250cmlidXRpb25AYW5k\ncm9pZC5jb20+iGAEExECACAFAknnWD4CGwMGCwkIBwMCBBUCCAMEFgIDAQIeAQIX\ngAAKCRDorT+BmrEOeNr+AJ42Xy6tEW7r3KzrJxnRX8mij9z8tgCdFfQYiHpYngkI\n2t09Ed+9Bm4gmEO5Ag0ESedYRBAIAKVW1JcMBWvV/0Bo9WiByJ9WJ5swMN36/vAl\nQN4mWRhfzDOk/Rosdb0csAO/l8Kz0gKQPOfObtyYjvI8JMC3rmi+LIvSUT9806Up\nhisyEmmHv6U8gUb/xHLIanXGxwhYzjgeuAXVCsv+EvoPIHbY4L/KvP5x+oCJIDbk\nC2b1TvVk9PryzmE4BPIQL/NtgR1oLWm/uWR9zRUFtBnE411aMAN3qnAHBBMZzKMX\nLWBGWE0znfRrnczI5p49i2YZJAjyX1P2WzmScK49CV82dzLo71MnrF6fj+Udtb5+\nOgTg7Cow+8PRaTkJEW5Y2JIZpnRUq0CYxAmHYX79EMKHDSThf/8AAwUIAJPWsB/M\npK+KMs/s3r6nJrnYLTfdZhtmQXimpoDMJg1zxmL8UfNUKiQZ6esoAWtDgpqt7Y7s\nKZ8laHRARonte394hidZzM5nb6hQvpPjt2OlPRsyqVxw4c/KsjADtAuKW9/d8phb\nN8bTyOJo856qg4oOEzKG9eeF7oaZTYBy33BTL0408sEBxiMior6b8LrZrAhkqDjA\nvUXRwm/fFKgpsOysxC6xi553CxBUCH2omNV6Ka1LNMwzSp9ILz8jEGqmUtkBszwo\nG1S8fXgE0Lq3cdDM/GJ4QXP/p6LiwNF99faDMTV3+2SAOGvytOX6KjKVzKOSsfJQ\nhN0DlsIw8hqJc0WISQQYEQIACQUCSedYRAIbDAAKCRDorT+BmrEOeCUOAJ9qmR0l\nEXzeoxcdoafxqf6gZlJZlACgkWF7wi2YLW3Oa+jv2QSTlrx4KLM\u003d\n\u003dWi5D\n-----END PGP PUBLIC KEY BLOCK-----",
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d42306b6_f16b6856",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1510807
      },
      "writtenOn": "2021-05-05T01:16:06Z",
      "side": 1,
      "message": "\u0027\n{\n  \"id\": \"8ad95a8eeaaf1397160cdb26f3a8bfddabd27fc0\",\n  \"repo\": \"platform/system/tools/mkbootimg\",\n  \"revision\": \"refs/heads/master\",\n  \"path\": \"include/bootimg/bootimg.h\"\n}",
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "101e1b8e_84c29f4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-05-05T01:25:11Z",
      "side": 1,
      "message": "Hi Nhu, this is just a WIP example that I do not intend to submit. If you need assistance with anything, you can file a bug at bugs.chromium.org. Thanks",
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d978f7f_fdb6091f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-07-14T04:50:28Z",
      "side": 1,
      "message": "Hi Kyle,\n\nGenerally speaking (not Tast specific), a Go function taking context.Context as an argument should behave in the following way:\n\n- It should return immediately if the context is canceled during its execution.\n- The context might be cancelled immediately after the function returns, but it\u0027s not guaranteed. It\u0027s up to the caller, so functions should be prepared for immediate cancellation.\n\nos/exec, testexec has the following behavior, which aligns with the above general rule:\n\n- A subprocess started with CommandContext is killed when the context is canceled.\n\nFinally, Tast has the following behavior, which also aligns with the above general rule:\n\n- context.Context passed to user-defined functions called by Tast framework (test main functions, fixture lifecycle methods, gRPC service methods etc.) are cancelled immediately after they return.\n- context.Context returned by State methods (e.g. FixtState.FixtContext(), ServiceState.ServiceContext()) have lifetime aligned to associated entities (e.g. a context returned by ServiceContext() is canceled on stopping gRPC services).\n\nKeeping these points in the mind, I believe what to fix in this CL is that it starts a btsnoop subprocess with a context passed to gRPC method StartLogging. Thus the subprocess is killed immediately after StartLogging returns. To avoid this, we can call StartBTSnoopLogging with a service-scoped context which you can obtain by ServiceState.ServiceContext().",
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "356d7f12_896bb683",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-07-14T23:56:13Z",
      "side": 1,
      "message": "Thank you Shuhei for this detailed explanation! I feel like I understand the context usage much better now, and it makes sense why it didn\u0027t work before.",
      "parentUuid": "2d978f7f_fdb6091f",
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cda638d5_8e1f9f0b",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/nearby_share_service.go",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-07-14T04:50:28Z",
      "side": 1,
      "message": "We have to pass n.s.ServiceContext() here so that the started subprocess is not killed after this gRPC method returns.",
      "range": {
        "startLine": 129,
        "startChar": 46,
        "endLine": 129,
        "endChar": 49
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de5e4e89_32251d9e",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/nearby_share_service.go",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-07-14T23:56:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cda638d5_8e1f9f0b",
      "range": {
        "startLine": 129,
        "startChar": 46,
        "endLine": 129,
        "endChar": 49
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "699aa924_d4ec548f",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/nearby_share_service.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-07-14T04:50:28Z",
      "side": 1,
      "message": "Need to call n.btsnoopCmd.Wait() as well to release resources associated to the subprocess.\nhttps://pkg.go.dev/os/exec#Cmd.Wait",
      "range": {
        "startLine": 153,
        "startChar": 1,
        "endLine": 153,
        "endChar": 2
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd897513_1997844d",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/nearby_share_service.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-07-14T23:56:13Z",
      "side": 1,
      "message": "I added it, but it seems to get an error every time:\n```\nFailed to wait for btmon to stop: signal: killed\n```\nWe\u0027re just logging the error here so it\u0027s not critical, but I\u0027m not sure if this is expected behavior from Wait().",
      "parentUuid": "699aa924_d4ec548f",
      "range": {
        "startLine": 153,
        "startChar": 1,
        "endLine": 153,
        "endChar": 2
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0a37326_58b91be3",
        "filename": "src/chromiumos/tast/local/bundles/cros/nearbyshare/nearby_share_service.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-07-15T02:13:20Z",
      "side": 1,
      "message": "Yes, that is expected because we call Kill in advance. You can ignore an error from Wait but you still have to call it.",
      "parentUuid": "bd897513_1997844d",
      "range": {
        "startLine": 153,
        "startChar": 1,
        "endLine": 153,
        "endChar": 2
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45a00f65_bf344066",
        "filename": "src/chromiumos/tast/remote/cros/nearbyshare/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2021-07-08T06:58:14Z",
      "side": 1,
      "message": "Should we use s.FixtContext() here?\nctx will have the same lifetime as SetUp.",
      "range": {
        "startLine": 244,
        "startChar": 36,
        "endLine": 244,
        "endChar": 39
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2b7094e_98b060a5",
        "filename": "src/chromiumos/tast/remote/cros/nearbyshare/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-07-14T00:50:58Z",
      "side": 1,
      "message": "It doesn\u0027t seem to make a difference in this case. The test runs the same with either context, and the btsnoop logs still are not saved.",
      "parentUuid": "45a00f65_bf344066",
      "range": {
        "startLine": 244,
        "startChar": 36,
        "endLine": 244,
        "endChar": 39
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5562e4a6_c84f8982",
        "filename": "src/chromiumos/tast/remote/cros/nearbyshare/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-07-14T23:56:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2b7094e_98b060a5",
      "range": {
        "startLine": 244,
        "startChar": 36,
        "endLine": 244,
        "endChar": 39
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f501b0c_15f891e2",
        "filename": "src/chromiumos/tast/remote/cros/nearbyshare/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 350,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-07-14T04:50:28Z",
      "side": 1,
      "message": "I believe we can pass ctx (not s.TestContext()) to these gRPC methods.",
      "range": {
        "startLine": 346,
        "startChar": 35,
        "endLine": 350,
        "endChar": 0
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b2694a9_26792c9c",
        "filename": "src/chromiumos/tast/remote/cros/nearbyshare/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 350,
      "author": {
        "id": 1390967
      },
      "writtenOn": "2021-07-14T23:56:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f501b0c_15f891e2",
      "range": {
        "startLine": 346,
        "startChar": 35,
        "endLine": 350,
        "endChar": 0
      },
      "revId": "81c205b67f4db0d4e6eb3f32630a795399f60578",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}