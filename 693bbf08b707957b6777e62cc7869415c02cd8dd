{
  "comments": [
    {
      "key": {
        "uuid": "9cc65ee0_0bba6db8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-07-31T20:22:20Z",
      "side": 1,
      "message": "nit, style: (here and below, in comments in the code):\n\nin Tast (and I think in other public)  ARC++ is spelled ARC",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "693bbf08b707957b6777e62cc7869415c02cd8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68d55d17_87104ae3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-07-31T20:22:20Z",
      "side": 1,
      "message": "nit: could you describe in more detail what test did you run?",
      "range": {
        "startLine": 14,
        "startChar": 5,
        "endLine": 14,
        "endChar": 8
      },
      "revId": "693bbf08b707957b6777e62cc7869415c02cd8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a31c3a6b_ebc84d3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-07-29T19:46:32Z",
      "side": 1,
      "message": "PTAL too\n",
      "revId": "693bbf08b707957b6777e62cc7869415c02cd8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ce1eebe_6a10a59d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-07-31T00:12:48Z",
      "side": 1,
      "message": "Tast owners: friendly ping?",
      "revId": "693bbf08b707957b6777e62cc7869415c02cd8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61d38c28_523e83c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000303
      },
      "writtenOn": "2020-07-31T19:40:11Z",
      "side": 1,
      "message": "+Ricardo, another tast owner.",
      "revId": "693bbf08b707957b6777e62cc7869415c02cd8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9eaeb15b_b9224f41",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-07-31T20:22:20Z",
      "side": 1,
      "message": "+2 % nits",
      "revId": "693bbf08b707957b6777e62cc7869415c02cd8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4beeb25_9b31f610",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-07-31T20:22:20Z",
      "side": 1,
      "message": "nit, optional:\n\nSince below you are filtering out the ones with certain prefix, and since you are using a regexp here, what about passing the prefix as argument? e.g:\n\n  listProperties :\u003d func(prefix string) ... {\n     ...\n     // Haven\u0027t tested the regexp.. (added just to give context to the idea)\n     re :\u003d regexp.MustCompile(`\\[(^\\prefix.*]]+\\]: .*`)\n     ...\n  }",
      "range": {
        "startLine": 72,
        "startChar": 19,
        "endLine": 72,
        "endChar": 25
      },
      "revId": "693bbf08b707957b6777e62cc7869415c02cd8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a03f801a_6d86b188",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-07-31T20:22:20Z",
      "side": 1,
      "message": "nit, optional:\n\n   a.Command(....).Output(testexec.DumpLogOnError)",
      "range": {
        "startLine": 74,
        "startChar": 47,
        "endLine": 74,
        "endChar": 48
      },
      "revId": "693bbf08b707957b6777e62cc7869415c02cd8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "590c8484_3229f5d7",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/build_properties.go",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-07-31T20:22:20Z",
      "side": 1,
      "message": "since the regexp is not trivial to read at first-glance, please add comment describing what it should match. Easier to read the code later. e.g:\n\n  // Trying to match:\n  //   [ro.build.version.preview_sdk]: [0]\n  //   [ro.build.version.release]: [9]",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 46
      },
      "revId": "693bbf08b707957b6777e62cc7869415c02cd8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}