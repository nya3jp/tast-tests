{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b51c576e_62eb7ab7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-09-07T14:52:54Z",
      "side": 1,
      "message": "LGTM",
      "revId": "94487f53a8db517d24f1bf4f7c7c428c3bdbf47c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afd1c480_a38e2c1c",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 6
      },
      "lineNbr": 214,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2021-09-17T00:19:03Z",
      "side": 1,
      "message": "The flag is persistant across launching CCA with same user, consider disable it in defer with some cleanupCtx to avoid the toggle of flag affect next test.",
      "range": {
        "startLine": 214,
        "startChar": 18,
        "endLine": 214,
        "endChar": 44
      },
      "revId": "94487f53a8db517d24f1bf4f7c7c428c3bdbf47c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b0b6d5c_4580ddac",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_record_video.go",
        "patchSetId": 6
      },
      "lineNbr": 214,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-09-22T06:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "afd1c480_a38e2c1c",
      "range": {
        "startLine": 214,
        "startChar": 18,
        "endLine": 214,
        "endChar": 44
      },
      "revId": "94487f53a8db517d24f1bf4f7c7c428c3bdbf47c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a033f03_baccc807",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 6
      },
      "lineNbr": 1356,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2021-09-17T00:19:03Z",
      "side": 1,
      "message": "Return a function to restore EXPERT flag back to prevEnabled.\ni.e.\n```\nfunc (a *App) EnableExpertMode(ctx context.Context) (error, func(context.Context) error) {\n  prevEnabled, err :\u003d a.GetState(ctx, Expert)\n  // ...\n  return nil, func(ctx context.Context) {\n    curEnabled, err :\u003d a.GetState(ctx, Expert)\n    if curEnabled !\u003d prevEnabled {\n      // toggle again\n    }\n  }\n}\n\n// Call site\nerr, cleanupFunc :\u003d a.EnableExpertMode(ctx)\ndefer cleanupFunc(cleanupCtx)\n\n```",
      "range": {
        "startLine": 1356,
        "startChar": 52,
        "endLine": 1356,
        "endChar": 57
      },
      "revId": "94487f53a8db517d24f1bf4f7c7c428c3bdbf47c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ef83ea7_95224469",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 6
      },
      "lineNbr": 1356,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-09-22T06:50:03Z",
      "side": 1,
      "message": "Hmm, I prefer not setting the expert mode to its previous state when cleaning up since it will make reader hard to know which state does an expert mode in after executing the cleanup function.\n\nIf we don\u0027t want to preserve the expert mode state between tests, maybe we can have another CL to disable expert mode in app.Close(). Therefore, it is clear that when an app is started, the expert mode is always off. WDYT?",
      "parentUuid": "5a033f03_baccc807",
      "range": {
        "startLine": 1356,
        "startChar": 52,
        "endLine": 1356,
        "endChar": 57
      },
      "revId": "94487f53a8db517d24f1bf4f7c7c428c3bdbf47c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4c07ddf_cf9e5e83",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 6
      },
      "lineNbr": 1356,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2021-09-22T08:16:54Z",
      "side": 1,
      "message": "```\nHmm, I prefer not setting the expert mode to its previous state when cleaning up since it will make reader hard to know which state does an expert mode in after executing the cleanup function.\n```\nSimply the state before calling |EnableExpertMode|?\n\n```\nIf we don\u0027t want to preserve the expert mode state between tests, maybe we can have another CL to disable expert mode in app.Close(). Therefore, it is clear that when an app is started, the expert mode is always off. WDYT?\n```\nIdeally we should start a new chrome without |KeepState()| option [1] which will start a new chrome without memorizing any previous state. But it lose the benefit of using precondition/fixture to restart chrome every time. Not sure if there\u0027s a light-weight method to clean up all state without starting a new chrome.\n\n\n[1] https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/chrome/internal/config/config.go;rcl\u003d6a08ca5681de9bf06ebfea9d7bc7ec2484dea680;l\u003d146",
      "parentUuid": "8ef83ea7_95224469",
      "range": {
        "startLine": 1356,
        "startChar": 52,
        "endLine": 1356,
        "endChar": 57
      },
      "revId": "94487f53a8db517d24f1bf4f7c7c428c3bdbf47c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "660a1379_978b1ecf",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 6
      },
      "lineNbr": 1356,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-09-22T08:32:43Z",
      "side": 1,
      "message": "I mean, it is hard for a reader to know if the following codes should pass or fail:\n```\ncleanupFunc :\u003d EnableExpertMode()\ncleanupFunc()\n\nCheckExpertModeDisabled() // Should it be enabled or disabled?\n```\n\nReader needs to trace the codes executed before and memorizes its state when calling EnableExpertMode() so they can know what is the expected outcome after calling cleanupFunc(), which I think might not be ideal.\n\nAnd if the state you mean is something that we stored in localStorage, just checked we currently do have logic to clear it when closing app:\nhttps://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/camera/cca/cca.go;rcl\u003dc43b0cff6238ec171a094020bc46c0a62c524cd2;l\u003d512",
      "parentUuid": "a4c07ddf_cf9e5e83",
      "range": {
        "startLine": 1356,
        "startChar": 52,
        "endLine": 1356,
        "endChar": 57
      },
      "revId": "94487f53a8db517d24f1bf4f7c7c428c3bdbf47c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}