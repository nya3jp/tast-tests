{
  "comments": [
    {
      "key": {
        "uuid": "70bc75d0_d992c46c",
        "filename": "src/chromiumos/tast/local/bundles/cros/crash/fixture_service.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-04-01T08:27:25Z",
      "side": 1,
      "message": "nit: Can you please wrap all errors? In some places you did it, but not everywhere",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "0b6f42eb229d036d715c882d89e2ca41739cbd87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5adfd9a_89098629",
        "filename": "src/chromiumos/tast/local/bundles/cros/crash/fixture_service.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-04-01T08:27:25Z",
      "side": 1,
      "message": "nit: Can you please add log here as well?",
      "revId": "0b6f42eb229d036d715c882d89e2ca41739cbd87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbe51408_a7c47661",
        "filename": "src/chromiumos/tast/local/bundles/cros/crash/fixture_service.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1305461
      },
      "writtenOn": "2020-04-01T20:00:21Z",
      "side": 1,
      "message": "This seems like it might be overly verbose for the benefit it gives. Should we really wrap _all_ errors in all of our code?\n\nI looked at src/platform/tast-tests/src/chromiumos/tast/local/chrome/chrome.go for an example, and to try to better understand the guidelines. It has many \u0027return err\u0027s there (without any wrapping). Under what circumstances should I wrap/not wrap errors?\n\nFor now, I\u0027ve done it for fixture_service but not yet for fixture, since there are a whole lot of places I\u0027d need to change there, but I\u0027m happy to change those if you think it\u0027d be better style",
      "parentUuid": "70bc75d0_d992c46c",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "0b6f42eb229d036d715c882d89e2ca41739cbd87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1277187b_d8f7726d",
        "filename": "src/chromiumos/tast/local/bundles/cros/crash/fixture_service.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1305461
      },
      "writtenOn": "2020-04-01T20:00:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5adfd9a_89098629",
      "revId": "0b6f42eb229d036d715c882d89e2ca41739cbd87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8ea3aa7_8dafc1dd",
        "filename": "src/chromiumos/tast/local/bundles/cros/crash/fixture_service.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-04-01T20:19:27Z",
      "side": 1,
      "message": "Here is guide: https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Error-construction\n\n\nIt is recommended to wrap when you cross package boundary, which represents some kind of barrier beneath which everything is an implementation detail. Otherwise it is fine to return an error without wrapping, if you can\u0027t really add much context to make debugging easier. Use your best judgement to decide wrap or not.\n\nFollowing quotes from The Go programming language 5.4.1 Error-Handling Strategies are useful to design good errors:\n\nWhen designing error messages, be deliberate, so that each one is a meaningful description of the problem with sufficient and relevant detail.\nIn general, the call f(x) is responsible for reporting the attempted operation f and the argument value x as they relate to the context of the error.\nThe caller is responsible for adding further information that it has but the call f(x) does not.",
      "parentUuid": "fbe51408_a7c47661",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "0b6f42eb229d036d715c882d89e2ca41739cbd87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5198e0fd_fcc91680",
        "filename": "src/chromiumos/tast/local/bundles/cros/crash/fixture_service.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1305461
      },
      "writtenOn": "2020-04-01T20:38:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8ea3aa7_8dafc1dd",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "0b6f42eb229d036d715c882d89e2ca41739cbd87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}