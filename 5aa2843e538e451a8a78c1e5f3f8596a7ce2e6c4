{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0763c2ea_2b847be2",
        "filename": "src/chromiumos/tast/remote/bundles/cros/arc/adb_over_usb.go",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-07-30T04:12:06Z",
      "side": 1,
      "message": "No action needed, just for my notes:\n\nI guess I know why you put the slice literal before pre.SoftwareDeps; append can reuse the underlying array of the first argument if its capacity is large enough to accomodate new elements, thus it is generally unsafe to reuse a slice after passing it to append.\n\nHowever, in this case, pre.SoftwareDeps is initialized with a slice literal, so its capacity is guaranteed to be the same as its length:\n\n\u003e A slice literal describes the entire underlying array literal. Thus the length and capacity of a slice literal are the maximum element index plus one.\nhttps://golang.org/ref/spec#Composite_literals\n\nSo I believe we won\u0027t see issues even if we pass pre.SoftwareDeps as the first argument of append.\n\nBut anyway, I like the current way of passing a slice literal as the first argument so that we won\u0027t hit any issues even if we make changes to the definition of pre.SoftwareDeps.",
      "range": {
        "startLine": 30,
        "startChar": 16,
        "endLine": 30,
        "endChar": 74
      },
      "revId": "5aa2843e538e451a8a78c1e5f3f8596a7ce2e6c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}