{
  "comments": [
    {
      "key": {
        "uuid": "3240c405_7deab5d1",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/udev_rename.go",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-12-11T09:22:35Z",
      "side": 1,
      "message": "How about using bufio.Scanner:\nhttps://golang.org/pkg/bufio/#example_Scanner_lines",
      "revId": "f2305821c04eba740f6fd0f235042d2df5cddd45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57d1ec34_c05f8481",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/udev_rename.go",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-12-11T09:22:35Z",
      "side": 1,
      "message": "Does that matter the read is blocked? I though this is called inside goroutine.",
      "revId": "f2305821c04eba740f6fd0f235042d2df5cddd45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e40f1a7_56b0ad27",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/udev_rename.go",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2019-12-12T07:15:26Z",
      "side": 1,
      "message": "The blocking here means that Read blocks until buffer is filled. (sorry I didn\u0027t write it clearly)\nIf you add some logging after every Read, you\u0027ll find that the Read will not return until timeout reached when you allocate a large buffer (e.g. make([]byte, 4096)). On the other hand, with simple byte buffer, it will be very responsive, so I think it is not the problem of buffering on writer side.\n\nThe same problem also makes bufio not a good solution (it just gets blocked when reading into buffer).",
      "parentUuid": "57d1ec34_c05f8481",
      "revId": "f2305821c04eba740f6fd0f235042d2df5cddd45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bec0a6f5_8ad9531b",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/udev_rename.go",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-12-12T10:22:50Z",
      "side": 1,
      "message": "Do you mean if we have a large buffer, it will block until the buffer is filled or timeout? That sounds a weird design.\n\nI wrote two programs:\nslow_emit emits a dot for every 0.1 second, and 10 dots per line. Total 5 lines.\nscanline.go calls slow_emit and feeds cmd stdout to bufio.Scanner() to scan line.\n\nExpect scanline to output a dot line every second without being blocked by buffer size.\n\nYou may see the code here: https://user.git.corp.google.com/deanliao/misc/+/000d4e6de5eb168acd7eb57186980bd3a204b12f",
      "parentUuid": "7e40f1a7_56b0ad27",
      "revId": "f2305821c04eba740f6fd0f235042d2df5cddd45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aa53946_1defe7bf",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/udev_rename.go",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2019-12-13T02:27:45Z",
      "side": 1,
      "message": "Hmm..., it seems to work well. let me try if I can reproduce my problem.",
      "parentUuid": "bec0a6f5_8ad9531b",
      "revId": "f2305821c04eba740f6fd0f235042d2df5cddd45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}