{
  "comments": [
    {
      "key": {
        "uuid": "2be54095_f0336621",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_everything.go",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-09-18T01:15:57Z",
      "side": 1,
      "message": "QQ: Why do we need to use base64? Can we avoid data mutation? If not, could you add a comment why we need to use base64?",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 98,
        "endChar": 22
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce5fc741_c22e0282",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_everything.go",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-18T18:52:50Z",
      "side": 1,
      "message": "Binary characters may end up be treated as control characters since we are going through a terminal connection and not just a shell. I\u0027ll add a comment. (I did try it and was then just getting failures)",
      "parentUuid": "2be54095_f0336621",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 98,
        "endChar": 22
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5c27bba_af1bf5d5",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_everything.go",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "can you instead stream the data to the command\u0027s stdin? probably something like this:\n\n  f, err :\u003d os.Open(...)\n  if err !\u003d nil {\n      ...\n  }\n  defer f.Close()\n\n  cmd \u003d ...\n  stdin, err :\u003d cmd.StdinPipe()\n  if err !\u003d nil {\n      ...\n  }\n  if err \u003d cmd.Start(); err !\u003d nil {\n      ...\n  }\n\n  enc :\u003d base64.NewEncoder(base64.StdEncoding, stdin)\n  if _, err \u003d io.Copy(enc, ...); err !\u003d nil {\n      enc.Close()\n      ...\n  }\n\n  if err \u003d enc.Close(); err !\u003d nil {\n      ...\n  }\n  if err \u003d cmd.Wait(); err !\u003d nil {\n      ...\n  }\n\nthat seems generally useful for getting stuff into the container, so you might want to stick it in a helper function.",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06005c6e_1ba4b91c",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_everything.go",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "I tried this, but the Wait call just hangs...even though I\u0027ve closed the encoder and the stdinpipe.  I can tell the base64 process is still running...and I have no idea why it\u0027s not seeing an EOF from stdin. Any ideas? If not...I\u0027ll just put it back the way I had it since that works. I also tried it without the \u0027sh -c\u0027 and redirection...and Wait still hung. The finished copying line does show the right number of bytes for the operation.\n\n\tf, err :\u003d os.Open(s.DataPath(debianFilename))\n\tif err !\u003d nil {\n\t\ts.Fatal(\"Error opening test data file: \", err)\n\t}\n\tdefer f.Close()\n\tcmd \u003d cont.Command(s.Context(), \"sh\", \"-c\", \"base64 --decode \u003e~/cros-tast-tests-deb.deb\")\n\t// cont.Command sets stdin to be a byte buffer, so clear that first before\n\t// we create the pipe or otherwise it\u0027ll be an error.\n\tcmd.Stdin \u003d nil\n\tstdin, err :\u003d cmd.StdinPipe()\n\tif err !\u003d nil {\n\t\ts.Fatal(\"Could not get stdin for command: \", err)\n\t}\n\tif err \u003d cmd.Start(); err !\u003d nil {\n\t\ts.Fatal(\"Could not execute command: \", err)\n\t\tcmd.DumpLog(s.Context())\n\t}\n\n\tenc :\u003d base64.NewEncoder(base64.StdEncoding, stdin)\n\ts.Log(\"About to copy into container\")\n\tvar num int64\n\tif num, err \u003d io.Copy(enc, bufio.NewReader(f)); err !\u003d nil {\n\t\tenc.Close()\n\t\ts.Fatal(\"Error copying data file into stdin: \", err)\n\t}\n\ts.Logf(\"Finished copying file into container of size %v\", num)\n\tif err \u003d enc.Close(); err !\u003d nil {\n\t\ts.Fatal(\"Error closing encoder: \", err)\n\t}\n\tif err \u003d stdin.Close(); err !\u003d nil {\n\t\ts.Fatal(\"Error closing stdin: \", err)\n\t}\n\ts.Log(\"Waiting\")\n\tif err \u003d cmd.Wait(); err !\u003d nil {\n\t\ts.Fatal(\"Error waiting for base64 decode to finish: \", err)\n\t}\n\ts.Log(\"Done waiting\")",
      "parentUuid": "d5c27bba_af1bf5d5",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b919e37e_f973e77d",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_everything.go",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-17T23:42:57Z",
      "side": 1,
      "message": "i\u0027d prefer it if you investigated further. the following hacky code works for me when i run it locally:\n\npackage main\n\nimport (\n    \"encoding/base64\"\n    \"fmt\"\n    \"io\"\n    \"os\"\n    \"os/exec\"\n)\n\nfunc main() {\n    if len(os.Args) !\u003d 3 {\n        fmt.Fprintf(os.Stderr, \"Usage: %s \u003csrc\u003e \u003cdst\u003e\\n\", os.Args[0])\n        os.Exit(1)\n    }\n\n    f, err :\u003d os.Open(os.Args[1])\n    if err !\u003d nil {\n        panic(err)\n    }\n    defer f.Close()\n\n    cmd :\u003d exec.Command(\"sh\", \"-c\", fmt.Sprintf(\"base64 --decode \u003e\u0027%s\u0027\", os.Args[2]))\n    stdin, err :\u003d cmd.StdinPipe()\n    if err !\u003d nil {\n        panic(err)\n    }\n    if err \u003d cmd.Start(); err !\u003d nil {\n        panic(err)\n    }\n\n    enc :\u003d base64.NewEncoder(base64.StdEncoding, stdin)\n    if _, err :\u003d io.Copy(enc, f); err !\u003d nil {\n        panic(err)\n    }\n    if err \u003d enc.Close(); err !\u003d nil {\n        panic(err)\n    }\n    if err \u003d stdin.Close(); err !\u003d nil {\n        panic(err)\n    }\n    if err \u003d cmd.Wait(); err !\u003d nil {\n        panic(err)\n    }\n}\n\nif doing something similar in this test is hanging, it\u0027s likely to bite other people further down the line as well. is cont.Start() not working properly for some reason?",
      "parentUuid": "06005c6e_1ba4b91c",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79762e68_b40d6bb5",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_everything.go",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-18T18:52:50Z",
      "side": 1,
      "message": "This is apparently due to a bug in vsh (which we use to execute commands in the container) where it\u0027s ignoring the EOF on stdin. I filed a bug here: https://crbug.com/885255\n\nI\u0027ll just leave it the way it is for now and then put a TODO to fix it after that bug is resolved.",
      "parentUuid": "b919e37e_f973e77d",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9fa24fa_65b7922d",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_info.go",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "i\u0027d recommend making this more general purpose by passing the path as an argument and returning the info so the caller can perform the assertion",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be033e96_acec9a67",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_info.go",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9fa24fa_65b7922d",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92870ac5_23c4233e",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "nit: maybe call it InstallPackage or something similar instead?",
      "range": {
        "startLine": 19,
        "startChar": 5,
        "endLine": 19,
        "endChar": 24
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9b30324_4f9520f4",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "just pass a context.Context instead; that\u0027s all you need here (see testing.ContextLog for logging)",
      "range": {
        "startLine": 19,
        "startChar": 25,
        "endLine": 19,
        "endChar": 41
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d9f2f6c_531cb40f",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9b30324_4f9520f4",
      "range": {
        "startLine": 19,
        "startChar": 25,
        "endLine": 19,
        "endChar": 41
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39be322f_807170fe",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92870ac5_23c4233e",
      "range": {
        "startLine": 19,
        "startChar": 5,
        "endLine": 19,
        "endChar": 24
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db54a9ff_d6984a79",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "just run [\"dpkg\", \"-l\"] and search the results here using strings.Contains? that seems a bit easier to debug in the future",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b005b0d1_0fc125f8",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1003129
      },
      "writtenOn": "2018-09-14T22:49:17Z",
      "side": 1,
      "message": "Try dpkg -s \u003cpackage\u003e instead, and then you just have to check the return value.",
      "parentUuid": "db54a9ff_d6984a79",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2ab7009_de8efdaf",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b005b0d1_0fc125f8",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d7fa75_02a239df",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "maybe check them one at a time instead?",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78d47847_577a2e00",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1003129
      },
      "writtenOn": "2018-09-14T22:49:17Z",
      "side": 1,
      "message": "+1 to checking each one individually, it\u0027ll make it easier to tell what\u0027s missing.\n\nAnd you can use the shell\u0027s inbuilt test program here as well:\n\nsh -c \"[ -f filename ]\"",
      "parentUuid": "43d7fa75_02a239df",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e4a44ac_afc969ba",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/subtest/linux_package_install.go",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78d47847_577a2e00",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4abb125_439c3158",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "please document what sort of value is contained in packageId",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a55873f3_24a242ac",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4abb125_439c3158",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15580d8b_6a0e9e57",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "\"path\" is probably fine, but use \"filePath\" otherwise since it\u0027s two words",
      "range": {
        "startLine": 110,
        "startChar": 58,
        "endLine": 110,
        "endChar": 66
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1ebaa9b_436626e1",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15580d8b_6a0e9e57",
      "range": {
        "startLine": 110,
        "startChar": 58,
        "endLine": 110,
        "endChar": 66
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd2b41b6_c611ea12",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "please don\u0027t use naked returns except in trivial functions that are several lines long: https://github.com/golang/go/wiki/CodeReviewComments#named-result-parameters\n\npeople are arguing about whether this feature should exist in go 2: https://golang.org/issue/21291",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd6f0ef5_1b2a53bc",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd2b41b6_c611ea12",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "933dca8a_6f34aa0c",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 137,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "nit: path",
      "range": {
        "startLine": 137,
        "startChar": 61,
        "endLine": 137,
        "endChar": 69
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "270a4ee8_7d839ce8",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 137,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "InstallLinuxPackage or just InstallPackage?",
      "range": {
        "startLine": 137,
        "startChar": 20,
        "endLine": 137,
        "endChar": 39
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e001229_8cbd49d8",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 137,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "270a4ee8_7d839ce8",
      "range": {
        "startLine": 137,
        "startChar": 20,
        "endLine": 137,
        "endChar": 39
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5bfdb25_727fb831",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 137,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "933dca8a_6f34aa0c",
      "range": {
        "startLine": 137,
        "startChar": 61,
        "endLine": 137,
        "endChar": 69
      },
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1d27f38_103455b1",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 178,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "it might be clearer to move this condition within the loop and put a \u0027break\u0027 inside of it",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d65f0c79_9da8595b",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 178,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1d27f38_103455b1",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cd5f943_7db20fe4",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 198,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-14T22:29:11Z",
      "side": 1,
      "message": "nit: omit \u0027else\u0027 when the \u0027if\u0027 branch contains a return\n\n  if ... {\n      return ...\n  }\n  return ...",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2926c0b_687a4f2d",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 6
      },
      "lineNbr": 198,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-09-17T22:26:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cd5f943_7db20fe4",
      "revId": "a0706946dcdf079b1dbb84d3f05a51d46e1e24e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}