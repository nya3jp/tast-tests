{
  "comments": [
    {
      "key": {
        "uuid": "51fe4643_511cdb26",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2019-10-07T09:14:47Z",
      "side": 1,
      "message": "Could we add the dependent CLs that need to land before the test here, although Cq-Depend won\u0027t work cross the ARC++/Chromium boundary?",
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ebe329a_99f88fa2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2019-10-07T10:39:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51fe4643_511cdb26",
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec19f485_f415dbcf",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_intent.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2019-10-07T09:14:47Z",
      "side": 1,
      "message": "Will vivid work for this test?",
      "range": {
        "startLine": 31,
        "startChar": 30,
        "endLine": 31,
        "endChar": 43
      },
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7731772_44129fee",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_intent.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2019-10-07T10:39:59Z",
      "side": 1,
      "message": "It supposed to work on vivid. However, I haven\u0027t tested it on VM yet. I\u0027ll change this to support vivid first and will update if there is any issue found when running on VM. Thanks for reminding.",
      "parentUuid": "ec19f485_f415dbcf",
      "range": {
        "startLine": 31,
        "startChar": 30,
        "endLine": 31,
        "endChar": 43
      },
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eb130e4_3586ea51",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_intent.go",
        "patchSetId": 3
      },
      "lineNbr": 189,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2019-10-07T09:14:47Z",
      "side": 1,
      "message": "Maybe:\n// TODO(wtlee): Add intent cancelation tests",
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2abf73a_8dd7bea6",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_intent.go",
        "patchSetId": 3
      },
      "lineNbr": 189,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2019-10-07T10:39:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7eb130e4_3586ea51",
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4c03a8d_cf1ad10c",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_intent.go",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2019-10-07T09:14:47Z",
      "side": 1,
      "message": "Could we poll the condition instead of sleep here?",
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb449f4c_e18d4b4b",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_intent.go",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2019-10-07T10:39:59Z",
      "side": 1,
      "message": "Hmm, but what about the case when expected \u003d\u003d true? We need to poll until it timeout and then don\u0027t return error when expected \u003d\u003d true \u0026\u0026 actual \u003d\u003d true? Does it still more preferable than using sleep() here?",
      "parentUuid": "c4c03a8d_cf1ad10c",
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f3e40fa_42563d93",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_intent.go",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2019-10-08T02:27:39Z",
      "side": 1,
      "message": "Sorry I don\u0027t get it. I think we can just poll until IsCCAInstanceExist() \u003d\u003d expected or timeout...?\n\nsleep() is known to be the a major source of flakiness, I think we prefer polling with timeout if possible.",
      "parentUuid": "cb449f4c_e18d4b4b",
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86213c0c_e41f05f8",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca_ui_intent.go",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2019-10-08T08:14:35Z",
      "side": 1,
      "message": "Sorry for being unclear. I think we need to change the name of this method to make it clearer.\n\nThis method is used to check if the CCA instance will close itself or not. For intents expects to have a result, CCA should close itself after the capture is done. For other intents, CCA should behave like regular instances and should not close after capturing.\n\nAs a result, this method assume the initial state \u003d\u003d true, and would like to check whether it will close after a while.\nIf expected \u003d\u003d false, then we can poll and return nil after the cca.IsCCAInstanceExist() return false and return error if it reaches the timeout.\nBut for expected \u003d\u003d true, we might want to wait for a while and ensure cca.IsCCAInstanceExist() won\u0027t return false. If it finally reach timeout, then it should pass this test.\n\nAnyway, I changed this method to checkAutoCloseBehavior(). PTAL. Thanks!",
      "parentUuid": "9f3e40fa_42563d93",
      "revId": "f9a20c3c75466e4b5fce268e1d63194c962b5a40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}