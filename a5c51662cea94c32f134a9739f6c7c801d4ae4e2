{
  "comments": [
    {
      "key": {
        "uuid": "47987083_03a2249c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-09-28T02:15:20Z",
      "side": 1,
      "message": "This comment looks outdated. Could you update please?",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 21,
        "endChar": 40
      },
      "revId": "a5c51662cea94c32f134a9739f6c7c801d4ae4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dcac9ef_26a08237",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2018-09-28T03:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47987083_03a2249c",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 21,
        "endChar": 40
      },
      "revId": "a5c51662cea94c32f134a9739f6c7c801d4ae4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67e83950_6ec1f4e0",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/virtual_keyboard_omnibox.go",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-09-28T02:15:20Z",
      "side": 1,
      "message": "Hmm. JS promise is designed to wait for non-immediate operations, so TBH \"polling\" promises sounds a bit strange. If the operation is not finished yet, then it should not resolve from the first place.\n\nI know this pattern appears several times in these tests, and WaitForPromiseToResolveToTrue saves some JS bytes, but I\u0027m still hesitant...\n\nHow about polling inside a promise instead, like this:\n\n tconn.WaitForPromise(ctx, `\n new Promise((resolve, reject) \u003d\u003e {\n   chrome.automation.getDesktop(root \u003d\u003e {\n     const check \u003d () \u003d\u003e {\n       const omnibox \u003d root.find({ attributes: { role: \u0027textField\u0027, inputType: \u0027url\u0027 }});\n       if (!omnibox) {\n         setTimeout(check, 10);\n         return;\n       }\n       omnibox.doDefault();\n       resolve();\n     };\n     check();\n   });\n });\n `)",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 58
      },
      "revId": "a5c51662cea94c32f134a9739f6c7c801d4ae4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f29774e3_6e0c40af",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/virtual_keyboard_omnibox.go",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2018-09-28T03:38:42Z",
      "side": 1,
      "message": "Ahh, sounds good. Done. I originally wanted to do polling in JavaScript, but had trouble with setInterval because the setIntervals were not cleared properly so they kept running in the background. The setTimeout idea looks better.",
      "parentUuid": "67e83950_6ec1f4e0",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 58
      },
      "revId": "a5c51662cea94c32f134a9739f6c7c801d4ae4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7573f16_1aaf05e0",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/vkb/vkb.go",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2018-09-28T00:44:17Z",
      "side": 1,
      "message": "This line used to be c.chromeErr err. However, I can\u0027t access that from here and I can\u0027t figure out what it does, so I just return the bare err here. Is that okay?",
      "revId": "a5c51662cea94c32f134a9739f6c7c801d4ae4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0ed2f72_f1fc4d5d",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/vkb/vkb.go",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-28T00:51:30Z",
      "side": 1,
      "message": "sure. (chromeErr is just a thing i added to make chrome crashes more visible: when a devtools call fails, we check to see if the underlying reason for the error is that the chrome process went away.)",
      "parentUuid": "e7573f16_1aaf05e0",
      "revId": "a5c51662cea94c32f134a9739f6c7c801d4ae4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}