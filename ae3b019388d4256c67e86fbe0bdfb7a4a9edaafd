{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0f3bc056_842d2f57",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 1536067
      },
      "writtenOn": "2022-03-03T11:07:12Z",
      "side": 1,
      "message": "If we wanted to not add local files as a server, I could just add a tab with a data URI and evaluate this javascript code from the test itself, also without compiling WebAssembly code at all, just checking that WebAssembly is a valid object and that it can instantiate modules. I leave this change up to reviewers.",
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d935f46_cd70ca95",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 1536067
      },
      "writtenOn": "2022-03-07T13:23:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f3bc056_842d2f57",
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2f172b4_613371a4",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1393955
      },
      "writtenOn": "2022-03-07T12:46:54Z",
      "side": 1,
      "message": "nit: If we compiled this as C instead of C++ code, or used:\n\n```\nextern \"C\" int isJitEnabled() { return 1; }\n```\n\nwouldn\u0027t we prevent name mangling, and have a nicer identifier to use?",
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "232da3fe_acf60375",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1536067
      },
      "writtenOn": "2022-03-07T13:23:09Z",
      "side": 1,
      "message": "Yes that is clever, mangling is gone now.",
      "parentUuid": "c2f172b4_613371a4",
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83267556_e202a60a",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1393955
      },
      "writtenOn": "2022-03-07T12:46:54Z",
      "side": 1,
      "message": "nit: we don\u0027t actually need that in the global scope, right? It can be a local variable in the `try` block below?",
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f5dacab_87524a60",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1536067
      },
      "writtenOn": "2022-03-07T13:23:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83267556_e202a60a",
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "789183ba_49444225",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1393955
      },
      "writtenOn": "2022-03-07T12:46:54Z",
      "side": 1,
      "message": "Can\u0027t we write this simpler as:\n\n```\n    jitEnabled \u003d (await WebAssembly.instantiateStreaming(fetch(\u0027is_jit_enabled.wasm\u0027)))\n        .instance.exports._Z12isJitEnabledv;\n```",
      "range": {
        "startLine": 19,
        "startChar": 16,
        "endLine": 24,
        "endChar": 22
      },
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4df222c9_b25b5b07",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1536067
      },
      "writtenOn": "2022-03-07T13:23:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "789183ba_49444225",
      "range": {
        "startLine": 19,
        "startChar": 16,
        "endLine": 24,
        "endChar": 22
      },
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e632c82_47ef8d20",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1393955
      },
      "writtenOn": "2022-03-07T12:46:54Z",
      "side": 1,
      "message": "nit: We only reach this code if there was an exception raised above, right? Wouldn\u0027t that intent be somewhat clearer if we put this statement in the catch block?",
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf99be80_feb49e9c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/data/jit_test.html",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1536067
      },
      "writtenOn": "2022-03-07T13:23:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e632c82_47ef8d20",
      "revId": "ae3b019388d4256c67e86fbe0bdfb7a4a9edaafd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}