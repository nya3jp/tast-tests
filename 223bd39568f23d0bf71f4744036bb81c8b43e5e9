{
  "comments": [
    {
      "key": {
        "uuid": "742f252e_9cbd671c",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/ready_error_log.go",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-21T12:24:59Z",
      "side": 1,
      "message": "style: Let\u0027s reduce nesting. Also we don\u0027t need to call os.Stat, we can just call ioutil.ReadFile.\n\n b, err :\u003d ioutil.ReadFile(...)\n if os.IsNotExist(err) {\n   return\n } else if err !\u003d nil {\n   s.Fatal(...)\n }\n s.Errorf(...)\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#indent-error-flow",
      "range": {
        "startLine": 30,
        "startChar": 54,
        "endLine": 30,
        "endChar": 67
      },
      "revId": "223bd39568f23d0bf71f4744036bb81c8b43e5e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bba89500_fb1b1c7b",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/ready_error_log.go",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-21T12:24:59Z",
      "side": 1,
      "message": "contents might be multi-line, what about splitting with newlines and calling s.Error multiple times?",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 64
      },
      "revId": "223bd39568f23d0bf71f4744036bb81c8b43e5e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d843ca91_16eb7816",
        "filename": "src/chromiumos/tast/local/ready/ready.go",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-21T12:24:59Z",
      "side": 1,
      "message": "Can we call this after killOrphanAutotestd? Zombie autotestd process should be defeated before anything.",
      "range": {
        "startLine": 53,
        "startChar": 1,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "223bd39568f23d0bf71f4744036bb81c8b43e5e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12bc3738_d78b3823",
        "filename": "src/chromiumos/tast/local/ready/ready.go",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-21T12:24:59Z",
      "side": 1,
      "message": "and return",
      "range": {
        "startLine": 287,
        "startChar": 2,
        "endLine": 287,
        "endChar": 9
      },
      "revId": "223bd39568f23d0bf71f4744036bb81c8b43e5e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afe660df_0f6c973f",
        "filename": "src/chromiumos/tast/local/ready/ready.go",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2020-02-21T12:24:59Z",
      "side": 1,
      "message": "Do we want to add a newline?",
      "range": {
        "startLine": 291,
        "startChar": 28,
        "endLine": 291,
        "endChar": 31
      },
      "revId": "223bd39568f23d0bf71f4744036bb81c8b43e5e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}