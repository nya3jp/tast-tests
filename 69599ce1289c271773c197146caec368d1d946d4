{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e9d68d2d_f889a89a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "`Add`\nSee: https://chromium.googlesource.com/chromiumos/docs/+/HEAD/contributing.md#Commit-messages",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31f7918f_c8862832",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "nit: `nonempty`",
      "range": {
        "startLine": 7,
        "startChar": 23,
        "endLine": 7,
        "endChar": 32
      },
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d209fb12_c22a0fe8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "nit: `TEST\u003dtast run \u003cDUT\u003e platform.FormFactor`",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 24
      },
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "348700e7_67052f37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1330845
      },
      "writtenOn": "2022-08-22T21:36:56Z",
      "side": 1,
      "message": "why not just make the property `required` in the cros-config schema?\n\nthis should not be a hardware test...",
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14f26c1e_41252b31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1408939
      },
      "writtenOn": "2022-08-29T03:07:33Z",
      "side": 1,
      "message": "Sure, we can make the property required in the schema.\n\nIt seems reasonable to have the Tast hwdep code actually check the form factor is defined instead of silently failing though, so this test seems like a reasonable step forward to me. But I can abandon the CL if you\u0027d prefer.",
      "parentUuid": "348700e7_67052f37",
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc66eb0d_68cda305",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1330845
      },
      "writtenOn": "2022-08-29T15:29:52Z",
      "side": 1,
      "message": "If you can figure out how to make this hardware test actually have dependency on the hardware, then it seems fine, but hardware tests that don\u0027t require hardware at all and can be replaced by a build-time check is an anti-pattern we try to avoid.",
      "parentUuid": "14f26c1e_41252b31",
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd326872_79e6f485",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-08-22T06:50:06Z",
      "side": 1,
      "message": "Either remove the entry or use an empty array. Don\u0027t add an empty string.",
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df3f2ba6_f114b375",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-08-22T06:50:06Z",
      "side": 1,
      "message": "Is the default timeout not enough?",
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1340ac5e_96f5323b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-08-22T06:50:06Z",
      "side": 1,
      "message": "This test could cover more cases by being a table driven test to check many properties.\n\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Table_driven-tests",
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4315534d_ad3903ba",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "nit: Instead of writing the `var` keyword, just write `cmd :\u003d`",
      "range": {
        "startLine": 28,
        "startChar": 1,
        "endLine": 28,
        "endChar": 10
      },
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6ee7c72_263d342f",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "nit: I would not put a blank line here.",
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50c472ce_de7a4139",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "nit: Instead of writing the `var` keyword, just write `output, err :\u003d`",
      "range": {
        "startLine": 30,
        "startChar": 1,
        "endLine": 30,
        "endChar": 18
      },
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1376c621_95db5099",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "nit: If you use `cmd.SeparatedOutput` instead of `cmd.Output`, then you can get the output on `stderr` and include it in this error message.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 62
      },
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3abe4fd_93759cdf",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "nit: We do not write `else` when the `if` case will always exit anyway.",
      "range": {
        "startLine": 33,
        "startChar": 3,
        "endLine": 33,
        "endChar": 7
      },
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd089949_ebd0e6ac",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "nit: The return value of a shell command is an `int`. A return value of 0 indicates success. That is not what this is about; it is about output on `stdout`. You could use the word `printed`, the word `logged`, or just a vague word like `gave`.",
      "range": {
        "startLine": 34,
        "startChar": 15,
        "endLine": 34,
        "endChar": 23
      },
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33049f67_8ccfbcfd",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/form_factor.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-08-22T16:58:21Z",
      "side": 1,
      "message": "See my other code review comment about the use of the word `returned`.",
      "range": {
        "startLine": 36,
        "startChar": 12,
        "endLine": 36,
        "endChar": 20
      },
      "revId": "69599ce1289c271773c197146caec368d1d946d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "69599ce1289c271773c197146caec368d1d946d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MIN"],"failingAtoms":["label:Code-Review=MAX,user=non_uploader"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "69599ce1289c271773c197146caec368d1d946d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "69599ce1289c271773c197146caec368d1d946d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "69599ce1289c271773c197146caec368d1d946d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}