{
  "comments": [
    {
      "key": {
        "uuid": "b78bdfc1_4014da41",
        "filename": "src/chromiumos/tast/common/wifi/security/wep/config.go",
        "patchSetId": 11
      },
      "lineNbr": 6,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-04-29T23:03:12Z",
      "side": 1,
      "message": "Is there a good reason we have separate \u0027base\u0027, \u0027wep\u0027, and (next) \u0027wpa\u0027 packages, rather than just different types within the same package? Seems like we could have OpenConfig, WEPConfig, WPAConfig, etc., types just as easily. I don\u0027t think we\u0027re trying to hide much between these packages/types, are we?\n\nThis separation is probably fine too I guess. I\u0027m just wondering why the split.",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 11
      },
      "revId": "67a6cd2754d5cf811e9e806bcf1c8089c9111d6e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99e1c596_6d577a48",
        "filename": "src/chromiumos/tast/common/wifi/security/wep/config.go",
        "patchSetId": 11
      },
      "lineNbr": 6,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-04-30T02:47:12Z",
      "side": 1,
      "message": "Because if we put all (open, wpa, wep, 11x...) configs in security, we have to prefix security type name on struct and constants: e.g.\nWEPConfig, WEPConfigFactory, WEPAuthAlgoOpen, WEPAuthAlgoShared, ...\n\nAnd from the caller side it needs to type longer:\nsecConfFac: wep.NewConfigFactory(wep40Keys(), wep.DefaultKey(2), wep.AuthAlgs(wep.AuthAlgoOpen)),\nvs\nsecConfFac: security.NewWEPConfigFactory(wep40Keys(), security.WEPDefaultKey(2), security.WEPAuthAlgs(security.WEPAuthAlgoOpen)),",
      "parentUuid": "b78bdfc1_4014da41",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 11
      },
      "revId": "67a6cd2754d5cf811e9e806bcf1c8089c9111d6e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "114156fc_e3182b5d",
        "filename": "src/chromiumos/tast/common/wifi/security/wep/config.go",
        "patchSetId": 11
      },
      "lineNbr": 6,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-04-30T02:57:27Z",
      "side": 1,
      "message": "Makes sense, I guess.",
      "parentUuid": "99e1c596_6d577a48",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 11
      },
      "revId": "67a6cd2754d5cf811e9e806bcf1c8089c9111d6e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a5f4bbf_eba07a35",
        "filename": "src/chromiumos/tast/common/wifi/security/wep/config.go",
        "patchSetId": 11
      },
      "lineNbr": 43,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-04-29T23:03:12Z",
      "side": 1,
      "message": "As is (with no comments) I\u0027m a little confused about the purpose of blueprint. In its current usage, wouldn\u0027t it be a little clear to remove this state, and just keep the []Option slice here? And then Option could operate on a local Config constructed in Gen(). We\u0027d also change the type to:\n\n  type Option func(*Config)\n\ninstead of\n\n  type Option func(*ConfigFactory)\n\nOr if you do need this to stay as a \u0027blueprint\u0027 object, it\u0027d be nice to leave a comment about why. Same for the WPA package.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 17
      },
      "revId": "67a6cd2754d5cf811e9e806bcf1c8089c9111d6e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d491a8f_0448c0ea",
        "filename": "src/chromiumos/tast/common/wifi/security/wep/config.go",
        "patchSetId": 11
      },
      "lineNbr": 43,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-04-30T09:48:42Z",
      "side": 1,
      "message": "Indeed, currently both wep and wpa are not so complex so it seems that we could just keep the []Option here.\n\nThis architecture aims at dealing with the types that are derived from EAPConfig -- they accepts many options that we would like to be applied to blueprint directly, and also lots of options that should be passed back to EAPConfig. In this case we would like the options to be type of `func(*ConfigFactory)`, so the former kind of options can set the field of Config through blueprint; and the latter can append the corresponding Option to a field of ConfigFactory for the later construct of EAPConfig.\n\nDo you think we should uniform the all security type to blueprint style, or keep the simple type with simple []Option? I prefer uniforming them all, but keeping it simple is also fine to me.",
      "parentUuid": "9a5f4bbf_eba07a35",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 17
      },
      "revId": "67a6cd2754d5cf811e9e806bcf1c8089c9111d6e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d49ab21f_b52c3008",
        "filename": "src/chromiumos/tast/common/wifi/security/wep/config.go",
        "patchSetId": 11
      },
      "lineNbr": 43,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-05-01T00:26:38Z",
      "side": 1,
      "message": "Perhaps I\u0027m not being imaginative enough, but I don\u0027t really know without seeing what EAPConfig and derivatives look like. It seems a little odd to me to make one type/struct more complex just because another similar type has additional requirements. You could even stick with \u0027type Option (*ConfigFactory)\u0027, if you want to keep that consistent.\n\nThis is also OK, but I feel like this field needs a comment if it does.",
      "parentUuid": "6d491a8f_0448c0ea",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 17
      },
      "revId": "67a6cd2754d5cf811e9e806bcf1c8089c9111d6e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72ebb22e_059f3ada",
        "filename": "src/chromiumos/tast/common/wifi/security/wep/config.go",
        "patchSetId": 11
      },
      "lineNbr": 43,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-05-01T05:52:17Z",
      "side": 1,
      "message": "After the discussion, I would lean toward Brian\u0027s side. As WEP, WPA, EAP, etc., can have different implementation detail, let\u0027s keep WEP and WPA implementation as simple as possible.",
      "parentUuid": "d49ab21f_b52c3008",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 17
      },
      "revId": "67a6cd2754d5cf811e9e806bcf1c8089c9111d6e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba7ca355_c815b2fe",
        "filename": "src/chromiumos/tast/common/wifi/security/wep/config.go",
        "patchSetId": 11
      },
      "lineNbr": 148,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-04-29T23:03:12Z",
      "side": 1,
      "message": "Please document these magic numbers somehow. Maybe borrow some variant of the comments from Autotest. (Same with formatKey().)",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 18
      },
      "revId": "67a6cd2754d5cf811e9e806bcf1c8089c9111d6e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7856a9e6_d26d37be",
        "filename": "src/chromiumos/tast/common/wifi/security/wep/config.go",
        "patchSetId": 11
      },
      "lineNbr": 148,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-04-30T09:48:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba7ca355_c815b2fe",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 18
      },
      "revId": "67a6cd2754d5cf811e9e806bcf1c8089c9111d6e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}