{
  "comments": [
    {
      "key": {
        "uuid": "de8c9346_fed2bfdf",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_service.go",
        "patchSetId": 3
      },
      "lineNbr": 578,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-06-05T08:40:39Z",
      "side": 1,
      "message": "maybe also leave some logs when (err !\u003d nil \u0026\u0026 retErr !\u003d nil)?",
      "range": {
        "startLine": 578,
        "startChar": 30,
        "endLine": 578,
        "endChar": 57
      },
      "revId": "a28069263103e66a405dbe212ca346c4b4061005",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94822b47_aaccc938",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/disable_enable.go",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-06-05T08:40:39Z",
      "side": 1,
      "message": "the original one is wificell-cq + wifi_matfunc. maybe also add wificell_func?\n\nbtw, the filter for wificell-cq has !wificell_unstable, so it will not be included yet (good!)",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 54
      },
      "revId": "a28069263103e66a405dbe212ca346c4b4061005",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "614a517a_5f83a5a1",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/disable_enable.go",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-06-05T08:40:39Z",
      "side": 1,
      "message": "I think \"got %v want %v\" order is more common in golang. https://github.com/golang/go/wiki/CodeReviewComments#useful-test-failures",
      "range": {
        "startLine": 103,
        "startChar": 33,
        "endLine": 103,
        "endChar": 48
      },
      "revId": "a28069263103e66a405dbe212ca346c4b4061005",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea393fe4_02482aaf",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/disable_enable.go",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-06-05T08:40:39Z",
      "side": 1,
      "message": "same as above.",
      "range": {
        "startLine": 124,
        "startChar": 30,
        "endLine": 124,
        "endChar": 51
      },
      "revId": "a28069263103e66a405dbe212ca346c4b4061005",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93db1fd8_b68b8572",
        "filename": "src/chromiumos/tast/services/cros/network/wifi_service.proto",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-06-05T08:40:39Z",
      "side": 1,
      "message": "It is not quite easy to know the purpose of the function only by its name. (A bundle of operations customized for DisableEnable)\n\nNot sure if we should have some convention for customized gRPCs, maybe a Test suffix? e.g. DisableEnableTest (as TestBody is a little long for me. :p)\n\nWDYT, Dean@?",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 19
      },
      "revId": "a28069263103e66a405dbe212ca346c4b4061005",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}