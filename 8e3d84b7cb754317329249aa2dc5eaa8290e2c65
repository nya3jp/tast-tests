{
  "comments": [
    {
      "key": {
        "uuid": "5ae7f332_3315fff5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "Can you flesh this out a little bit about you\u0027ve added",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 61
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6329753a_86858bda",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-19T00:14:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ae7f332_3315fff5",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 61
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08655aee_51127cc8",
        "filename": "src/chromiumos/tast/local/chrome/cdputil/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "Any way to do some basic validation on this javascript? Here or in the Chrome conn",
      "range": {
        "startLine": 124,
        "startChar": 84,
        "endLine": 124,
        "endChar": 103
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6f3c657_2642fa91",
        "filename": "src/chromiumos/tast/local/chrome/cdputil/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "I am not sure what you are looking for. If it is bad javascript, Chrome won\u0027t execute it. It will just a return an error. Just like when you call eval or something similar.",
      "parentUuid": "08655aee_51127cc8",
      "range": {
        "startLine": 124,
        "startChar": 84,
        "endLine": 124,
        "endChar": 103
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de5aa394_789486d3",
        "filename": "src/chromiumos/tast/local/chrome/cdputil/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-19T22:26:10Z",
      "side": 1,
      "message": "Will the error returned be helpful? \n\nI am envisioning somebody using the framework who will type the javascript they wanna execute directly into the code without verifying it first in a CDP console. And it will take a few runs back and forth hacking stuff before they figure out the problem.",
      "parentUuid": "b6f3c657_2642fa91",
      "range": {
        "startLine": 124,
        "startChar": 84,
        "endLine": 124,
        "endChar": 103
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b135d58a_89715fdb",
        "filename": "src/chromiumos/tast/local/chrome/cdputil/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-20T19:57:35Z",
      "side": 1,
      "message": "It will give them the same error that the console would give them. I am not really sure there is a way around either knowing what you are doing or taking a few runs back and forth hacking on the js. What would we verify?\n\nAlso, if you are using this library, you won\u0027t write any js. The js is already written for you.",
      "parentUuid": "de5aa394_789486d3",
      "range": {
        "startLine": 124,
        "startChar": 84,
        "endLine": 124,
        "endChar": 103
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f5b7a44_422a387d",
        "filename": "src/chromiumos/tast/local/chrome/cdputil/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 133,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "looks like all the callers in automation.go set awaitPromise to false \n\nIf it is set to true do we need to deal with repl differently?",
      "range": {
        "startLine": 133,
        "startChar": 1,
        "endLine": 133,
        "endChar": 52
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1e5ca46_9664f700",
        "filename": "src/chromiumos/tast/local/chrome/cdputil/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 133,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "All of the current use cases of the function are not passing it a promise. If they passed a javascript promise, they would need eval promise. The processing after this point is still exactly the same.",
      "parentUuid": "8f5b7a44_422a387d",
      "range": {
        "startLine": 133,
        "startChar": 1,
        "endLine": 133,
        "endChar": 52
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472093cc_4f550716",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "Better comment",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 126,
        "endChar": 73
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24e70812_de0c96a5",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "472093cc_4f550716",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 126,
        "endChar": 73
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ede5cb7_35196340",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "Do we need this? Why not just call Eval() with the expression? Since it accepts any arbitrary JS",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 81
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3544789_c9dc3606",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "You almost never want the remote object. Eval does not return the remote object. Since we keep a reference to javascript objects, we need to return the remote object. This method is exactly like eval but returns the remote object.",
      "parentUuid": "7ede5cb7_35196340",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 81
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1897d27_8641b3ce",
        "filename": "src/chromiumos/tast/local/chrome/conn.go",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-19T22:26:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e3544789_c9dc3606",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 81
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5659f092_2ece4a6c",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "Can you give a comment that Name, Role, ClassName are \"quick attributes\"",
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3a82ee5_9a7550d1",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5659f092_2ece4a6c",
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55eb84f1_b2316f8b",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "No space",
      "range": {
        "startLine": 85,
        "startChar": 58,
        "endLine": 85,
        "endChar": 59
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67df1458_e3e02870",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55eb84f1_b2316f8b",
      "range": {
        "startLine": 85,
        "startChar": 58,
        "endLine": 85,
        "endChar": 59
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d224e1e_41cf312f",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "Does doDefault() call a click() method somewhere. Can we just call that instead of doDefault()? Will that break stuff",
      "range": {
        "startLine": 99,
        "startChar": 76,
        "endLine": 99,
        "endChar": 85
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5973372_07cc574b",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "it is LeftClick() because in the future it may change to using a mouse API. There is no guarantee that it will use doDefault().\n\nThere is an autotestPrivate mouse api already being made.",
      "parentUuid": "4d224e1e_41cf312f",
      "range": {
        "startLine": 99,
        "startChar": 76,
        "endLine": 99,
        "endChar": 85
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10f4750c_202940d0",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 174,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "Better comment",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 174,
        "endChar": 60
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3a79c88_74a21057",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 174,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "I added the details that it might also timeout and return an error.",
      "parentUuid": "10f4750c_202940d0",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 174,
        "endChar": 60
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ab40d39_3d397ec6",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 198,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "lol what is this",
      "range": {
        "startLine": 198,
        "startChar": 95,
        "endLine": 198,
        "endChar": 121
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfedb557_67afcf83",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 198,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "This is the simple way to get the subset of attributes of an object.\nex:\nwe have this object:\nperson \u003d {firstName:\u0027John\u0027, LastName:\u0027Smith\u0027, age:32}\n\nwe just want attributes firstName and age\nwe could do:\nwanted \u003d {firstName: person.firstName, age: person.age}\n\nor we could do:\nwanted \u003d (({firstName, age}) \u003d\u003e ({firstName, age}))(person)\n\nwhich means take firstName and age from the given object and return an object that contains firstName and age.\nThe second version is much cleaner to generate pragmatically.",
      "parentUuid": "4ab40d39_3d397ec6",
      "range": {
        "startLine": 198,
        "startChar": 95,
        "endLine": 198,
        "endChar": 121
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d145f7c3_75d6c2a2",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 198,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-19T22:26:10Z",
      "side": 1,
      "message": "Nice",
      "parentUuid": "dfedb557_67afcf83",
      "range": {
        "startLine": 198,
        "startChar": 95,
        "endLine": 198,
        "endChar": 121
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "220cc447_91953dd3",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 244,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "What about multiple screens here? It will all be one big output?",
      "range": {
        "startLine": 244,
        "startChar": 5,
        "endLine": 244,
        "endChar": 18
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cecd4e47_4b094981",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 244,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "Yes it will be just one big output. To query for specific screens you would need to know the name of the screen. One big output is probably more useful for debugging anyway.",
      "parentUuid": "220cc447_91953dd3",
      "range": {
        "startLine": 244,
        "startChar": 5,
        "endLine": 244,
        "endChar": 18
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bd65ed_bd04f258",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 246,
      "author": {
        "id": 1118689
      },
      "writtenOn": "2019-11-18T22:26:05Z",
      "side": 1,
      "message": "Can you reuse the root function above?",
      "range": {
        "startLine": 246,
        "startChar": 32,
        "endLine": 246,
        "endChar": 76
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0724976_5ca7ffda",
        "filename": "src/chromiumos/tast/local/chrome/ui/automation.go",
        "patchSetId": 8
      },
      "lineNbr": 246,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2019-11-18T23:34:32Z",
      "side": 1,
      "message": "It would make things less readable and I don\u0027t think it would be worth it. No need to get root in Go Node form. We just want the raw JavaScript version to be converted to a string.",
      "parentUuid": "d0bd65ed_bd04f258",
      "range": {
        "startLine": 246,
        "startChar": 32,
        "endLine": 246,
        "endChar": 76
      },
      "revId": "8e3d84b7cb754317329249aa2dc5eaa8290e2c65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}