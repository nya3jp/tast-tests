{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cc4c5c6c_2cc877fc",
        "filename": "src/chromiumos/tast/local/policyutil/fixtures/chrome.go",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-02-16T09:08:09Z",
      "side": 1,
      "message": "Hmm.\n\nI don\u0027t recommend mutating FixtData. In many tests its fields are copied to local variables, e.g.\n\n cr :\u003d s.FixtValue().(*fixtures.FixtData).Chrome\n\nIt\u0027s nice to avoid invalidating `cr` by side effects of other function calls.\n\nGenerally speaking, subtests are just a simple way to add a prefix to error messages when a test consists of several smaller cases. Subtests are not very specially treated by the framework (and it\u0027s difficult to treat them specially since subtests are generated dynamically at run time). So resetting a fixture between subtests essentially means resetting a fixture at arbitrary timing in a test. Unfortunately I don\u0027t think the framework can offer general mechanism to reset fixtures within a test.\n\nConsidering these two points together, my recommendation is either:\n\n1. Convert subtests to test parameters if we want to fall back to expensive reset (SetUp+TearDown) in case of reset failures\n2. Just call reset in each subtest without falling back to expensive reset",
      "range": {
        "startLine": 38,
        "startChar": 5,
        "endLine": 38,
        "endChar": 13
      },
      "revId": "671565b0c6dab87dca06f8e6d864e243b95e6da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a83ce4a_49ece138",
        "filename": "src/chromiumos/tast/local/policyutil/fixtures/chrome.go",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-02-16T11:40:26Z",
      "side": 1,
      "message": "We are already performing 2., but it is flaky since reset sometimes fails in the Chrome Cq.\n\n1. Might be a good way forward, but we will introduce a large number of tests in tastboard since each policy test has at least 3 params. Only the params will be different, no other test metadata will differ. Is that acceptable?",
      "parentUuid": "cc4c5c6c_2cc877fc",
      "range": {
        "startLine": 38,
        "startChar": 5,
        "endLine": 38,
        "endChar": 13
      },
      "revId": "671565b0c6dab87dca06f8e6d864e243b95e6da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f982591c_095b9aa3",
        "filename": "src/chromiumos/tast/local/policyutil/fixtures/chrome.go",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-02-17T02:18:44Z",
      "side": 1,
      "message": "I gave it another thought...\n\nWhat\u0027s the cause of reset failures? Even if we split these subtests to test parameters, if reset still fails, we have to repeat expensive setup/teardown, which would increase the test runtime drastically.\n\nActually I\u0027m now feeling like it might be not a good idea for fixtures to suppress reset errors. I filed crbug.com/1179089 to track this issue.",
      "parentUuid": "9a83ce4a_49ece138",
      "range": {
        "startLine": 38,
        "startChar": 5,
        "endLine": 38,
        "endChar": 13
      },
      "revId": "671565b0c6dab87dca06f8e6d864e243b95e6da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}