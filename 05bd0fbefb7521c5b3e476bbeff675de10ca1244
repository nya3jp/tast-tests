{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b1d083e1_9dfb56ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1451097
      },
      "writtenOn": "2022-10-25T09:25:50Z",
      "side": 1,
      "message": "LGTM, with a question",
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a91ddbea_e894ce80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1367914
      },
      "writtenOn": "2022-10-25T17:45:43Z",
      "side": 1,
      "message": "lgtm",
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "076f8453_99d74fb5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1367914
      },
      "writtenOn": "2022-10-27T09:18:54Z",
      "side": 1,
      "message": "Since we won\u0027t force the command line switch, I guess that we could remove the fixture then?",
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1fc048c_09a8cd67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1528608
      },
      "writtenOn": "2022-10-27T12:17:00Z",
      "side": 1,
      "message": "Yes, I removed it for now.",
      "parentUuid": "076f8453_99d74fb5",
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50074359_bdb3540f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1528608
      },
      "writtenOn": "2022-10-27T12:17:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1fc048c_09a8cd67",
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e229606_56563f89",
        "filename": "src/chromiumos/tast/local/chrome/fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1451097
      },
      "writtenOn": "2022-10-25T09:25:50Z",
      "side": 1,
      "message": "Question:\nWouldn\u0027t this switch be enabled anyway if we used:\n```\nExtraSoftwareDeps: []string{\"hps\"},\nExtraHardwareDeps: hwdep.D(hwdep.HPS()),\n```\n?",
      "range": {
        "startLine": 277,
        "startChar": 15,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "692ba89f_3bbaab6e",
        "filename": "src/chromiumos/tast/local/chrome/fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1367914
      },
      "writtenOn": "2022-10-25T17:45:43Z",
      "side": 1,
      "message": "I believe that the ones you listed is for Tast to select a proper device that matches those capabilities. [1] \n\nWhereas `--has-hps` is the actual command line switch that needs to be passed to Chrome. [2]\n\n\n[1]: https://crsrc.org/o/src/platform/tast/docs/test_dependencies.md;drc\u003d0970d7f97400e4c5ecea204de2e297fe862783c4;l\u003d112\n\n[2]: https://crsrc.org/c/ash/constants/ash_switches.cc;l\u003d608?q\u003dhas-hps",
      "parentUuid": "8e229606_56563f89",
      "range": {
        "startLine": 277,
        "startChar": 15,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbfb8fa3_d6adabb0",
        "filename": "src/chromiumos/tast/local/chrome/fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1528608
      },
      "writtenOn": "2022-10-26T14:43:47Z",
      "side": 1,
      "message": "I\u0027m actually not sure about this because the taeko devices (this model has HPS functionality enabled on it) that I was able to lease with the crosfleet didn\u0027t have `--has-hps` enabled on them.\n\nI think we can try to land this test without `--has-hps` flag and monitor how it will work. In case of the failures because `--has-hps` is not enabled we can just add flag.\n\nOsama, Renato what do you think?",
      "parentUuid": "692ba89f_3bbaab6e",
      "range": {
        "startLine": 277,
        "startChar": 15,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6db7824_079e74c3",
        "filename": "src/chromiumos/tast/local/chrome/fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1451097
      },
      "writtenOn": "2022-10-26T16:53:32Z",
      "side": 1,
      "message": "That\u0027s strange!\n\nI agree with your plan, let\u0027s land it without `--has-hps` instead of overriding the value of `--has-hps`.\n\nAccording to my understanding, if \"taeko\" has the HPS functionality, then it should always have `--has-hps` enabled. If we got any failures, we can file a bug to the platform side to better understand when `--has-hps` is exactly enabled.",
      "parentUuid": "dbfb8fa3_d6adabb0",
      "range": {
        "startLine": 277,
        "startChar": 15,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f49183df_5409ace1",
        "filename": "src/chromiumos/tast/local/chrome/fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1367914
      },
      "writtenOn": "2022-10-27T09:18:54Z",
      "side": 1,
      "message": "Thanks for the insight, Osama! I got confused about the `has-hps` switch.\nI agree with you that the switch should be present if the device has HPS.\n\nI guess that in my head I envisioned this subtest as something ensuring that devices with HPS do show the screen, and that skipping it takes you to the next screens. But that is something that could be done at the browser test level, since we are not actually interacting with HPS itself.\n\nIn essence it is a new test due to the parameter that was added. But I am not sure if this is the right way to accomplish this. I wonder if smokeEndToEnd should be instead adapted to perform differently depending on the hardware capabilities. If we add this parameter for `hps` and let\u0027s say in the future we add another parameter for the fingerprint sensor, we would end up with 2 different subtests. But what about devices that would have both `hps` and `fingerprint`?",
      "parentUuid": "f6db7824_079e74c3",
      "range": {
        "startLine": 277,
        "startChar": 15,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5216c1b3_087101a7",
        "filename": "src/chromiumos/tast/local/chrome/fixture.go",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1528608
      },
      "writtenOn": "2022-10-27T12:17:00Z",
      "side": 1,
      "message": "The main reason why I wanted to put HPS logic into a subtest is the fact that we could monitor subtests directly from the dashboard. But you are right that this solution is not scalable at all.\n\nI extended our test api in the crrev.com/c/3986486 and will use `shouldSkip()` to decide whether we need to do some actions on the smart privacy protection screen.\n\nTherefore, with this CL I\u0027m adding logic to actually check that we went to the HPS screen and clicked through it, rather than rely on the `LeftClickUntil()` on the assistant screen that we had previously.\n\nWhat do you think?",
      "parentUuid": "f49183df_5409ace1",
      "range": {
        "startLine": 277,
        "startChar": 15,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "05bd0fbefb7521c5b3e476bbeff675de10ca1244",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}