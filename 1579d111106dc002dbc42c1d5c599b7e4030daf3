{
  "comments": [
    {
      "key": {
        "uuid": "6686fa1f_baac0c9e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "nit: Geo ?\nhttps://moma.corp.google.com/glossary?q\u003dgeo\u0026search\u003dSearch\nsame for other GEOs in comments.\n\nIf the latters should be all capitalized, instead could you rename ...Geo... in Go code to ...GEO... to honor https://github.com/golang/go/wiki/CodeReviewComments#initialisms",
      "range": {
        "startLine": 7,
        "startChar": 54,
        "endLine": 7,
        "endChar": 57
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf5fa246_536f0593",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-08-21T18:03:01Z",
      "side": 1,
      "message": "lgtm\n\nmight as well add the same test-owner as the 1st CL now",
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "545a0d79_e4c0866f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "Initial pass.",
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08e663ae_1d60a3ae",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "How about making it 1 dBm units?\nIt looks we use 1 dBm units in other places.\nIt can be confusing when actual value is 8, String() prints 1.\n(I think using float64 is OK. As long as the value is not too big, it still holds the precise value when divided by a power of 2.)",
      "range": {
        "startLine": 47,
        "startChar": 38,
        "endLine": 47,
        "endChar": 47
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce36fe70_d871776b",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "nit: geoSARTable stores ...",
      "range": {
        "startLine": 47,
        "startChar": 3,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d57ee9a_653b6129",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "These constants are package scoped.\nHow about prefixing sar to avoid possible naming collisions in the future?",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 8
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30c2379f_c5c54f7c",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "I\u0027m not sure what is ASL, but isn\u0027t there a parser for this?\nParsing such a complex text on its own looks to be fragile.",
      "range": {
        "startLine": 127,
        "startChar": 46,
        "endLine": 127,
        "endChar": 49
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a32e4fc7_f40bdbdf",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "Nice! I think it can be a good idea to make this a unit test.\nWe can freely add unit tests to support libraries. cf. http://cs/chromeos_internal/src/platform/tast-tests-pita/src/chromiumos/tast/local/bundles/pita/pita/guest/escape_test.go?l\u003d11\u0026rcl\u003d1d91cb87b4256d8254da9c09c0fd6d21adec8dbc",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 156,
        "endChar": 3
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e39cc68_25e0095d",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 158,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "nit: err !\u003d nil\n?",
      "range": {
        "startLine": 158,
        "startChar": 4,
        "endLine": 158,
        "endChar": 17
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d37d452_64c91c1d",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "currentTable :\u003d getSARTable {\n  max2g: ...,\n  ...\n}",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 171,
        "endChar": 31
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d029e238_94e0678c",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 186,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "I think it\u0027s worth resolving now.",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 186,
        "endChar": 39
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "491f342d_9ce492c6",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 237,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "optional: errors.Errorf(\"SAR table %s not found\", tableName)\nmight read more naturally?",
      "range": {
        "startLine": 237,
        "startChar": 14,
        "endLine": 237,
        "endChar": 60
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4251e099_dad46640",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "You can use Errorf.",
      "range": {
        "startLine": 242,
        "startChar": 21,
        "endLine": 242,
        "endChar": 24
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9acf4e8e_15870ac5",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "Could you follow got, want order? \nhttps://github.com/golang/go/wiki/CodeReviewComments#useful-test-failures\n\nI\u0027d suggest the following:\nerrors.Errorf(\"table %v is malformed; got length %v, want %v\", ...)",
      "range": {
        "startLine": 242,
        "startChar": 73,
        "endLine": 242,
        "endChar": 81
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcd9bb06_376a2d47",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_check_intel_sar_table.go",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2020-08-26T09:59:51Z",
      "side": 1,
      "message": "We\u0027d like to avoid passing s to support functions if possible. Do you think the following changes make sense?\ns.Error and s.Fatal -\u003e return error and handle it in the caller (that means we don\u0027t distiguish Error and Fatal)\ns.Log -\u003e testing.ContextLog(ctx, ...)",
      "range": {
        "startLine": 257,
        "startChar": 47,
        "endLine": 257,
        "endChar": 63
      },
      "revId": "1579d111106dc002dbc42c1d5c599b7e4030daf3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}