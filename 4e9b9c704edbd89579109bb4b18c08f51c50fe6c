{
  "comments": [
    {
      "key": {
        "uuid": "172f7722_57c4c325",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/data/cca_ui.js",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-03-09T03:35:13Z",
      "side": 1,
      "message": "Hmm, can we reuse StateObserver in CCA?",
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f180c606_6ceee15b",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/data/cca_ui.js",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-03-09T04:02:29Z",
      "side": 1,
      "message": "Yes, |ConfigureObserver| is just a wrapper of |StateObserver|. I would like to group usage of |idCount|, |promiseMap| and |StateObserver| logic into a new |window.Tast.ConfigureObserver| namespace for that outside of the namespace the caller can only see |setObserver| and |waitUntilFinish|.",
      "parentUuid": "172f7722_57c4c325",
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "331e9641_dca6204d",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/data/cca_ui.js",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-03-09T06:21:54Z",
      "side": 1,
      "message": "The purpose of the id-map-to-observer design is that the whole observation process involves steps:\n1. Set observer in Tast by running JS and JS will result in an observe instance after excution.\n2. Trigger configuration in Tast e.g. call click something in tast\n3. Tast need to access the instance of JS observer in (1) to await the result and do clean up.\n\nOwing to the reason that we cannot pass JS observer instance from javascript to golang, we need to maintain an number ID mapping to the instance for step (1) and (3).",
      "parentUuid": "f180c606_6ceee15b",
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}