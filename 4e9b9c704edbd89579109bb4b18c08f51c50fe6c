{
  "comments": [
    {
      "key": {
        "uuid": "65cd8990_9539e0d1",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 2
      },
      "lineNbr": 1069,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-03-09T07:52:20Z",
      "side": 1,
      "message": "The function name does not indicate it will trigger the configuration first. How about changing the name to something like TriggerAndWaitForConfiguration() or TriggerConfigurationSynced()?",
      "range": {
        "startLine": 1069,
        "startChar": 14,
        "endLine": 1069,
        "endChar": 34
      },
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b6c388e_3221f342",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 2
      },
      "lineNbr": 1070,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-03-09T07:52:20Z",
      "side": 1,
      "message": "Do we really need to pass the observer id to Go? Since all the things happen in this method, can we use a local promise and await it after calling trigger() so that we can simplify the logic in ConfigureObserver?",
      "range": {
        "startLine": 1070,
        "startChar": 5,
        "endLine": 1070,
        "endChar": 15
      },
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec45310f_3acea5ed",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 2
      },
      "lineNbr": 1070,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-03-10T02:38:56Z",
      "side": 1,
      "message": "You can take a look at the PS3 which use a global promise instead of id map to promise. In this way, we need to be very careful about cleaning up(by restarting the app) this global promise to prevent it get used in other test run. Not sure if that\u0027s what you suggested?",
      "parentUuid": "9b6c388e_3221f342",
      "range": {
        "startLine": 1070,
        "startChar": 5,
        "endLine": 1070,
        "endChar": 15
      },
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "484a2fa9_76b964a7",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 2
      },
      "lineNbr": 1070,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-03-10T03:28:51Z",
      "side": 1,
      "message": "Actually I mean something like we did in cca.go Line 199 [1].\n\nCan we write something like:\n  \"configureCamera \u003d new Promise(...)\"\nAnd call \"trigger()\" and wait for \"configureCamera\"?\n\nThe variable name might be a problem. Maybe we can declare these variables uniformly somewhere so that we won\u0027t have variable names conflict in the codes.\n\nThere are more and more scenarios that we want to await for a promise on Go side. It will be great if we can make it easier to read and also handle the variable names gracefully.\n\n[1]: https://cs.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go?rcl\u003d16a2f5a21a16412772f7775c5b07ab0c690395aa\u0026l\u003d199",
      "parentUuid": "ec45310f_3acea5ed",
      "range": {
        "startLine": 1070,
        "startChar": 5,
        "endLine": 1070,
        "endChar": 15
      },
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "172f7722_57c4c325",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/data/cca_ui.js",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-03-09T03:35:13Z",
      "side": 1,
      "message": "Hmm, can we reuse StateObserver in CCA?",
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f180c606_6ceee15b",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/data/cca_ui.js",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-03-09T04:02:29Z",
      "side": 1,
      "message": "Yes, |ConfigureObserver| is just a wrapper of |StateObserver|. I would like to group usage of |idCount|, |promiseMap| and |StateObserver| logic into a new |window.Tast.ConfigureObserver| namespace for that outside of the namespace the caller can only see |setObserver| and |waitUntilFinish|.",
      "parentUuid": "172f7722_57c4c325",
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "331e9641_dca6204d",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/data/cca_ui.js",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-03-09T06:21:54Z",
      "side": 1,
      "message": "The purpose of the id-map-to-observer design is that the whole observation process involves steps:\n1. Set observer in Tast by running JS and JS will result in an observe instance after excution.\n2. Trigger configuration in Tast e.g. call click something in tast\n3. Tast need to access the instance of JS observer in (1) to await the result and do clean up.\n\nOwing to the reason that we cannot pass JS observer instance from javascript to golang, we need to maintain an number ID mapping to the instance for step (1) and (3).",
      "parentUuid": "f180c606_6ceee15b",
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97c89e57_b686fa0e",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/data/cca_ui.js",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-03-09T07:52:20Z",
      "side": 1,
      "message": "Please see the above comments I just left. If we don\u0027t really need id-map for waiting the configuration, I prefer removing this class and use local promise and use StateObserver directly so that we could keep it simple. WDYT?",
      "parentUuid": "331e9641_dca6204d",
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85d089c5_713f121d",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/data/cca_ui.js",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-03-10T02:38:56Z",
      "side": 1,
      "message": "IMO, the cca_ui.js start growing big. To prevent all variables for different function mixed together in this file, we at least need to create a new namespace for it. In this CL, the namespace is window.Tast.ConfigureObserver wrapping all the function for observing configuration purpose. Or we can also separate different function into different script to avoid this. WDYT?",
      "parentUuid": "97c89e57_b686fa0e",
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6135f3d4_f61b7863",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/data/cca_ui.js",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-03-10T03:28:51Z",
      "side": 1,
      "message": "What I mean is if we don\u0027t need |idcount|, |promiseMap|, maybe we don\u0027t need to make a new class but only two functions setObserver() and waitUntilFinish(). \n\nAnd yes, as you said, cca_ui.js goes bigger and I think we can start to put some effort on splitting it to a few components. We can do it in other CLs. For this CL, I think it is okay to have a new namespace for these functions.",
      "parentUuid": "85d089c5_713f121d",
      "revId": "4e9b9c704edbd89579109bb4b18c08f51c50fe6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}