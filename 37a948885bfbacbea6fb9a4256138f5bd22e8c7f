{
  "comments": [
    {
      "key": {
        "uuid": "ba9d6c14_b01937ec",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 17
      },
      "lineNbr": 71,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-11-19T15:06:51Z",
      "side": 1,
      "message": "I don\u0027t think this pattern works. Could you find my comment in the PS10 again?",
      "range": {
        "startLine": 71,
        "startChar": 35,
        "endLine": 71,
        "endChar": 49
      },
      "revId": "37a948885bfbacbea6fb9a4256138f5bd22e8c7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "361c4656_7c62b1a9",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 17
      },
      "lineNbr": 71,
      "author": {
        "id": 1313390
      },
      "writtenOn": "2019-11-19T17:27:20Z",
      "side": 1,
      "message": "I have tested both many times and this works. I have enrolled with it locally many times. To be clear here are the two I am testing:\n\nYours:\n\n    re :\u003d regexp.MustCompile(`([^@]+)\\.[^@]*$`)\n    m :\u003d strings.Replace(re.FindStringSubmatch(s), \".\", \"\", -1)\n\n\nCurrent:\n\n    r2 :\u003d regexp.MustCompile(`([^@]+)\\.[.@]*`)\n    m :\u003d strings.Replace(r2.FindString(s), \".\", \"\", -1)\n\n\nWhen I test these with the following strings:\n\n    s :\u003d \"example1@example2@managedchrome.com.com\"\n    s2 :\u003d \"normal@something.com\"\n\n\nboth return:\n\n\"managedchromecom\" and \"something\"\n\n\nBoth work. The only difference I can tell is an string (ie no @ sign), your regex will panic and bomb, mine will return an empty str. IF this is the proper behavior I will change to yours.",
      "parentUuid": "ba9d6c14_b01937ec",
      "range": {
        "startLine": 71,
        "startChar": 35,
        "endLine": 71,
        "endChar": 49
      },
      "revId": "37a948885bfbacbea6fb9a4256138f5bd22e8c7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55108796_01687b63",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 17
      },
      "lineNbr": 793,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-11-19T15:06:51Z",
      "side": 1,
      "message": "you don\u0027t need \"str\" suffix. Could you remove for simplicity?",
      "range": {
        "startLine": 793,
        "startChar": 62,
        "endLine": 793,
        "endChar": 75
      },
      "revId": "37a948885bfbacbea6fb9a4256138f5bd22e8c7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "101ba150_30845e42",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 17
      },
      "lineNbr": 793,
      "author": {
        "id": 1313390
      },
      "writtenOn": "2019-11-19T17:27:20Z",
      "side": 1,
      "message": "Then it will fight with the func userDomain() for a name. It is more clear this way (esp on line 818) what is happening.",
      "parentUuid": "55108796_01687b63",
      "range": {
        "startLine": 793,
        "startChar": 62,
        "endLine": 793,
        "endChar": 75
      },
      "revId": "37a948885bfbacbea6fb9a4256138f5bd22e8c7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}