{
  "comments": [
    {
      "key": {
        "uuid": "289131bf_17ff7641",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-04-28T10:43:34Z",
      "side": 1,
      "message": "I saw you combined them to WindowTestEventCallbacks on the other CL. Can we combine these with SET_WINDOW_CREATED_CALLBACK as well?",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "6d4812fc87ae88ebba645cabf9dd139f39e8083e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9566d715_160d66ea",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-04-28T13:54:12Z",
      "side": 1,
      "message": "Viewing from tast side, the result of |SET_ERROR_CONNECTION| is a array of |errorEvent| while |SET_WINDOW_CREATED_CALLBACK| is a promise resolved when certain event happen. I have tried combined these two into a JSObject like {onCreate: Promise, errorEvents: Array\u003c...\u003e}. JSObject seem have no way to extract promise to be further awaited [1]. Or we can go back to take old way to use a unique name across |tconn.Call| and |tconn.Exec|. Or not sure if there\u0027s a better way to do this?\n\n[1] https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/chrome/jsobject.go;l\u003d18",
      "parentUuid": "289131bf_17ff7641",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "6d4812fc87ae88ebba645cabf9dd139f39e8083e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f96995d_4456aabe",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-04-30T04:10:07Z",
      "side": 1,
      "message": "IMO, since \u0027CCAReady\u0027 is already used as a global term to store the |windowURL|, it is acceptable to do similar thing by wrapping |errorEvents| and the |windowURL| into \u0027CCAReady\u0027 (But change to another name, e.g. CCATestBridge).\nTherefore, you can retrieve the JSObject of errorEvents by returning |CCATestBridge.errorEvents| through tconn.Call() and get |windowURL| by evaluating |CCATestBridge.windowUrl| through tconn.Eval(). WDYT?",
      "parentUuid": "9566d715_160d66ea",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "6d4812fc87ae88ebba645cabf9dd139f39e8083e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "725e532f_69d06ac8",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-05-05T01:52:50Z",
      "side": 1,
      "message": "I try to send the callback together with |message| but only the JSONable field(not include callback) can be passed to CCA. Is this what you mean here? Or any other suggestion.",
      "parentUuid": "4f96995d_4456aabe",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "6d4812fc87ae88ebba645cabf9dd139f39e8083e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d103c3a_4f072e85",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-05-05T03:00:56Z",
      "side": 1,
      "message": "I mean you can use a field under window just like the way we use |CCAReady| and store them on Javascript side.\n\nFor example, you can construct the port something like:\n\n(id) \u003d\u003e {\n  window.CCATestBridge \u003d {windowUrl: new Promise(), errorEvents: []};\n  const port \u003d chrome.runtime.connect(id, {name: \u0027SET_TEST_CONNECTION\u0027});\n  port.onMessage.addListener((message) \u003d\u003e {\n    if (message.type \u003d\u003d\u003d \u0027error\u0027) {\n      window.CCATestBridge.errorEvents.push(message.event);\n    } else if (message.type \u003d\u003d\u003d \u0027launch\u0027) {\n      window.CCATestBridge.windowUrl.resolve(message.url);\n    }\n  });\n}\n\nThen you can change to evaluate |CCATestBridge.windowUrl| rather than |CCAReady|\nand get error events by returning |window.CCATestBridge.errorEvents| rather than |this|.",
      "parentUuid": "725e532f_69d06ac8",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "6d4812fc87ae88ebba645cabf9dd139f39e8083e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ac728ae_cbe80721",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-05-05T05:17:19Z",
      "side": 1,
      "message": "In this way, we move the complexity into javascript(i.e. introduced new complex and undocumented object |CCATestBridge|) for the only benefit of merging the two javascript call. I prefer current PS over this one. Or any other better way to handle this?",
      "parentUuid": "1d103c3a_4f072e85",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "6d4812fc87ae88ebba645cabf9dd139f39e8083e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02c92982_4e16a320",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-05-05T05:40:57Z",
      "side": 1,
      "message": "OK, I got your point is to combine two port into one. Agree, that this benefit is good enough to  consider using |CCATestBridge|. Will try it out in another PS.",
      "parentUuid": "4ac728ae_cbe80721",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "6d4812fc87ae88ebba645cabf9dd139f39e8083e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0837f078_57746905",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-05-05T05:49:20Z",
      "side": 1,
      "message": "IMO, it is something like the mojo interface. We usually have a mojo interface that deal with the communication between two components. When there is a new requirement, we usually consider extending the exist interface first rather than creating a new one.\n\nTBH, there are already three types of interfaces (launch, perf, error) between these 2 components. And it seems to be quite common that we want to communicate things between tests and CCA. Given that, I think we still need to have a general interface sooner or later.\n\nIf you concern about the timeline, I think maybe we can leave a TODO here instead. And we can fix it before the birth of the 4th interface.",
      "parentUuid": "4ac728ae_cbe80721",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "6d4812fc87ae88ebba645cabf9dd139f39e8083e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd51185f_e59f62a7",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-05-06T08:40:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0837f078_57746905",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "6d4812fc87ae88ebba645cabf9dd139f39e8083e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}