{
  "comments": [
    {
      "key": {
        "uuid": "51598fdc_866d7fee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-13T03:00:31Z",
      "side": 1,
      "message": "Looks very useful, thanks for adding them! :)",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 70
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c123e4a9_38bc4c85",
        "filename": "src/chromiumos/tast/local/bundles/cros/example/profiler.go",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-13T03:00:31Z",
      "side": 1,
      "message": "Hmm, now I see \"Prof\" suffix is a bit redundant. How about removing those suffixes from the definitions, i.e. profiler.Cros, profiler.Top, profiler.Vmstat?\n\nc.f. https://golang.org/doc/effective_go.html#names",
      "range": {
        "startLine": 25,
        "startChar": 43,
        "endLine": 25,
        "endChar": 100
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e69b8d9_a49361e6",
        "filename": "src/chromiumos/tast/local/bundles/cros/example/profiler.go",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1359584
      },
      "writtenOn": "2019-08-13T04:52:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c123e4a9_38bc4c85",
      "range": {
        "startLine": 25,
        "startChar": 43,
        "endLine": 25,
        "endChar": 100
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83107c96_9d3e1e59",
        "filename": "src/chromiumos/tast/local/profiler/crosperf.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-13T03:00:31Z",
      "side": 1,
      "message": "Sorry for not catching this in earlier review, but why do we call this profiler \"CrOS perf\"? IIUC \"perf\" command is Linux perf tools and has nothing in particular to do with Chrome OS.",
      "range": {
        "startLine": 17,
        "startChar": 27,
        "endLine": 17,
        "endChar": 35
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dee586cb_6aa6d393",
        "filename": "src/chromiumos/tast/local/profiler/crosperf.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1359584
      },
      "writtenOn": "2019-08-13T04:52:07Z",
      "side": 1,
      "message": "It is named crosperf because it uses the perf command that specifically suitable for running on ChromeOS DUT. In Autotest, perf profiler and cros_perf profiler are different in implementation.\ncros_perf: https://cs.corp.google.com/chromeos_public/src/third_party/autotest/files/client/profilers/cros_perf/cros_perf.py\nperf: https://cs.corp.google.com/chromeos_public/src/third_party/autotest/files/client/profilers/perf/perf.py",
      "parentUuid": "83107c96_9d3e1e59",
      "range": {
        "startLine": 17,
        "startChar": 27,
        "endLine": 17,
        "endChar": 35
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a55e256_2c18e7bb",
        "filename": "src/chromiumos/tast/local/profiler/crosperf.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-14T07:42:06Z",
      "side": 1,
      "message": "Thanks for the pointers! So we had two profiler libraries in Autotest, perf from the Autotest upstream and cros_perf from the Chrome OS team. The difference is described in cros_perf.py:\n\n This is a profiler class for the perf profiler in ChromeOS. It differs from\n the existing perf profiler in autotset by directly substituting the options\n passed to the initialize function into the \"perf\" command line. It allows one\n to specify which perf command to run and thus what type of profile to collect\n (e.g. \"perf record\" or \"perf stat\"). It also does not produce a perf report\n on the client (where there are no debug symbols) but instead copies\n the perf.data file back to the server for analysis.\n\nConsidering that Tast does not have any existing profiler support library, I think it makes sense to name crosPerf as just perf.",
      "parentUuid": "dee586cb_6aa6d393",
      "range": {
        "startLine": 17,
        "startChar": 27,
        "endLine": 17,
        "endChar": 35
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "120a8d82_4504539b",
        "filename": "src/chromiumos/tast/local/profiler/profiler.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-13T03:00:31Z",
      "side": 1,
      "message": "I think we want to name this VMStat.\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#initialisms",
      "range": {
        "startLine": 38,
        "startChar": 1,
        "endLine": 38,
        "endChar": 11
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cccf2bdb_7b201192",
        "filename": "src/chromiumos/tast/local/profiler/profiler.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1359584
      },
      "writtenOn": "2019-08-13T04:52:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "120a8d82_4504539b",
      "range": {
        "startLine": 38,
        "startChar": 1,
        "endLine": 38,
        "endChar": 11
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34389bae_0891e7c2",
        "filename": "src/chromiumos/tast/local/profiler/top.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-13T03:00:31Z",
      "side": 1,
      "message": "out must be closed on errors.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 2
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "579b855f_b24d2a28",
        "filename": "src/chromiumos/tast/local/profiler/top.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1359584
      },
      "writtenOn": "2019-08-13T04:52:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34389bae_0891e7c2",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 2
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9c78948_e954cffb",
        "filename": "src/chromiumos/tast/local/profiler/top.go",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-13T03:00:31Z",
      "side": 1,
      "message": "In this case we need to Kill and Wait cmdAwk.",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 21
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d570b5e_373840d7",
        "filename": "src/chromiumos/tast/local/profiler/top.go",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1359584
      },
      "writtenOn": "2019-08-13T04:52:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9c78948_e954cffb",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 21
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7af212b_72ea6b5c",
        "filename": "src/chromiumos/tast/local/profiler/vmstat.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-13T03:00:31Z",
      "side": 1,
      "message": "ditto: Please close out on errors",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72deca21_5be50167",
        "filename": "src/chromiumos/tast/local/profiler/vmstat.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1359584
      },
      "writtenOn": "2019-08-13T04:52:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7af212b_72ea6b5c",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "8426f991c04c5051c68f271ca839728340a02093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}