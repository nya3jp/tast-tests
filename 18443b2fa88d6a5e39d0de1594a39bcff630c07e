{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dea24575_87327468",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-15T05:58:26Z",
      "side": 1,
      "message": "LGTM % some minor comments. The design of ConfigureLogging might change depending on the usage in the next CL.",
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93c8a600_dc7429a7",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-15T05:58:26Z",
      "side": 1,
      "message": "nit: not sure if it is easier to use if we take []string here and strings.Join inside the function. (similar in other wrapping)",
      "range": {
        "startLine": 294,
        "startChar": 52,
        "endLine": 294,
        "endChar": 66
      },
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aadc9750_c4d39cbe",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-12-15T06:26:19Z",
      "side": 1,
      "message": "I second Yen-lin\u0027s opinion. As in wifi_service.proto, the field \"tags\" gives users a hint that it is an array of string. We shall treat it so.",
      "parentUuid": "93c8a600_dc7429a7",
      "range": {
        "startLine": 294,
        "startChar": 52,
        "endLine": 294,
        "endChar": 66
      },
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c61fb3b_92d417e1",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 1
      },
      "lineNbr": 299,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-15T05:58:26Z",
      "side": 1,
      "message": "nit: Similar to the nit above, not sure if it is easier to use if we strings.Split(tags, \"+\"). (similar in other related functions)",
      "range": {
        "startLine": 299,
        "startChar": 53,
        "endLine": 299,
        "endChar": 59
      },
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16449718_030432b3",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 1
      },
      "lineNbr": 299,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-15T06:00:20Z",
      "side": 1,
      "message": "I wrongly delete part of the message, should be: \"if we strings.Split(tags, \"+\") inside and return []string.\"",
      "parentUuid": "1c61fb3b_92d417e1",
      "range": {
        "startLine": 299,
        "startChar": 53,
        "endLine": 299,
        "endChar": 59
      },
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f82d8731_aa4e5c55",
        "filename": "src/chromiumos/tast/local/shill/manager.go",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-12-15T06:26:19Z",
      "side": 1,
      "message": "Feel that (Set|Get)LoggingConfig is somewhat redundant as callers can just call (Set|Get)SetDebugLevel and (Set|Get)DebugTags.",
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b00c834e_00315c4c",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 1370,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-12-15T06:26:19Z",
      "side": 1,
      "message": "Please describe more how to use it, especially the returned ctx and callback.",
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4513dd4_a2ba1ced",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 1372,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-12-15T06:26:19Z",
      "side": 1,
      "message": "If we ask the caller to give the original ctx to call the callback, we can simplify the function a bit:\n\nfunc (tf*) ConfigureLogging() () {\n  testing.ContextLogf(...)\n  ctx, cancel :\u003d ctxutil.Shorten(ctx, 2*time.Second)\n  originalLoggingConfig, err :\u003d tf.wifiClient.GetLoggingConfig(...)\n  ...\n  if _, err :\u003d tf.wifiClient.SetLoggingConfig(...) {...}\n\n  return ctx, func(ctx context.Context) {\n    cancel()\n    testing.ContextLogf(ctx, \"...\")\n    ...\n  }\n}\n\n// On caller side:\nsCtx, restoreConfig, err :\u003d tf.ConfigureLogging(ctx, level, tags)\ndefer restoreConfig(ctx)\nctx \u003d sCtx",
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "620bb4c0_7660a3ba",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 1375,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-12-15T06:26:19Z",
      "side": 1,
      "message": "Can move to the beginning so the first logging uses the passing in ctx.",
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edb81a39_faa4111b",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 1376,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-12-15T06:26:19Z",
      "side": 1,
      "message": "originalConfig",
      "range": {
        "startLine": 1376,
        "startChar": 1,
        "endLine": 1376,
        "endChar": 18
      },
      "revId": "18443b2fa88d6a5e39d0de1594a39bcff630c07e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}