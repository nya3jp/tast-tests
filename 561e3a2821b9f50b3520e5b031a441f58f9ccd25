{
  "comments": [
    {
      "key": {
        "uuid": "daf426db_c58c5520",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-28T18:19:22Z",
      "side": 1,
      "message": "thinking about this some more, the remote address that\u0027s passed to this is always going to be the same, right? if that\u0027s right, then what we really want this to look like is probably something like:\n\n  func(context.Context) (net.Conn, error)\n\nthen we could have this (similar to what you already have):\n\n  func NewServodProxy(ctx context.Context, cf ConnFunc) (*ServodProxy, error)\n\nand also this:\n\n  func NewSSHServodProxy(ctx context.Context, ssh *host.SSH, remoteAddr string) {*ServodProxy, error) {\n      // parse remoteAddr into a *net.TCPAddr, and then\n      return NewServodProxy(ctx, func(context.Context) (net.Conn, error) {\n          return ssh.DialTCP(addr)\n      })\n  }\n\ndoes that seem reasonable?\n\n(it\u0027s possible that this is premature abstraction and we should just support the second form...)",
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd837dfb_86529076",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1168241
      },
      "writtenOn": "2019-03-28T22:20:56Z",
      "side": 1,
      "message": "That sounds reasonable, it\u0027s not that big of an abstraction so I think it can be re-worked easily if needed.",
      "parentUuid": "daf426db_c58c5520",
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b829f393_562e8d15",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-28T18:19:22Z",
      "side": 1,
      "message": "i think we should probably just choose an available local port here and then make it accessible via a method on ServodProxy. otherwise, there\u0027s a race where the port passed here may no longer be available when we try to listen on it.",
      "range": {
        "startLine": 22,
        "startChar": 41,
        "endLine": 22,
        "endChar": 50
      },
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9855e86_5612ecc1",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1168241
      },
      "writtenOn": "2019-03-28T22:20:56Z",
      "side": 1,
      "message": "üëç good catch, Done",
      "parentUuid": "b829f393_562e8d15",
      "range": {
        "startLine": 22,
        "startChar": 41,
        "endLine": 22,
        "endChar": 50
      },
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d592325_8fcb98a9",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-28T18:19:22Z",
      "side": 1,
      "message": "hmm. we should probably store the listener in the proxy struct and close it in a Close method, right?",
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab9854fd_ba73cd4c",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-28T18:19:22Z",
      "side": 1,
      "message": "we probably want to continue here instead (so we don\u0027t stop listening if the  servod is temporarily unreachable)",
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f92a348_04dbaeab",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1168241
      },
      "writtenOn": "2019-03-28T22:20:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab9854fd_ba73cd4c",
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "588367d1_61c32f12",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-28T18:19:22Z",
      "side": 1,
      "message": "nit: \"local, remote net.Conn\"",
      "range": {
        "startLine": 62,
        "startChar": 21,
        "endLine": 62,
        "endChar": 52
      },
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd7f02e5_340ce3b1",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1168241
      },
      "writtenOn": "2019-03-28T22:20:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "588367d1_61c32f12",
      "range": {
        "startLine": 62,
        "startChar": 21,
        "endLine": 62,
        "endChar": 52
      },
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "666a691b_661f4d4e",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-28T18:19:22Z",
      "side": 1,
      "message": "i think we\u0027ll need to special-case EOF vs. other errors here and on L76",
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59fecdff_440a0710",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1168241
      },
      "writtenOn": "2019-03-28T22:20:56Z",
      "side": 1,
      "message": "Will do. Related: what\u0027s the best way to surface errors from goroutines? From looking for patterns of this in tast-tests it looks like just logging the error is a common way to deal with it? Is that ok here?",
      "parentUuid": "666a691b_661f4d4e",
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7729ac2d_696ca0d6",
        "filename": "src/chromiumos/tast/remote/servo/servod_proxy.go",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-28T22:52:05Z",
      "side": 1,
      "message": "yeah, this is a hard topic. :-/\n\nif a context is passed to the goroutine, then it\u0027d probably be possible to use testing.ContextLog or testing.ContextLogf to report a tast log message. note that this will only work if the context is attached to a test -- if we e.g. construct a single ServodProxy to share across tests, then that likely won\u0027t work.\n\nit\u0027s probably okay to just leave a TODO here for now. i could imagine exposing errors in some other way (e.g. via a channel), but that may not be super-critical as long as the Servod type that\u0027s trying to use this proxy is able to return an error of its own if this fails.",
      "parentUuid": "59fecdff_440a0710",
      "revId": "561e3a2821b9f50b3520e5b031a441f58f9ccd25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}