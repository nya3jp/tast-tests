{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cce6f586_12608a51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2021-04-13T02:25:05Z",
      "side": 1,
      "message": "PS7 adds timeout for WaitUnreachable.",
      "revId": "b8418cd7882b6ffae02881b5bd39b9f2271fb8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74bf515e_340da5da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1487074
      },
      "writtenOn": "2021-04-13T03:49:31Z",
      "side": 1,
      "message": "Generally looks good to me. A few more minor comments.",
      "revId": "b8418cd7882b6ffae02881b5bd39b9f2271fb8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386eff17_3cf217f3",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/mtbf.go",
        "patchSetId": 7
      },
      "lineNbr": 163,
      "author": {
        "id": 1487074
      },
      "writtenOn": "2021-04-13T03:49:31Z",
      "side": 1,
      "message": "not sure if it worths to do: Perhaps we can have the waiting in Reinit, as other tests would expect idle state before starting as well. Maybe a simple polling for SelectedService \u003d\u003d \"/\" in Reinit is enough?",
      "revId": "b8418cd7882b6ffae02881b5bd39b9f2271fb8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26da9801_f2a85554",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/mtbf.go",
        "patchSetId": 7
      },
      "lineNbr": 163,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2021-04-13T06:47:25Z",
      "side": 1,
      "message": "Good point. The test body looks much clearer now :D",
      "parentUuid": "386eff17_3cf217f3",
      "revId": "b8418cd7882b6ffae02881b5bd39b9f2271fb8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84887e71_453c1514",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/mtbf.go",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 1487074
      },
      "writtenOn": "2021-04-13T03:49:31Z",
      "side": 1,
      "message": "nit: perhaps suspendErrCh? so it is clearer that it is \"chan error\" instead of \"error\".",
      "range": {
        "startLine": 219,
        "startChar": 2,
        "endLine": 219,
        "endChar": 12
      },
      "revId": "b8418cd7882b6ffae02881b5bd39b9f2271fb8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a595842_75585e65",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/mtbf.go",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2021-04-13T06:47:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84887e71_453c1514",
      "range": {
        "startLine": 219,
        "startChar": 2,
        "endLine": 219,
        "endChar": 12
      },
      "revId": "b8418cd7882b6ffae02881b5bd39b9f2271fb8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a36cf07_426f8010",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/mtbf.go",
        "patchSetId": 7
      },
      "lineNbr": 225,
      "author": {
        "id": 1487074
      },
      "writtenOn": "2021-04-13T03:49:31Z",
      "side": 1,
      "message": "random thought: looks like we\u0027ll always want this after bgSuspend, so perhaps can be moved into bgSuspend. Then, when bgSuspend returns, DUT is guaranteed to be in unreachable state. However, bgSuspend will have to return (chan error, func(), error), which is a bit more complex.\n\nWDYT?",
      "revId": "b8418cd7882b6ffae02881b5bd39b9f2271fb8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50669f86_96171d94",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/mtbf.go",
        "patchSetId": 7
      },
      "lineNbr": 225,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2021-04-13T06:47:25Z",
      "side": 1,
      "message": "I think bgSuspend would become too complex and less readable. As it\u0027s only called twice so far, I would like to keep it as is for now.",
      "parentUuid": "6a36cf07_426f8010",
      "revId": "b8418cd7882b6ffae02881b5bd39b9f2271fb8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a9e67c1_accc7114",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/mtbf.go",
        "patchSetId": 7
      },
      "lineNbr": 225,
      "author": {
        "id": 1487074
      },
      "writtenOn": "2021-04-13T07:07:35Z",
      "side": 1,
      "message": "Ack. Perhaps we can do this when other tests also want bgSuspend and we\u0027ll have it as tf.BgSuspend.",
      "parentUuid": "50669f86_96171d94",
      "revId": "b8418cd7882b6ffae02881b5bd39b9f2271fb8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}