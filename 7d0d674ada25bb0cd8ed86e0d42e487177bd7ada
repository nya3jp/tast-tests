{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d1754f35_39dfbe7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-08-15T02:36:59Z",
      "side": 1,
      "message": "lgtm for Tast review.\nPlease obtain CR+2 from a team member who is familiar with the domain",
      "revId": "7d0d674ada25bb0cd8ed86e0d42e487177bd7ada",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc598f26_11cc1e70",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 654,
      "author": {
        "id": 1432127
      },
      "writtenOn": "2022-08-15T17:58:01Z",
      "side": 1,
      "message": "should this be an early return or should we just log error?",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 654,
        "endChar": 68
      },
      "revId": "7d0d674ada25bb0cd8ed86e0d42e487177bd7ada",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7508c8c_8569818a",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 654,
      "author": {
        "id": 1530777
      },
      "writtenOn": "2022-08-19T20:19:40Z",
      "side": 1,
      "message": "I think we should return the error, as a failed HealthCheck call indicates a need for a router reboot.\n\n```\n// HealthCheck examines if the DUT is healthy. If some tests fail to bring\n// the WiFi device back, it treats the DUT as unhealthy. Testing host needs\n// to reboot the DUT to refrain it from affecting the following tests.\n```\n\nIf this is called during Reset it will cause Reset to fail and then the test lifecycle actions will trigger a reboot.\n\nIf this is called from within a test we can\u0027t fix it and it should cause a test failure. Then after the test Reset is called, calling this function again likely resulting in another failure that can be recovered from before moving onto the next test.",
      "parentUuid": "bc598f26_11cc1e70",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 654,
        "endChar": 68
      },
      "revId": "7d0d674ada25bb0cd8ed86e0d42e487177bd7ada",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "7d0d674ada25bb0cd8ed86e0d42e487177bd7ada",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "7d0d674ada25bb0cd8ed86e0d42e487177bd7ada",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7d0d674ada25bb0cd8ed86e0d42e487177bd7ada",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "7d0d674ada25bb0cd8ed86e0d42e487177bd7ada",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}