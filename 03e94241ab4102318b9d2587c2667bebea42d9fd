{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ea41cc21_4bb80670",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2021-09-30T00:58:03Z",
      "side": 1,
      "message": "\u003e \"accessable\" is a possible misspelling of \"accessible\".\n\nPlease fix.",
      "parentUuid": "a9d24cd6_55213f67",
      "range": {
        "startLine": 57,
        "startChar": 94,
        "endLine": 57,
        "endChar": 104
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c0ca19c_adad9cca",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-09-30T06:52:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea41cc21_4bb80670",
      "range": {
        "startLine": 57,
        "startChar": 94,
        "endLine": 57,
        "endChar": 104
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a4dd254_5b48dda2",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2021-09-30T00:58:03Z",
      "side": 1,
      "message": "\u003e \"accessable\" is a possible misspelling of \"accessible\".\n\nPlease fix.",
      "parentUuid": "ca64671e_7b54c4a0",
      "range": {
        "startLine": 59,
        "startChar": 90,
        "endLine": 59,
        "endChar": 100
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81f54b05_4cbe5dbf",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-09-30T06:52:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a4dd254_5b48dda2",
      "range": {
        "startLine": 59,
        "startChar": 90,
        "endLine": 59,
        "endChar": 100
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b514776e_7276ea51",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2021-09-30T14:17:23Z",
      "side": 1,
      "message": "If strictViewability always implies moderateViewability, then this should probably be a single enum with three values, rather than two bools",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 29
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0f3bf55_5c31806d",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-10-01T08:21:50Z",
      "side": 1,
      "message": "Making this change would make the code longer, and less readable.\nAlthough with the current implementation it is possible to set incorrect (true, false) values, it is not a risk, as it fails at the first test run, and cannot stay hidden.",
      "parentUuid": "b514776e_7276ea51",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 29
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a83950a_21050335",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2021-10-01T14:18:27Z",
      "side": 1,
      "message": "I disagree. One of the reasons we use types is to restrict the value space to exclude incoherent states, and it might be confusing for readers or later authors who see two booleans and expect them to be independent. I also don\u0027t see how the code would become longer; testRestrictedMode would take one argument instead of two, and you would check for how the expected level compares to the restriction level of the video.",
      "parentUuid": "e0f3bf55_5c31806d",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 29
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd286b8a_4489a00f",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-10-04T12:45:17Z",
      "side": 1,
      "message": "Eric, I am fan of restricting value space for variables. However there is important change that was done here - the previous implementation had a logic or deriving values of expectedModerateViewability and expectedStrictViewability (lines 98-108) from the policy value. That is discouraged in the test - the test should not be calculating expected values. For readability reason expected values should be known and statically set for the test.\n\nIf we use enum, in the case the one that will hold mixed case (moderate false, strict false) test will have to find out which video is restricted moderately and which one strictly.\n\nIMHO, I am fine with having booleans here.\n\nWDYT Eric?",
      "parentUuid": "1a83950a_21050335",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 29
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "037affad_55e9e401",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2021-10-04T13:09:45Z",
      "side": 1,
      "message": "I wasn\u0027t suggesting deriving those values from the policy value as that indeed forced there to be a lot of extra boilerplate and was not helpful. In this circumstance we would still be keeping those things separate, and the expectations should still be simple to understand with proper naming (i.e. \"AllBlocked, StrictOnly, AllAllowed\", or something like that). I only bring this up because this actually felt hard for me to read when I first looked at it.\n\nTo be honest, the fact that the sub-test labeled \"strict\" blocks everything, and \"moderate\" allows strict content but not moderate content is probably a big reason why this ended up being confusing for me, but I\u0027m not actually sure that has anything to do with the test authors here -- that appears to be because of the way the policy itself works. Not sure what that\u0027s about.\n\nIf you still feel strongly about this, then go ahead and push it -- Kamil has OWNERs and already approved it.",
      "parentUuid": "cd286b8a_4489a00f",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 29
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6c51036_39ab689f",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-10-04T13:36:02Z",
      "side": 1,
      "message": "\u003e\u003e To be honest, the fact that the sub-test labeled \"strict\" blocks everything, and \"moderate\" allows strict content but not moderate content is probably a big reason why this ended up being confusing for me, but I\u0027m not actually sure that has anything to do with the test authors here -- that appears to be because of the way the policy itself works. Not sure what that\u0027s about.\n\nThat is actually a good point. I needed to run the test to see which video is restricted when.\nMaybe we could comment on the moderate case why moderate is false and strict is true?\n\nOr change the isYouTubeContentViewable to isYouTubeContentRestricted and change the return statement to \nmessage !\u003d \"\", nil\n\nThen flip all those booleans in parameters so we will have:\n\nname:                \"disabled\",\nmoderateViewability: false,\nstrictViewability:   false,\n\nname:                \"moderate\",\nmoderateViewability: true,\nstrictViewability:   false,\n\nname:                \"strict\",\nmoderateViewability: true,\nstrictViewability:   true,\n\nname:                \"unset\",\nmoderateViewability: false,\nstrictViewability:   false,\n\nHow does it sound?",
      "parentUuid": "037affad_55e9e401",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 29
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "732b46c9_55617717",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2021-10-04T14:03:37Z",
      "side": 1,
      "message": "I think we\u0027d have to rename the booleans from \"viewability\" since we now represent the opposite of that, but this is honestly much easier to reason about, I think.\n\nEither way, clearing that up would make things a lot better. I had suggested the enum partially because it would explain the expectations; otherwise, I was intuiting that the test cases just had the wrong expectations, but that\u0027s obviously not the case because they pass.",
      "parentUuid": "e6c51036_39ab689f",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 29
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1af64b73_99957a15",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/force_you_tube_restrict.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-10-07T13:14:07Z",
      "side": 1,
      "message": "I reworked this part, PTAL.\nI got confused countless times during this, so I ended up using quite long variable names. I think these are needed here :)",
      "parentUuid": "732b46c9_55617717",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 29
      },
      "revId": "03e94241ab4102318b9d2587c2667bebea42d9fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}