{
  "comments": [
    {
      "key": {
        "uuid": "c882a3fb_619a90c3",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/shill_init_scripts.go",
        "patchSetId": 11
      },
      "lineNbr": 727,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-01-07T02:15:31Z",
      "side": 1,
      "message": "nit: typo",
      "range": {
        "startLine": 727,
        "startChar": 43,
        "endLine": 727,
        "endChar": 51
      },
      "revId": "b133a286872303bae398729276ae5b740fd3330a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b5c7eba_907434ae",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/shill_init_scripts.go",
        "patchSetId": 11
      },
      "lineNbr": 811,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-01-07T02:15:31Z",
      "side": 1,
      "message": "Hmm..., I think this means no related method call should be found in dbus-monitor?\nIf so, sorry that I forgot we also had to fail on unexpected method calls when writing the example in the previous comment.\n\nI guess adding back the whitelist filter ([]string{createUserProfile, insertUserProfile, popAllUserProfiles} ?) and emit error on not matching any expectedCalls in dbusEventMonitor might work somehow? e.g.\n\n  for scanner.Scan() {\n    line :\u003d scanner.Text()\n    if !inWhitelist(line) {\n      continue\n    }\n    match :\u003d false\n    for i, c :\u003d range expectedCalls {\n      if strings.Contains(line, c) {\n        expectedCalls \u003d append(expectedCalls[0:i], expectedCalls[i+1:]...)\n        match \u003d true\n        break\n      }\n    }\n    if !match {\n      ch \u003c- errors.New(\"unexpected call\")\n      return\n    }\n    ...\n  }",
      "revId": "b133a286872303bae398729276ae5b740fd3330a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}