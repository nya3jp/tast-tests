{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "03f6cb3b_f693b539",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 223,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T07:10:45Z",
      "side": 1,
      "message": "nit: not useful\n\nthe json itself is saved at the end of each test",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed4b6766_12ce8254",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 223,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:19:04Z",
      "side": 1,
      "message": "I disagree. This logs each time policy blob is written, which includes all intermediate versions of the blob. The test added in this example changes extension policies during the test, so debugging is hard unless you actually keep all copies of the file and not just the final version.",
      "parentUuid": "03f6cb3b_f693b539",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a236f1f_10dd931f",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 223,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T11:40:38Z",
      "side": 1,
      "message": "It makes the log spammy.\n\nTast logs are designed for human consumption. A better alternative would be to dump the content in a new file in the output directory every time it is written.",
      "parentUuid": "ed4b6766_12ce8254",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e09b34ab_b1e5f421",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 223,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-06T14:30:41Z",
      "side": 1,
      "message": "IMHO logs are supposed to be spammy: otherwise they become useless for investigation. Moving stuff to other files does not make logs less spammy, it just adds an unnecessary step to find them. Regarding human consumption - IMHO policy blobs are rather short and can be easily read by humans.",
      "parentUuid": "3a236f1f_10dd931f",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b585918f_ce5c5c47",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 228,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T07:10:45Z",
      "side": 1,
      "message": "nit: move this into a separate function and call it here.",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63d2c73f_06fce0ca",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 228,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:19:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b585918f_ce5c5c47",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b22e07a2_3fa2dcc7",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T07:10:45Z",
      "side": 1,
      "message": "Make this a global, WritePolicyBlob is called quite often",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71aeea16_d2544854",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:19:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b22e07a2_3fa2dcc7",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f12a6eb5_33aeb9bf",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T07:10:45Z",
      "side": 1,
      "message": "nit: not useful\n\nMake sure to copy the extension policies at the end of tests as well.",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93c082f3_c333bd78",
        "filename": "src/chromiumos/tast/common/policy/fakedms/fakedms.go",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:19:04Z",
      "side": 1,
      "message": "Same as for policy.json above.",
      "parentUuid": "f12a6eb5_33aeb9bf",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dd71d7f_02dac429",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2022-04-30T02:12:37Z",
      "side": 1,
      "message": "Maybe call it \"ExtensionPoliciesMGS\", to reflect it\u0027s only testing it in Managed Guest Sessions?\n\nWe\u0027ll add similar tests for other types of user sessions in the future; they\u0027ll need to be separate tests, since they\u0027ll need different fixtures.",
      "range": {
        "startLine": 25,
        "startChar": 16,
        "endLine": 25,
        "endChar": 33
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "530d5cb1_bdcb9ec6",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:19:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dd71d7f_02dac429",
      "range": {
        "startLine": 25,
        "startChar": 16,
        "endLine": 25,
        "endChar": 33
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f48451e_e5da257d",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2022-04-30T02:12:37Z",
      "side": 1,
      "message": "FWIW it doesn\u0027t compile for me locally, complaining on a name collision with a constant from the extension_install_policy_check.go file. So I guess we need to rename it?",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 12
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3469a2c_755088c6",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:19:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f48451e_e5da257d",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 12
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbd96dad_4faa5700",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T07:10:45Z",
      "side": 1,
      "message": "You can avoid installing the extension by providing a local one. My WIP test for extension policy:\n\nhttps://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/3250710",
      "range": {
        "startLine": 47,
        "startChar": 5,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78fc5459_8037f152",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:19:04Z",
      "side": 1,
      "message": "That would definitely make this test more stable, but it would make it close to an integration test, whilst I was aiming of it becoming E2E test at some point (added a TODO to make this more clear). This is because it is intended to replace a manual test and we ought to be testing that everything works as expected including the downloading of an extension, application of policies etc.",
      "parentUuid": "dbd96dad_4faa5700",
      "range": {
        "startLine": 47,
        "startChar": 5,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1acc51fe_0c885e72",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T11:40:38Z",
      "side": 1,
      "message": "Downloading from the WebStore might require a valid GAIA id. Is the test working as is?",
      "parentUuid": "78fc5459_8037f152",
      "range": {
        "startLine": 47,
        "startChar": 5,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f7e8ba3_2bfe213b",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-06T14:30:41Z",
      "side": 1,
      "message": "Public accounts do not have GAIA ID by definition, so I suppose there is some workaround in Chrome that allows extensions to be downloaded despite this.\n\nUnfortunately, it appears unpacked extensions are not supported in public sessions: https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/chromeos/extensions/device_local_account_management_policy_provider.cc;l\u003d832-880;drc\u003d91148c1c1e318eb5e5a4b9340fe59e036a3ed15f.",
      "parentUuid": "1acc51fe_0c885e72",
      "range": {
        "startLine": 47,
        "startChar": 5,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23c3390a_4655c501",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-06T14:34:35Z",
      "side": 1,
      "message": "Unresolving, since the test is broken as it is now. In the code above, there is an exception for force-installed extensions, but if I try to add local extension into the ExtensionInstallForcelist, Chrome fails to install extension and occasionally crashes when logging into the public account.\n\nI have analyzed the above error a bit and came to a conclusion that Chrome tries to fetch extension update information from Chrome Web Store, but fails to do so since generated ID is not known to the server. ExtensionInstallForcelist does allow to specify an alternative update_url, so I am going to explore this option further. This, however, means that we\u0027ll need to host the update manifest and extension correctly, e.g. it will have to be packaged into a crx format.",
      "parentUuid": "1f7e8ba3_2bfe213b",
      "range": {
        "startLine": 47,
        "startChar": 5,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c6bfaba_1ecb48fb",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1126309
      },
      "writtenOn": "2022-04-30T02:12:37Z",
      "side": 1,
      "message": "FWIW it doesn\u0027t compile for me locally - looks like the expression needs to be wrapped into json.RawMessage:\n\n  cannot use fmt.Sprintf(extensionPolicyTemplate, defaultProxyServerURL) (type string) as type json.RawMessage in assignment",
      "range": {
        "startLine": 51,
        "startChar": 31,
        "endLine": 51,
        "endChar": 90
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f70fb8b6_222344f3",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:19:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c6bfaba_1ecb48fb",
      "range": {
        "startLine": 51,
        "startChar": 31,
        "endLine": 51,
        "endChar": 90
      },
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "427f3c85_451db6e0",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T07:10:45Z",
      "side": 1,
      "message": "Use the extension js API to check if policy was applied correctly. It will be much more maintainable than UI interactions.\n\nhttps://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/3250710",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a13b75a_3c230ca4",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:19:04Z",
      "side": 1,
      "message": "Similar to the argument about making extension locally, I would like to keep this test as close to what users experience as possible and make it E2E at some point.",
      "parentUuid": "427f3c85_451db6e0",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0719996_11d139e6",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T11:40:38Z",
      "side": 1,
      "message": "The js API is E2E, it is the API the extension calls to get policy values, not a testing one.",
      "parentUuid": "2a13b75a_3c230ca4",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a19ed8c2_48f43de7",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/extension_policies.go",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-06T14:30:41Z",
      "side": 1,
      "message": "I suppose that depends on who we consider our user: end user or extension author. The end users do not call any APIs: they just use extensions and expect them to work. The extension authors do and expect those APIs to work.\n\nMy reasoning was that by testing for end users we\u0027d also test for extension authors. OTH that would also require testing extensions that real users use and not some test extensions. But, given that we neither own nor can fix bugs in extension code, it is probably fine to only test for extension authors.",
      "parentUuid": "b0719996_11d139e6",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51b5d926_b969fd87",
        "filename": "src/chromiumos/tast/local/mgs/options.go",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-05-02T07:10:45Z",
      "side": 1,
      "message": "@Kamil: Is this going to break anything for mgs?",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c92bb01_9659d646",
        "filename": "src/chromiumos/tast/local/mgs/options.go",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-05-02T11:20:07Z",
      "side": 1,
      "message": "Why would it? It could only break new tests that are using this feature.",
      "parentUuid": "51b5d926_b969fd87",
      "revId": "c3f75b770f1dd78288a428ecb8a719801008caf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}