{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f421cae3_6dfe1b91",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-06-30T09:19:43Z",
      "side": 1,
      "message": "Moving myself to cc.\n",
      "revId": "a1540601669fdd0e3d9f2f6740bc8a41883151d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae90760a_f9ba24f0",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/everydaymultitaskingcuj/everyday_multi_tasking_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-06-30T22:44:12Z",
      "side": 1,
      "message": "if closing UI is a dependency to dump UI hierarchy, why do not you move it into the dump function? Also the function name should be changed to something like CloseARCAndDumpUI, so it is self explained.",
      "range": {
        "startLine": 101,
        "startChar": 1,
        "endLine": 108,
        "endChar": 35
      },
      "revId": "a1540601669fdd0e3d9f2f6740bc8a41883151d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71ca610f_e7889bc7",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/everydaymultitaskingcuj/everyday_multi_tasking_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-06-30T23:52:11Z",
      "side": 1,
      "message": "Hi Jun, the closeArcUIDevice function here makes sure that if the test fails before we reaching the dump function, it can still be called to close the UI device.\n\nBut if we have reached the dump function, the dump function will close the UI device and dump UI. So this function ensures device won\u0027t be closed twice.\n\nIf we just call the d.Close(ctx) inside the dump function, the device will be kept open if error happens before reaching the dump function.\n\nOr do I miss your point?",
      "parentUuid": "ae90760a_f9ba24f0",
      "range": {
        "startLine": 101,
        "startChar": 1,
        "endLine": 108,
        "endChar": 35
      },
      "revId": "a1540601669fdd0e3d9f2f6740bc8a41883151d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6afd018f_e5213d4e",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/everydaymultitaskingcuj/everyday_multi_tasking_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-07-01T00:08:19Z",
      "side": 1,
      "message": "IIUC, you just need to do below:\n\nd, err :\u003d a.NewUIDevice(ctx)\nif err !\u003d nil {\n    ..\n}\ndefer closeArcUIAndDumpOnError(cleanCtx, func(){ return retErr !\u003d nil})\n\n// arc ui package\nfunc closeArcUIAndDumpOnError(d, hasError func() bool){\n    d.Close(ctx)\n    d \u003d nil\n    a.DumpUIHierarchyOnError(ctx, outDir, hasError)\n}",
      "parentUuid": "71ca610f_e7889bc7",
      "range": {
        "startLine": 101,
        "startChar": 1,
        "endLine": 108,
        "endChar": 35
      },
      "revId": "a1540601669fdd0e3d9f2f6740bc8a41883151d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4506a1c_a731f3a4",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/everydaymultitaskingcuj/everyday_multi_tasking_cuj.go",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1400377
      },
      "writtenOn": "2021-07-02T21:37:21Z",
      "side": 1,
      "message": "I\u0027ve moved the arc UI tree dump into spotify, and the arc device \"d\" is managed by spotify, too. This is similar with what you proposed to have a closeArcUIAndDumpOnError() function, but just do it in spotify.Close().\n\nThe reason to let spotify.Close to manage it is - we need to follow this procedure so potify UI can be dumped:\n- d.Close\n- dump UI\n- close Spotify.\n\nWith this in spotify.Close(), we just defer spotify.Close() in the main logic, which is clean.",
      "parentUuid": "6afd018f_e5213d4e",
      "range": {
        "startLine": 101,
        "startChar": 1,
        "endLine": 108,
        "endChar": 35
      },
      "revId": "a1540601669fdd0e3d9f2f6740bc8a41883151d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}