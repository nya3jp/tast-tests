{
  "comments": [
    {
      "key": {
        "uuid": "7f03b0e4_ceef4af7",
        "filename": "src/chromiumos/tast/local/chrome/pre.go",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-24T06:39:52Z",
      "side": 1,
      "message": "Thanks for this detailed description! It would be great to have this in LoggedIn rather than here because it\u0027s the function users will call.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 92
      },
      "revId": "7720707222ce924f990ff844b887e2d315d269d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2255fd1a_ce1fb866",
        "filename": "src/chromiumos/tast/local/chrome/pre.go",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-24T12:41:18Z",
      "side": 1,
      "message": "sure, i\u0027ve moved this (and also shortened it a bit, because i think that the test registration example was overly verbose).",
      "parentUuid": "7f03b0e4_ceef4af7",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 92
      },
      "revId": "7720707222ce924f990ff844b887e2d315d269d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83d8aba6_c6791381",
        "filename": "src/chromiumos/tast/local/chrome/pre.go",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-24T04:56:48Z",
      "side": 1,
      "message": "please let me know if you can think of a better name for this type. i\u0027m worried that it\u0027s easy to confuse with testing.Precondition.\n\nif we think it\u0027s unlikely that anything else will need to be exposed here in the future, it would even be possible for Prepare to return a *chrome.Chrome. then tests just need to do this:\n\n  cr :\u003d s.Pre().(*chrome.Chrome)\n\ni suspect that any arc conditions will want to expose both arc and chrome objects, though, so this approach probably won\u0027t work there.",
      "range": {
        "startLine": 37,
        "startChar": 5,
        "endLine": 37,
        "endChar": 8
      },
      "revId": "7720707222ce924f990ff844b887e2d315d269d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1090e079_0e1fce27",
        "filename": "src/chromiumos/tast/local/chrome/pre.go",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-24T06:39:52Z",
      "side": 1,
      "message": "Making s.Pre() return chrome.Chrome sounds good to me.\n\nOn creating ARC preconditions it is unlikely we\u0027ll reuse LoggedIn precondition directly (for the time being), so we may not need to care about it...",
      "parentUuid": "83d8aba6_c6791381",
      "range": {
        "startLine": 37,
        "startChar": 5,
        "endLine": 37,
        "endChar": 8
      },
      "revId": "7720707222ce924f990ff844b887e2d315d269d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c24751a5_4039f29a",
        "filename": "src/chromiumos/tast/local/chrome/pre.go",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-24T12:41:18Z",
      "side": 1,
      "message": "okay, i\u0027ve removed this type and just made Prepare return a *chrome.Chrome. this feels much cleaner to me.\n\nre ARC preconditions, my concern wasn\u0027t around making them depend on this precondition, but rather on ARC preconditions needing to expose both *arc.ARC and *chrome.Chrome values to tests. as such, Prepare methods there will likely need to return a struct containing both of these:\n\n  type SomeName struct {\n    a  *ARC\n    cr *chrome.Chrome\n  }\n\nthat is, unless we add some way to get a *chrome.Chrome from an arc.ARC.",
      "parentUuid": "1090e079_0e1fce27",
      "range": {
        "startLine": 37,
        "startChar": 5,
        "endLine": 37,
        "endChar": 8
      },
      "revId": "7720707222ce924f990ff844b887e2d315d269d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f6d5160_df9a9c05",
        "filename": "src/chromiumos/tast/local/chrome/pre.go",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-25T09:05:10Z",
      "side": 1,
      "message": "I see, I misunderstood your comment... Yes, for ARC preconditions we will need to define another type for providing the two types.",
      "parentUuid": "c24751a5_4039f29a",
      "range": {
        "startLine": 37,
        "startChar": 5,
        "endLine": 37,
        "endChar": 8
      },
      "revId": "7720707222ce924f990ff844b887e2d315d269d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00e4535e_17b12ec3",
        "filename": "src/chromiumos/tast/local/chrome/pre.go",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-24T04:56:48Z",
      "side": 1,
      "message": "i\u0027m happy about being able to use the same type to implement both Precondition and preconditionImpl, as i had a hard time coming up with names otherwise.",
      "revId": "7720707222ce924f990ff844b887e2d315d269d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}