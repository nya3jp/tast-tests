{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "087eab27_698e0841",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_accent.go",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-04-15T08:34:58Z",
      "side": 1,
      "message": "IIUC, so far all fixtures reboot Chrome by default. Do you want to add Reset to the fixture name to make it explicit? Otherwise when you start to share fixtures it can be confusing.",
      "range": {
        "startLine": 54,
        "startChar": 23,
        "endLine": 54,
        "endChar": 40
      },
      "revId": "d72cffe28cb3a5839b06f55ddd4a9bfd3554f97f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2a8e0c2_74715555",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_accent.go",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-04-18T07:31:05Z",
      "side": 1,
      "message": "No, these fixtures do not reboot the Chrome session. Surprisingly, these tests seem to work fine with these fixtures on my local DUT, but I need to verify this on some other boards.",
      "parentUuid": "087eab27_698e0841",
      "range": {
        "startLine": 54,
        "startChar": 23,
        "endLine": 54,
        "endChar": 40
      },
      "revId": "d72cffe28cb3a5839b06f55ddd4a9bfd3554f97f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e5b6499_695b7763",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_accent.go",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-04-18T10:01:47Z",
      "side": 1,
      "message": "It is highly recommended to reboot Chrome at the moment. Let\u0027s make precondition -\u003e fixture migration separate to sharing Chrome instance. \n\ne.g. AutoCorrection stops work after 1-2 times learning.",
      "parentUuid": "a2a8e0c2_74715555",
      "range": {
        "startLine": 54,
        "startChar": 23,
        "endLine": 54,
        "endChar": 40
      },
      "revId": "d72cffe28cb3a5839b06f55ddd4a9bfd3554f97f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "364f6381_0a265beb",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_accent.go",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-04-18T21:34:24Z",
      "side": 1,
      "message": "Since the tests using the fixtures are all informational (we still have the precondition ones in CQ), there is no need to add a reboot if they are stable (they are on my DUT). Plus, I am just migrating the stateless tests in this CL (i.e., AutoCorrection is not included here), which is also why I am not using `XXXReset` fixtures.\n\nSince they are all informational, we can adjust them accordingly later, WDYT?",
      "parentUuid": "8e5b6499_695b7763",
      "range": {
        "startLine": 54,
        "startChar": 23,
        "endLine": 54,
        "endChar": 40
      },
      "revId": "d72cffe28cb3a5839b06f55ddd4a9bfd3554f97f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8d8a580_3c4a312f",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_accent.go",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-04-18T23:39:38Z",
      "side": 1,
      "message": "SG.",
      "parentUuid": "364f6381_0a265beb",
      "range": {
        "startLine": 54,
        "startChar": 23,
        "endLine": 54,
        "endChar": 40
      },
      "revId": "d72cffe28cb3a5839b06f55ddd4a9bfd3554f97f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb455064_db11f434",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_accent.go",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-04-15T08:34:58Z",
      "side": 1,
      "message": "cr, tconn, uc are mostly used. It would be nice to shorten this block as below:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dfixture.go\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n(fixture.FixtData fixtData) Data() (*chrome.Chrome, *chrome.TestConn, *useractions.UserContext){\n    return fixtData.Chrome, fixtData.TestAPIConn, fixtData.UserContext\n}\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dfixture.go\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dtest.go\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\ncr, tconn, uc :\u003d s.FixtValue().(fixture.FixtData).Data();\n\nMoreover, Chrome, TestAPIConn, UserContext can be renamed to private attributes.",
      "range": {
        "startLine": 66,
        "startChar": 1,
        "endLine": 75,
        "endChar": 2
      },
      "revId": "d72cffe28cb3a5839b06f55ddd4a9bfd3554f97f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0253703_2252e1df",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_accent.go",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-04-18T07:31:05Z",
      "side": 1,
      "message": "That\u0027s probably not a good idea. The major issue is that it is not easy to extend for future changes. For example, assume `Data()` that returned `cr` and `tconn` by `cr, tconn :\u003d ...Data()` before you introduced `uc`. Then when `uc` is introduced, you need to either: 1, add `uc` to `Data()`, then every test script will be affected from changing `cr, tconn :\u003d ...Data()` to `cr, tconn, _ :\u003d ...Data()` to keep backward-compatibility; or 2, introduce another method `DataWithUC()` that returns `cr, tconn, uc`, which adds more complexity. \n\nIMHO, I don\u0027t think it is worthy to create one getter function of multiple fields, just to simplify the code like this.",
      "parentUuid": "eb455064_db11f434",
      "range": {
        "startLine": 66,
        "startChar": 1,
        "endLine": 75,
        "endChar": 2
      },
      "revId": "d72cffe28cb3a5839b06f55ddd4a9bfd3554f97f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a291818_b8ad4c29",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_accent.go",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-04-18T10:01:47Z",
      "side": 1,
      "message": "It sounds a fair point. Let us leave this conversation later.",
      "parentUuid": "e0253703_2252e1df",
      "range": {
        "startLine": 66,
        "startChar": 1,
        "endLine": 75,
        "endChar": 2
      },
      "revId": "d72cffe28cb3a5839b06f55ddd4a9bfd3554f97f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}