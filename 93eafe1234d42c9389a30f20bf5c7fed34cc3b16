{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cc4365bb_d3f5e00a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-14T12:30:42Z",
      "side": 1,
      "message": "I\u0027d introduce more functions to the service for starting/stopping Chrome. We don\u0027t need to do everyting in EnrollUsingChrome.",
      "revId": "93eafe1234d42c9389a30f20bf5c7fed34cc3b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d053f65_13290aa8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2021-09-15T08:28:26Z",
      "side": 1,
      "message": "Moving myself to CC as there are much more competent reviewers around golang, tast and fixtures in the list :-) ",
      "revId": "93eafe1234d42c9389a30f20bf5c7fed34cc3b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6cea19d_26ae8bbb",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policy_service.go",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-14T12:30:42Z",
      "side": 1,
      "message": "The name of the function is EnrollUsingChrome, not performing enrollment is very unintuitive.",
      "revId": "93eafe1234d42c9389a30f20bf5c7fed34cc3b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e356be60_4e0c2cbd",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policy_service.go",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2021-09-14T16:44:19Z",
      "side": 1,
      "message": "I\u0027m not familiar with Enterprise enrollment flow. Instead of this approach, do you have recommendation? How about having two shims EnrollUsingChrome() and KeepEnrollmentChrome() which actually calls enrollChromeImpl(), which is the current EnrollUsingChrome().",
      "parentUuid": "d6cea19d_26ae8bbb",
      "revId": "93eafe1234d42c9389a30f20bf5c7fed34cc3b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d16c188_204737d9",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policy_service.go",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-15T07:54:08Z",
      "side": 1,
      "message": "We can add more functions to this service to just start/stop Chrome with KeepEnrollment . No other tests currently need them, that\u0027s why they don\u0027t yet exist.\n\nAlternatively a separate service could be used for the wifi test. The policy service would perform enrollment and the new service will handle the test specific logic.\n\nThe option you are proposing is still unintuitive. If you pass KeepEnrollment to chrome, it will *not* perform enrollment. Having this in a EnrollUsingChrome function is confusing. I\u0027d avoid having this function do everything (it might already be doing too much) and split it up.",
      "parentUuid": "e356be60_4e0c2cbd",
      "revId": "93eafe1234d42c9389a30f20bf5c7fed34cc3b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "770daa95_e1e838b7",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/policy_service.go",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1405522
      },
      "writtenOn": "2021-09-15T08:00:55Z",
      "side": 1,
      "message": "Thanks for the suggestion. I will create a new function in policy_service.go to start/stop Chrome (which could also accept options like KeepEnrollment and DeferLogin) and avoid reusing EnrollUsingChrome which cause confusion.\n\nBTW, I was trying to create a composite fixture with wificellFixt and enrolled. Looks like both of them are remote fixtures and current Tast framework does not allow nesting two remote fixtures.",
      "parentUuid": "4d16c188_204737d9",
      "revId": "93eafe1234d42c9389a30f20bf5c7fed34cc3b16",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}