{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "caa0bca7_c1633df3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-06-07T13:38:39Z",
      "side": 1,
      "message": "Explanation I put in comment to the bug:\nFailures happened ONLY in table mode:\n\n2021-06-07T11:55:07.737680Z policy.VirtualKeyboard.both           [ FAIL ] vke_disabled-tvke_unset: Virtual keyboard was still visible after 15s: context deadline exceeded; last error follows: node still exists\n2021-06-07T11:55:07.737693Z                                                vke_unset-tvke_unset: Virtual keyboard was still visible after 15s: context deadline exceeded; last error follows: node still exists\n\nBoth above failures make touch keyboard to be displayed.\n\n2021-06-07T11:55:07.737725Z policy.VirtualKeyboard.touch_virtual  [ FAIL ] unset: Virtual keyboard was still visible after 15s: context deadline exceeded; last error follows: node still exists\n\nWhen touchVK is set to \"unset\" and user clicks on UI (in tablet mode) touch keyboard with be shown.\n\n2021-06-07T11:55:07.737745Z policy.VirtualKeyboard.virtual        [ FAIL ] disabled: Virtual keyboard was still visible after 15s: context deadline exceeded; last error follows: node still exists\n2021-06-07T11:55:07.737757Z                                                unset: Virtual keyboard was still visible after 15s: context deadline exceeded; last error follows: node still exists\n\nBoth cases the touch virtual keyboard is shown.\n\nREASON for failure:\nboth keyboards can be found by:\nnodewith.Name(\"Chrome OS Virtual Keyboard\").Role(role.Keyboard)\n\nhowever, \n\ntouch keyboard (the one shown in table mode) has:\nnodewith.ClassName(\"bordered-key-mode\")\n\nand the regular virtual keyboard governed by accessibility switch has:\nnodewith.ClassName(\"keyboard a11y-mode\")\n\non tablets touch virtual keyboard is shown by default (except if disabled) and the test produces false positives hence the keyboard that was detected was not VK but touch virtual keyboard.",
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3824505_87d90f19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-06-07T13:40:17Z",
      "side": 1,
      "message": "btw, if you have an idea how to solve it differently I am opened for suggestions.\n\nI am tempted to split that tests and I am not sure it is easy to grasp why one keyboard is used here and the other another time.",
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f2c2cc8_144b44df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-06-07T14:04:08Z",
      "side": 1,
      "message": "ClassName() got deprecated, and HasClass() seems to support regex. Can you try to combine the 2 class names into one regex? If it is not important which class name we find the node with out of the two.",
      "parentUuid": "b3824505_87d90f19",
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b55d4bd4_410879ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-06-07T17:04:29Z",
      "side": 1,
      "message": "I changed them to use HasClass() however, I am not sure about the regex request. \nYou mean something like:\n\u0027^(keyboard a11y-mode|bordered-key-mode)$\u0027\n\nTo match this or that node? \n\nI am slowly leaning to splitting the test as the crucial part is touch keyboards on tablet mode.\n\nI would leave the previous test as it was and mark hardware dependency on non tablet (no_tablet_form_factor) -\u003e we would make sure that every keyboard obeys policies values.\nAnd cover cases where touch keyboard is shown for TouchVirtualKeyboardEnabled value being unset on tablet devices (tablet_form_factor).",
      "parentUuid": "7f2c2cc8_144b44df",
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebc25c87_89b65f62",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/virtual_keyboard.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-06-07T14:26:30Z",
      "side": 1,
      "message": "nit: be",
      "range": {
        "startLine": 23,
        "startChar": 96,
        "endLine": 23,
        "endChar": 97
      },
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "414a4458_a361d6e0",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/virtual_keyboard.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-06-07T17:04:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebc25c87_89b65f62",
      "range": {
        "startLine": 23,
        "startChar": 96,
        "endLine": 23,
        "endChar": 97
      },
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2418167f_bf302d09",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/virtual_keyboard.go",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-06-07T17:04:29Z",
      "side": 1,
      "message": "Is it clear why here is tablet mode touch keyboard and in line 75 virtual on-screen keyboard?",
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d8ae972_5a57e37e",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/virtual_keyboard.go",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-06-07T14:26:30Z",
      "side": 1,
      "message": "Now that I look at this again I think this does not do what we actually want.\nif tc.wantedAllowVK is false a virtual keyboard shouldn\u0027t be opened at all.\nBut EnsureGoneFor will wait until it\u0027s gone.\n\nWhat we actually want is to check that it doesn\u0027t come to existence, so we\u0027d need to use WaitUntilExists again but this time we throw the error when it returns nil and let the test pass if it returns an error.",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 80
      },
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b008187c_6429fe25",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/virtual_keyboard.go",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-06-07T15:03:49Z",
      "side": 1,
      "message": "I think the problem is with EnsureGoneFor(), as it does almost the same as WaitUntilGone(), but with a different way to set the timeout in the poll.\nSo EnsureGoneFor() does not do what is should according to its description:\n\u003e  // EnsureGoneFor returns a function that check the specified node does not exist for the timeout period.",
      "parentUuid": "0d8ae972_5a57e37e",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 80
      },
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b63d56a2_237a7919",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/virtual_keyboard.go",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1411065
      },
      "writtenOn": "2021-06-07T15:17:15Z",
      "side": 1,
      "message": "Exactly, the description does not match.\nThe question is if the description is wrong, or the implementation. Judging from the name of the function the description is wrong, however the function then would be a bit superfluous as you can do exactly the same with WaitUntilGone (with uiauto.WithTimeout() you can create a context with custom timeout and use that in WaitUntilGone).\n\nEither way we need to use WaitUntilExists here or rewrite EnsureGoneFor (but then the name is not that great, it should be something like EnsureNotExists).\n\nMaybe put that on the Agenda for tomorrows tast forum.",
      "parentUuid": "b008187c_6429fe25",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 80
      },
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3a6b569_8ec7d8cb",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/virtual_keyboard.go",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-06-07T17:04:29Z",
      "side": 1,
      "message": "I see. IMHO the function implementation is incorrect. I picked it as it matches what we want -\u003e make sure withing specified timeout that the node won\u0027t appear (is gone). However, as pointed by Gabor EnsureGoneFor has the same implementation as WaitUntilGone but with custom timeout, the rest is the same.\n\nAnd agree with Alex\u0027s point -\u003e it should have a better name.",
      "parentUuid": "b63d56a2_237a7919",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 80
      },
      "revId": "37181dea75b3268a5c96858cb75d67b4f7456242",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}