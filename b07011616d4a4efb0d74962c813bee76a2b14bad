{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "99275ea4_b0f72803",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1431109
      },
      "writtenOn": "2020-10-13T06:16:57Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 7,
        "startChar": 48,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e81f5080_f5a98ba1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": ":+1:\nSo there are people who read commit messages after all... ;)",
      "parentUuid": "99275ea4_b0f72803",
      "range": {
        "startLine": 7,
        "startChar": 48,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c24091e4_6025cfd9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-10-12T13:01:57Z",
      "side": 1,
      "message": "Please review.",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b28f2a4_a8706ffb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": "Responses",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad47373f_6c6583e2",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1431109
      },
      "writtenOn": "2020-10-13T06:16:57Z",
      "side": 1,
      "message": "This is wificell package, so a TestFixture-specific prefix would make sense to reduce risk of name clash. TFFeatures?",
      "range": {
        "startLine": 17,
        "startChar": 5,
        "endLine": 17,
        "endChar": 18
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4602640a_b47c50fc",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": ":+1:",
      "parentUuid": "ad47373f_6c6583e2",
      "range": {
        "startLine": 17,
        "startChar": 5,
        "endLine": 17,
        "endChar": 18
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75f03be8_c65734b3",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-10-13T05:18:26Z",
      "side": 1,
      "message": "Hmm..., so for multiRouter precondition, it is possible that the TestFixture only has one default router?",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a19a837_154a2445",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": "I don\u0027t assume here any number of routers. If no `routers` is passed to the test, the behaviour will be the same as no `router` is passed to the single router test - only a single (default) Router will be instantiated in TestFixture.\n\nWe\u0027ll need come back to this subject and default router naming nevertheless when we start having 3+ routers in the roaming setup.",
      "parentUuid": "75f03be8_c65734b3",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da5b9cee_f7e7887a",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-10-12T13:01:57Z",
      "side": 1,
      "message": "redundant nl?",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5357941a_c8bfb208",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1431109
      },
      "writtenOn": "2020-10-13T06:16:57Z",
      "side": 1,
      "message": "Maybe make it shorter with \"atten\", to spare the precious command line chars ðŸ˜Š",
      "range": {
        "startLine": 85,
        "startChar": 25,
        "endLine": 85,
        "endChar": 35
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1aea16b_789ebfc4",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": "Then, continuing with that logic we should shorten routers to rts? ;P",
      "parentUuid": "5357941a_c8bfb208",
      "range": {
        "startLine": 85,
        "startChar": 25,
        "endLine": 85,
        "endChar": 35
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d7702ae_4cd7d083",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1431109
      },
      "writtenOn": "2020-10-13T06:16:57Z",
      "side": 1,
      "message": "noFeatures const?",
      "range": {
        "startLine": 123,
        "startChar": 49,
        "endLine": 123,
        "endChar": 51
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af4dfe04_e370b34e",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": ":+1:",
      "parentUuid": "1d7702ae_4cd7d083",
      "range": {
        "startLine": 123,
        "startChar": 49,
        "endLine": 123,
        "endChar": 51
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86c0d63c_fccb0aac",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1431109
      },
      "writtenOn": "2020-10-13T06:16:57Z",
      "side": 1,
      "message": "We\u0027ll need a Pre with both Routers and Attenuator support. And some more features may come in future. Maybe make a generic function with the ExtraFeatures as a param, and then store the created Pre\u0027s in a map?",
      "range": {
        "startLine": 146,
        "startChar": 5,
        "endLine": 146,
        "endChar": 30
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aafe5515_c062c066",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": ":+1:",
      "parentUuid": "86c0d63c_fccb0aac",
      "range": {
        "startLine": 146,
        "startChar": 5,
        "endLine": 146,
        "endChar": 30
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ede3352_832e7e9b",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-10-13T05:18:26Z",
      "side": 1,
      "message": "Is there any reason for this? Did I miss any side effect?",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f5e518a_2cc7c66a",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": "I assume all global variables are initialised at binary\u0027s startup. I\u0027d prefer to have it only initialised upon actual call in a test we want to run.\nAnyway, if we want to use a map (as in the comment above), that\u0027s the only way I suppose.",
      "parentUuid": "5ede3352_832e7e9b",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ddc6b97_15b50293",
        "filename": "src/chromiumos/tast/remote/wificell/pre.go",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1408947
      },
      "writtenOn": "2020-10-12T13:01:57Z",
      "side": 1,
      "message": "copy-paste error",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8749c9da_39632bef",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-10-13T05:18:26Z",
      "side": 1,
      "message": "I think it will be better to check \"tf.attenuator !\u003d nil\" here. tf.Close is also used as cleanup when there\u0027s error in New. It is possible that attenuatorTarget is non-empty but attenuator is not yet created. Then the tf.attenuator.Close() call will likely panic.",
      "range": {
        "startLine": 323,
        "startChar": 4,
        "endLine": 323,
        "endChar": 29
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a4c9b7b_370015a9",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": ":+1:",
      "parentUuid": "8749c9da_39632bef",
      "range": {
        "startLine": 323,
        "startChar": 4,
        "endLine": 323,
        "endChar": 29
      },
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5c1eb97_8a35d9da",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 890,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-10-13T05:18:26Z",
      "side": 1,
      "message": "Not sure if it is good to just return nil if there\u0027s no attenuator. I slightly prefer having these optional things like: (*attenuator.Attenuator, bool), but then it is harder for the caller to use.",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c44cb038_77289e79",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 890,
      "author": {
        "id": 1431109
      },
      "writtenOn": "2020-10-13T06:16:57Z",
      "side": 1,
      "message": "Well, the convention here at least seems to be to return nil, so I would stick to that.",
      "parentUuid": "a5c1eb97_8a35d9da",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a565afab_c05c2e67",
        "filename": "src/chromiumos/tast/remote/wificell/test_fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 890,
      "author": {
        "id": 1445297
      },
      "writtenOn": "2020-10-13T09:43:03Z",
      "side": 1,
      "message": "I\u0027m sticking to convention here.\n\nGenerally, it\u0027s not good practice to decapsulate object members at all, but if it works this way throughout the whole wificell, then all I can do is be consistent ;)",
      "parentUuid": "c44cb038_77289e79",
      "revId": "b07011616d4a4efb0d74962c813bee76a2b14bad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}