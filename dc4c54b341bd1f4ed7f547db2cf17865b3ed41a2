{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c02698b9_8dae1295",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2022-09-13T20:32:39Z",
      "side": 1,
      "message": "I think you should be able to pass \u0027undefined\u0027 but null is not allowed by the IDL. VideoFrame.colorSpace is never null, so copying from there should always work. Where is null coming from in this case?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5d1e81c_8a1eadf1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1196199
      },
      "writtenOn": "2022-09-13T23:33:59Z",
      "side": 1,
      "message": "Yeah, the test passes with \u0027undefined\u0027.\nThe test passes with frame.colorSpace in all the decoders (hw and sw) with the following error message.\nframe.colorSpace is no problem before your CL (https://crrev.com/c/3863890).\nDo you have any idea?\n\nvideo frame creation error: TypeError: Failed to construct \u0027VideoFrame\u0027: Failed to read the \u0027colorSpace\u0027 property from \u0027VideoFrameBufferInit\u0027: Failed to read the \u0027matrix\u0027 property from \u0027VideoColorSpaceInit\u0027: The\n provided value \u0027null\u0027 is not a valid enum value of type VideoMatrixCoefficients.",
      "parentUuid": "c02698b9_8dae1295",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b6a50db_30ed85c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2022-09-14T17:51:14Z",
      "side": 1,
      "message": "I really have no idea how my CL could have affected this; VideoFrame.colorSpace simply shouldn\u0027t be able to return null. Where is createNewFrame() being called from in this case? Is it not a real VideoFrame being passed to it?",
      "parentUuid": "f5d1e81c_8a1eadf1",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9a4e450_246acf96",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1196199
      },
      "writtenOn": "2022-09-15T00:23:37Z",
      "side": 1,
      "message": "The frame is output by webcodecs VideoDecoder. https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/3891309/3/src/chromiumos/tast/local/bundles/cros/video/data/webcodecs_common.js#179",
      "parentUuid": "7b6a50db_30ed85c8",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13dbc2e9_610300dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1120879
      },
      "writtenOn": "2022-09-15T15:57:16Z",
      "side": 1,
      "message": "I still don\u0027t know how my CL could affect this, but I did find how null can show up.\n\nThe VideoColorSpace interface has nullable attributes, so the V8 bindings are turning missing values into null. It was intended instead that missing values should turn into undefined, but perhaps we should just change the IDL to accept null everywhere.\n\nI filed https://github.com/w3c/webcodecs/issues/561",
      "parentUuid": "a9a4e450_246acf96",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54bd53de_69bd8493",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1196199
      },
      "writtenOn": "2022-09-15T00:35:27Z",
      "side": 1,
      "message": "Let me land it this first to make the test green.",
      "revId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "dc4c54b341bd1f4ed7f547db2cf17865b3ed41a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}