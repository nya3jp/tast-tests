{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "39a576a9_2bedece9",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/tps_validation.go",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2021-11-05T19:44:41Z",
      "side": 1,
      "message": "Does Go have concept of a destructor? Can we call this from the dtor?",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92149254_f18ebc0a",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/tps_validation.go",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2021-11-05T20:48:44Z",
      "side": 1,
      "message": "Not a Go expert but it seems to me that Go does not have a formal destructor support. Saw https://github.com/golang/go/issues/38057 and not get picked up.\n\nAnd in tast code, it seems we use \"defer\" on caller side to do the clean up.",
      "parentUuid": "39a576a9_2bedece9",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "447312cb_2374b72e",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/tps_validation.go",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1412245
      },
      "writtenOn": "2021-11-12T01:17:55Z",
      "side": 1,
      "message": "+1 with xiyuan. In terms of the process, Cmd.Wait() should release the associated resources.",
      "parentUuid": "92149254_f18ebc0a",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bceb4d4c_8d192d59",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/tps_validation.go",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2021-11-12T16:38:25Z",
      "side": 1,
      "message": "Ack. I just want to make sure we\u0027re definitely shutting down this process. If it doesn\u0027t get killed, we\u0027ll affect other tests.",
      "parentUuid": "447312cb_2374b72e",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ca3a663_708c985d",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/tps_validation.go",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2021-11-05T19:50:18Z",
      "side": 1,
      "message": "Kill just send SIGKILL. We need to vh.cmd.Wait() after kill to make sure it goes away and associated resources are released.\n\nSee https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/common/testexec/testexec.go;l\u003d350",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "569c956f_c789bcb1",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/cuj/tps_validation.go",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1412245
      },
      "writtenOn": "2021-11-05T22:05:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ca3a663_708c985d",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d542c315_d56382b7",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/window_arrangement_cuj.go",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2021-11-05T20:33:24Z",
      "side": 1,
      "message": "I wonder whether we could use defer for this.\ne.g.\n  \n  if validation {\n    validationHelper \u003d cuj.NewTPSValidationHelper(ctx)\n    validationHelper.Stress()\n    defer func(ctx context.Context) {\n      if err:\u003d validationHelper.Release(); err !\u003d nil {\n        s.Fatal(\"Failed to release validationHelper, err\u003d\", err)\n      }\n    }(closeCtx)\n  }",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a369e322_08be9b11",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/window_arrangement_cuj.go",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1412245
      },
      "writtenOn": "2021-11-05T21:38:10Z",
      "side": 1,
      "message": "I feel like validationHelper.Release() is still using the initial ctx (cmd.Wait() using cmd.ctx https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/common/testexec/testexec.go;l\u003d266?q\u003dCommandContext%20run\u0026ss\u003dchromiumos%2Fchromiumos%2Fcodesearch:src%2Fplatform%2Ftast-tests%2Fsrc%2Fchromiumos%2F), should we create NewTPSValidationHelper with closeCtx instead?",
      "parentUuid": "d542c315_d56382b7",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a97aef24_ba4fd27d",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/window_arrangement_cuj.go",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2021-11-05T21:49:04Z",
      "side": 1,
      "message": "Oh, I neglected \"validationHelper.Release()\" does not need a Context. And you are right that we would be using `ctx` and pass `closeCtx` here is not necessary.\n\nLet\u0027s use `closeCtx` with NewTPSValidationHelper so that we could use that extra 2s for the wait.",
      "parentUuid": "a369e322_08be9b11",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f0a9d0e_76645ab1",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/window_arrangement_cuj.go",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1412245
      },
      "writtenOn": "2021-11-05T22:05:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a97aef24_ba4fd27d",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46045ee9_5d9af5d7",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/window_arrangement_cuj.go",
        "patchSetId": 4
      },
      "lineNbr": 271,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2021-11-05T19:50:18Z",
      "side": 1,
      "message": "Check returned error and report ?",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d6b2180_6a1f5ee0",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/window_arrangement_cuj.go",
        "patchSetId": 4
      },
      "lineNbr": 271,
      "author": {
        "id": 1412245
      },
      "writtenOn": "2021-11-05T22:05:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46045ee9_5d9af5d7",
      "revId": "21c5dd3505029b8a45dfb25ad7b3de0900516275",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}