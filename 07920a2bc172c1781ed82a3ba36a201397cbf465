{
  "comments": [
    {
      "key": {
        "uuid": "7ec930b9_99be2d3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1380461
      },
      "writtenOn": "2020-09-24T15:46:40Z",
      "side": 1,
      "message": "Hi,\nthis is a former policy autotest (policy_TranslateEnabled/policy_TranslateEnabled.py) migrated to tast.\nPlease review.\nThanks!",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdde9c1a_6aab648f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-09-24T16:12:29Z",
      "side": 1,
      "message": "Thanks for the CL!",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "705fa24d_b51ddc2b",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-09-24T16:12:29Z",
      "side": 1,
      "message": "It is better not to place these calls into a separate function. It is not advised to pass testing state to another function.",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfa793ff_6adc707d",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1380461
      },
      "writtenOn": "2020-09-25T08:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "705fa24d_b51ddc2b",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20f1bf72_930eb74f",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-09-24T16:12:29Z",
      "side": 1,
      "message": "You can move this part out of run, it is enough to call it once.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 65,
        "endChar": 4
      },
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf04bdbe_5c10c9b0",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1380461
      },
      "writtenOn": "2020-09-25T08:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20f1bf72_930eb74f",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 65,
        "endChar": 4
      },
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a626671_340645e0",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-09-24T16:12:29Z",
      "side": 1,
      "message": "If you jsut want to see if it is there, use ui.Exists().\n\nAlso, if an error is retuned, you should check if it is not nil, and if so, raise an s.Error() or s.Fatal() depending on the situation.",
      "range": {
        "startLine": 68,
        "startChar": 15,
        "endLine": 68,
        "endChar": 19
      },
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1a3ee12_32e558dd",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-25T05:12:42Z",
      "side": 1,
      "message": "Also, if ui.Find is used, the returned first element needs to be Release()ed.",
      "parentUuid": "7a626671_340645e0",
      "range": {
        "startLine": 68,
        "startChar": 15,
        "endLine": 68,
        "endChar": 19
      },
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34cd448_7ab47868",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1380461
      },
      "writtenOn": "2020-09-25T08:45:54Z",
      "side": 1,
      "message": "I use Exists.\nDone",
      "parentUuid": "a1a3ee12_32e558dd",
      "range": {
        "startLine": 68,
        "startChar": 15,
        "endLine": 68,
        "endChar": 19
      },
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc312aa7_4c092309",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-09-24T16:12:29Z",
      "side": 1,
      "message": "wantTranslate is a better fit for the go style. You should add it into the testing table (where the name and value is).",
      "range": {
        "startLine": 74,
        "startChar": 3,
        "endLine": 74,
        "endChar": 20
      },
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d22e5112_27713a4e",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1380461
      },
      "writtenOn": "2020-09-25T08:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc312aa7_4c092309",
      "range": {
        "startLine": 74,
        "startChar": 3,
        "endLine": 74,
        "endChar": 20
      },
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ced9257_d15415e2",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-09-24T16:12:29Z",
      "side": 1,
      "message": "You don\u0027t have to add the policy value here, Run() appends the param.name to every error message.",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6204afc1_6811246a",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1380461
      },
      "writtenOn": "2020-09-25T08:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ced9257_d15415e2",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4200765d_66512162",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2020-09-24T16:12:29Z",
      "side": 1,
      "message": "Instead of a function, you should add the HTML file into data, and open a server with it. You can see an example for this here: https://source.chromium.org/chromiumos/chromiumos/codesearch/+/master:src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/policy/web_app_install_force_list.go",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee4b5c73_c2a0b052",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-25T05:12:42Z",
      "side": 1,
      "message": "This is just an utility, so it is recommended to avoid passing testing.State. Instead, could you return an error, and handle it in the caller?",
      "range": {
        "startLine": 83,
        "startChar": 24,
        "endLine": 83,
        "endChar": 40
      },
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56b329d4_eb828c2a",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1380461
      },
      "writtenOn": "2020-09-25T08:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee4b5c73_c2a0b052",
      "range": {
        "startLine": 83,
        "startChar": 24,
        "endLine": 83,
        "endChar": 40
      },
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bb2c2ff_a4f53bef",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1380461
      },
      "writtenOn": "2020-09-25T08:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4200765d_66512162",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12acf934_e70473ef",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-25T05:12:42Z",
      "side": 1,
      "message": "- In case of failure, could you avoid remaining the file?\n- Could you avoid using /tmp directly, which could be leaked to the next tests or even after the Tast run.\nYou can just use ioutil.TempFile(\"\", \"...\") (passing an empty dir at the first argument).",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77d79eca_d6b398ac",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1380461
      },
      "writtenOn": "2020-09-25T08:45:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12acf934_e70473ef",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73535ad3_24e16b25",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/translate_enabled.go",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-09-25T05:12:42Z",
      "side": 1,
      "message": "Clarification, just in case. are you intended to dump on the error, iff NewConn or WaitForLocationChangeCompleted failed? Or are you interested in to dump in case of main test body failure?",
      "revId": "07920a2bc172c1781ed82a3ba36a201397cbf465",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}