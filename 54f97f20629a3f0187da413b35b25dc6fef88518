{
  "comments": [
    {
      "key": {
        "uuid": "6b502f22_702ea7f5",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_quick_emoji.go",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-17T22:48:39Z",
      "side": 1,
      "message": "This test doesn\u0027t look like it should need a 5 minute timeout, what takes so long?",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 32
      },
      "revId": "54f97f20629a3f0187da413b35b25dc6fef88518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "742112f3_28a1fecb",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_quick_emoji.go",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-17T22:48:39Z",
      "side": 1,
      "message": "Can this just use the chrome.LoggedIn precondition?",
      "range": {
        "startLine": 36,
        "startChar": 1,
        "endLine": 45,
        "endChar": 2
      },
      "revId": "54f97f20629a3f0187da413b35b25dc6fef88518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ed2dd24_88326eb1",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_quick_emoji.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-17T22:48:39Z",
      "side": 1,
      "message": "nit merge this:\n\nif isEmojiPanelShown, err :\u003d ...; err !\u003d nil {\n  ...\n} else if !isEmojiPanelShown {\n  ...\n}",
      "range": {
        "startLine": 88,
        "startChar": 1,
        "endLine": 95,
        "endChar": 2
      },
      "revId": "54f97f20629a3f0187da413b35b25dc6fef88518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9957a620_93152634",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_quick_emoji.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-17T22:48:39Z",
      "side": 1,
      "message": "After calling this do you need to wait for the keyboard to be hidden so that a closing virtual keyboard doesn\u0027t cause the later checks to fail?",
      "range": {
        "startLine": 98,
        "startChar": 1,
        "endLine": 100,
        "endChar": 2
      },
      "revId": "54f97f20629a3f0187da413b35b25dc6fef88518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ea6b980_90f5e69b",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_quick_emoji.go",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-08-17T22:48:39Z",
      "side": 1,
      "message": "This form of waiting seems kinda strange. Is there anything else you could possibly check or poll for?\n\nIf not, what about shortening the context to a few seconds and then calling WaitUntilShown and ensuring that it fails?\n\nIf none of the above works, and you would like to stick with what you currently have. You should deal with the error returned testing.Sleep(), and the call to testing.Sleep should be at the beginning of the for loop.",
      "range": {
        "startLine": 106,
        "startChar": 1,
        "endLine": 118,
        "endChar": 2
      },
      "revId": "54f97f20629a3f0187da413b35b25dc6fef88518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}