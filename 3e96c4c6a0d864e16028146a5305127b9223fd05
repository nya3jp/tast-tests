{
  "comments": [
    {
      "key": {
        "uuid": "20f7de8b_76083d2d",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/data/media_session_60sec_test.ogg.external",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-12-18T09:53:25Z",
      "side": 1,
      "message": "Files have been copied to arc/ directory.",
      "range": {
        "startLine": 2,
        "startChar": 55,
        "endLine": 2,
        "endChar": 59
      },
      "revId": "3e96c4c6a0d864e16028146a5305127b9223fd05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3744e170_10ab47ec",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/ui_automator.go",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-12-18T09:53:25Z",
      "side": 1,
      "message": "This is former arcapp.Sample test with apptest inlined.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 63
      },
      "revId": "3e96c4c6a0d864e16028146a5305127b9223fd05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3b7b31_fbe0eaae",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/ui_automator.go",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-12-18T17:07:33Z",
      "side": 1,
      "message": "unrelated to this change, but this still troubles me a bit, since i see a lot of test authors introducing their own \"must\" functions and passing all kinds of errors to them (which i worry will result in useless test error messages).\n\ni wonder if we could do something similar to https://golang.org/pkg/text/template/#Must. if these uiautomator functions all returned some additional state object (maybe containing a message about what is being attempted), then perhaps there could be a function like this in the ui package:\n\n  func Must(a Action, err error) {\n     if err !\u003d nil {\n         panic(fmt.Sprintf(\"Failed %v: %v\", a.Desc, err))\n     }\n  }\n\nthen people could do:\n\n  ui.Must(d.Object(...).Click(ctx))\n\nmaybe that\u0027s a bad idea. :-)",
      "revId": "3e96c4c6a0d864e16028146a5305127b9223fd05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}