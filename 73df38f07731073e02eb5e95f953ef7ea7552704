{
  "comments": [
    {
      "key": {
        "uuid": "fd177aef_e7ea1d4d",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/memory_stress.html",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "Please move this into \u003chead\u003e. This is invalid in HTML5.",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bbb4a28_ca59ea92",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/memory_stress.html",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "In HTML5, \u003cmeta http-equiv\u003d\"Cache-Control\"\u003e is invalid.\n\nhttps://html.spec.whatwg.org/multipage/semantics.html#pragma-directives\n\nI think we can just remove this tag since small file caches would have almost no effect to performance metrics.",
      "range": {
        "startLine": 6,
        "startChar": 20,
        "endLine": 6,
        "endChar": 33
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97af1433_3c01c415",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/memory_stress.js",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1334957
      },
      "writtenOn": "2019-08-22T22:08:22Z",
      "side": 1,
      "message": "This is returning a random number in the range [0, 1), wouldn\u0027t it make more sense to make this an Uint64Array and doing: randomArray[i] \u003d Math.random() * (1\u003c\u003c64)-1; or something like that?This will result in a better random memory layout then a Float64Array would with values between 0 and 1 I think",
      "range": {
        "startLine": 13,
        "startChar": 26,
        "endLine": 13,
        "endChar": 32
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36e6aaf9_d06ceda6",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/memory_stress.js",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1334957
      },
      "writtenOn": "2019-08-22T22:08:22Z",
      "side": 1,
      "message": "Why a Float64Array rather than a Uint8Array you\u0027re just populating with 1 I think Uint8Array will result in a more compressible layout in memory.",
      "range": {
        "startLine": 17,
        "startChar": 25,
        "endLine": 17,
        "endChar": 37
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c39ab8d_872c8224",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/memory_stress.js",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "nit: end with ;",
      "range": {
        "startLine": 34,
        "startChar": 67,
        "endLine": 34,
        "endChar": 69
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "478b74f5_1261f817",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/memory_stress.js",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "Hmm, I\u0027m not aware of a spec that guarantees setTimeout callback is called after document DOM is ready. Would you mind pointing me to some resource?",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 17
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cc8dad9_20f5349e",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "crosbolt_memory_nightly\u0027s global timeout is 3 hours.\n\nhttps://cs.corp.google.com/chromeos_public/src/third_party/autotest/files/server/site_tests/tast/control.crosbolt-memory-nightly?q\u003dcrosbolt_memory_nightly\u0026g\u003d0\u0026l\u003d32\n\nPlease consider shortening the timeout not to prevent other memory tests from running.",
      "range": {
        "startLine": 35,
        "startChar": 12,
        "endLine": 35,
        "endChar": 29
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40a6de66_1aa96eff",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1334957
      },
      "writtenOn": "2019-08-22T22:08:22Z",
      "side": 1,
      "message": "You never seeded your prng, is that intentional?\n\nrand.Seed(time.Now().UTC().UnixNano())",
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ea36b88_5fcdfefe",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "Do we need to enable ARC? I guess we don\u0027t, but if we do, we should declare android software deps.",
      "range": {
        "startLine": 56,
        "startChar": 35,
        "endLine": 56,
        "endChar": 45
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa3c36b3_41f1f914",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1334957
      },
      "writtenOn": "2019-08-22T22:08:22Z",
      "side": 1,
      "message": "This is optional and up to you but do you think it\u0027s easier to read with Sprintf?\n\nreturn fmt.Sprintf(\"%s?alloc\u003d%d\u0026ratio\u003d%f\u0026id\u003d%d\", baseURL, strconv.FormatInt(sizeMb, 10), strconv.FormatFloat(randomRatio, \u0027f\u0027, 3, 64), strconv.FormatInt(id, 10));",
      "range": {
        "startLine": 93,
        "startChar": 1,
        "endLine": 96,
        "endChar": 42
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75817e73_d2ee19da",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "Could you add a short comment describing this condition about location.href?",
      "range": {
        "startLine": 107,
        "startChar": 11,
        "endLine": 107,
        "endChar": 57
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03cbab1c_d54f9af6",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "s is unused.",
      "range": {
        "startLine": 146,
        "startChar": 18,
        "endLine": 146,
        "endChar": 34
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "639f7c24_79b14386",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1334957
      },
      "writtenOn": "2019-08-22T22:08:22Z",
      "side": 1,
      "message": "This is assuming a compression ratio of 2:1 with zram? Is that right?",
      "range": {
        "startLine": 152,
        "startChar": 11,
        "endLine": 152,
        "endChar": 36
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abd90e9c_e4fae696",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "s is unused.",
      "range": {
        "startLine": 156,
        "startChar": 35,
        "endLine": 156,
        "endChar": 51
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbed8b27_849813c9",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "optional: You might want to log that how many tabs have been opened, e.g.\n\n testing.ContextLogf(ctx, \"Opening tab %d/%d\", i+1, createTabCount)\n\nsince it seems to take some time to open and wait a tab.",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 38
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a74a41c_bc69ba13",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "nit: How about changing the signature of allocationURL to accept int instead?",
      "range": {
        "startLine": 158,
        "startChar": 56,
        "endLine": 158,
        "endChar": 61
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18a8a4fa_91280f96",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "style: sleep timeout\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#error-strings",
      "range": {
        "startLine": 165,
        "startChar": 28,
        "endLine": 165,
        "endChar": 33
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47cdd5a3_95eedea9",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "Could you try making this time.Duration? It allows us to forget about units.",
      "range": {
        "startLine": 233,
        "startChar": 1,
        "endLine": 233,
        "endChar": 19
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf25a6d1_8afa3405",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 243,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "Naive question: doesn\u0027t randomness harm accuracy of performance metrics?",
      "range": {
        "startLine": 243,
        "startChar": 16,
        "endLine": 243,
        "endChar": 31
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0cc712d_044c4087",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_stress_basic.go",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "style: sleep\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#error-strings",
      "range": {
        "startLine": 250,
        "startChar": 31,
        "endLine": 250,
        "endChar": 36
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f45f2c2d_4cb8f7d0",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 3
      },
      "lineNbr": 1005,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-08-23T04:41:30Z",
      "side": 1,
      "message": "Please avoid suppressing errors and allow the caller to decide how to handle errors.\n\nSo return type would be (bool, error).",
      "range": {
        "startLine": 1005,
        "startChar": 2,
        "endLine": 1005,
        "endChar": 57
      },
      "revId": "73df38f07731073e02eb5e95f953ef7ea7552704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}