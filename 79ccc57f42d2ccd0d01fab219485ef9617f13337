{
  "comments": [
    {
      "key": {
        "uuid": "c0424075_6615abf9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1356080
      },
      "writtenOn": "2020-09-01T02:43:28Z",
      "side": 1,
      "message": "Patchset 6 passes testing.State into the Crostini postcondition which is a style violation (should only pass into preconditions), but postcondition probably deserves the same exemption as precondition. It means we don\u0027t need to change every single test when we change the postcondition in future (e.g. collect some logs only on failure).\nPatchset 5 explicitly passes in each of the fields in testing.State we care about.\n\ntast-owners: Please let me know which version you\u0027d prefer.\n\nThanks,\nDave.",
      "revId": "79ccc57f42d2ccd0d01fab219485ef9617f13337",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6f4ced1_4260d9d2",
        "filename": "src/chromiumos/tast/local/crostini/post.go",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-09-01T16:45:12Z",
      "side": 1,
      "message": "I believe testing.State in this location is prohibited, and tast-lint check (in repo upload) will warn you.\n\nPlease consider passing both container and user parameters separately, or passing the PreData, instead of passing testing.State itself.\n\ncf: https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#test-subpackages",
      "range": {
        "startLine": 26,
        "startChar": 46,
        "endLine": 26,
        "endChar": 62
      },
      "revId": "79ccc57f42d2ccd0d01fab219485ef9617f13337",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f8c5104_9d877422",
        "filename": "src/chromiumos/tast/local/crostini/post.go",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2020-09-01T22:32:09Z",
      "side": 1,
      "message": "See also nya@ reply on https://groups.google.com/a/google.com/g/tast-reviewers/c/QIdIUkBzkm suggesting an interface as an additional option.",
      "parentUuid": "c6f4ced1_4260d9d2",
      "range": {
        "startLine": 26,
        "startChar": 46,
        "endLine": 26,
        "endChar": 62
      },
      "revId": "79ccc57f42d2ccd0d01fab219485ef9617f13337",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "980a5544_dcd9bd28",
        "filename": "src/chromiumos/tast/local/crostini/post.go",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1356080
      },
      "writtenOn": "2020-09-02T06:33:13Z",
      "side": 1,
      "message": "I opted to pass the PreData in directly, seems nicer to me (since Crostini tests own the struct and so far we only need data from it) than passing everything in individually or creating an interface to expose things as methods.\n\nLet me know if you\u0027d prefer a different approach.",
      "parentUuid": "2f8c5104_9d877422",
      "range": {
        "startLine": 26,
        "startChar": 46,
        "endLine": 26,
        "endChar": 62
      },
      "revId": "79ccc57f42d2ccd0d01fab219485ef9617f13337",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe0a3d16_8cd891c5",
        "filename": "src/chromiumos/tast/local/crostini/post.go",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-09-01T16:45:12Z",
      "side": 1,
      "message": "It would be great if you can implement io.Reader interface (https://golang.org/pkg/io/#Reader).  With that, those copying can be written in a single function call of io.Copy (https://golang.org/pkg/io/#Copy).",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 31
      },
      "revId": "79ccc57f42d2ccd0d01fab219485ef9617f13337",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c1a6e5d_435cca3a",
        "filename": "src/chromiumos/tast/local/crostini/post.go",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1356080
      },
      "writtenOn": "2020-09-02T06:33:13Z",
      "side": 1,
      "message": "At the moment we only use it in one place, so I reckon a correctly implemented io.Reader is more complicated/more net code than `while ReadLine: WriteLine`.\n\nGiven that I\u0027d rather wait on implementing io.Reader until there are multiple users or this is a perf bottleneck.\n\nThoughts?",
      "parentUuid": "fe0a3d16_8cd891c5",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 31
      },
      "revId": "79ccc57f42d2ccd0d01fab219485ef9617f13337",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "730e6807_7b8a2a50",
        "filename": "src/chromiumos/tast/local/crostini/post.go",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-09-02T17:12:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1c1a6e5d_435cca3a",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 31
      },
      "revId": "79ccc57f42d2ccd0d01fab219485ef9617f13337",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a641c7c6_9587f7c1",
        "filename": "src/chromiumos/tast/local/syslog/reader.go",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-09-01T16:45:12Z",
      "side": 1,
      "message": "As for exported interface, I believe it\u0027s slightly better to name differently. Possibly ReadLine() would be great, as Read is well known for io.Reader interface.",
      "revId": "79ccc57f42d2ccd0d01fab219485ef9617f13337",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b1043f_24eb714f",
        "filename": "src/chromiumos/tast/local/syslog/reader.go",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1356080
      },
      "writtenOn": "2020-09-02T06:33:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a641c7c6_9587f7c1",
      "revId": "79ccc57f42d2ccd0d01fab219485ef9617f13337",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}