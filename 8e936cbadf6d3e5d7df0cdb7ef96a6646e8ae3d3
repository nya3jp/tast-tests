{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "88f23ec5_10aa3959",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003168
      },
      "writtenOn": "2022-06-22T13:00:46Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "8e936cbadf6d3e5d7df0cdb7ef96a6646e8ae3d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c38a3893_06071ce7",
        "filename": "src/chromiumos/tast/common/perf/perf.go",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1003168
      },
      "writtenOn": "2022-06-22T13:00:46Z",
      "side": 1,
      "message": "I understood that Values does not support multiple runs with the same sets of values (because we use a map here with metric names as keys).\n\nThis way I created a ValuesList to support several test runs.\n\nThe actual difference is that Values require uniqueness of the metrics name and ValuesList takes Values and simply stores it.",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 174,
        "endChar": 1
      },
      "revId": "8e936cbadf6d3e5d7df0cdb7ef96a6646e8ae3d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c5afd1d_26099322",
        "filename": "src/chromiumos/tast/common/perf/perf.go",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2022-06-22T16:08:17Z",
      "side": 1,
      "message": "Note that `Values.Save` always saves to the same file name (`results-chart.json` for our case).\n\nhttps://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/common/perf/perf.go;l\u003d421;rcl\u003d9aed9e010d50e533be23b2d6afee28cba334e515\n\nThis means that `Values` in a list would save the the same file and overwrites the data written by previous `Values`. So we would end up with only the data of the last `Values` in the list.\n\nWhat problem do we hit when putting data of all runs into one `Values`? Is it the later runs would overwrite the data of previous runs? If so, could we use your `MergeWithSuffix`?",
      "parentUuid": "c38a3893_06071ce7",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 174,
        "endChar": 1
      },
      "revId": "8e936cbadf6d3e5d7df0cdb7ef96a6646e8ae3d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c0664c7_ef75a7d9",
        "filename": "src/chromiumos/tast/common/perf/perf.go",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1003168
      },
      "writtenOn": "2022-06-22T19:19:07Z",
      "side": 1,
      "message": "\u003e What problem do we hit when putting data of all runs into one  Values ?\n\nThe issue is that the code verifies metric type, so single-valued metrics can have only one value. See verify() and panic() calls everywhere like in Append() function.",
      "parentUuid": "3c5afd1d_26099322",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 174,
        "endChar": 1
      },
      "revId": "8e936cbadf6d3e5d7df0cdb7ef96a6646e8ae3d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5811f25_16e42643",
        "filename": "src/chromiumos/tast/common/perf/perf.go",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2022-06-22T20:10:19Z",
      "side": 1,
      "message": "We could use `MergeWithSuffix` to separate metrics from each run.\n\nIf we want to put values from different runs under the same metric name, we would need some customized merge logic.\n\nMaybe we should not use cujrecorder and use perfutil.Runner that supports collect metrics for multiple runs better.",
      "parentUuid": "5c0664c7_ef75a7d9",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 174,
        "endChar": 1
      },
      "revId": "8e936cbadf6d3e5d7df0cdb7ef96a6646e8ae3d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bac0873_a6ebb470",
        "filename": "src/chromiumos/tast/common/perf/perf.go",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1003168
      },
      "writtenOn": "2022-06-29T03:42:27Z",
      "side": 1,
      "message": "\u003e Maybe we should not use cujrecorder and use perfutil.Runner that supports collect metrics for multiple runs better.\n\nYou were right. The stopper was the test data reader that supports only one test result file (i.e. it could be either perfutil or crosbolt result file, but not both). So I moved data reporting to the perfutil.",
      "parentUuid": "b5811f25_16e42643",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 174,
        "endChar": 1
      },
      "revId": "8e936cbadf6d3e5d7df0cdb7ef96a6646e8ae3d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}