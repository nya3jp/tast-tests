{
  "comments": [
    {
      "key": {
        "uuid": "c181386b_fd033dee",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-01-03T02:43:55Z",
      "side": 1,
      "message": "I deleted th other CL (check MU-MIMO cap and modify WLANDriver) and I added all the changes in this CL (Add wlan package for WLAN device info). The one unresolved issue with the CL (check MU-MIMO cap and modify WLANDriver) was the following:\n\nLooks like this is \"skip testing\", and in Tast it is highly discouraged, and instead it is expected to be written in the dependency.\n\nIs this dependency to the hardware? If so, could you check if the condition can be represented in https://chromium.googlesource.com/chromiumos/infra/proto/+/refs/heads/master/src/device/config.proto ?\n\nIf not, could you talk to infra team to support them?\n\nIf this is the dependency to the software, could you add proper software dependency and use it, instead?\n\nShuo-Peng Liao\nDec 30\nIf we have the function:\nwlan.SupportMUMIMO(devName)  // Check if devName should support MU-MIMO.\nwe can optionally expect MU-MIMO feature here:\n\nif wlan.SupportMUMIMO(devName) \u0026\u0026 !res[0].SupportMUMIMO {\n  s.Error(\"Device doesn\u0027t support MU-MIMO\")\n}\nWould it be treated as \"skip testing\"?\n\nArowa Suliman\n2:44 PM\nI implemented the function wlan.SupportMUMIMO(dev) in the latest patch.\n\nThis is a Hardware dependency and it\u0027s related to the WiFi device, some wifi devices support MUMIMO (802.11ac Wave2 and newer chips) and other don\u0027t (802.11ac Wave1 and older).\n\nI looked at the config.proto and I think it describes the gerneral features that identifies a chrome os device. MU-MIMO support is a feature of the wlan device and tbh I don\u0027t know if it\u0027s a good idea to add it to this file. \n\nI can make a denyList of the Boards that don\u0027t support MU-MIMO, however it\u0027s going to be a long list. In the meantime, I don\u0027t see a software dependency that I can use to make the test run only on specified Boards and ignore the others. Also, even if I implemented it, I think the software dependency will skip the whole test and I am trying to skip only part of the test.",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74dcd8d0_1628fa1f",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-01-03T07:09:40Z",
      "side": 1,
      "message": "A feasible solution could be adding a software dependency like camera_720p:\n\"camera_720p\": \"!snow \u0026\u0026 !skate \u0026\u0026 !spring \u0026\u0026 !grunt\",\nhttps://chromium.git.corp.google.com/chromiumos/platform/tast/+/master/src/chromiumos/tast/cmd/local_test_runner/main.go#77\n\nWe can list all boards which do not support MU-MIMO: \"mumimo\": \"!x86-mario \u0026\u0026 !...\"\n\nFor the test, it can separate into two parts: 1) caps test except MU-MIMO; 2) test that expect MU-MIMO; and for the second test it needs \"mumimo\" software dependency. \n\nThe big disadvantage is that \"mumimo\" definition could be a long list of boards. Hidehiko, what do you think?",
      "parentUuid": "c181386b_fd033dee",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77b16bbb_1a8f5d2e",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-10T01:15:36Z",
      "side": 1,
      "message": "I think it\u0027s a bad idea to pretend that the existing SoftwareDeps will cover this. Unibuild means that a given $BOARD may have different models with different WiFi devices (but same OS image). We are also moving toward a 2nd-source model for WiFi, where we eventually expect even the same model to swap out different WiFi parts based on $reasons (e.g., supply on hand for ODM). In either case, we probably don\u0027t expect to gain/lose major features like this when swapping, but I wouldn\u0027t totally rule it out.\n\n\u003e If we have the function:\n\u003e wlan.SupportMUMIMO(devName)  // Check if devName should support MU-MIMO.\n\u003e we can optionally expect MU-MIMO feature here:\n\u003e \n\u003e if wlan.SupportMUMIMO(devName) \u0026\u0026 !res[0].SupportMUMIMO {\n\u003e   s.Error(\"Device doesn\u0027t support MU-MIMO\")\n\u003e }\n\u003e Would it be treated as \"skip testing\"?\n\nI don\u0027t see why that should be considered \"bad\". We have a general capabilities test, that applies to all boards with WiFi. We run the test, and we only check for the capabilities that we expect for a given module. What\u0027s wrong with that?",
      "parentUuid": "74dcd8d0_1628fa1f",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e70a10ca_1efad18a",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-01-10T02:29:46Z",
      "side": 1,
      "message": "I agree with Brian\u0027s comment. SoftwareDeps is not going to work if multiple wifi components are used for a board.\n\nAlso, for the capability test, we verify the capabilities of a wifi module the system detects. Having some conditionals to test capabilities only belongs to certain modules should be okay.\n\nHidehiko, what do you think?",
      "parentUuid": "77b16bbb_1a8f5d2e",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7000d3e1_866d83fb",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-01-14T07:38:24Z",
      "side": 1,
      "message": "The reason that dependencies (regardless of software/hardware) need to be declared as a part of testing.Test is that Chrome OS infra team is planning to implement smart scheduler and Tast is aligned with the plan.\nIf the test depends on hardware, in theory, could you talk to Chrome OS infra team to add your configuration to config.proto, as a first step? (contact: shapiroc@).\nIf they don\u0027t want to have it, the runtime check is the only way.\n\nBTW, alternative. Instead of \"\u0026\u0026\", can it be \"\u003d\u003d\" to exercise on all devices?",
      "parentUuid": "e70a10ca_1efad18a",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff3a5636_c14f4ee5",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-01-16T03:08:56Z",
      "side": 1,
      "message": "\u003e If the test depends on hardware, in theory,\n\nIsn\u0027t that basically every test? Especially when you talk low-level networking and WiFi, there is so much variation from device to device. It would be nice to nail down what you mean here a little better.\n\nFrankly, a test like this should be run on absolutely every device (or, every new WiFi device). Is that something we need to get into the infra configs somehow?\n\n\u003e could you talk to Chrome OS infra team to add your configuration to config.proto, as a first step? (contact: shapiroc@).\n\u003e If they don\u0027t want to have it, the runtime check is the only way.\n\nI think Arowa sent an email to this effect. Let\u0027s see where that goes...",
      "parentUuid": "7000d3e1_866d83fb",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc653435_fb80c9da",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-01-17T07:12:17Z",
      "side": 1,
      "message": "\u003e Frankly, a test like this should be run on absolutely every device (or, every new WiFi device). Is that something we need to get into the infra configs somehow?\n\nIf this needs to run on all devices, that\u0027s fine. But, then could you write the expectation on \"!wlan.SupportMUMIMO()\" case, too? What the value of SupportMUMIMO should be? \"false\"?",
      "parentUuid": "ff3a5636_c14f4ee5",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc9a8c35_a9acda82",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-03-11T18:39:10Z",
      "side": 1,
      "message": "\u003e But, then could you write the expectation on \"!wlan.SupportMUMIMO()\" case, too? What the value of SupportMUMIMO should be? \"false\"?\n\nSure? We don\u0027t really care as much about what happens if we didn\u0027t require the MU-MIMO feature, but if that matches the Tast requirements better, I don\u0027t have a problem verifying it. It *would* be unexpected to see these older non-MU-MIMO chips somehow claim support for the feature.",
      "parentUuid": "fc653435_fb80c9da",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aac5dec2_9c19e5bd",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-03-29T21:53:09Z",
      "side": 1,
      "message": "I changed the condition (dev.SupportMUMIMO() \u0026\u0026 !res[0].SupportMUMIMO to) (dev.SupportMUMIMO() \u003d\u003d !res[0].SupportMUMIMO). Now, the test should pass if the device supports and claims the MU-MIMO feature, and if it doesn\u0027t support and not claiming the MU-MIMO .It fails otherwise and that includes the case of having a device that doesnt\u0027t support, and claims MU-MIMO which is unexpected.",
      "parentUuid": "cc9a8c35_a9acda82",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77dce2f4_d6f64f69",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-04-14T23:03:40Z",
      "side": 1,
      "message": "*marking resolved*",
      "parentUuid": "aac5dec2_9c19e5bd",
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "990c66ec_63a21e1b",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wlan/wlan_device_info.go",
        "patchSetId": 12
      },
      "lineNbr": 186,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-03-11T18:39:10Z",
      "side": 1,
      "message": "shouldn\u0027t SupportMUMIMO be a function of DevInfo, instead of passing dev as a parameter?",
      "range": {
        "startLine": 186,
        "startChar": 19,
        "endLine": 186,
        "endChar": 31
      },
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "474f060c_40497ccd",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wlan/wlan_device_info.go",
        "patchSetId": 12
      },
      "lineNbr": 186,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-03-29T21:53:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "990c66ec_63a21e1b",
      "range": {
        "startLine": 186,
        "startChar": 19,
        "endLine": 186,
        "endChar": 31
      },
      "revId": "0a1320f5409125b4fd1545658dd39bb02855db4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}