{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "49222c72_c9e990e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2022-10-05T17:21:19Z",
      "side": 1,
      "message": "Can we change the name of the autoconnect test back after this?",
      "revId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aac26d8d_d46b803a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1425417
      },
      "writtenOn": "2022-10-05T18:27:34Z",
      "side": 1,
      "message": "There is no harm in changing the autoconnect test, but I would like to check the behavior upon boot for all of our devices. If the scheduler changes the order of aautoconnect, there should be no issue.",
      "parentUuid": "49222c72_c9e990e4",
      "revId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98b6e113_22774761",
        "filename": "src/chromiumos/tast/local/bundles/cros/cellular/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1441092
      },
      "writtenOn": "2022-10-05T23:44:31Z",
      "side": 1,
      "message": "Should we go with NewModemWithSim() here?",
      "revId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "341e293b_0688e13d",
        "filename": "src/chromiumos/tast/local/bundles/cros/cellular/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1425417
      },
      "writtenOn": "2022-10-05T23:49:58Z",
      "side": 1,
      "message": "NewModemWithSim throws an error if a SIM is not found. I wonder if there might be DUT\u0027s where there are no SIM\u0027s. I also didn\u0027t want to change the slot at the end of the test since it could take significant time and could be flaky.",
      "parentUuid": "98b6e113_22774761",
      "revId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb7838c5_7d2bf817",
        "filename": "src/chromiumos/tast/local/bundles/cros/cellular/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2022-10-05T17:21:19Z",
      "side": 1,
      "message": "How long does this wait for?",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 138,
        "endChar": 3
      },
      "revId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daf6a52d_8793a547",
        "filename": "src/chromiumos/tast/local/bundles/cros/cellular/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1425417
      },
      "writtenOn": "2022-10-05T18:27:34Z",
      "side": 1,
      "message": "60s",
      "parentUuid": "cb7838c5_7d2bf817",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 138,
        "endChar": 3
      },
      "revId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b33423a_26b4fa02",
        "filename": "src/chromiumos/tast/local/bundles/cros/cellular/fixture.go",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2022-10-05T18:49:25Z",
      "side": 1,
      "message": "Ack. This might mean the `testing.Sleep` gets cut short I guess?",
      "parentUuid": "daf6a52d_8793a547",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 138,
        "endChar": 3
      },
      "revId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "cf16c98781296d5ec8ec53187d17aa675d5eb496",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}