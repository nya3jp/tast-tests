{
  "comments": [
    {
      "key": {
        "uuid": "3df75549_f19de50e",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-05-17T17:34:25Z",
      "side": 1,
      "message": "2019",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bce6844d_e010f1af",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:02:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3df75549_f19de50e",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15be1cd6_bdb61154",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-05-20T01:30:09Z",
      "side": 1,
      "message": "Could you move this down after stdlib imports, just like:\n\n import (\n    \"bufio\"\n    ...\n    \"regexp\"\n \n    \"github.com/shirou/gopsutil/process\"\n \n    \"chromiumos/tast/testing\"\n )\n\nSee https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Import\n\nIt\u0027s supposed to be caught by tast-lint, but it seems to have a bug. I filed crbug.com/964807 to track this issue.",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 37
      },
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa3c0463_ad67549d",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:02:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15be1cd6_bdb61154",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 37
      },
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1455dd9c_cb0dcfcf",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-05-17T17:34:25Z",
      "side": 1,
      "message": "(i\u0027ll leave this comment, but note that it doesn\u0027t completely apply since i i wrote it before seeing L58 and writing the comment there)\n\nyou\u0027re putting this all into memory at once anyway, so i\u0027d recommend just doing:\n\nb, err :\u003d ioutil.ReadFile(path)\nif err !\u003d nil {\n    ...\n}\nlines :\u003d strings.Split(strings.TrimRight(string(b), \"\\n\"), \"\\n\")\n\ni\u0027d probably just inline this in your test function, too, since it has a name that could conflict with other tests in the package.\n\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Scoping-and-shared-code",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94933009_e5e5b59e",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:02:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1455dd9c_cb0dcfcf",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1f9d00c_b2f0dfb2",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-05-20T01:30:09Z",
      "side": 1,
      "message": "super huge nit: please append a dot.\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#comment-sentences",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 29
      },
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9801592_666b5d07",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:02:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1f9d00c_b2f0dfb2",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 29
      },
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3c57cea_556d8fda",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-05-17T17:34:25Z",
      "side": 1,
      "message": "does auditd have an upstart job? if so, can you just use https://godoc.org/chromium.googlesource.com/chromiumos/platform/tast-tests.git/src/chromiumos/tast/local/upstart#JobStatus instead? much shorter",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d77ad243_30fde87f",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:02:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3c57cea_556d8fda",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52e50f74_96afe031",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-05-17T17:34:25Z",
      "side": 1,
      "message": "this makes me very uneasy. this is checking a bunch of unknown log messages, some of which could have been produced by other tests (even autotest tests) that ran on the DUT.\n\n(as a side note, these logs can get very big, and the regexp seems like it\u0027s potentially slow. the right way to check a large file line-by-line is by iterating over the scanner and checking one line at a time instead of loading all lines into a slice and iterating over it.)\n\nif you need to check logs, i\u0027d recommend performing some action and then just checking the logs that were produced while you did that.",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f91438d0_05f0f56b",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-05-20T01:30:09Z",
      "side": 1,
      "message": "Alternatively, how about using journalctl to get kernel logs of the current boot only?\n\n journalctl -b 0 -o short-monotonic -t kernel --grep audit:",
      "parentUuid": "52e50f74_96afe031",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4923236_53b97758",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-05-20T03:33:58Z",
      "side": 1,
      "message": "i think that\u0027s better, but i\u0027m still worried against flaky failures since this is testing an essentially-arbitrary environment, i.e. everything that has happened on the DUT since it was booted.",
      "parentUuid": "f91438d0_05f0f56b",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cabe169_f19502cc",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:02:12Z",
      "side": 1,
      "message": "It\u0027s intentional to test this arbitrary environment.  No tests should disable auditd since it\u0027s used to capture log from audit_netlink_socket to prevent audit logs going to kernel ring buffer.\n\nIf audit log exists long after system boot, which means auditd is not working correctly.\n\nIf you\u0027re worried about the log size, i can do current boot only.",
      "parentUuid": "d4923236_53b97758",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "454715ca_24eb2c24",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-05-20T04:05:18Z",
      "side": 1,
      "message": "Hmm, that\u0027s true. I guess we can do some operations like logging into Chrome and see no new audit message is seen. It\u0027s not exhaustive, but it would be a good start.",
      "parentUuid": "d4923236_53b97758",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fb7f507_de7477ed",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-05-20T04:08:03Z",
      "side": 1,
      "message": "\u003e If audit log exists long after system boot, which means auditd is not working correctly.\n\nHmm, what do you mean? For example, my betty VM has this audit log in every 30 seconds, does it mean auditd is broken?\n\n [ 1095.110705] kernel: audit: type\u003d1400 audit(1555788966.652:73): avc:  denied  { getattr } for  pid\u003d2564 comm\u003d\"metrics_daemon\" path\u003d\"/sys/devices/virtual/block/zram0/mm_stat\" dev\u003d\"sysfs\" ino\u003d17393 scontext\u003du:r:cros_metrics_daemon:s0 tcontext\u003du:object_r:sysfs:",
      "parentUuid": "454715ca_24eb2c24",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59099699_a2011044",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:10:39Z",
      "side": 1,
      "message": "Compared to Chrome. I\u0027m more worrid about some daemon processes.\nrecent reverts are all daemon processes.\n\nThe test is NOT to test no things get denied in the long system run, it\u0027s used to test no audit log is written to kernel ring buffer (and then syslog) in the long system run because all audit log after auditd starts should be captured by auditd and write to different place without going to kernel ring buffer.\n\nThe main goal is to test auditd is working correctly in this test, not the correctness of the policy. This is to prevent potential batch denials gets into kernel ring buffer to affect other teams digging into syslog for their debugging.",
      "parentUuid": "454715ca_24eb2c24",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e493eb2b_2918cece",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:12:24Z",
      "side": 1,
      "message": "nya@ based on your audit log, it\u0027s a fixed bug, and at that time auditd hasn\u0027t been introduced yet. could you please sync your local repo?",
      "parentUuid": "59099699_a2011044",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d745b21_98164f67",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-05-20T04:38:03Z",
      "side": 1,
      "message": "Thanks for clarifications!\n\nIf the purpose of this test is to check auditd captures all audit logs, I recommend:\n\n- waiting for auditd to start,\n- artificially emiting audit logs,\n- checking journal log not containing new audit lines,\n- checking /var/log/audit containing a new audit line.\n\nThis way we don\u0027t need to make not-always-true assumptions, such as:\n\n- When this test starts, DUT\u0027s uptime is more than N seconds.\n- auditd starts in N seconds after boot.\n- Some audit logs should be emitted after N seconds after boot.",
      "parentUuid": "e493eb2b_2918cece",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07c66282_760747c9",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T05:00:41Z",
      "side": 1,
      "message": "sounds good.\nactually the TODO below is for this.\n\ni\u0027ll work on some policy change first before a non-enforced test can emit audit message.",
      "parentUuid": "3d745b21_98164f67",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca051650_d28e12ad",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-05-20T01:30:09Z",
      "side": 1,
      "message": "ditto: trailing dot.",
      "range": {
        "startLine": 77,
        "startChar": 25,
        "endLine": 77,
        "endChar": 27
      },
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c05159c_841ce360",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:02:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca051650_d28e12ad",
      "range": {
        "startLine": 77,
        "startChar": 25,
        "endLine": 77,
        "endChar": 27
      },
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35ff0137_351aaa25",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-05-17T17:34:25Z",
      "side": 1,
      "message": "if all you care is that there\u0027s at least one line, why not just check that there\u0027s at least one non-empty file?",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e98f9be8_4e316294",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/selinux_audit_sanity.go",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1137124
      },
      "writtenOn": "2019-05-20T04:02:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35ff0137_351aaa25",
      "revId": "7c01abbdd4e86e5f3f005ff553d2df6013d2fa89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}