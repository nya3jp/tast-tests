{
  "comments": [
    {
      "key": {
        "uuid": "bc607b23_d86d38fa",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 27,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "huge nit: the -\u003e The",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab22b651_cfa8dc8c",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 27,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc607b23_d86d38fa",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8eb22f4_36079522",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "is \"i\" needed ?\nYou an simplify the entire parsing by doing:\n\n    for scanner.Scan() {\n      line :\u003d scanner.Text()\n\n      // if the prefix is the same for all lines you can add some pre-parsing here.\n\n      if len(line) \u003c 4 {\n         // report error\n      }\n      prefix, data \u003d line[:4], line[4:]\n      switch prefix {\n         // on golang, you can switch on strings:\n         // https://tour.golang.org/flowcontrol/9\n         case \"D:  \":\n         case \"I:  \":\n      }\n    }\n \n    // and check for possible err\n    if err :\u003d scanner.Err(); err !\u003d nil {\n      return error.Wrap(err, \"failure to parse file\")\n    }",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 58
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e950f605_9e72eada",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-05-05T18:08:57Z",
      "side": 1,
      "message": "In my view, the line numbers in error messages are essential, so unless the scanner can keep track of what line we\u0027re on itself, we need `i`.",
      "parentUuid": "d8eb22f4_36079522",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 58
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "259562d1_9ff8d91a",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T19:58:40Z",
      "side": 1,
      "message": "if it is needed, then let\u0027s keep it.\n\nalternative: \nyou can always log the line that has the error with:\n\n    testing.ContextLog(ctx, \"failed to parse line: %q\", line)",
      "parentUuid": "e950f605_9e72eada",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 58
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17975ca3_0171c60b",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-05-05T20:48:32Z",
      "side": 1,
      "message": "Are you sure that would log the line in the recording file we\u0027re reading, as opposed to the line in the Go code? I don\u0027t see how it would get that information.",
      "parentUuid": "259562d1_9ff8d91a",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 58
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15539180_9bf6a098",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T22:10:12Z",
      "side": 1,
      "message": "perhaps I misunderstood something:\n\n- if the goal is to log the line-of-code (in the .go file), then the traceback will have the info (no need to add file-name, line-of-code). The only thing needed is to return is an \"error\".\n- if the goal is to log the line read by the scanner, then `testing.ContextLogf(ctx, \"%s\", line)` should do it.\n\nIn both cases, traceback and logs, appear on the report. example:\n\nhttps://00e9e64bac7080fe842ef088cf52aaf95c78be53a4736c1dca-apidata.googleusercontent.com/download/storage/v1/b/chromeos-autotest-results/o/swarming-4bfe37229dc5bc10%2Fautoserv_test%2Ftast%2Fresults%2Ftests%2Farc.WindowManagerCUJ%2Flog.txt?qk\u003dAD5uMEuvoG5qqDwm5ra5O0ilPIcHCexREsn8wG_dm7jDAn_aeH5xrw5skXm91_4u4nysFjy3CvLwNhX6J4_dMHHp3tBo_qqwkuudLaMkHNJ6cGjBn5LO2RQMfWNtC839mNgDoy6mTKg5xigAB0gLRx11-GWk0rHQhl8oDlOK_e2zx-yvVZfvDJuebmcMHqfPpgv3JX_h417O-uDR-5srcGkVwe56w10ww6edU1DvdqLDL3uUHxlAY6oH3g4hago2DpWLHlNYEiZIXtLdnewijSgs2fzszJH7J-_CiGtncBH0z679WsDb-S4yycnWJmfzOWIiRt0mPLw72cmyCEBKmLhrzJskcc3OKHVfPF4AgVXgXfimNICQGf6prtddwY5MxsAfZxxXWXOwsz1_QZBzwLlglhkBoWuu55rIZjq59S-SBWQAgLE8JhBhEOgSkJexH4Elihp-coithKjhhXWKtF5BYB4jkK5uFvV9N8v92zFICWXIRqIVnT5vDXFJOYfQX7pYdY0ek07WQ-afwqZ8-jstG3KRw6GyMe7y_zf070MV8wRm3bupG3W5vaM9YUNXAEp8nStcuoz__cq6t21JwCngdHsHBM0wBajc6BuzL1OGpNcfhiIFFsEON4jqRgeeCZTZF_rv4L1CPAWPcDg-j0zKP2hBTuCpNYRY9SpPlGUIVVfVEv83WP-AQafxMpJy_h_eKM9QzQ1UE3tH0vvw8iCCIOsCNnOfa47hKlSQzzCmoHuIjT8B5ZohQ7WVvX1Sks_BB0IJliS67D_ccdDkHnVPhnpdOaTwNMGp61wAIzuVGM1XJtw_EUomJAxohkMe6GwNLQ0uXiqqOVN1DlraqDt1eNuCP045UoBOjr3z1zTaxqZjy4AbIU1AJ-CJ1ySQ3WqpQswN35BXW_Q71tAR3mtqemAh4JMXnBMVZlefnODJBlItDPOhAJ0\u0026isca\u003d1\n\n\nlmk if I missed something. thanks.",
      "parentUuid": "17975ca3_0171c60b",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 58
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "febe09ac_57d13fdb",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1289152
      },
      "writtenOn": "2020-05-05T22:22:54Z",
      "side": 1,
      "message": "Oh, I meant the line *number* read by the scanner, not the line itself. However, I guess logging the whole line would do.",
      "parentUuid": "15539180_9bf6a098",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 58
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69c474d1_742adaf9",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 31,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "nit: here and below:\ndon\u0027t create multiple sentences in error strings since they are concatenated and could be confusing.\n\ne.g:\n\"multi device recording not supported (line %d)\"\n\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#error-strings",
      "range": {
        "startLine": 31,
        "startChar": 70,
        "endLine": 31,
        "endChar": 77
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "989f9364_70c30016",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 31,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69c474d1_742adaf9",
      "range": {
        "startLine": 31,
        "startChar": 70,
        "endLine": 31,
        "endChar": 77
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a6f53f9_6456f728",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 34,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "nit: no need to use format string for \"name\". \nnit: you can replace it with got;want.\n\ne.g:\n\n\"unexpected length in Name entry; got %d, want \u003e\u003d 4\", len(line)",
      "range": {
        "startLine": 34,
        "startChar": 30,
        "endLine": 34,
        "endChar": 70
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea5876d7_53025f4b",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 34,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a6f53f9_6456f728",
      "range": {
        "startLine": 34,
        "startChar": 30,
        "endLine": 34,
        "endChar": 70
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eaa9a8bb_84c106b9",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 39,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "ditto above",
      "range": {
        "startLine": 39,
        "startChar": 31,
        "endLine": 39,
        "endChar": 59
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "888fa800_70c93a28",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 39,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eaa9a8bb_84c106b9",
      "range": {
        "startLine": 39,
        "startChar": 31,
        "endLine": 39,
        "endChar": 59
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45e5be56_0bec22fb",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "ditto above",
      "range": {
        "startLine": 74,
        "startChar": 1,
        "endLine": 74,
        "endChar": 60
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63fb6df2_ea5f0210",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "I would like us to come to an agreement on the necessity of the line number before changing this.",
      "parentUuid": "45e5be56_0bec22fb",
      "range": {
        "startLine": 74,
        "startChar": 1,
        "endLine": 74,
        "endChar": 60
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76ab724a_97e56eba",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 76,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "ditto: see previvous comments about using period / starting with capital letter in error strings",
      "range": {
        "startLine": 76,
        "startChar": 25,
        "endLine": 76,
        "endChar": 76
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e271d7cd_ba0f9aae",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 76,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76ab724a_97e56eba",
      "range": {
        "startLine": 76,
        "startChar": 25,
        "endLine": 76,
        "endChar": 76
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ece90960_e42a78cf",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 80,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "IIRC I mentioned about not doing a \"if not ... { continue }\" since it is difficult to read (since you have a previous \"if prefix \u003d\u003d d\".\n\nin any case, I\u0027ll recommend using the switch mentioned above.",
      "range": {
        "startLine": 78,
        "startChar": 2,
        "endLine": 80,
        "endChar": 3
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "908a0dba_6c48a41d",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 80,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Since there is only one case I won\u0027t use the switch but instead of:\n\nif !condition {\n  continue\n}\n// More code here.\n\nI\u0027ll do:\n\nif condition {\n  // More code here.\n}\n\nDoes that sound better?",
      "parentUuid": "ece90960_e42a78cf",
      "range": {
        "startLine": 78,
        "startChar": 2,
        "endLine": 80,
        "endChar": 3
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d92d2a74_db7c4b96",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 82,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "ditto: see previvous comments about using period / starting with capital letter in error strings",
      "range": {
        "startLine": 82,
        "startChar": 25,
        "endLine": 82,
        "endChar": 54
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6ffad05_ba581d00",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 82,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d92d2a74_db7c4b96",
      "range": {
        "startLine": 82,
        "startChar": 25,
        "endLine": 82,
        "endChar": 54
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83204047_3939fa95",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 107,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "I wouldn\u0027t couple deviceData into this function.\nit seems that the \"parseXXX\" functions just parse something and return it.\n\nin this case I\u0027d do something like:\n\n    // it can return uint64 if you prefer\n    func parseInfo(ling string) bus, vendorID, productID int, error {\n    }",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 107,
        "endChar": 51
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1608325_dab508b7",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 107,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83204047_3939fa95",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 107,
        "endChar": 51
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8176b0bd_60aa856c",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 120,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "nit:\n\nif len(info) \u003d\u003d 0 {\n}",
      "range": {
        "startLine": 120,
        "startChar": 14,
        "endLine": 120,
        "endChar": 19
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "974fa8e5_86c65603",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 120,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8176b0bd_60aa856c",
      "range": {
        "startLine": 120,
        "startChar": 14,
        "endLine": 120,
        "endChar": 19
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff7678db_6b00808f",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "nit: \"info\"... but if you want to capitalize Info, then do:\n\n\"unexpected number of elements in Info line; got %d, want: 3\"",
      "range": {
        "startLine": 121,
        "startChar": 24,
        "endLine": 121,
        "endChar": 28
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52d60205_16d50be1",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "want",
      "range": {
        "startLine": 121,
        "startChar": 88,
        "endLine": 121,
        "endChar": 94
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c265f5ce_143c3d8e",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52d60205_16d50be1",
      "range": {
        "startLine": 121,
        "startChar": 88,
        "endLine": 121,
        "endChar": 94
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "141d9f7a_713b982d",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff7678db_6b00808f",
      "range": {
        "startLine": 121,
        "startChar": 24,
        "endLine": 121,
        "endChar": 28
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfce4b09_6568bd16",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 150,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "is this still used? can you do the regexp without it?",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 37
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2447e894_ede44a04",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 150,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "The parseTime function assumes that it will receive the whole line and not just the timestamp. The whole line will be of the format \"\u003ctimestamp\u003e \u003csize\u003e \u003cd_1\u003e ... \u003cd_size\u003e\". Since the size of the line is not known until after parsing the size constructing the regex for the whole line would make the code a bit more complex (unnecessarily so in my opinion).\n\nA possible solution would be to call the parseTime function like so: parseTime(strings.Fields(line)[0]). If you think that the function should only be dealing with the timestamp instead of the whole line.",
      "parentUuid": "dfce4b09_6568bd16",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 37
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e51da5fa_2416df7e",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 150,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-07T01:58:23Z",
      "side": 1,
      "message": "the regular expression should work... added comment patchset #13",
      "parentUuid": "2447e894_ede44a04",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 37
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d533c3d3_201dd68a",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 150,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-07T18:01:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e51da5fa_2416df7e",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 37
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5be8288_4abeb72b",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 157,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2020-05-05T16:49:52Z",
      "side": 1,
      "message": "nit: we -\u003e We",
      "range": {
        "startLine": 157,
        "startChar": 4,
        "endLine": 157,
        "endChar": 6
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "480003c3_272d9e12",
        "filename": "src/chromiumos/tast/local/uhid/replay.go",
        "patchSetId": 12
      },
      "lineNbr": 157,
      "author": {
        "id": 1393420
      },
      "writtenOn": "2020-05-06T19:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5be8288_4abeb72b",
      "range": {
        "startLine": 157,
        "startChar": 4,
        "endLine": 157,
        "endChar": 6
      },
      "revId": "94d254630df89319a1e18db4fa9404aec69fce2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}