{
  "comments": [
    {
      "key": {
        "uuid": "8e2a21d4_7113f0e6",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/settings_bridge.go",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2019-12-20T06:22:17Z",
      "side": 1,
      "message": "You can use %t (or %v) and FormatBool is not needed.\nhttps://golang.org/pkg/fmt/#hdr-Printing",
      "range": {
        "startLine": 35,
        "startChar": 81,
        "endLine": 35,
        "endChar": 82
      },
      "revId": "05f7f75ad9ca8482acf6ff1d0f1084304525b0f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddb6b4e7_5e76b123",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/settings_bridge.go",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2019-12-20T06:22:17Z",
      "side": 1,
      "message": "nit: Could you remove the empty line, so the toggle.. and the defer statement are paired?",
      "revId": "05f7f75ad9ca8482acf6ff1d0f1084304525b0f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0517083c_39e049ef",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/settings_bridge.go",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1355245
      },
      "writtenOn": "2019-12-20T08:53:13Z",
      "side": 1,
      "message": "I\u0027m also wondering toggleAccessibility may return error. Don\u0027t we need to catch that?\n\nFurthermore, if we fail to disable ChromeVox, other tests that uses the same precondition might run with ChromeVox.\n\nOka-san, do you think we need to consider such situation?",
      "parentUuid": "ddb6b4e7_5e76b123",
      "revId": "05f7f75ad9ca8482acf6ff1d0f1084304525b0f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a24bf5c_71e9e357",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/settings_bridge.go",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2019-12-20T09:21:17Z",
      "side": 1,
      "message": "That\u0027s a good point. I think the test should fail on failure of toggleAccessibility, but no further fail-safe mechanism is not needed. Our assumption is this test should be in CQ, and that means if it returns an error we should anyways fix it.",
      "parentUuid": "0517083c_39e049ef",
      "revId": "05f7f75ad9ca8482acf6ff1d0f1084304525b0f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcdcd4d8_fa9c6b85",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/settings_bridge.go",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2019-12-20T09:22:58Z",
      "side": 1,
      "message": "I think you can use following construct.\n\nfunc testSpoken...(...) (retErr error) {\n  ...\n  defer func() {\n    if err :\u003d toggleAccessibility(ctx, tconn, false); err !\u003d nil \u0026\u0026 retErr \u003d\u003d nil {\n      retErr \u003d err\n    }\n  }()\n  ...\n}",
      "parentUuid": "3a24bf5c_71e9e357",
      "revId": "05f7f75ad9ca8482acf6ff1d0f1084304525b0f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}