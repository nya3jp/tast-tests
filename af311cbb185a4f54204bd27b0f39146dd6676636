{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4d4a725b_eda95fbd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2021-11-06T01:03:21Z",
      "side": 1,
      "message": "Dot11?",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 17,
        "endChar": 7
      },
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfa098e0_8f3e291a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1521657
      },
      "writtenOn": "2021-11-08T22:34:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4d4a725b_eda95fbd",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 17,
        "endChar": 7
      },
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01f00b26_dcdaa148",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2021-11-06T01:03:21Z",
      "side": 1,
      "message": "Why is it that some packets still have valid Dot11 FCS and not all of them?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 36
      },
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee73b87e_319d0bce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1521657
      },
      "writtenOn": "2021-11-08T22:33:15Z",
      "side": 1,
      "message": "The brokenness was found by decoder function LayerTypeDot11InformationElement(), due to mismatch between type len and actual len.\nThe Dot11 FCS is alway good in our test suite, because gopacket generates one at parsing time, if RadioTap.FCS\u003dfalse.\nPCAP won\u0027t abandon packets with RadioTap.BadFCS\u003dtrue.",
      "parentUuid": "01f00b26_dcdaa148",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 36
      },
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88909128_78498801",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1521657
      },
      "writtenOn": "2021-11-10T01:46:03Z",
      "side": 1,
      "message": "I almost re-wrote the CL body. Please review it from the beginning. Thank you!",
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d63e8c94_da4580f9",
        "filename": "src/chromiumos/tast/remote/wificell/pcap/parse.go",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1158184
      },
      "writtenOn": "2021-11-09T01:24:24Z",
      "side": 1,
      "message": "Interesting change :-)\nBut maybe it would be better in a follow-up CL? It\u0027s not mentioned in the commit message and is a bit different from the FCS issues I think?",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 58,
        "endChar": 4
      },
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f059f36a_52936950",
        "filename": "src/chromiumos/tast/remote/wificell/pcap/parse.go",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1521657
      },
      "writtenOn": "2021-11-10T01:46:03Z",
      "side": 1,
      "message": "\u003e Interesting change :-)\n\u003e But maybe it would be better in a follow-up CL? It\u0027s not mentioned in the commit message and is a bit different from the FCS issues I think?\n\nI dropped these lines in my latest patch. I agree it\u0027s better to address these in a follow-up CL.",
      "parentUuid": "d63e8c94_da4580f9",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 58,
        "endChar": 4
      },
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4d3a4fb_e5981e38",
        "filename": "src/chromiumos/tast/remote/wificell/pcap/parse.go",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1405522
      },
      "writtenOn": "2021-11-08T01:58:01Z",
      "side": 1,
      "message": "Here is my two cents. I would recommend to combine RadioTapFCSValid and Dot11FCSValid as either one check fails should lead to FCS check fail and the FCS is doc11 FCS. So the function name Dot11FCSValid already indicates the 802.11 FCS is valid no matter it is indicated in radiotap or calculated in FCS.\n\nThere are some sniffer which does not validate FCS in promiscuous mode, for example this capture (https://wiki.wireshark.org/SampleCaptures?action\u003dAttachFile\u0026do\u003dget\u0026target\u003dwpa-Induction.pcap). If you filter out \"wlan.fcs.status \u003d\u003d bad\", you will see packet with FCS valid in radiotap flag but indeed has wrong FCS.",
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "580d3712_f0206226",
        "filename": "src/chromiumos/tast/remote/wificell/pcap/parse.go",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1521657
      },
      "writtenOn": "2021-11-08T22:33:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c4d3a4fb_e5981e38",
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b095c0ef_45ee30fa",
        "filename": "src/chromiumos/tast/remote/wificell/pcap/parse.go",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1158184
      },
      "writtenOn": "2021-11-09T01:24:24Z",
      "side": 1,
      "message": "Agreed with Jintao, since there is an order (RadioTapFCSValid() must be run before Dot11FCSValid()) it is likely that callers won\u0027t realize that. Making the API as simple as possible with only one high-level \"has the packet been corrupted or not?\" filter that uses several internal checks internally sgtm",
      "parentUuid": "580d3712_f0206226",
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f034d23_3f3b6350",
        "filename": "src/chromiumos/tast/remote/wificell/pcap/parse.go",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1521657
      },
      "writtenOn": "2021-11-10T01:46:03Z",
      "side": 1,
      "message": "Done.\nCombined these two together in one filter. Check RadioTap before Dot11.\nUsers only need to call Dot11FCSValid() for integrity check.\nThe changes in concrete tests are dropped too.",
      "parentUuid": "b095c0ef_45ee30fa",
      "revId": "af311cbb185a4f54204bd27b0f39146dd6676636",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}