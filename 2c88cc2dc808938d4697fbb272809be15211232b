{
  "comments": [
    {
      "key": {
        "uuid": "407b44c1_f2d879bb",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/pointer/controller.go",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2020-04-01T15:04:43Z",
      "side": 1,
      "message": "I was curious how this works and googled it. It seems that the return vallue must be a named result parameter so that it is within the scope when the deferred func executes if we want the deferred func to modify it.\n\nThat is, \n\n\tfunc Drag(...) error {\n\t\tvar err error\n\t\t...\n\u003d\u003e\n\n\tfunc Drag(...) (err error) {\n\t\t...\n\nSee \"Defer and return value\" in https://medium.com/a-journey-with-go/go-how-does-defer-statement-work-1a9492689b6e",
      "range": {
        "startLine": 59,
        "startChar": 3,
        "endLine": 59,
        "endChar": 19
      },
      "revId": "2c88cc2dc808938d4697fbb272809be15211232b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cab61518_d42c36e8",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/pointer/controller.go",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-04-01T17:40:08Z",
      "side": 1,
      "message": "There\u0027s a guideline to avoid such pattern -- naming result value just for simplifying the implementation: see https://github.com/golang/go/wiki/CodeReviewComments#named-result-parameters\n\n\u003e Don\u0027t name result parameters just to avoid declaring a var inside the function; that trades off a minor implementation brevity at the cost of unnecessary API verbosity.",
      "parentUuid": "407b44c1_f2d879bb",
      "range": {
        "startLine": 59,
        "startChar": 3,
        "endLine": 59,
        "endChar": 19
      },
      "revId": "2c88cc2dc808938d4697fbb272809be15211232b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8e2c9a8_bd7ff331",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/pointer/controller.go",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2020-04-01T17:46:03Z",
      "side": 1,
      "message": "But then this line would be useless since we would only \"return err\" at L65 from \"c.Move()\". Whatever we get from |releaseErr| here would not get returned.",
      "parentUuid": "cab61518_d42c36e8",
      "range": {
        "startLine": 59,
        "startChar": 3,
        "endLine": 59,
        "endChar": 19
      },
      "revId": "2c88cc2dc808938d4697fbb272809be15211232b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37cee5bf_5a1b8d09",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/pointer/controller.go",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-04-01T18:30:16Z",
      "side": 1,
      "message": "oops, you\u0027re correct. I was missing that...",
      "parentUuid": "d8e2c9a8_bd7ff331",
      "range": {
        "startLine": 59,
        "startChar": 3,
        "endLine": 59,
        "endChar": 19
      },
      "revId": "2c88cc2dc808938d4697fbb272809be15211232b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}