{
  "comments": [
    {
      "key": {
        "uuid": "63f6a836_5ee49f2e",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-15T14:32:58Z",
      "side": 1,
      "message": "This could happen when the process is being terminated. Should not happen in this test case? If so, could you comment the reason?",
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87a85f48_7b52d126",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1307765
      },
      "writtenOn": "2019-01-16T04:33:49Z",
      "side": 1,
      "message": "I would expect the test to fail if either process is being terminated. Maybe I don\u0027t understand your comment? I added more comments to the test, hopefully that makes the intent more clear?",
      "parentUuid": "63f6a836_5ee49f2e",
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e72a5c74_82d1168d",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-18T08:41:51Z",
      "side": 1,
      "message": "there is some time between process.Process() at PS5#L35 and proc.Ppid() at PS5#L46. If the process is died during the timing, Ppid() would return an error, and AFAIK, this line handles the case.\n\nIf it should not happen in any case, could you add more comment about why it is safe to do?\nOr, if it could happen in some case, you may want to ignore the error with logging.",
      "parentUuid": "87a85f48_7b52d126",
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1508a843_2e22c3ed",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1307765
      },
      "writtenOn": "2019-01-22T00:25:36Z",
      "side": 1,
      "message": "I feel like I\u0027m missing something still. My expectation, and that which I\u0027m testing, is that both arc-networkd processes (the parent and the child) are always up. If the first arc-networkd\u0027s parent dies then I think things are going bad on the device anyway and it probably doesn\u0027t make sense to pass the test. So I think what\u0027s here makes sense to me (make sure both procs and, by extension, their parents are up). Adding comments to reinforce this seems overly verbose and obvious.\n\nI see that the shill_stability test does in fact ignore these kinds of errors and I guess you\u0027d Fatal out eventually. Are you suggesting to either Fatal here or use continue and fail later because the number of PIDs found is less than the number expected?",
      "parentUuid": "e72a5c74_82d1168d",
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9540e83_730142c3",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-25T15:33:24Z",
      "side": 1,
      "message": "If there should be no chance that the process could die at any situation, letting test fail makes sense to me.\nIf it could technically possible, then just letting test fail here could cause the test flakiness. Probably it is necessary to stabilize the situation before here, or if we could not assume that process can keep running, it is necessary to think about what needs to be checked here.\n\nI assume the former case, now, and then your latest PS LGTM.",
      "parentUuid": "1508a843_2e22c3ed",
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec9f9602_ef884a82",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-15T14:32:58Z",
      "side": 1,
      "message": "In precise, this is not correct. Closing arc/chrome instance wouldn\u0027t trigger logout.",
      "range": {
        "startLine": 76,
        "startChar": 77,
        "endLine": 76,
        "endChar": 109
      },
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e0c18e0_be14e546",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1307765
      },
      "writtenOn": "2019-01-16T04:33:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ec9f9602_ef884a82",
      "range": {
        "startLine": 76,
        "startChar": 77,
        "endLine": 76,
        "endChar": 109
      },
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85750f07_564f03a6",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-15T14:32:58Z",
      "side": 1,
      "message": "Clar: How is this guaranteed here?",
      "range": {
        "startLine": 90,
        "startChar": 33,
        "endLine": 91,
        "endChar": 18
      },
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "579e82f4_3aa07727",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1307765
      },
      "writtenOn": "2019-01-16T04:33:49Z",
      "side": 1,
      "message": "Added comments. To recap though - if we\u0027ve gotten to this point where the UI is up and go through the process of restarting that job, then, since arc-networkd starts (once) so early in the host boot cycle, then it has to be done with its initialization work by this point. Also, the container boot continuation itself blocks on a sentinel file that arc-networkd writes out when it\u0027s confirms the network device is ready.",
      "parentUuid": "85750f07_564f03a6",
      "range": {
        "startLine": 90,
        "startChar": 33,
        "endLine": 91,
        "endChar": 18
      },
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdbe9cb2_57badff5",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-18T08:41:51Z",
      "side": 1,
      "message": "Please let me just clarify just in case.\nMy question is; who waits for and how it is made sure that arc-networkd (arc-network-bridge upstart job) is running at this moment?\nAccording to arc-network-bridge.conf, it is guaranteed that the job is started after nat is started, but I couldn\u0027t find that it is guaranteed that the job is running somehow indirectly from here.\n\nIf there is something which guarantees the condition, I think it\u0027s nice to be commented how, here.\nOr, if there is no strong guarantee, e.g., if it is just \"arc-networkd\" should start earlier,\nI recommend to add wait here, e.g., like by upstart.WaitForJobStatus().\n\nWDYT?",
      "parentUuid": "579e82f4_3aa07727",
      "range": {
        "startLine": 90,
        "startChar": 33,
        "endLine": 91,
        "endChar": 18
      },
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85f6f4ad_4919100a",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/networkd_stability.go",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1307765
      },
      "writtenOn": "2019-01-22T00:25:36Z",
      "side": 1,
      "message": "Thanks. I guess I was making certain assumptions about the state of the DUT. I see know that these are not hermetic and can leave things in random states. I\u0027ve added some conditional job waits as you suggested.",
      "parentUuid": "fdbe9cb2_57badff5",
      "range": {
        "startLine": 90,
        "startChar": 33,
        "endLine": 91,
        "endChar": 18
      },
      "revId": "2e35b9eca8e07f397f77c77cfd9ea19e30cf4153",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}