{
  "comments": [
    {
      "key": {
        "uuid": "eb06a326_c38a94f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1202834
      },
      "writtenOn": "2020-08-13T21:01:19Z",
      "side": 1,
      "message": "It seems reasonable to do string parsing of crossystem output. +cc VBOOT maintainer in case there are plans to expose structured output from crossystem, or if there is some canonical way to get to crossystem output (over something like dbus or through healthd).",
      "revId": "6cfcba3b5a686dd80082fc2145cf69534c257f54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3115062_5a82176f",
        "filename": "src/chromiumos/tast/remote/firmware/reporters/crossystem.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1202834
      },
      "writtenOn": "2020-08-13T21:01:19Z",
      "side": 1,
      "message": "I think it will be best to filter out the \"specific-use fields\" enumerated at docs/os_config.md.",
      "range": {
        "startLine": 46,
        "startChar": 5,
        "endLine": 46,
        "endChar": 26
      },
      "revId": "6cfcba3b5a686dd80082fc2145cf69534c257f54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8b24607_8d1a5720",
        "filename": "src/chromiumos/tast/remote/firmware/reporters/crossystem.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2020-08-13T22:25:09Z",
      "side": 1,
      "message": "I modeled this logic after faft code.\n\nWouldn\u0027t filtering them out prevent testing scenarios involving those if the need ever arises? Besides, it would be hard to keep the code here and that doc (and also the actual implementation) in sync due to this tight coupling.",
      "parentUuid": "d3115062_5a82176f",
      "range": {
        "startLine": 46,
        "startChar": 5,
        "endLine": 46,
        "endChar": 26
      },
      "revId": "6cfcba3b5a686dd80082fc2145cf69534c257f54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00e460bc_a3aefc3c",
        "filename": "src/chromiumos/tast/remote/firmware/reporters/crossystem.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1202834
      },
      "writtenOn": "2020-08-14T17:15:22Z",
      "side": 1,
      "message": "From YAGNI perspective, would prefer we only expose when the need arises (have test authors explicitly add to an allowlist).  It will force test authors to be thoughtful about what they depend on.\n\nWhat about an allow list for keys that are in-use or immediately planned: since our initial exercise in the project is to confirm parallel capabilities to FAFTSetup, what about an allowlist of just mainfw_type to start with?",
      "parentUuid": "d8b24607_8d1a5720",
      "range": {
        "startLine": 46,
        "startChar": 5,
        "endLine": 46,
        "endChar": 26
      },
      "revId": "6cfcba3b5a686dd80082fc2145cf69534c257f54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}