{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f8a2c6a0_8d23b69e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1197444
      },
      "writtenOn": "2021-06-08T01:07:57Z",
      "side": 1,
      "message": "Hi PTAL thanks!",
      "revId": "f4a8aaeef9cf189029d275fc347c190a0170306d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2294f3ad_7b849b62",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-06-08T02:39:52Z",
      "side": 1,
      "message": "This will directly enable new tests in CQ.\n\nHow Attr works: Like SoftwareDeps and HardwareDeps, Attr is a common attribute applies to all params. If you want to append condition to a test param, you can use ExtraSoftwareDeps, ExtraHardwareDeps and ExtraAttr.\n\nAs discussed, we are okay to start with private suite (or informational if you want). To do this:\n// private suite\n\nAttr:         []string{\"group:input-tools\", \"group:input-tools-upstream\"},\n{\n\tName: \"us_en\",\n\tVal:  ime.INPUTMETHOD_XKB_US_ENG,\n\tExtraAttr: []string{\"group:mainline\"},\n},\n{\n\tName: \"jp_ja\",\n\tVal:  ime.INPUTMETHOD_NACL_MOZC_US,\n},\n{\n\tName: \"pinyin\",\n\tVal:  ime.INPUTMETHOD_PINYIN_CHINESE_SIMPLIFIED,\n},",
      "range": {
        "startLine": 37,
        "startChar": 3,
        "endLine": 44,
        "endChar": 5
      },
      "revId": "f4a8aaeef9cf189029d275fc347c190a0170306d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2cb3761_400e3bf8",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-06-08T02:39:52Z",
      "side": 1,
      "message": "It does not make sense to use vkbCtx in pk test. Since WaitForDecoderEnabled() does not actually do anything, can you please create a private inline function waitForDecoderEnabled sleeps 10s.",
      "range": {
        "startLine": 82,
        "startChar": 1,
        "endLine": 82,
        "endChar": 31
      },
      "revId": "f4a8aaeef9cf189029d275fc347c190a0170306d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02abc747_55749295",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1379515
      },
      "writtenOn": "2021-06-08T01:17:02Z",
      "side": 1,
      "message": "Style thought: maybe this giant object should be moved to be some sort of more data friendly file (like JSON?) so that it is easier to add more test cases.  Something like (CSV example since that is easier in code review)\n\nIME,Input string, accel action (optional), expected\n\nThen we can just cut + paste from a spreadsheet to add more tests?\n\nWDYT?",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 35
      },
      "revId": "f4a8aaeef9cf189029d275fc347c190a0170306d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90a86019_226edf3a",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-06-08T02:39:52Z",
      "side": 1,
      "message": "This will be part of a project @alvinjia works on (go/tast-inputs-param)\n\nIt is still in early stage. We can collect requirements and discuss them there. WDYT",
      "parentUuid": "02abc747_55749295",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 35
      },
      "revId": "f4a8aaeef9cf189029d275fc347c190a0170306d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f115532_161ca5be",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1379515
      },
      "writtenOn": "2021-06-09T00:54:02Z",
      "side": 1,
      "message": "If we are going to do this in a separate way later, why not just delay this test until that is ready? saves having to go through submitting 2 sets of tests",
      "parentUuid": "90a86019_226edf3a",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 35
      },
      "revId": "f4a8aaeef9cf189029d275fc347c190a0170306d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "001967c1_a94ea947",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-06-09T01:20:24Z",
      "side": 1,
      "message": "Good point. The project alvinjia starts to work on is the future. It is just a start point. These hardcodes and pain points are actually becoming the requirement and problems to solve in the project. We need start to increase coverage first, then we can have more understanding and good solution there. \n\nRefactoring structure is always coming along with the feature(test) development.",
      "parentUuid": "8f115532_161ca5be",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 35
      },
      "revId": "f4a8aaeef9cf189029d275fc347c190a0170306d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2edc2ac9_e0a1d48a",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2021-06-08T02:39:52Z",
      "side": 1,
      "message": "For expectedText, I am afraid the number index is from decoder, so very fragile. My personal suggestions:\n\nLocate pk candidate popup, find the node text in position and use it as expectedText.\n\nSounds like we need a pk library in parallel to vkb, which provides functions to choose candidates, emoji...",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 22
      },
      "revId": "f4a8aaeef9cf189029d275fc347c190a0170306d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a54f05dd_d5c4f634",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/physical_keyboard_input_fields.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1333018
      },
      "writtenOn": "2021-06-08T08:20:00Z",
      "side": 1,
      "message": "+1. \n\n\"ni \", Enter\n\"ni 5\", Enter\n\"zhong\", Enter\n\"zhong2\", Enter\nall seem very decoder impl dependent and fragile.\n\nWould also prefer if those tests had some way to just check that the suggestion appears somewhere in the candidate popup, instead of expecting them at a specific position.\n\nI don\u0027t think any other Expected text is reasonable for the other test cases, so I think the other tests are fine (Though I\u0027m not familiar with JP)",
      "parentUuid": "2edc2ac9_e0a1d48a",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 22
      },
      "revId": "f4a8aaeef9cf189029d275fc347c190a0170306d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}