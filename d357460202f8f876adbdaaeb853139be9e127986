{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9f54dd64_f0f76e9e",
        "filename": "src/chromiumos/tast/local/bundles/cros/wifi/shill_service.go",
        "patchSetId": 8
      },
      "lineNbr": 2539,
      "author": {
        "id": 1521657
      },
      "writtenOn": "2022-10-06T17:21:32Z",
      "side": 1,
      "message": "Why is the scan timer counted towards the effort to FW reset? Did you consider counting the scan time towards the `pingOnce()`? Intel iwlwifi doesn\u0027t handle explicitly disconnect/reconnect either. And they start ping test right after writing to reset path. Can you align this design if two chipsets have similar behaviors?",
      "range": {
        "startLine": 2539,
        "startChar": 74,
        "endLine": 2539,
        "endChar": 83
      },
      "revId": "d357460202f8f876adbdaaeb853139be9e127986",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ac72d12_cfe1d2a1",
        "filename": "src/chromiumos/tast/local/bundles/cros/wifi/shill_service.go",
        "patchSetId": 8
      },
      "lineNbr": 2541,
      "author": {
        "id": 1432127
      },
      "writtenOn": "2022-10-05T23:47:56Z",
      "side": 1,
      "message": "Instead of having the sleeps in these functions (ath10kWCN3990Reset, ath11kReset), what do you think about having a testing.Poll in the ping test instead (or polling for complete initialization/full scan state somehow here)? This way, we aren\u0027t suspectible to timing flakiness and we can restart the ping test in case we start it when the fw isn\u0027t ready.\n\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#contexts-and-timeouts\n\n\u003e Sleeping without polling for a condition is discouraged, since it makes tests flakier (when the sleep duration isn\u0027t long enough) or slower (when the duration is too long). If you really need to do so, use testing.Sleep to honor the context timeout.",
      "range": {
        "startLine": 2541,
        "startChar": 0,
        "endLine": 2541,
        "endChar": 36
      },
      "revId": "d357460202f8f876adbdaaeb853139be9e127986",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a489e94_ef8be3cb",
        "filename": "src/chromiumos/tast/local/bundles/cros/wifi/shill_service.go",
        "patchSetId": 8
      },
      "lineNbr": 2541,
      "author": {
        "id": 1426782
      },
      "writtenOn": "2022-10-06T16:55:50Z",
      "side": 1,
      "message": "That is a good point you are making and we have thought about it. Unfortunately, we do not have any mechanism to basically add that instrumentation in kernel. This needs to be added and some way needs to be exposed to the userspace to be notified about FW recovery. This is what is captured in the TODO task. I will see this feature gets implemented soon, but until then we cannot do any polling.",
      "parentUuid": "3ac72d12_cfe1d2a1",
      "range": {
        "startLine": 2541,
        "startChar": 0,
        "endLine": 2541,
        "endChar": 36
      },
      "revId": "d357460202f8f876adbdaaeb853139be9e127986",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "781c22d7_574359db",
        "filename": "src/chromiumos/tast/local/bundles/cros/wifi/shill_service.go",
        "patchSetId": 8
      },
      "lineNbr": 2541,
      "author": {
        "id": 1432127
      },
      "writtenOn": "2022-10-06T23:42:26Z",
      "side": 1,
      "message": "Can we then instead have a testing.Poll loop on the ping test so that it keeps attempting the whole ping test until no packet loss is experienced (until a timeout) and not have a sleep at all?\n\nThe only consideration with this mechanism is that it may hide any transitory ping flake, but that\u0027s debatably a good thing as it may remove a lot of test flake too.",
      "parentUuid": "4a489e94_ef8be3cb",
      "range": {
        "startLine": 2541,
        "startChar": 0,
        "endLine": 2541,
        "endChar": 36
      },
      "revId": "d357460202f8f876adbdaaeb853139be9e127986",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}