{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cf302a27_bb93a743",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2022-05-01T02:20:33Z",
      "side": 1,
      "message": "reviewers, I have modified the nodewith unittest, so I need owners +2 again.\n+shengjun who has previously reviewed this code and is same timezone as me.",
      "revId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d99ccba2_7873747a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-05-01T23:29:37Z",
      "side": 1,
      "message": "Add msta to review the change in nodewith.go\n\nNot sure any special reason to add an extra slash in formatting.",
      "revId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26f9242e_bb854306",
        "filename": "src/chromiumos/tast/local/bundles/cros/terminal/ssh.go",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1413373
      },
      "writtenOn": "2022-05-02T04:14:02Z",
      "side": 1,
      "message": "nit/optional: I know this mount is being actively discouraged now, no action required just thought I\u0027d bring it up.\n\nhttps://groups.google.com/u/1/a/google.com/g/cros-cryptohome-dev/c/uCwZyHZpVzg/m/9BLSx9tOBAAJ?pli\u003d1",
      "range": {
        "startLine": 65,
        "startChar": 35,
        "endLine": 65,
        "endChar": 55
      },
      "revId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b550f3_bc7f48f5",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/nodewith/nodewith.go",
        "patchSetId": 6
      },
      "lineNbr": 205,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2022-05-02T01:06:28Z",
      "side": 1,
      "message": "Could you revert the changes here to this file. /%v/ was done to make it clear that it\u0027s a regex, and specifically a javascript regex. If you have something like a.b, it won\u0027t be clear that it\u0027s a regex and not a string.",
      "revId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27060251_88dbd649",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/nodewith/nodewith.go",
        "patchSetId": 6
      },
      "lineNbr": 205,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2022-05-02T04:02:15Z",
      "side": 1,
      "message": "The output of convertRegexp() includes the slashes.  It just escapes any slashes inside the regexp.  See changes in nodewith_test.go for what is different.\n\nWhen I was making this CL, I was creating a regexp which included slashes, and it was hard to debug what was going wrong.  I think it helps if Pretty() calls convertRegexp() so that its output matches what is sent to JS eval.",
      "parentUuid": "85b550f3_bc7f48f5",
      "revId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6671529_72c94feb",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/nodewith/nodewith.go",
        "patchSetId": 6
      },
      "lineNbr": 205,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2022-05-02T04:20:06Z",
      "side": 1,
      "message": "Fair enough. How about we change this (and below) to \"name regex: %v\".",
      "parentUuid": "27060251_88dbd649",
      "revId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "596f9ce7_99d82b56",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/nodewith/nodewith.go",
        "patchSetId": 6
      },
      "lineNbr": 205,
      "author": {
        "id": 1186968
      },
      "writtenOn": "2022-05-02T05:01:15Z",
      "side": 1,
      "message": "I\u0027m going to submit as-is to save having to get through CQ again.\n\nCan I leave it for you to make any other changes?\n\nI think the current format is ok. To me it was obvious that name is regexp since it starts and ends with slashes.",
      "parentUuid": "c6671529_72c94feb",
      "revId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "cc1743788fa655fceaedcc3298354a96cedf66d1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}