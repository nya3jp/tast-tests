{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bf73af48_fc568bc9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2022-11-04T16:07:02Z",
      "side": 1,
      "message": "I don\u0027t know why we have New* method for Mouse and Keyboard service. I think it should provide higher level API instead of pathing the road for the user to interact with Mouse and Keyboard directly.",
      "revId": "fc444a0d5d6671f86922fb0edf2e5192efd53b50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24acd3f3_bb909a76",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/keyboard_service.go",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2022-11-04T16:07:02Z",
      "side": 1,
      "message": "Why do we need this? It does not seem like it is used anywhere. Also, what would happend if CloseKeyboard is not called? I would prefer the GRPC server to be stateless if possible.",
      "revId": "fc444a0d5d6671f86922fb0edf2e5192efd53b50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f19703_ea9c3713",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/keyboard_service.go",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1394700
      },
      "writtenOn": "2022-11-04T16:24:28Z",
      "side": 1,
      "message": "We actually need this, the idea is create a keyboard and perform some checks in the ui, and then close it afterwards. we would not be able to do this if we created the keyboard instance and closed it right away. Please take a look at this cl https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/4000430 it used NewKeyboard and CloseKeyboard methods.",
      "parentUuid": "24acd3f3_bb909a76",
      "revId": "fc444a0d5d6671f86922fb0edf2e5192efd53b50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8fbed3c_387a0fb1",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/keyboard_service.go",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1394700
      },
      "writtenOn": "2022-11-04T16:26:06Z",
      "side": 1,
      "message": "for extra context I did not use this keyboard value in the other methods in this service because after talking to jonfan@ he suggested i keep them separate, this would have meant changing a lot of test that require those functionality.",
      "parentUuid": "92f19703_ea9c3713",
      "revId": "fc444a0d5d6671f86922fb0edf2e5192efd53b50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7737b5ef_b64b50e3",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/keyboard_service.go",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-11-04T16:44:28Z",
      "side": 1,
      "message": "Hi Theo, after taking a look at the new 2 APIs and the usage(of simulating a plugging and unplugging event), I feel that it does not quite fit into the current paradigm. Keyboard service is in a small handful of services where we expose to outside of Tast to Google3 so there is less flexibility of changing it down the road. Can we consider moving 2 the methods else where?",
      "parentUuid": "d8fbed3c_387a0fb1",
      "revId": "fc444a0d5d6671f86922fb0edf2e5192efd53b50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfaa8cb0_deb691f5",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/keyboard_service.go",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1394700
      },
      "writtenOn": "2022-11-04T16:51:43Z",
      "side": 1,
      "message": "Sure thing, i could create a new keyboard service, would that be okay? similar to the mouse service.",
      "parentUuid": "7737b5ef_b64b50e3",
      "revId": "fc444a0d5d6671f86922fb0edf2e5192efd53b50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1652e63b_94151939",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/mouse_service.go",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2022-11-04T16:07:02Z",
      "side": 1,
      "message": "I have question here that is similar to what I have for keyboard service. I am not against a mouse service, but I think it should provide higher level functionality such as DragAnDrop, MouseOver, ...",
      "revId": "fc444a0d5d6671f86922fb0edf2e5192efd53b50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b65a9318_b7da7d85",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/mouse_service.go",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1394700
      },
      "writtenOn": "2022-11-04T16:24:28Z",
      "side": 1,
      "message": "For now we do not need the higher level functionality for the test I wrote here https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/3998072 i think those methods could be added as needed. This test requires a mouse to be plugged in, check the ui for state changes, then disconnected and also check the ui for state changes.",
      "parentUuid": "1652e63b_94151939",
      "revId": "fc444a0d5d6671f86922fb0edf2e5192efd53b50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70add4c1_fa451e19",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/mouse_service.go",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-11-04T16:51:58Z",
      "side": 1,
      "message": "Yes, I also agree with the assessment that the service should provide a high level functionality and be as stateless as possible, given that each of those functionalities are self contained.   \nMaybe we should have a separate service that groups all these hardware plugging and unplugging simulation methods.",
      "parentUuid": "b65a9318_b7da7d85",
      "revId": "fc444a0d5d6671f86922fb0edf2e5192efd53b50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}