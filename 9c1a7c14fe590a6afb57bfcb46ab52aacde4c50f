{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "825ddb72_d86960ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1508123
      },
      "writtenOn": "2022-10-31T02:49:15Z",
      "side": 1,
      "message": "It was just a mistake with the fixture not being imported, I\u0027ve fixed it now along with another problem I found in handling version numbers.\n\nThis is ready for review, please take a look.",
      "revId": "9c1a7c14fe590a6afb57bfcb46ab52aacde4c50f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "336dcf1d_c3f7e210",
        "filename": "src/chromiumos/tast/common/hps/hpsutil/firmware.go",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 1454332
      },
      "writtenOn": "2022-11-02T02:46:30Z",
      "side": 1,
      "message": "if we don\u0027t want power/performance coverage on go/cros-hps-graphs then this is fine. If we do want it then we\u0027ll need to parametrize the Sweetberry test as well.\n\nThere would be not a lot of benefit in doing so unless we plan on doing big changes.",
      "revId": "9c1a7c14fe590a6afb57bfcb46ab52aacde4c50f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "850a34bf_acfb6ba1",
        "filename": "src/chromiumos/tast/common/hps/hpsutil/firmware.go",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 1508123
      },
      "writtenOn": "2022-11-03T03:04:07Z",
      "side": 1,
      "message": "Yes agreed. We could tackle it in a followup patch, but for now I am not attempting to run the power tests against unreleased firmware.",
      "parentUuid": "336dcf1d_c3f7e210",
      "revId": "9c1a7c14fe590a6afb57bfcb46ab52aacde4c50f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d1fc42f_e5fabfcc",
        "filename": "src/chromiumos/tast/remote/bundles/cros/hps/camerabox_lol_on.go",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1454332
      },
      "writtenOn": "2022-11-02T02:46:30Z",
      "side": 1,
      "message": "Don\u0027t we need to add a fixture for stable firmware as well? Otherwise I think it could flash latest first and then run the \"!latest\" tests without flashing stable.",
      "revId": "9c1a7c14fe590a6afb57bfcb46ab52aacde4c50f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94ec6523_41a10399",
        "filename": "src/chromiumos/tast/remote/bundles/cros/hps/camerabox_lol_on.go",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1508123
      },
      "writtenOn": "2022-11-03T03:04:07Z",
      "side": 1,
      "message": "So the fixture takes care to put hpsd back to the normal firmware at the teardown. Whenever the fixture is not active, we will be using normal firmware. There is no need for a fixture for that since it\u0027s the configuration that comes in the image already.",
      "parentUuid": "6d1fc42f_e5fabfcc",
      "revId": "9c1a7c14fe590a6afb57bfcb46ab52aacde4c50f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "630db442_c15bdebe",
        "filename": "src/chromiumos/tast/remote/bundles/cros/hps/fixture/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-10-31T21:58:43Z",
      "side": 1,
      "message": "just want to check: if any of the function calls fails, could it leave the DUT in a corrupted state that may affect other tests (i.e., non-hps tests)?\n\nThere was a case where the AutouUdate tests didn\u0027t recover the DUTs properly (especially when the tests failed), causing following tests that assume a clean DUT to fail. Just want to check it won\u0027t happen here.",
      "range": {
        "startLine": 54,
        "startChar": 36,
        "endLine": 54,
        "endChar": 41
      },
      "revId": "9c1a7c14fe590a6afb57bfcb46ab52aacde4c50f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "274acf27_c800e257",
        "filename": "src/chromiumos/tast/remote/bundles/cros/hps/fixture/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1508123
      },
      "writtenOn": "2022-10-31T23:08:06Z",
      "side": 1,
      "message": "It\u0027s a good question.\n\nThis fixture is only messing with the hpsd config, and I tried to make it as robust as possible (only overwrite the file at the end, leave the original in place, etc). But it\u0027s still possible this could cause some problem like hpsd failing to start or crashing etc. That shouldn\u0027t affect anything on the DUT besides HPS-related functionality though.\n\nOne obvious exception is MakeRootfsWritable which probably has some messy failure modes (I didn\u0027t look closely at it because it\u0027s an existing utility function). This fixture also makes no attempt to put the rootfs back to read-only because there didn\u0027t seem to be any precedent for that.\n\nI don\u0027t think it\u0027s much of an issue though, because this fixture is only used by the HPS Camerabox tests, and they are grouped into the hps-cq suite. They are excluded from all the normal test suites, since they need special hardware. So there should be no risk of flow-on effects from this fixture messing things up.",
      "parentUuid": "630db442_c15bdebe",
      "range": {
        "startLine": 54,
        "startChar": 36,
        "endLine": 54,
        "endChar": 41
      },
      "revId": "9c1a7c14fe590a6afb57bfcb46ab52aacde4c50f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f41f990d_78382a01",
        "filename": "src/chromiumos/tast/remote/bundles/cros/hps/fixture/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1454332
      },
      "writtenOn": "2022-11-02T02:46:30Z",
      "side": 1,
      "message": "can we abort/fail if overrideOrigFilename already exists? in case we didn\u0027t do proper Teardown before, in order to avoid strange behaviour",
      "revId": "9c1a7c14fe590a6afb57bfcb46ab52aacde4c50f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c27da6c_c1c35ff6",
        "filename": "src/chromiumos/tast/remote/bundles/cros/hps/fixture/fixture.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1508123
      },
      "writtenOn": "2022-11-03T03:04:07Z",
      "side": 1,
      "message": "Good idea.\n\nIn case a test encounters some unexpected state like that, is it preferred for the test to fail with a good error, or should the test actually try to recover back to a good state?\n\nWe could easily do either option here. If the test finds the .orig file already existing it could just assume it is legit and was left by a previous run and thus leave it in place and continue with the tests. Or, we could consider it fatal for the fixture in which case a human will need to see the problem and repair it manually.\n\nI guess the latter option is \"safer\" in the sense of alerting us to unexpected problems, but the former option is easier for maintenance. I\u0027ll try a version of this fixture which does the repair.",
      "parentUuid": "f41f990d_78382a01",
      "revId": "9c1a7c14fe590a6afb57bfcb46ab52aacde4c50f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}