{
  "comments": [
    {
      "key": {
        "uuid": "0f41e447_8d8b3bc4",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-19T00:19:39Z",
      "side": 1,
      "message": "i think that \"clamshell\" is the wrong word to use here; it\u0027s typically used to refer to laptop-like devices that are incapable of switching to tablet mode (i.e. non-convertibles).\n\n\"tablet mode\" and \"laptop mode\" are the two terms that are typically used to describe the modes that a convertible device can be in.\n\n(but see comment below on Mode())",
      "range": {
        "startLine": 16,
        "startChar": 4,
        "endLine": 16,
        "endChar": 17
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ec66e4b_fe3e2543",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-19T00:19:39Z",
      "side": 1,
      "message": "please define dedicated types for enums instead of using untyped constants:\n\n  type DisplayMode int\n  const (\n      LaptopMode DisplayMode \u003d iota\n      TabletMode\n  )",
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d196a5e6_ce5e1898",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "Please avoid saving ctx to the struct.\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#contexts",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 26
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a7eef02_7fcbf42a",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-01-21T03:54:59Z",
      "side": 1,
      "message": "Could you explicitly document |a| is NOT owned, and the caller still has the responsibility to close it?",
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fd835cf_c5937588",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "nit: Typically Go code has very short receiver names, e.g. just \"d\". It was surprising for me as well, but that\u0027s how Go does...\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#receiver-names",
      "range": {
        "startLine": 43,
        "startChar": 6,
        "endLine": 43,
        "endChar": 10
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af7d0c4e_7abaf655",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-01-18T22:56:00Z",
      "side": 1,
      "message": "technically, Mode() doesn\u0027t belong to Display. Displays are displays... and the one that is Clamshell and/or Tablet is the device, not the display.\nBut I didn\u0027t want to create a Device for just one function. A possible solution is to move it back to the Test file (CL #3).\nideas?",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce08925d_999e2854",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-19T00:19:39Z",
      "side": 1,
      "message": "i\u0027m not sure that this belongs here. where is \"dumpsys display\" getting this state from? is it just a downstream consumer of something else?\n\nthe kernel exposes a tablet mode switch device, which reports a state that comes from the EC, which (iiuc) determines the mode by inferring the lid angle based on accelerometer readings.\n\npowerd watches the switch and uses it to report the state to chrome. does chrome pass it to android?\n\nif that\u0027s the source of the state that\u0027s being returned here, i think it makes more sense for tast to get it directly from powerd. you can make a GetSwitchStates d-bus method call to get back a protobuf. iirc, chrome\u0027s code to do this is in PowerManagerClient, if you want to take a look at it.",
      "parentUuid": "af7d0c4e_7abaf655",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83770c5c_fed303e9",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "Please pass ctx to this method. Ditto for other methods.",
      "range": {
        "startLine": 48,
        "startChar": 21,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fea644b5_34262377",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "It would be good to call cmd.DumpLog(ctx) to leave logs what happened.",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 68
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "890f1f5d_4c369f27",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "nit: it would be clearer to add \\n here",
      "range": {
        "startLine": 61,
        "startChar": 30,
        "endLine": 61,
        "endChar": 31
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a300bf61_508dc239",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "Did you mean + instead of * here? (That is, match only the continued lines)",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 62,
        "endChar": 9
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a18e115_df023ee7",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-19T00:19:39Z",
      "side": 1,
      "message": "i\u0027m anxious about all of these regexes being used to parse output that looks like it\u0027s intended primarily for consumption by humans. does android expose this information in a more-structured way? is there any way to request specific properties?",
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bc2db0a_653b0481",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-01-19T00:54:00Z",
      "side": 1,
      "message": "`dumpsys` is CLI in Android that dumps the different Android services.\n`dumpsys` usually supports the \u0027--proto\u0027 argument that dumps protobuf instead of string.\nThe problem is that \"dumpsys display\" does not support it :( ... adding --proto support to \"dumpsys display\" is not something simple. \n\nI\u0027m open to suggestions here. Perhaps we can introduce a new CLI that dumps protobuf and only includes the needed variables for the tast tests.\n\nWe can use the system properties, but they are not as flexible, and requires updating/removing them in many places.",
      "parentUuid": "6a18e115_df023ee7",
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b36b3095_77d32931",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-19T01:06:01Z",
      "side": 1,
      "message": "thanks for the details! i\u0027m okay with regular expressions if they\u0027re the best option that\u0027s available; i just wanted to check if that\u0027s indeed the case. :-)",
      "parentUuid": "7bc2db0a_653b0481",
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60bb2b36_bb2bc16d",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "same here (+ instead of *)",
      "range": {
        "startLine": 63,
        "startChar": 5,
        "endLine": 63,
        "endChar": 6
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34d1c609_b7a1f050",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "I think it\u0027s not optimal but acceptable... dumpsys is a popular tool for inspecting the system state. Also, accessing Android information usually needs writing Java apps.",
      "parentUuid": "b36b3095_77d32931",
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcedc00a_0e64bbe3",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1202079
      },
      "writtenOn": "2019-01-18T22:56:00Z",
      "side": 1,
      "message": "ATM, captionHeight is global. But oshima@ mentioned that caption-per-display will be added soon-ish.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 51
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dff0ca7b_de3feb8e",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-19T00:19:39Z",
      "side": 1,
      "message": "nit: please label fields when it results in clearer code: (w, h int, err error)\n\nbut you probably want a \"Size\" struct since you\u0027re returning these in multiple places",
      "range": {
        "startLine": 104,
        "startChar": 31,
        "endLine": 104,
        "endChar": 39
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bf7d911_4f2ee8f2",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "nit: please delete this unused line",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 131,
        "endChar": 74
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9ae9d4a_aceb319e",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-21T09:04:34Z",
      "side": 1,
      "message": "It would be good to annotate the return values with names not to mix two ints: (width, height int, err error)",
      "range": {
        "startLine": 137,
        "startChar": 37,
        "endLine": 137,
        "endChar": 52
      },
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b5dfe46_8c2a6e69",
        "filename": "src/chromiumos/tast/local/arc/display.go",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-19T00:19:39Z",
      "side": 1,
      "message": "delete?",
      "revId": "0bb57f5ff83f2df5b49a470477aca13158e9bc2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}