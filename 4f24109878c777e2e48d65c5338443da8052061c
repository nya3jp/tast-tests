{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d57cad77_2437aae3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2022-03-03T07:49:15Z",
      "side": 1,
      "message": "QQ: extending the duration to 20 sec will make all devices go through the SIGTERM path, right?",
      "revId": "4f24109878c777e2e48d65c5338443da8052061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf8fe238_9284cbba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2022-03-03T07:53:10Z",
      "side": 1,
      "message": "Yeah I guess so, while I think it\u0027s a race condition, as I mentioned in the bug [1].\n\n[1]: https://b.corp.google.com/issues/221351726#comment9",
      "parentUuid": "d57cad77_2437aae3",
      "revId": "4f24109878c777e2e48d65c5338443da8052061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87844950_e64b34df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2022-03-03T08:42:27Z",
      "side": 1,
      "message": "If we need to make sure the test really stops the perfetto process, we should make this value a much larger value. Are we sure 20 sec is enough to make this happen?\n\nNote that if perfetto exits normally, sess.Stop() won\u0027t return any error. The test can fail because the iioservice cmdline runs for too long, and perfetto doesn\u0027t collect the trace event we want. This is a source of test flakeness.\n\nIn this sense, I\u0027d suggest we make it so long that we are sure the iioservice cmdline won\u0027t exceed the duration. If we worry about the test running for too long, we can shorten the test context to make it fail loudly so we can take a look.",
      "parentUuid": "cf8fe238_9284cbba",
      "revId": "4f24109878c777e2e48d65c5338443da8052061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2f6c7ac_8390c08c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2022-03-03T08:58:43Z",
      "side": 1,
      "message": "20 sec is long enough for LocalPerfettoTBMTracedProbes (which takes 10 sec [1]), SensorIioservice (which takes 1 sec for each sensor), and SensorIioserviceHard (which takes about 10 sec in total: `Completed test hardware.SensorIioserviceHard in 12.954s with 0 error(s)`), so it\u0027s currently enough for all tests using it.\nI\u0027m okay to extend it further. Just name a value ðŸ˜Š\n\nI understand what you mean about the long enough duration, while by the race condition, I mean otherwise: In my trial, without the previous SIGTERM fix, and with this extended duration, SensorIioserviceHard would still pass (with luck I assume) without |Cmd.Wait()| returning with SIGTERM failure. I guess it\u0027s because when |Cmd.Wait()| is called, the cmdline perfetto has already gone (stopped by our SIGTERM sent).\nIn another case, if the cmdline perfetto is still alive when |Cmd.Wait()| is called, and after that the signal SIGTERM is received by the cmdline perfetto, I believe this causes |Cmd.Wait()| to return SIGTERM failure.\n\nWDYT?\n\n[1]: https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/platform/local_perfetto_tbm_traced_probes.go;l\u003d97;bpv\u003d0",
      "parentUuid": "87844950_e64b34df",
      "revId": "4f24109878c777e2e48d65c5338443da8052061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a70159ed_9114f37e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2022-03-07T03:19:43Z",
      "side": 1,
      "message": "We decided that we don\u0027t want to tolerate process being killed by SIGTERM: perfetto handles SIGTERM to flush the trace data and then quit correctly. If this happens, the process won\u0027t die because with the exit status indicating that the process is killed by SIGTERM. If the perfetto cmdline process shows that it\u0027s killed by SIGTERM, the process probably hadn\u0027t have the chance to setup the SIGTERM handler early during startup, i.e. the test stops the tracing session *too early*. In this case, we want the test to fail loudly to have the test owner have a look.",
      "parentUuid": "c2f6c7ac_8390c08c",
      "revId": "4f24109878c777e2e48d65c5338443da8052061c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}