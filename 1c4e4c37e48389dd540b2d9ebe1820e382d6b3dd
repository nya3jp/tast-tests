{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4551893b_45f47aa8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-06-25T09:07:46Z",
      "side": 1,
      "message": "Looks nice! I have only a few minor comments.\n",
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb197223_6ff99059",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1308804
      },
      "writtenOn": "2021-06-28T00:05:41Z",
      "side": 1,
      "message": "Hi Hidehiko and Shuhei, thanks for the comments, PTAL at my replies, and sorry for the newbie golang questions.\n",
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7adcaad1_1ae87290",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-06-25T14:29:29Z",
      "side": 1,
      "message": "If this is expected use, could you pass key-value pairs, instead of arbitrary arguments?\n\nDitto for all other cases below.\nAlso, for each function, could you add document about new parameters?",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 64,
        "endChar": 91
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a0e4213_234cdd21",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1308804
      },
      "writtenOn": "2021-06-28T00:05:41Z",
      "side": 1,
      "message": "By \"pass key-value pairs\", I have several understanding (and the question):\n\n1. use `func JobStatus(ctx Context, job, key, value string)`? Golang doesn\u0027t support default value, while key, value are not always applicable, users must pass \"\" for these two parameters, i.e. JobStatus(ctx, job, \"\", \"\"), which is bad.\n  This somewhat points to patchset 1 where I have `JobInstanceStatus` that require extra arguments and `JobStatus` that calls `JobInstanceStatus` and passes empty strings as extra arguments.\n\n2. still use `func JobStatus(ctx Context, job string, args ...string)`, but args should be like [\"key\", \"value\"] rather than [\"key\u003dvalue\"], and I need to check len(args)\u003e\u003d2, and to compose a string \"args[0]\u003dargs[1]\"? It seems to me it doesn\u0027t gain much. Besides, I also need to make sure that key and value don\u0027t contain characters like \"\u003d\".\n\n3. define a `type Pair struct { key, value string }` and use `args ...Pair`? Similar to 2) but better. Also need to check \"\u003d\" character.\n\nWhich one do you suggest? I\u0027m not familiar with golang, if I miss an obvious better understanding of \"key-value pairs\", please let me know :)",
      "parentUuid": "7adcaad1_1ae87290",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 64,
        "endChar": 91
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91637ebe_f8622d00",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-06-28T02:46:14Z",
      "side": 1,
      "message": "I assume Hidehiko meant 3.\n\nPlease let me remind that we already have `args ...string` style API in RestartJob and StartJob. I believe we all agree that it\u0027s not an option to introduce new key/value pair API (which Xinglong explained as 3) in JobStatus, CheckJob, etc. while keeping `args ...string` API in RestartJob and StartJob.\n\nSo there are two orthogonal tasks we\u0027re discussing here:\n\nA. Introducing extra args to JobStatus, CheckJob, etc.\nB. Replacing `args ...string` API with proper key/value API\n\nCurrent patch does A, but not B. The question to ask is, is B a blocker for A?\n\nMy opinion is no.\n\n- Passing string key/value pairs as ...string is not a very bad API IMHO. In fact standard library has API of the same style at os/exec.Cmd.Env: https://pkg.go.dev/os/exec#Cmd\n- Even if we don\u0027t like ...string style API, it is not this patch that introduces this API (there are existing functions using this style like RestartJob/StartJob), so it sounds not right to make B a blocker for A.\n\nHidehiko, WDYT?",
      "parentUuid": "2a0e4213_234cdd21",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 64,
        "endChar": 91
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18de3c87_081b08d3",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-06-29T06:08:33Z",
      "side": 1,
      "message": "\u003e I assume Hidehiko meant 3.\n\nSorry for confusion. Yes, I meant 3.\n\n\u003e \n\u003e Please let me remind that we already have `args ...string` style API in RestartJob and StartJob. I believe we all agree that it\u0027s not an option to introduce new key/value pair API (which Xinglong explained as 3) in JobStatus, CheckJob, etc. while keeping `args ...string` API in RestartJob and StartJob.\n\u003e \n\nWell, I\u0027m ok to keep RestartJob as is now, while JobStatus starts to use key-value pair struct, as long as we could agree that eventually RestartJob/StartJob should use the struct and can leave TODO for the short term. Note that I agree changing RestartJob/StartJob is out of scope of this CL.\n\nSo question here is:\n- Is using any string arguments designed usage? Or, should it be *always* KEY\u003dVALUE?\n\nIf we expect KEY\u003dVALUE always (regardelss of JobStatus/RestartJob etc), I\u0027d recommend to define a struct.\nIf we expect any format of string as arguments, of course I\u0027m fine to keep string, but the better documentation should be provided, e.g. what can be passed concretely, and how it works. Current \"extra parameters\" sounds ambiguous as the requirement of the argument. If it needs to refer other piece of documents, then the reference should be put. IMO.\n\nI hope this comment unblocks you.\n\n\u003e So there are two orthogonal tasks we\u0027re discussing here:\n\u003e \n\u003e A. Introducing extra args to JobStatus, CheckJob, etc.\n\u003e B. Replacing `args ...string` API with proper key/value API\n\u003e \n\u003e Current patch does A, but not B. The question to ask is, is B a blocker for A?\n\u003e \n\u003e My opinion is no.\n\u003e \n\u003e - Passing string key/value pairs as ...string is not a very bad API IMHO. In fact standard library has API of the same style at os/exec.Cmd.Env: https://pkg.go.dev/os/exec#Cmd\n\nDisagree. Whether it is in standard lib or not, and whether the API is good, should be independent. (Let me stop this discussing here to avoid bikeshedding. I can talk to you offline, nya-san, if you\u0027d like :-).\n\n\u003e - Even if we don\u0027t like ...string style API, it is not this patch that introduces this API (there are existing functions using this style like RestartJob/StartJob), so it sounds not right to make B a blocker for A.\n\nActually, this does, or it expands, so if we could agree that we should have properly typed APIs instead of string (not sure if we can, though), then this could be considered as \"regression\".\n\n\u003e \n\u003e Hidehiko, WDYT?",
      "parentUuid": "91637ebe_f8622d00",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 64,
        "endChar": 91
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9ef1eb6_3d782ba4",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-06-29T06:53:38Z",
      "side": 1,
      "message": "I chatted with Hidehiko offline. To summarize our points:\n\n- I don\u0027t want mixture of string-style API and key/value-style API\n- Hidehiko doesn\u0027t want string-style API\n\nSo we decided to rewrite existing API (StartJob/RestartJob) with key/value-style API (b/192321435). Xinglong, I will create a CL so could you please rebase your CL on top of it? I\u0027m sorry but I will try my best to deliver it at earliest time.",
      "parentUuid": "18de3c87_081b08d3",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 64,
        "endChar": 91
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2841f847_801d0f46",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-06-29T08:15:23Z",
      "side": 1,
      "message": "I\u0027ve just sent crrev.com/c/2993944 and crrev.com/i/3943439.",
      "parentUuid": "e9ef1eb6_3d782ba4",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 64,
        "endChar": 91
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8469e10d_44710b2a",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-06-30T00:56:48Z",
      "side": 1,
      "message": "Those CLs have been submitted. Xinglong, could you rebase your change to ToT? Thanks!",
      "parentUuid": "2841f847_801d0f46",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 64,
        "endChar": 91
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d91b889_75950c5c",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1308804
      },
      "writtenOn": "2021-06-30T05:09:10Z",
      "side": 1,
      "message": "Thanks! Will do!",
      "parentUuid": "8469e10d_44710b2a",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 64,
        "endChar": 91
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de5270f7_a4db13b9",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-06-25T09:07:46Z",
      "side": 1,
      "message": "testexec.DumpLogOnError will write something to logs whenever it sees an abnormal process exit. Since an abnormal process exit is okay in the case of \"initctl: Unknown instance\", I think it\u0027s better to not use this option.",
      "range": {
        "startLine": 66,
        "startChar": 125,
        "endLine": 66,
        "endChar": 148
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad2b3298_3369454f",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1308804
      },
      "writtenOn": "2021-06-30T05:09:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de5270f7_a4db13b9",
      "range": {
        "startLine": 66,
        "startChar": 125,
        "endLine": 66,
        "endChar": 148
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6d05fb2_460fb3ae",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-06-25T14:29:29Z",
      "side": 1,
      "message": "does initctl always output \"Unknown job\" for any error cases?\nIf not, can it be swap to allow-list style status check?",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 75
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "494312d3_55f766c7",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1308804
      },
      "writtenOn": "2021-06-28T00:05:41Z",
      "side": 1,
      "message": "No, it\u0027s not always \"Unknown job\".\n\nCan you explain a little bit more about allow-list style? An example code would be perfect, thanks!",
      "parentUuid": "f6d05fb2_460fb3ae",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 75
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c7a9c8a_09e2d410",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-06-29T06:08:33Z",
      "side": 1,
      "message": "Question back to you.\nCould you share the error messages you consider a \"job\" exists?\nThen, can you list it here (or using regex if you need patter matching) to \"return true\" below?\n\nif err !\u003d nil \u0026\u0026 !strings.HasPrefix(..., \"initctl: .../*message for exiting job*/...\") ... {\n  return false;\n}",
      "parentUuid": "494312d3_55f766c7",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 75
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f316756_694ded2b",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1308804
      },
      "writtenOn": "2021-06-30T05:09:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c7a9c8a_09e2d410",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 75
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da30d9c0_221a1cb8",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 152,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-06-25T09:07:46Z",
      "side": 1,
      "message": "nit: Now that this is a slice of strings, I think there\u0027s a formatting easier to read. For example:\n\n errors.Wrapf(err, \"stopping %s failed\", strings.Join(..., \" \"))\n errors.Wrapf(err, \"stopping %s failed\", shutil.EscapeSlice(...))",
      "range": {
        "startLine": 152,
        "startChar": 37,
        "endLine": 152,
        "endChar": 39
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5ee6551_b21f41b0",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 4
      },
      "lineNbr": 152,
      "author": {
        "id": 1308804
      },
      "writtenOn": "2021-06-30T05:09:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da30d9c0_221a1cb8",
      "range": {
        "startLine": 152,
        "startChar": 37,
        "endLine": 152,
        "endChar": 39
      },
      "revId": "1c4e4c37e48389dd540b2d9ebe1820e382d6b3dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}