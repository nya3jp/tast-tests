{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4074f42d_86040e2d",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2021-09-14T12:26:36Z",
      "side": 1,
      "message": "nit: maybe add an \"in\"?",
      "range": {
        "startLine": 510,
        "startChar": 21,
        "endLine": 510,
        "endChar": 22
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84304a29_b5e3733c",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2021-09-14T13:30:26Z",
      "side": 1,
      "message": "For my understanding: Why would it have url_schema otherwise?",
      "range": {
        "startLine": 510,
        "startChar": 11,
        "endLine": 510,
        "endChar": 21
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d63cd4b7_3082c944",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1405522
      },
      "writtenOn": "2021-09-15T07:50:54Z",
      "side": 1,
      "message": "The def.go is generated from chromium/src/components/policy/resources/policy_templates.json using this python script. It is listed as URL schema and policy_templates.json only describe the payload as string(https://source.chromium.org/chromium/chromium/src/+/main:components/policy/resources/policy_templates.json;l\u003d9401?q\u003dpolicy_templates.json).\n\nAs cited in the header of this python script(https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py;l\u003d13), for hard to parse, or URL schema, we should override them here in order to use the json.Marshal method to generate the correct content for ONC.",
      "parentUuid": "84304a29_b5e3733c",
      "range": {
        "startLine": 510,
        "startChar": 11,
        "endLine": 510,
        "endChar": 21
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8461747b_718ab5de",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1405522
      },
      "writtenOn": "2021-09-15T07:50:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4074f42d_86040e2d",
      "range": {
        "startLine": 510,
        "startChar": 21,
        "endLine": 510,
        "endChar": 22
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad51c911_3e77638a",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2021-09-15T08:11:42Z",
      "side": 1,
      "message": "Sorry, I\u0027m still not following - where is OpenNetworkConfiguration \"listed as URL schema\"?\n\nThe header says:\n    - policies with hard-to-parse values (e.g. those described by url or\n      partial description only) will have to overwrite the schema parsing here.\nso it just cites policies that contain URL values as one example.\n\nAnd as you say, policy_templates.json only says that OpenNetworkkConfiguration is a string - it does not say \u0027URL\u0027.\n\nI\u0027m just very confused by this comment becuase it implies that if we don\u0027t do anything here, OpenNetworkConfiguration is regarded as an URL by something, but I can\u0027t find that something :-)",
      "parentUuid": "d63cd4b7_3082c944",
      "range": {
        "startLine": 510,
        "startChar": 11,
        "endLine": 510,
        "endChar": 21
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d7ab457_1f10478c",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1405522
      },
      "writtenOn": "2021-09-15T08:22:53Z",
      "side": 1,
      "message": "It is mentioned here: https://source.chromium.org/chromium/chromium/src/+/main:components/policy/resources/policy_templates.json;l\u003d9401?q\u003dpolicy_templates.json\n\nAnd the explanation for url_schema is here: https://source.chromium.org/chromium/chromium/src/+/main:components/policy/resources/policy_templates.json;l\u003d225?q\u003dpolicy_templates.json\n\nSo in short, ONC is too complicated to be listed in the template so it just says it is a string type(which is actually a JSON string). If we parse the OpenNetworkConfiguration as it is, then its Val will be a string type. So we elaborate the JSON string content of ONC with over-written schema in the python script. Same as some other partial described policy, like ExtensionSettings(https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py;l\u003d443).",
      "parentUuid": "ad51c911_3e77638a",
      "range": {
        "startLine": 510,
        "startChar": 11,
        "endLine": 510,
        "endChar": 21
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99c83fb2_51a58cac",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2021-09-15T10:41:58Z",
      "side": 1,
      "message": "Oohhhh got it, so it\u0027s not that the schema of the policy value is \"this is an URL\" but the description of the policy value is put somewhere else, reachable through an URL, but the thing the URL points to doesn\u0027t have to be any kind of formal schema.\n\nThat\u0027s weird :-) I didn\u0027t know we had this. Thanks for explaining!",
      "parentUuid": "6d7ab457_1f10478c",
      "range": {
        "startLine": 510,
        "startChar": 11,
        "endLine": 510,
        "endChar": 21
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c17e0431_6f7cee55",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 511,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2021-09-14T13:30:26Z",
      "side": 1,
      "message": "nit: Maybe we could mention that this is a subset of the full schema, only defining the parts that tast tests currently use.",
      "range": {
        "startLine": 511,
        "startChar": 0,
        "endLine": 511,
        "endChar": 108
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c675ec84_11924ef3",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 511,
      "author": {
        "id": 1405522
      },
      "writtenOn": "2021-09-15T07:50:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c17e0431_6f7cee55",
      "range": {
        "startLine": 511,
        "startChar": 0,
        "endLine": 511,
        "endChar": 108
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0b3ea02_b836d4bc",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 511,
      "author": {
        "id": 1405522
      },
      "writtenOn": "2021-09-15T07:50:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c17e0431_6f7cee55",
      "range": {
        "startLine": 511,
        "startChar": 0,
        "endLine": 511,
        "endChar": 108
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ddb8f79_f41bb907",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2021-09-14T16:27:15Z",
      "side": 1,
      "message": "What is the empty line used for?",
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d582967_351c8e87",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 1405522
      },
      "writtenOn": "2021-09-15T07:50:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ddb8f79_f41bb907",
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7394e14_99bdd245",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 546,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2021-09-14T13:30:26Z",
      "side": 1,
      "message": "I am a bit confused about us needing this and how this refers to the stuff defined in parse_override_onc, so here are my noob questions:\n\n1. Could we have just one \"override\" function and use it for both user and device ONC?\n2. If not, mentioning NetworkConfiguration here refers to NetworkConfiguration defined in parse_override_onc(), which happens to work because those are generated into the same file, right?",
      "range": {
        "startLine": 546,
        "startChar": 4,
        "endLine": 546,
        "endChar": 29
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ed89ffa_7db4e48b",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 546,
      "author": {
        "id": 1405522
      },
      "writtenOn": "2021-09-15T07:50:54Z",
      "side": 1,
      "message": "There are common Go struct which is generated from json templates with $ref used by different policy. For example, `RefTime` (https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/common/policy/defs.go;l\u003d20012?q\u003ddefs.go)\n\nHowever, we cannot use the similar approach as the OpenNetworkConfiguration in policy_templates.json has schema type string rather than $ref. We can add a common section in the bottom for ONC and points both OpenNetworkConfiguration and DeviceOpenNetworkConfiguration to it.",
      "parentUuid": "d7394e14_99bdd245",
      "range": {
        "startLine": 546,
        "startChar": 4,
        "endLine": 546,
        "endChar": 29
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e681ae73_86aeeccc",
        "filename": "src/chromiumos/tast/common/policy/gen/policy_tast_struct_creator.py",
        "patchSetId": 2
      },
      "lineNbr": 546,
      "author": {
        "id": 1175129
      },
      "writtenOn": "2021-09-15T08:11:42Z",
      "side": 1,
      "message": "\u003e We can add a common section in the bottom for ONC and points both OpenNetworkConfiguration and DeviceOpenNetworkConfiguration to it.\n\nI think that would be nice if we can do it!\nIf not, it would be good to have a comment explaining that this depends on the other thing implicitly.",
      "parentUuid": "6ed89ffa_7db4e48b",
      "range": {
        "startLine": 546,
        "startChar": 4,
        "endLine": 546,
        "endChar": 29
      },
      "revId": "dfd8fd3628433d9fd17154f6885cac33c52fcd76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}