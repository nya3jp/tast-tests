{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "394b2162_af31c467",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2021-03-22T02:16:55Z",
      "side": 1,
      "message": "oops I missed this CL. This might be misleading in .fake variant subtests, which do not use the cros-camera service stack.\n\nIMO we should check the status of cros-camera before opening CCA (ideally in precondition/fixture so we don\u0027t need to repeat the code) with real/vivid cameras, and fail the test early without opening CCA if cros-camera service is broken or unavailable. WDYT?",
      "revId": "95f1681b614e10f874eee1ae4250799e0af1a6af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46cebc95_2585790c",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-03-22T03:24:20Z",
      "side": 1,
      "message": "But what if cros-camera-service only broken when we start the camera? For that case, camera service is available before opening CCA but will never be able to stream so tests still fail. And we already have such check in the codes [1].\n\nHow about we wrap this check by \"if upstart.JobExists(ctx, \"cros-camera\")\" as [1] does so that it won\u0027t fail for fake camera case?\n\n[1]: https://source.corp.google.com/chromeos_public/src/platform/tast-tests/src/chromiumos/tast/local/camera/cca/cca.go;rcl\u003d95f1681b614e10f874eee1ae4250799e0af1a6af;l\u003d256",
      "parentUuid": "394b2162_af31c467",
      "revId": "95f1681b614e10f874eee1ae4250799e0af1a6af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b82ca7fa_bef687ff",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1001886
      },
      "writtenOn": "2021-03-22T03:41:48Z",
      "side": 1,
      "message": "Hmm thanks for the explanation. After a second thought I think the original approach is ok. Given we ensured cros-camera is running in Init(), it\u0027s quite unlikely it will fail CheckJob() here when using fake camera, which does not touch cros-camera at all.\n\nI am thinking the other side: Is there any case that cros-camera job does not exist in builder that runs Tast? Maybe we can remove the check in [1] you pointed as part of the HALv1 cleanup effort?",
      "parentUuid": "46cebc95_2585790c",
      "revId": "95f1681b614e10f874eee1ae4250799e0af1a6af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "690ed1ca_7457d297",
        "filename": "src/chromiumos/tast/local/camera/cca/cca.go",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2021-03-22T03:59:46Z",
      "side": 1,
      "message": "I agree that after v3 migration, we might assume that all builders have \"cros-camera\" service on them.\n\nHowever, as you said, fake camera should not touch \"cros-camera\" service at all. Therefore, for \".fake\" variant, ideally we should not ensure \"cros-camera\" service is running in [1] to avoid failing \".fake\" variant for broken \"cros-camera\" service.\n\nAnd if \".fake\" variant fails to stream, it is unlikely has anything to do with \"cros-camera\" service but maybe something broken in Chrome camera stack instead. As a result, I think we don\u0027t need to check \"cros-camera\" service is running here either.\n\nIn conclusion, I think maybe we can change it as following:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nfunc Init() {\n  // ...\n  if (!usingFakeCamera) {\n    ensureCrosCameraServiceRunning();\n  }\n}\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nfunc checkVideoState() {\n  // ...\n  if (failedToStream) {\n    if (!usingFakeCamera) {\n      checkCrosCameraServiceRunning()\n      return \n    }\n    reportGeneralError()\n  }\n}",
      "parentUuid": "b82ca7fa_bef687ff",
      "revId": "95f1681b614e10f874eee1ae4250799e0af1a6af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}