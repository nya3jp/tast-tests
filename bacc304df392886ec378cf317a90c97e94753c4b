{
  "comments": [
    {
      "key": {
        "uuid": "5e256d70_fb868ac8",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw/iw_runner.go",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "Let\u0027s use time.Duration instead. Then we don\u0027t need to wonder which unit this value is in.",
      "range": {
        "startLine": 45,
        "startChar": 9,
        "endLine": 45,
        "endChar": 16
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27583b76_df7a0e69",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw/iw_runner.go",
        "patchSetId": 15
      },
      "lineNbr": 54,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "Please delete this declaration and use :\u003d on calling parseScanResults.",
      "range": {
        "startLine": 54,
        "startChar": 1,
        "endLine": 54,
        "endChar": 23
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaa2988a_54587aa8",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw/iw_runner.go",
        "patchSetId": 15
      },
      "lineNbr": 146,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "huge nit: Is \"high throughput\" a proper noun? Otherwise it would be more usual to keep it in lower-cases.",
      "range": {
        "startLine": 146,
        "startChar": 49,
        "endLine": 146,
        "endChar": 64
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e481ae3a_27e69999",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw/iw_runner.go",
        "patchSetId": 15
      },
      "lineNbr": 163,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "Could you explicitly name fields? When a struct has several fields with the same type, it is difficult to catch incorrect ordering.\n\n return \u0026BSSData{\n   BSS: bss,\n   Frequency: freq,\n   ...\n }, nil",
      "range": {
        "startLine": 163,
        "startChar": 16,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2493ad30_36b69810",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw/iw_runner.go",
        "patchSetId": 15
      },
      "lineNbr": 169,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "Please move this down to just before `for i, m :\u003d range matches`. In general, it is good to minimize variable scope when it is trivial.",
      "range": {
        "startLine": 169,
        "startChar": 1,
        "endLine": 169,
        "endChar": 23
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3fb5bfc_8d3e4983",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw/iw_runner.go",
        "patchSetId": 15
      },
      "lineNbr": 170,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "([:]|) can be written simply as :?",
      "range": {
        "startLine": 170,
        "startChar": 46,
        "endLine": 170,
        "endChar": 52
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84b80e75_cea44dbf",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw/iw_runner_test.go",
        "patchSetId": 15
      },
      "lineNbr": 39,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "Let\u0027s print diff.\n\n t.Error(\"getAllLinkKeys returned unexpected map; diff:\\n\", diff)",
      "range": {
        "startLine": 39,
        "startChar": 2,
        "endLine": 39,
        "endChar": 104
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16bf40a8_ce24ca85",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw/iw_runner_test.go",
        "patchSetId": 15
      },
      "lineNbr": 65,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "s/err.Error()/err/",
      "range": {
        "startLine": 65,
        "startChar": 39,
        "endLine": 65,
        "endChar": 51
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "038abac2_9df447af",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw/iw_runner_test.go",
        "patchSetId": 15
      },
      "lineNbr": 75,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "This does not check l has only single element. What I meant in the previous comment is to compare the whole slice. Could you try changing the type of cmpBSS to []*BSSData and calling cmp.Diff(l, cmpBSS)?",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 49
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25e7a20c_2760f5a1",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw_scan.go",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "Could you also include a group alias of your team to this list?",
      "range": {
        "startLine": 18,
        "startChar": 20,
        "endLine": 18,
        "endChar": 45
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f64d272_31ba06ad",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/iw_scan.go",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-06-26T09:07:23Z",
      "side": 1,
      "message": "Please pass \"err\" instead of \"err.Error()\". Actually passing err itself allows s.Fatal to print stack traces.",
      "range": {
        "startLine": 26,
        "startChar": 31,
        "endLine": 26,
        "endChar": 43
      },
      "revId": "bacc304df392886ec378cf317a90c97e94753c4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}