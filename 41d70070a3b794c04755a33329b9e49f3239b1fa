{
  "comments": [
    {
      "key": {
        "uuid": "c7982906_2516e1c6",
        "filename": "src/chromiumos/tast/local/assistant/assistant.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-05T21:16:28Z",
      "side": 1,
      "message": "what does this object contain? if the keys are consistent, can you instead return a struct? e.g.\n\n// Response contains information returned by the Assistant after a\n// call to SendTextQuery.\ntype Response struct {\n   // Foo contains ...\n   Foo string `json:\"foo\"`\n   // Bar contains ...\n   Bar string `json:\"bar\"`\n}",
      "range": {
        "startLine": 32,
        "startChar": 75,
        "endLine": 32,
        "endChar": 92
      },
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a75f947_f33a19c9",
        "filename": "src/chromiumos/tast/local/assistant/assistant.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-06T01:58:28Z",
      "side": 1,
      "message": "Yes, I think the keys are consistent here. Currently the object contains three fields representing three different parts of the assistant response: text, htmlfallback and htmlresponse. Thanks for the advice :)",
      "parentUuid": "c7982906_2516e1c6",
      "range": {
        "startLine": 32,
        "startChar": 75,
        "endLine": 32,
        "endChar": 92
      },
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd45257a_4f80d99c",
        "filename": "src/chromiumos/tast/local/assistant/assistant.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-06T03:10:28Z",
      "side": 1,
      "message": "great, i\u0027d use a struct with Text, HTMLFallback, and HTMLResponse fields, then. EvalPromise should automatically unmarshal into the struct as long as you supply the appropriate JSON names as above",
      "parentUuid": "4a75f947_f33a19c9",
      "range": {
        "startLine": 32,
        "startChar": 75,
        "endLine": 32,
        "endChar": 92
      },
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf6aa7bd_7dd54bea",
        "filename": "src/chromiumos/tast/local/assistant/assistant.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-11T00:34:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd45257a_4f80d99c",
      "range": {
        "startLine": 32,
        "startChar": 75,
        "endLine": 32,
        "endChar": 92
      },
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f2d91fc_6474ab57",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-05T21:16:28Z",
      "side": 1,
      "message": "nit: maybe something shorter like \"Tests Assistant\u0027s responses to text queries\"",
      "range": {
        "startLine": 22,
        "startChar": 16,
        "endLine": 22,
        "endChar": 76
      },
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "905421f4_e7e17425",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-11T00:34:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f2d91fc_6474ab57",
      "range": {
        "startLine": 22,
        "startChar": 16,
        "endLine": 22,
        "endChar": 76
      },
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df42667_b4d6367d",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-05T21:16:28Z",
      "side": 1,
      "message": "is the assistant available on all DUTs? if not, do you need some dependency like chrome_internal and/or cros_internal?\n\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/test_dependencies.md",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "454600c8_91f21b3d",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1123899
      },
      "writtenOn": "2019-03-08T01:35:33Z",
      "side": 1,
      "message": "\"chrome_internal\". btw: just curious, does \"chrome_internal\" sort of imply \"cros_internal\", do we actually have configuration that could run internal chrome on chromiumos?",
      "parentUuid": "5df42667_b4d6367d",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f03190d_78aa5101",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-08T02:35:28Z",
      "side": 1,
      "message": "i\u0027m not sure, but i suspect that there could be various combinations on different builders.",
      "parentUuid": "454600c8_91f21b3d",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ab6d0fe_60948c0c",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-11T00:34:01Z",
      "side": 1,
      "message": "Thanks for the information. Done.",
      "parentUuid": "3f03190d_78aa5101",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "824485cf_59775b07",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-05T21:16:28Z",
      "side": 1,
      "message": "just inline this on L51 to make the code easier to read?",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "948a1146_7189824f",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-11T00:34:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "824485cf_59775b07",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80522393_def50600",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1123899
      },
      "writtenOn": "2019-03-08T01:35:33Z",
      "side": 1,
      "message": "does |tconn| need defer close?",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 6
      },
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0520a983_245b1d62",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-08T02:34:44Z",
      "side": 1,
      "message": "no, see https://godoc.org/chromium.googlesource.com/chromiumos/platform/tast-tests.git/src/chromiumos/tast/local/chrome#Chrome.TestAPIConn -- you specifically can\u0027t close this connection.",
      "parentUuid": "80522393_def50600",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 6
      },
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "570c3d26_bdddfdcf",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-11T00:34:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0520a983_245b1d62",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 6
      },
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "593d4461_00a0d841",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-05T21:16:28Z",
      "side": 1,
      "message": "this function is only called once; please just inline it at the end of your test.",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4a913cf_4d6f2136",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-11T00:34:01Z",
      "side": 1,
      "message": "Hi Dan, in patchset 2 this helper function has been refactored to |parseTimeNearNow| per your comment below, and I am wondering if the new helper function would be too large to be inlined? Thanks :)",
      "parentUuid": "593d4461_00a0d841",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a9adeaa_15062ac8",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-11T23:29:25Z",
      "side": 1,
      "message": "(i\u0027ll continue discussion on L52 in PS2)",
      "parentUuid": "c4a913cf_4d6f2136",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d224be05_a12bad85",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-05T21:16:28Z",
      "side": 1,
      "message": "this can be much simpler, i think:\n\n  now :\u003d time.Now().UTC()\n  earliest :\u003d now.Add(-tolerance)\n  latest :\u003d now.Add(tolerance)\n  if assistantTime.Before(earliest) || assistantTime.After(latest) {\n      s.Error(...)\n  }",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc84d786_acce7855",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-11T00:34:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d224be05_a12bad85",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2088e6b_eac91a55",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-05T21:16:28Z",
      "side": 1,
      "message": "please make this return a time.Time instead; this is less ambiguous than returning a string and makes comparisons easier to do.",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a9d573_c166c5d2",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-06T01:58:28Z",
      "side": 1,
      "message": "The reason for returning a string here is that the text fallback returned from the Assistant only contains hrs and/or mins (e.g \"it 4:15.\", \"it\u0027s 6 o\u0027clock\") without the date/year. While considering of possible latency and clock drift, we can\u0027t infer the actual date of |assistantTime| from |now|.Day() because it may advance or delay it by one day, for example, 2019/03/04 11:59 PM vs 2019/03/05 12:00 midnight, in rare cases. So if we use time.Time, we may need to create three time objects and do the comparison with |now|, |earliest| and |latest| for each of them., which introduces lots of repeated work. Does this make sense to you? Thanks :)",
      "parentUuid": "f2088e6b_eac91a55",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b10b7a0_126b4835",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-03-06T03:10:28Z",
      "side": 1,
      "message": "it\u0027s probably possible to infer the proper day for a time.Time, right? assuming the query is for the current time, i think that logic similar to the following might work:\n\nfunc parseTimeNearNow(timeStr string, now time.Time) (time.Time, error) {\n    // get hours and minutes from timeStr...\n\n    // We just get HH:MM from the Assistant, so choose the intepretation\n    // closest to the current time.\n    t :\u003d time.Date(now.Year(), now.Month, now.Day(), h, m, 0, 0, now.Location())\n    if diff :\u003d t.Sub(now); diff \u003e 12*time.Hour {\n        t \u003d t.AddDate(0, 0, -1)\n    } else if diff \u003c -12*time.Hour {\n        t \u003d t.AddDate(0, 0, 1)\n    }\n    return t, nil\n}\n\nalso, side comment: please make functions like this one return errors when possible instead of passing in testing.State, so the error-handling decision is made in the main test function istead",
      "parentUuid": "02a9d573_c166c5d2",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67e870ea_e1d38708",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/assistant_text_queries.go",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1299444
      },
      "writtenOn": "2019-03-11T00:34:01Z",
      "side": 1,
      "message": "Yes your are right :). Thanks so much for the advice! Done.",
      "parentUuid": "7b10b7a0_126b4835",
      "revId": "41d70070a3b794c04755a33329b9e49f3239b1fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}