{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b436e006_c152a1f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-13T23:01:33Z",
      "side": 1,
      "message": "Changed workaround. PTAL. Thank you!",
      "revId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60ade916_00902440",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-13T23:04:04Z",
      "side": 1,
      "message": "xiaohuic@: PTAL. Thank you! I don\u0027t know why gwsq has decided to put you in CC. Maybe adding multiple gwsqs at once doesn\u0027t work?",
      "revId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b05a804_db08d066",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-14T19:20:14Z",
      "side": 1,
      "message": "Thank you!",
      "revId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ab4360f_92725cb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-14T20:06:23Z",
      "side": 1,
      "message": "Thank you!",
      "revId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7294e37b_8e29feef",
        "filename": "src/chromiumos/tast/local/bundles/cros/assistant/focus_android_app.go",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2022-09-14T19:07:12Z",
      "side": 1,
      "message": "In this case, I would prefer previous verison. How do we know 3 seconds is enough?",
      "revId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ebcbad4_6dddfca1",
        "filename": "src/chromiumos/tast/local/bundles/cros/assistant/focus_android_app.go",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-14T19:20:14Z",
      "side": 1,
      "message": "Even for the previous version, I don\u0027t know how long it is enough.\n\nMy understanding is that the previous version was working because animation durations (wait time) for maximize+restore was long enough. I don\u0027t think the operation is important given that waiting normal state was not working. If an operation itself is doing the job, I think it should be enough to just wait normal state.\n\nWe don\u0027t know how long it is enough in both ways. But if our intent is to just wait, I think `testing.Sleep` is better as the intention is clear (especially for future readers of this source code).",
      "parentUuid": "7294e37b_8e29feef",
      "revId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28e50abb_8b487627",
        "filename": "src/chromiumos/tast/local/bundles/cros/assistant/focus_android_app.go",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2022-09-14T19:23:10Z",
      "side": 1,
      "message": "Okay for temporary measure. BTW, do you know what happen when it is sync? Can you check state of certain UI element?",
      "parentUuid": "3ebcbad4_6dddfca1",
      "revId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23142ca9_fe8e4532",
        "filename": "src/chromiumos/tast/local/bundles/cros/assistant/focus_android_app.go",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2022-09-14T20:06:23Z",
      "side": 1,
      "message": "Yes, there is a bug for this issue. We should be able to remove this sleep once the bug gets fixed.\n\nI don\u0027t think there is any UI visibility change. Both Ash and Arc are managing their own WM states. For this case, if we open an Android app and a Chrome browser quickly, Arc gets out of WM state sync and ends up in the following state:\n\nWindow order:\nAsh: Chrome browser is front. Android app is back.\nArc: Android app is front. Chrome browser is back.\n\nWe need a sleep between Android app launch and Chrome browser launch.\n\ntakise@: Correct me if it\u0027s not the case.",
      "parentUuid": "28e50abb_8b487627",
      "revId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57f17973_5247a454",
        "filename": "src/chromiumos/tast/local/bundles/cros/assistant/focus_android_app.go",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1431492
      },
      "writtenOn": "2022-09-14T20:30:02Z",
      "side": 1,
      "message": "ACK",
      "parentUuid": "23142ca9_fe8e4532",
      "revId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "c4812fc03b4f08431b963902d7696990dbc5591c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}