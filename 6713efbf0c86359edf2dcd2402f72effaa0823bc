{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bbc39497_3d856b03",
        "filename": "src/chromiumos/tast/local/arc/arc.go",
        "patchSetId": 2
      },
      "lineNbr": 733,
      "author": {
        "id": 1123360
      },
      "writtenOn": "2021-12-10T03:27:22Z",
      "side": 1,
      "message": "nit: Now we have 2 methods for modifying the file.\nShould we check if the backup file exists or not before copying?\nIf the backup file exists, that means we already modify the file but not restored yet.",
      "range": {
        "startLine": 726,
        "startChar": 0,
        "endLine": 733,
        "endChar": 2
      },
      "revId": "6713efbf0c86359edf2dcd2402f72effaa0823bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15e68fa4_59ec8484",
        "filename": "src/chromiumos/tast/local/arc/arc.go",
        "patchSetId": 2
      },
      "lineNbr": 733,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2021-12-10T03:42:16Z",
      "side": 1,
      "message": "I considered this, but it might be that the previous backup file from another test run was not cleaned up. If we check this before continuing here we could introduce flakiness.\n\nIt\u0027s up to the test owners to make sure the fixture or test doesn\u0027t append or overwrite the config file multiple times in the same test run (which was already the case before adding this method). This should be pretty straightforward. Only a few tests currently modify the config file, and none of them use this fixture.\n\nTo make this more explicit I added a comment explaining this.",
      "parentUuid": "bbc39497_3d856b03",
      "range": {
        "startLine": 726,
        "startChar": 0,
        "endLine": 733,
        "endChar": 2
      },
      "revId": "6713efbf0c86359edf2dcd2402f72effaa0823bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c51c402_6c4f1d7d",
        "filename": "src/chromiumos/tast/local/arc/arc.go",
        "patchSetId": 2
      },
      "lineNbr": 733,
      "author": {
        "id": 1123360
      },
      "writtenOn": "2021-12-10T04:57:05Z",
      "side": 1,
      "message": "If the previous test doesn\u0027t restore the config file, it can also introduce flakiness and hard to find.\nI think to error-out the test when backup file exists with clear log should be better, something like:\n\n\"The backup file /usr/local/vms/etc/arcvm_dev.conf.tast-backup already exists. The previous test forgot to restore the config?\"\n\nAlso, we could add comment that we should add \"defer arc.RestoreArcvmDevConf(ctx);\" once these 2 functions are successfull.",
      "parentUuid": "15e68fa4_59ec8484",
      "range": {
        "startLine": 726,
        "startChar": 0,
        "endLine": 733,
        "endChar": 2
      },
      "revId": "6713efbf0c86359edf2dcd2402f72effaa0823bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1155c310_079a2c39",
        "filename": "src/chromiumos/tast/local/arc/arc.go",
        "patchSetId": 2
      },
      "lineNbr": 733,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2021-12-10T06:05:46Z",
      "side": 1,
      "message": "It can indeed introduce flakiness, but failing tests because of a potential issue in the previous tests is going to introduce even more flakiness unfortunately.\n\nProblems like this can be quite hard to handle. I propose we do the following:\n- Clearly document that a test should only call append or write once. This should be pretty simple, and if a test fails to enforce this it will only affect that test.\n- Always restore the backup config at the beginning of write/append if it exists. Even if a test accidentally calls this function multiple times we will always end up with the original config file after restoring.\n\nI created a separate CL to address this as it\u0027s fixing a problem that\u0027s unrelated to this CL.",
      "parentUuid": "7c51c402_6c4f1d7d",
      "range": {
        "startLine": 726,
        "startChar": 0,
        "endLine": 733,
        "endChar": 2
      },
      "revId": "6713efbf0c86359edf2dcd2402f72effaa0823bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}