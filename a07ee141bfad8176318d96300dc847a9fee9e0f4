{
  "comments": [
    {
      "key": {
        "uuid": "ff651559_5a09d88d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:45:19Z",
      "side": 1,
      "message": "oopps, sorry Partick, I didn\u0027t see that you are shadow here...",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9839919_c65cb3a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2020-08-12T01:00:30Z",
      "side": 1,
      "message": "Tast Shadow Review.",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1b41b49_2f1856d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Hi Oleh and Patrick, thanks a lot for reviewing the patch in detail.\nI will fix them in the next patchset.",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52575d99_089ea251",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2020-08-12T06:44:15Z",
      "side": 1,
      "message": "The profiler library shouldn\u0027t need to depend on perfpkg. This library should define its own output data type (e.g. cycles and duration, or a key-value map to be generic and flexible for future extensions.) and have the test using this library emit the test metrics using the returned result.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7748ed32_d7e130a9",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Great suggestion. Do you want me to expose a Output() method on profiler RunningProf ? I am not sure how to add that properly because profiler package only expose a RunningProf by calling Start. And in the end it stops all the profilers by calling End. In my case, I only want one of the profiler\u0027s output. Could you please recommend an API to suit my use case ?",
      "parentUuid": "52575d99_089ea251",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d59f4f7_7801e54f",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2020-08-12T06:44:15Z",
      "side": 1,
      "message": "nit: please also rename this to something like PerfStatRecord to clearly distinguish it from PerfStatOnly. Having PerfStat and PerfStatOnly is confusing to readers without comments.",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 9
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b357d31_fbfc1cfd",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Yes good idea.",
      "parentUuid": "1d59f4f7_7801e54f",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 9
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cafe5bde_8374773b",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2020-08-12T01:00:30Z",
      "side": 1,
      "message": "comment out of date?",
      "range": {
        "startLine": 55,
        "startChar": 48,
        "endLine": 55,
        "endChar": 68
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5eb21981_6d31dec7",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cafe5bde_8374773b",
      "range": {
        "startLine": 55,
        "startChar": 48,
        "endLine": 55,
        "endChar": 68
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "163b086a_921060b5",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5eb21981_6d31dec7",
      "range": {
        "startLine": 55,
        "startChar": 48,
        "endLine": 55,
        "endChar": 68
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "444a6d62_a8aeaec5",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:40:52Z",
      "side": 1,
      "message": "Default value is 0, so you will collect perf stat for pid 0 if you won\u0027t provide Pid. Are you OK with it?\n\nAre there some example, where you provide specific Pid? If no, I propose to remove Pid for now and capture all processes.\n\n\nAlso, you can use *int instead and you must explicitly pass it, but still I see only -1 usa case.",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 8
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b314907_172467fa",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "In the CL that needs perf stat, I actually only care about cycle spent on specific process (CRAS) https://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/2289457/6.\n\nI will use *int and force user to pass it. Maybe I should remove -1 case ?",
      "parentUuid": "444a6d62_a8aeaec5",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 8
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e821f999_ba30c823",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Thinking about this again, I guess maybe using a function like GetPerfStatOpts, GetPerfRecordOpts will look cleaner. I could not find a best practice for this kind of usage (some argument is needed depending on another argument). Please let me know if I am doing this right.  Thanks!",
      "parentUuid": "1b314907_172467fa",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 8
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95de39aa_21e12568",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2020-08-12T01:00:30Z",
      "side": 1,
      "message": "It seems like this option is only used when the PerfType is PerfStatOnly. If so, can you note that in the comment here? Moreover, it seems like this option is mandatory for PerfStatOnly. Given handleStatOnly will panic if p.pv \u003d\u003d nil, maybe the constructor should check this has been set if PerfType is PerfStatOnly, and error otherwise.",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b79b2f0e_ec92ff1a",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Thanks for the great suggestion.",
      "parentUuid": "95de39aa_21e12568",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "807f2fc4_300fdbb2",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "In the new patchset I use GetPerfStatOpts and check pv and pid \u003c\u003d 0 case. Also, I drop the usage of not passing pid because there is no user for that.",
      "parentUuid": "b79b2f0e_ec92ff1a",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f37db2a4_3abb401b",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2020-08-12T06:44:15Z",
      "side": 1,
      "message": "We can just pack and pass the parameters (i.e. passing *PerfOpts) so we won\u0027t need to expand the parameter list in the future when there are more to add (and some parameters might be optional to make the situation more complicated).",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00dfe262_27a34d9c",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Good idea. Thanks!",
      "parentUuid": "f37db2a4_3abb401b",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d37d855_e8850aba",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:40:52Z",
      "side": 1,
      "message": "Can you please add brief comment what it does and what returns?",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0ea8a43_0e4c15fa",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5d37d855_e8850aba",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5ace84c_6a07505c",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e0ea8a43_0e4c15fa",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffbbdedd_7aff7535",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2020-08-12T01:00:30Z",
      "side": 1,
      "message": "nit/optional: These variables could be promoted to the top of the file and treated as constants.\n\nvar cyclesRegexp \u003d regexp.MustCompile(`^\\s+(\\d+)\\s+cycles`)\nvar secondsRegexp \u003d regexp.MustCompile(`^\\s+(\\d+\\.?[\\d+]*)\\s+seconds time elapsed`)",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b75ff17d_b75e780f",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ffbbdedd_7aff7535",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf7d6fca_7a352dc1",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done. I need to remove ^ in the beginning when parsing the result of ReadFile.",
      "parentUuid": "b75ff17d_b75e780f",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0655d83_5a954d0b",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:40:52Z",
      "side": 1,
      "message": "Please use ioutil.ReadFile to read data from file, it\u0027s much simpler\n\nhttps://golang.org/pkg/io/ioutil/#ReadFile",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 153,
        "endChar": 0
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13abea0d_eb2ac133",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Thanks for the suggestion.",
      "parentUuid": "c0655d83_5a954d0b",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 153,
        "endChar": 0
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceea17e0_b058d104",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "It is indeed much simpler. Thanks!",
      "parentUuid": "13abea0d_eb2ac133",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 153,
        "endChar": 0
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "826da2cb_fa038670",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2020-08-12T06:44:15Z",
      "side": 1,
      "message": "perf stat doesn\u0027t always return a valid number cycles. For example, it can output the following:\n\n Performance counter stats for process id \u00278235\u0027:\n\n     \u003cnot counted\u003e      cycles                                                      \n\n       1.542183197 seconds time elapsed\n\nin my tests. Though it will be caught in this error, but it would be better that we separate this error out.",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a80081e_a242bd0c",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Good idea, I will add this and unittest.",
      "parentUuid": "826da2cb_fa038670",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba6f4922_c77f012d",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:40:52Z",
      "side": 1,
      "message": "it won\u0027t be needed once you will read the whole file with ioutil.ReadFile",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 186,
        "endChar": 0
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1592c0bb_85689f45",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ba6f4922_c77f012d",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 186,
        "endChar": 0
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b4e12a4_8bb47717",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1592c0bb_85689f45",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 186,
        "endChar": 0
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "510baba9_65ecfd9d",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:40:52Z",
      "side": 1,
      "message": "why not (p *perf) handleStatOnly() error ?",
      "range": {
        "startLine": 193,
        "startChar": 5,
        "endLine": 193,
        "endChar": 28
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b5dd808_643bf426",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Totally agree!",
      "parentUuid": "510baba9_65ecfd9d",
      "range": {
        "startLine": 193,
        "startChar": 5,
        "endLine": 193,
        "endChar": 28
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b05cc122_d828f1e1",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b5dd808_643bf426",
      "range": {
        "startLine": 193,
        "startChar": 5,
        "endLine": 193,
        "endChar": 28
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b1964ce_e7bcb529",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:40:52Z",
      "side": 1,
      "message": "nit: remove blank line",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79d579cd_cd79ab16",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8b1964ce_e7bcb529",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e98a7e11_67fd61de",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79d579cd_cd79ab16",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9331e42_94b6ce15",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2020-08-12T06:44:15Z",
      "side": 1,
      "message": "This should be done in the test, not in the profiler library. Emitting a metric that is only used in some test(s) breaks the software layering and is a leakage of implementation details. Another test could also profile CPU cycles but isn\u0027t related to cras. This will be awkward getting a metric of cras.",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "025fef47_dadfda7e",
        "filename": "src/chromiumos/tast/local/profiler/perf.go",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "I have the same question as above. What interface would you recommend for profiler to expose ? Currently it only has End() function for a list of profilers. If possible we can pass metrics name when setting perf, but having a separated function to get perf metrics seems better.",
      "parentUuid": "b9331e42_94b6ce15",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1705090_5eacc94a",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:40:52Z",
      "side": 1,
      "message": "Shouldn\u0027t it be TestParseStatFile?",
      "range": {
        "startLine": 19,
        "startChar": 5,
        "endLine": 19,
        "endChar": 23
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e0e9d65_629bb8de",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Yes I should fix this in the next patchset.",
      "parentUuid": "a1705090_5eacc94a",
      "range": {
        "startLine": 19,
        "startChar": 5,
        "endLine": 19,
        "endChar": 23
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed7e8106_61d45385",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e0e9d65_629bb8de",
      "range": {
        "startLine": 19,
        "startChar": 5,
        "endLine": 19,
        "endChar": 23
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29e316cb_45014a8b",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:40:52Z",
      "side": 1,
      "message": "please add blank line before",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "983fd059_1d05fbe0",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "29e316cb_45014a8b",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd0a6215_36c3b644",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "983fd059_1d05fbe0",
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e8d3b8a_d62fc68d",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2020-08-12T01:00:30Z",
      "side": 1,
      "message": "clar: Is there any reason you use cmp.Equal here? Why not:\nif math.Abs(expected - cyclesPerSecond) \u003e\u003d 1e-6 {\n\n}",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 49,
        "endChar": 4
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e08ac724_411533c7",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Agree that I should use that!",
      "parentUuid": "4e8d3b8a_d62fc68d",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 49,
        "endChar": 4
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ccfd637_272dc667",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e08ac724_411533c7",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 49,
        "endChar": 4
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a4b664a_d89424b3",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2020-08-11T16:40:52Z",
      "side": 1,
      "message": "nit: Unexpected cycles per second: got %#v; want %#v",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 50,
        "endChar": 46
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6892fa00_55b67aaa",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T02:43:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7a4b664a_d89424b3",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 50,
        "endChar": 46
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a43471a8_94b87dc0",
        "filename": "src/chromiumos/tast/local/profiler/perf_test.go",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1001485
      },
      "writtenOn": "2020-08-12T09:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6892fa00_55b67aaa",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 50,
        "endChar": 46
      },
      "revId": "a07ee141bfad8176318d96300dc847a9fee9e0f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}