{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8bb0bb82_21b5cedb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2022-05-10T15:41:18Z",
      "side": 1,
      "message": "OK, then that\u0027s fine.",
      "revId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ca309fa_3388060d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-05-11T05:29:45Z",
      "side": 1,
      "message": "Hi Shik,\n\nCan you please review this CL?",
      "revId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09bddccb_bade79b4",
        "filename": "src/chromiumos/tast/services/cros/camera/cca_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2022-04-15T15:12:18Z",
      "side": 1,
      "message": "I think we can replace these functions with existing functions in the chrome_service (under the UI directory). These seem to do a strict subset of what is provided there.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 23,
        "endChar": 76
      },
      "revId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa26fbbb_9dfd925e",
        "filename": "src/chromiumos/tast/services/cros/camera/cca_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-04-18T10:26:11Z",
      "side": 1,
      "message": "If we are importing the \"chromiumos/tast/services/cros/ui\" in the script to use the functions from chrome_service, I see below message while running the tast linters.\n\nImport should be grouped into standard packages, third-party packages and chromiumos packages in this order separated by empty lines\nRefer the following documents for details:\n   https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#import",
      "parentUuid": "09bddccb_bade79b4",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 23,
        "endChar": 76
      },
      "revId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "033e1a51_73a2f0f3",
        "filename": "src/chromiumos/tast/services/cros/camera/cca_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2022-04-21T20:35:30Z",
      "side": 1,
      "message": "I think that just means you need to put this import in the last group...",
      "parentUuid": "aa26fbbb_9dfd925e",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 23,
        "endChar": 76
      },
      "revId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7c56c66_4ebab752",
        "filename": "src/chromiumos/tast/services/cros/camera/cca_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-04-25T06:32:03Z",
      "side": 1,
      "message": "Can you please elaborate on this comment?\n\nMy understanding is, since this script is under camera/ group, we cannot import the libraries from ui/ group. Hence we have created the service functions specifically for camera/ group and using them in the script.",
      "parentUuid": "033e1a51_73a2f0f3",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 23,
        "endChar": 76
      },
      "revId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bbddf8a_82eec247",
        "filename": "src/chromiumos/tast/services/cros/camera/cca_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2022-04-25T13:40:01Z",
      "side": 1,
      "message": "I don\u0027t know that there is an issue with importing from ui/. That comment just looks like it was a comment about the order of the includes.",
      "parentUuid": "c7c56c66_4ebab752",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 23,
        "endChar": 76
      },
      "revId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28d359d3_bb98b3c1",
        "filename": "src/chromiumos/tast/services/cros/camera/cca_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1366764
      },
      "writtenOn": "2022-05-09T10:53:00Z",
      "side": 1,
      "message": "We tried reusing the functions in chrome_service but we were facing multiple challenges in passing the chrome object created using these functions to the cca_service functions.\n\nWhen we were exploring the other available services, all of them are having their own Chrome login services instead of using the chrome_service functions.\ne.g.; [webauthn_service.proto](https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/services/cros/hwsec/webauthn_service.proto;l\u003d16),\n[utils_service.proto](https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/services/cros/firmware/utils_service.proto;l\u003d25),\n[screenlock_service](https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/services/cros/ui/screenlock_service.proto;l\u003d25)",
      "parentUuid": "9bbddf8a_82eec247",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 23,
        "endChar": 76
      },
      "revId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "aea375aa557149fcafc4c0dd4762be3e13df2c60",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}