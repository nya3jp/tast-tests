{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c11057c4_0bdf331c",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 102,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "Could you check err?",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61cf2118_1202058c",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 102,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c11057c4_0bdf331c",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89aea4fc_c80b99f3",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 143,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "if either is fail, the other should terminate?\n\nDitto for below.",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 143,
        "endChar": 4
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e942f53_972ec05c",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 143,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "I would defer to Alex for those, he implemented the parallel runner.",
      "parentUuid": "89aea4fc_c80b99f3",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 143,
        "endChar": 4
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54e3cd52_fdd422ff",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 143,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-10-14T23:45:44Z",
      "side": 1,
      "message": "I would say that if either fails, the test should fail as well, which is the actual behavior in this case (runFioStress* functions invoke s.Fatal).",
      "parentUuid": "5e942f53_972ec05c",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 143,
        "endChar": 4
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ed7de8a_d046435a",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 143,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-19T15:45:30Z",
      "side": 1,
      "message": "so the other task should be cancelled asap. Could you update the code to do so?",
      "parentUuid": "54e3cd52_fdd422ff",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 143,
        "endChar": 4
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d00bbd1_81c5a258",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 164,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "Could you define these at latest timing? (at L193 in this case).",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "479d2e0d_8aea07f5",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 164,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d00bbd1_81c5a258",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec590be1_45e39728",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 244,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "Now this statement is conflicting with new implementation.",
      "range": {
        "startLine": 244,
        "startChar": 3,
        "endLine": 244,
        "endChar": 77
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4adc9cc2_cc443d61",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 244,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "I don\u0027t think the comment is incorrect now. Why?",
      "parentUuid": "ec590be1_45e39728",
      "range": {
        "startLine": 244,
        "startChar": 3,
        "endLine": 244,
        "endChar": 77
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95b0c69c_0bb42dc3",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 244,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-19T15:45:30Z",
      "side": 1,
      "message": "There\u0027s code path to call s.Fatal().\nIf it is not intentional, could you remove? Rather, could you not depending on tesitng.State if it does not fail? So, we can avoid any accidental misintroduction of s.Fatal() etc. in a callee in the future.\n\ntesting.State has many attributes, and we encourage not to take it as much as possible.\n\ncf) https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#test-subpackages",
      "parentUuid": "4adc9cc2_cc443d61",
      "range": {
        "startLine": 244,
        "startChar": 3,
        "endLine": 244,
        "endChar": 77
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5517fef_68aad367",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 257,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "so now you designed these start to fail?\nIf so, could you shutdown remaining tasks (incl. runPeriodicPowerSuspend), if one of them fail?",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 257,
        "endChar": 4
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09b0fd4a_c695593b",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 257,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "It doesn\u0027t fail. Not having an Slc device is totally legitimate case: we want to re-use the same suit for both cases. While it uses the same function (getSlcDev) which can fail, the setup will check that it doesn\u0027t.",
      "parentUuid": "b5517fef_68aad367",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 257,
        "endChar": 4
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a97e73b_3515ad48",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 257,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-19T15:45:30Z",
      "side": 1,
      "message": "Re-using the same suite is just fine, but Tast encourages to avoid depending on testing.State in general, if it does not trigger the fatal scenario.\nCould you refactor the code to:\n\nfunc foo(... /* no *testing.State */) error {\n  ...  // main test content. returns error on failure.\n}\n\nfunc testFoo(..., s *testing.State, ...) {\n  if err :\u003d foo(); err !\u003d nil {\n    s.Fatal(...)\n  }\n}\n\nto guarantee that should not fail here, but still fail in other cases?\nThat\u0027d reduce the long term maintenance cost, because not-fail characteristic is guaranteed by the compiler and the code structure.",
      "parentUuid": "09b0fd4a_c695593b",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 257,
        "endChar": 4
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd33bd90_67d7bdce",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 264,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "go does not use some common prefixes, like \"is\", \"get\", \"has\" etc.\n\nmaybe dualQual()? (or slcQual reflecting the var name?)",
      "range": {
        "startLine": 264,
        "startChar": 3,
        "endLine": 264,
        "endChar": 13
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "285e5103_204eba56",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 264,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd33bd90_67d7bdce",
      "range": {
        "startLine": 264,
        "startChar": 3,
        "endLine": 264,
        "endChar": 13
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa5a861b_b0b3e34a",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 265,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "Please do not take testing.State.\nInstead could you return an error?",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c94f025_d92d9531",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 265,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "I need testing.State to do s.Var();",
      "parentUuid": "fa5a861b_b0b3e34a",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9be00af0_1d2382e7",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 265,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-19T15:45:30Z",
      "side": 1,
      "message": "Then, could you pass the value?\nAlso, please do not make this fatal, instead return an error.\n\nditto cf) https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#test-subpackages",
      "parentUuid": "8c94f025_d92d9531",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cacd9ab_0afd9821",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 277,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "ditto for prefix, not to take testing.State?",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23bda493_1b697641",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 277,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1cacd9ab_0afd9821",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d3f9e2d_dfc2a48b",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 277,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-19T15:45:30Z",
      "side": 1,
      "message": "Revive for testing.State.",
      "parentUuid": "23bda493_1b697641",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2905ef1e_927f61f4",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 286,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "could you use filepath.Join() ?",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8528e4d7_b2d28380",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 286,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2905ef1e_927f61f4",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41bcb3fa_41c48832",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 337,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "Could you unify this and the below, by introducing the path to an arg?",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "935e7cd4_c6290b0b",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 337,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "No, the other function is conditional on whether we are in slc testing mode or not",
      "parentUuid": "41bcb3fa_41c48832",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81f14be7_fc5e7533",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 344,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "Could you unify the error reporting path?\nIf this needs to return an error, please do not take the testing.State, and instead could you let each caller handle it.",
      "range": {
        "startLine": 341,
        "startChar": 2,
        "endLine": 344,
        "endChar": 37
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be210763_b6a4b63f",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 344,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "Well, than each call sight would need to check for the error. Combined with the fact that the slc version of the function would need to take the State for querying dualQual regardless, it is not going to bring any benefits in my opinion.",
      "parentUuid": "81f14be7_fc5e7533",
      "range": {
        "startLine": 341,
        "startChar": 2,
        "endLine": 344,
        "endChar": 37
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e686501b_d137ab90",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 344,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-19T15:45:30Z",
      "side": 1,
      "message": "# Please take a look at my comment above. So, I still don\u0027t think utility funcitons should take testing.State, and thus the combination does not make sense for now at least.",
      "parentUuid": "be210763_b6a4b63f",
      "range": {
        "startLine": 341,
        "startChar": 2,
        "endLine": 344,
        "endChar": 37
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a65a9c97_5933cefd",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 353,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "This check looks like the caller\u0027s responsibility.",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1daa9af7_b6f6f1cb",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 353,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-13T16:54:30Z",
      "side": 1,
      "message": "typo?",
      "range": {
        "startLine": 353,
        "startChar": 5,
        "endLine": 353,
        "endChar": 6
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f18fc6b4_55024310",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 353,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1daa9af7_b6f6f1cb",
      "range": {
        "startLine": 353,
        "startChar": 5,
        "endLine": 353,
        "endChar": 6
      },
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5442fa2_d3030f91",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 353,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-10-14T18:46:30Z",
      "side": 1,
      "message": "The reason we have those calls buried in here is because we want to avoid an immense amount of \"if dualQual\" in the testing blocks. This suit is used for both cases : with one device and with two devices - because the part for the boot device is identical in both cases. After quite some thoughts - this is the best way to avoid an insane amount of duplication",
      "parentUuid": "a65a9c97_5933cefd",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b56f73ee_47dd6ddc",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/full_qualification_stress.go",
        "patchSetId": 10
      },
      "lineNbr": 353,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-19T15:45:30Z",
      "side": 1,
      "message": "I still think it is the callers\u0027 responsibility.\nSpecifically, looking at the usage, the expected behavior is that no task runs in parallel cases.\n\nif dualQual {\n  tasks \u003d append(tasks, func ... )\n}\n\nlooks like more go-ish, indeed there needs some minor duplication (and I personally agreed that may look annoying, but probably still better to handle as upper layer as possible, to avoid accidental overlooking in the future).\n\nWDYT?",
      "parentUuid": "d5442fa2_d3030f91",
      "revId": "37e5efe4ae33cf84c2130bfc3cb0d8d9d5f66e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}