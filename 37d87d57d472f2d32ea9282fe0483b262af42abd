{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "50ee3142_e11ad65d",
        "filename": "src/chromiumos/tast/remote/firmware/reporters/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2021-03-10T21:46:08Z",
      "side": 1,
      "message": "Should return nil, err here.",
      "revId": "37d87d57d472f2d32ea9282fe0483b262af42abd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99857954_46b0b4e3",
        "filename": "src/chromiumos/tast/remote/firmware/reporters/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-03-10T22:00:05Z",
      "side": 1,
      "message": "nil is not a valid value for type time.Time. nil would be the zero-value for a pointer, i.e. *time.Time.\n\nHere\u0027s a playground demonstration: https://play.golang.com/p/akviefXqrzl",
      "parentUuid": "50ee3142_e11ad65d",
      "revId": "37d87d57d472f2d32ea9282fe0483b262af42abd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b612f54_d85f422b",
        "filename": "src/chromiumos/tast/remote/firmware/reporters/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2021-03-10T21:46:08Z",
      "side": 1,
      "message": "Should return ..., nil here.",
      "revId": "37d87d57d472f2d32ea9282fe0483b262af42abd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6a3c6b8_13f99f26",
        "filename": "src/chromiumos/tast/remote/firmware/reporters/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-03-10T22:00:05Z",
      "side": 1,
      "message": "time.Parse has a return-type of (time.Time, error). If there is an error parsing res in the format, then the returned error will include goFormat and res, which is why I didn\u0027t wrap the error. If there is no error parsing res, then it will return nil for the error.\n\nHere\u0027s a playground demonstration: https://play.golang.com/p/JmhaoZ7wtMZ",
      "parentUuid": "4b612f54_d85f422b",
      "revId": "37d87d57d472f2d32ea9282fe0483b262af42abd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}