{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0a6a350b_aaa25840",
        "filename": "src/chromiumos/tast/local/chrome/browser/browser.go",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-06-09T14:38:08Z",
      "side": 1,
      "message": "I think it\u0027d be better to avoid having type here, because that is what Browser tries to abstract so hide.\n\nCan just Type be passed to AddPerformanceCUJMetrics, instead?",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 41,
        "endChar": 1
      },
      "revId": "308655b6c32e4c88ea946f6d80a6bf71e9fbcb35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db1fbcb9_6ce746ca",
        "filename": "src/chromiumos/tast/local/chrome/browser/browser.go",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1424719
      },
      "writtenOn": "2022-06-09T18:57:50Z",
      "side": 1,
      "message": "Thanks for the review. If we we don\u0027t keep track of the Type in Browser, then we need to pass both Type and Browser (or TestConn) into AddPerformanceCUJMetrics, and maybe other functions in the future, because chrome or lacros instance is initialized outside of recorder. This will make the API redundant. \n\nWhile Browser abstract all the common functions, I think it is natural to let it know its own browser type.",
      "parentUuid": "0a6a350b_aaa25840",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 41,
        "endChar": 1
      },
      "revId": "308655b6c32e4c88ea946f6d80a6bf71e9fbcb35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1974c302_5ef20377",
        "filename": "src/chromiumos/tast/local/chrome/browser/browser.go",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1003168
      },
      "writtenOn": "2022-06-09T22:57:50Z",
      "side": 1,
      "message": "I agree with Xibin, if we try to measure \"lacros\" vs \"ash\" we need to know what browser we get the metrics from.",
      "parentUuid": "db1fbcb9_6ce746ca",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 41,
        "endChar": 1
      },
      "revId": "308655b6c32e4c88ea946f6d80a6bf71e9fbcb35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51718b63_881f2040",
        "filename": "src/chromiumos/tast/local/chrome/browser/browser.go",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2022-06-10T14:42:26Z",
      "side": 1,
      "message": "From my point of view, this is conflicting with the layer of abstraction, and we don\u0027t want clients to figure out what browser is this, and change its behavior in general.\n\nso\n\n\u003e we need to pass both Type and Browser (or TestConn)\n\nsounds indeed what you need?",
      "parentUuid": "1974c302_5ef20377",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 41,
        "endChar": 1
      },
      "revId": "308655b6c32e4c88ea946f6d80a6bf71e9fbcb35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "105cd48e_12cc02c9",
        "filename": "src/chromiumos/tast/local/chrome/browser/browser.go",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1424719
      },
      "writtenOn": "2022-06-10T15:45:43Z",
      "side": 1,
      "message": "\u003e we don\u0027t want clients to figure out what browser is this\n\nThanks for sharing your thought. IMHO, the \"Browser\" does abstract all the connection interfaces and the clients cannot change the underlying behaviors. I think the purpose for abstractions has been satisfied.\n\nFrom a client\u0027s point of view, the \"Browser\" is always created from different chrome instances (cr, or lacros) so it knows it is different. It\u0027s just that the \"Browser\" currently doesn\u0027t record the Type information that the clients already know.\n\nThe test can add another layer of abstraction like this but I feel this lay added no value:\n\ntype MyBrowser struct {\n    Browser *browser.Browser\n    Type *browser.Type\n}",
      "parentUuid": "51718b63_881f2040",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 41,
        "endChar": 1
      },
      "revId": "308655b6c32e4c88ea946f6d80a6bf71e9fbcb35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}