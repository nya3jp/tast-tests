{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff4e471c_048832c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T06:09:33Z",
      "side": 1,
      "message": "rli",
      "revId": "0fa4e5fa7d6ff92566c003b531aebab60abb680a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fe6a3d1_8b399cb5",
        "filename": "src/chromiumos/tast/local/chrome/ime/ime.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-07-04T04:43:13Z",
      "side": 1,
      "message": "I think you could just change the return part of the previous function `WaitForInputMethodActivated` to the following, instead of creating another function `WaitForInputMethodActivatedWithSleep`.\n```\nif err!\u003dtconn.WaitForExprWithTimeout(\n    ctx,\n    `chrome.autotestPrivate.isInputMethodReadyForTesting`,\n    warmUpTime,\n); err!\u003dnil \u0026\u0026 err is not timeout error { //Timeout error is ignored on purpose.\n    return err\n}\nreturn nil\n```\nIt returns immediately if the API returns true and otherwise wait for `warmUpTime`, which is backward-compatible, and you don\u0027t need to touch elsewhere (i.e. experimenting this with Zhuyi).",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 104,
        "endChar": 85
      },
      "revId": "0fa4e5fa7d6ff92566c003b531aebab60abb680a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0428899a_fe48fa84",
        "filename": "src/chromiumos/tast/local/chrome/ime/ime.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T05:54:26Z",
      "side": 1,
      "message": "Ye. It is really useful suggestion. I even has done the improvement locally. However the concern is that we do not trust this new API yet. If it is enabled for all IMEs, it can false return true and potentially cause some tests flaky.\n\nWaitForInputMethodActivated is used in 2 type of functions: \"IME UI installation\" and \"IME API installation\". Currently change will only affect Zhuyin IME installed from UI.",
      "parentUuid": "3fe6a3d1_8b399cb5",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 104,
        "endChar": 85
      },
      "revId": "0fa4e5fa7d6ff92566c003b531aebab60abb680a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d882db2_ce4533f7",
        "filename": "src/chromiumos/tast/local/chrome/ime/ime.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-07-04T06:06:02Z",
      "side": 1,
      "message": "yeah, that a valid concern. Considering we have so many tests in CQ, the false-positive issue could be detected in CQ of the CL. \n\nThat\u0027s fine if you just want to try it in a minimal way first.",
      "parentUuid": "0428899a_fe48fa84",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 104,
        "endChar": 85
      },
      "revId": "0fa4e5fa7d6ff92566c003b531aebab60abb680a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44ec8e0d_1e122832",
        "filename": "src/chromiumos/tast/local/chrome/ime/ime.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T06:09:33Z",
      "side": 1,
      "message": "Not really a false-positive but concerning on racing conditions. If the API returns 100ms earlier than the actual readiness, it would slip through CQ and flaky from time to time. My plan is to do it on IME based.",
      "parentUuid": "9d882db2_ce4533f7",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 104,
        "endChar": 85
      },
      "revId": "0fa4e5fa7d6ff92566c003b531aebab60abb680a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fc18b00_d3ddb0e1",
        "filename": "src/chromiumos/tast/local/chrome/ime/ime.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1508900
      },
      "writtenOn": "2022-07-04T06:14:55Z",
      "side": 1,
      "message": "that is still a false positive though I have no idea how that could happen, I am assuming the signal is only sent on actual readiness.",
      "parentUuid": "44ec8e0d_1e122832",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 104,
        "endChar": 85
      },
      "revId": "0fa4e5fa7d6ff92566c003b531aebab60abb680a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1f89f37_b55e89e3",
        "filename": "src/chromiumos/tast/local/chrome/ime/input_method.go",
        "patchSetId": 1
      },
      "lineNbr": 577,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-07-04T04:09:49Z",
      "side": 1,
      "message": "This is reformatted by lint.",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 577,
        "endChar": 2
      },
      "revId": "0fa4e5fa7d6ff92566c003b531aebab60abb680a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}