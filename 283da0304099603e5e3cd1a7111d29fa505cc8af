{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "163c7952_66c89a82",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2021-12-21T08:37:04Z",
      "side": 1,
      "message": "This looks fragile: index+19 and index+27 is hard to understand. Also, what if the output is shifted, say, it should be [20, 28) other than [19, 27)?",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2573138_819c01b4",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2021-12-21T14:42:53Z",
      "side": 1,
      "message": "As the test cmd was written by me, I added comments [1] in the code to prevent being modified accidentally. I could do the same [2] for this use cases.\nOr should I try to use regex to find the floating point number here instead?\n\n[1]: https://source.corp.google.com/chromeos_public/src/platform2/iioservice/iioservice_simpleclient/samples_observer.cc;rcl\u003d0b6765b64aab48f3f7482e1eaef0974004c6cde5;l\u003d81\n[2]: https://source.corp.google.com/chromeos_public/src/platform2/iioservice/iioservice_simpleclient/samples_observer.cc;rcl\u003d0b6765b64aab48f3f7482e1eaef0974004c6cde5;l\u003d109",
      "parentUuid": "163c7952_66c89a82",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5171fa39_93615d7b",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2021-12-22T03:56:17Z",
      "side": 1,
      "message": "Regex is good when it\u0027s easy to understand, or when regex is a better option than the alternatives. Or you may split the string if the output has fixed number of tokens.\n\nIn general, it\u0027s not recommended for parsing log messages in natural languages. This is a bad IPC mechanism. But it\u0027s a sample program so it\u0027s less a problem. If you want the output to be human readable and parse-able at the same time in natural language, you may choose a consistent style like:\n\n(metric description) : (metric value, always in integer or fixed point) (optional unit).\n\nAnd it\u0027s easy to extract the value using regex.",
      "parentUuid": "e2573138_819c01b4",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e05e4c37_b6555639",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2021-12-22T08:50:15Z",
      "side": 1,
      "message": "I thought the current metric value outputs were matching the style. Ex:\n```\nMax latency      : 0.017584 s\nMin latency      : 0.004304 s\nMedian latency   : 0.008287 s\nMean latency     : 0.011508 s\n```\n\nDo you mean the metric descriptions are not consistent enough?\n\nUpdated to use regexp.",
      "parentUuid": "5171fa39_93615d7b",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d965d777_aa853209",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2021-12-21T08:37:04Z",
      "side": 1,
      "message": "This performs non-trivial string operations, especially extracting latency[0:len(latency)-2] and needs commenting.",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "611539b3_2e829987",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2021-12-21T14:42:53Z",
      "side": 1,
      "message": "I used trailing spaces in |latency| (line 26) to prevent finding other patterns [1].\nAny suggestions to make it cleaner?\n\n[1]: https://source.corp.google.com/chromeos_public/src/platform2/iioservice/iioservice_simpleclient/samples_observer.cc;rcl\u003d0b6765b64aab48f3f7482e1eaef0974004c6cde5;l\u003d107",
      "parentUuid": "d965d777_aa853209",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2a745bc_1ac01274",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2021-12-22T03:56:17Z",
      "side": 1,
      "message": "You are converting \"Max latency  \" to \"Max Latency\" using string manipulation, right?\n\nIf you name the metric as SensorIioservice.name.location.latency.min (or latency_min), you only need to extract the 1st token of |latency|. I think it\u0027ll be clearer.",
      "parentUuid": "611539b3_2e829987",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d8e8ac0_548bf1de",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2021-12-22T08:50:15Z",
      "side": 1,
      "message": "Thanks! Updated.",
      "parentUuid": "b2a745bc_1ac01274",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65c350b4_92aa0e2d",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2021-12-21T08:37:04Z",
      "side": 1,
      "message": "pv.Save() is called multiple times, 1 in this function and other 2 in these calls. Won\u0027t they overwrite the previous perf values?",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fa20122_5874fd76",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/sensor_iioservice.go",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2021-12-21T14:42:53Z",
      "side": 1,
      "message": "I thought they would be processed individually :p \nUsing the same pv also works, true.\nDone.",
      "parentUuid": "65c350b4_92aa0e2d",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bccf109e_30b40af8",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/util/util.go",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2021-12-21T08:37:04Z",
      "side": 1,
      "message": "This function name extracts the CPU metric specifically for process iioservice, but it\u0027s unclear about this. If we\u0027d like this specific to iioservice, maybe rename the package name or pass the targetProcessName to make the usage clear.",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 21
      },
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "050bdf1a_2ecceecd",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/util/util.go",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2021-12-21T08:37:04Z",
      "side": 1,
      "message": "I don\u0027t think passing over the test name is a good design for this utility class. Maybe change the semantics to the \"metric name prefix\" and return pv to the caller (because we shouldn\u0027t save in this function).",
      "range": {
        "startLine": 21,
        "startChar": 66,
        "endLine": 21,
        "endChar": 74
      },
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78744845_fa8c3084",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/util/util.go",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2021-12-21T14:42:53Z",
      "side": 1,
      "message": "Renamed testName as metricNamePrefix and passed pv as pointer into the function (as the same pv could be used/created in other places).",
      "parentUuid": "050bdf1a_2ecceecd",
      "range": {
        "startLine": 21,
        "startChar": 66,
        "endLine": 21,
        "endChar": 74
      },
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29a27dd9_33910bc9",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/util/util.go",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2021-12-21T14:42:53Z",
      "side": 1,
      "message": "Passed the targetProcessName.",
      "parentUuid": "bccf109e_30b40af8",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 21
      },
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b79b43d8_9136ceb8",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/util/util.go",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2021-12-22T03:56:17Z",
      "side": 1,
      "message": "Thanks. This is clearer.",
      "parentUuid": "78744845_fa8c3084",
      "range": {
        "startLine": 21,
        "startChar": 66,
        "endLine": 21,
        "endChar": 74
      },
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "919d7afa_74467f3f",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/util/util.go",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2021-12-21T08:37:04Z",
      "side": 1,
      "message": "I don\u0027t think we can call pv.Safe() multiple times for a test because it will overwrite the data of previous call(s) of pv.Save().",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bac7d837_a37a51b7",
        "filename": "src/chromiumos/tast/local/bundles/cros/hardware/util/util.go",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2021-12-21T14:42:53Z",
      "side": 1,
      "message": "I see! Thanks and passed it as pointer into the functions.",
      "parentUuid": "919d7afa_74467f3f",
      "revId": "283da0304099603e5e3cd1a7111d29fa505cc8af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}