{
  "comments": [
    {
      "key": {
        "uuid": "44223ac3_b1e0bbbd",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_result.go",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-10T22:55:51Z",
      "side": 1,
      "message": "I\u0027m implementing parallel runner at the test level. The main benefit is the ability to run different types of stress in parallel. For example: during suspend test we want to run FIO + suspend at the same time, not just multiple FIO jobs.",
      "range": {
        "startLine": 85,
        "startChar": 26,
        "endLine": 85,
        "endChar": 37
      },
      "revId": "51f4450e2a6c3af199455a4968a6a8f1df717a02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ba814ef_b458ff55",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_result.go",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-09-10T23:11:39Z",
      "side": 1,
      "message": "So, I am not really sure how that would work. In this case we have \nStress , write test data - suspend - verify write\nNow, if we are doing two \"tests\" in parallel, they either both need to do suspend, - with weird performance measure impact, or only one of those does suspend - and then the verification on the other can happen before suspend, or the write of test data can happen after. I was designing this flow from the perspective that there should be some barriers for \"global\" operations, like suspend.",
      "parentUuid": "44223ac3_b1e0bbbd",
      "range": {
        "startLine": 85,
        "startChar": 26,
        "endLine": 85,
        "endChar": 37
      },
      "revId": "51f4450e2a6c3af199455a4968a6a8f1df717a02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c507a9a_91e89733",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_result.go",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1390217
      },
      "writtenOn": "2020-09-10T23:46:31Z",
      "side": 1,
      "message": "During the soak part of the test, FIO stress is interleaved with pauses of suspends sequentially. This is where your SLC stress will be running in parallel to the soak FIO stress. However, during trim and suspend test parts, FIO stress runs in parallel with trim and suspend stresses accordingly. This is why I\u0027m implementing parallel stress execution at the test level. The same mechanism could be reused for your SLC parallel stress.",
      "parentUuid": "0ba814ef_b458ff55",
      "range": {
        "startLine": 85,
        "startChar": 26,
        "endLine": 85,
        "endChar": 37
      },
      "revId": "51f4450e2a6c3af199455a4968a6a8f1df717a02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b14e2a9_7386b955",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_result.go",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1404997
      },
      "writtenOn": "2020-09-10T23:55:21Z",
      "side": 1,
      "message": "Ack, then I will wait for your implementation.",
      "parentUuid": "6c507a9a_91e89733",
      "range": {
        "startLine": 85,
        "startChar": 26,
        "endLine": 85,
        "endChar": 37
      },
      "revId": "51f4450e2a6c3af199455a4968a6a8f1df717a02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}