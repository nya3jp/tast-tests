{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "21e155e1_332b058f",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 5
      },
      "lineNbr": 258,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-11-03T08:39:26Z",
      "side": 1,
      "message": "Don\u0027t ignore errors from DecodeString, you should return them so we notice any issues early.",
      "range": {
        "startLine": 258,
        "startChar": 6,
        "endLine": 258,
        "endChar": 7
      },
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5b799c3_1829efd8",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 5
      },
      "lineNbr": 258,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-11-03T09:48:52Z",
      "side": 1,
      "message": "Well, since we assumed that this unmarshal function is called after marshalling only, then we\u0027re sure that the values are valid, that\u0027s why I removed all the checks from before, WDYT?",
      "parentUuid": "21e155e1_332b058f",
      "range": {
        "startLine": 258,
        "startChar": 6,
        "endLine": 258,
        "endChar": 7
      },
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fbe1bce_ba8a6fc8",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 5
      },
      "lineNbr": 301,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-11-02T19:20:20Z",
      "side": 1,
      "message": "This looks great. Can we do the same with MarshalJSON? To make it easy to relate functions using their names, I would call these functions `unmarshal...` instead of `set...` and then name corresponding functions extracted from MarshalJSON as \"marshal...\".",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 301,
        "endChar": 1
      },
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73bcf432_3eac40fe",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 5
      },
      "lineNbr": 301,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-11-03T08:39:26Z",
      "side": 1,
      "message": "+1 for the unmarshal naming\nI\u0027m ambivalend about splitting up MarshalJSON.",
      "parentUuid": "8fbe1bce_ba8a6fc8",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 301,
        "endChar": 1
      },
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5acf8b1c_9322c37a",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 5
      },
      "lineNbr": 301,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-11-03T09:48:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73bcf432_3eac40fe",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 301,
        "endChar": 1
      },
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c0826f6_c05cb2f9",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 5
      },
      "lineNbr": 306,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-11-03T08:39:26Z",
      "side": 1,
      "message": "remote",
      "range": {
        "startLine": 306,
        "startChar": 7,
        "endLine": 306,
        "endChar": 19
      },
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc3c7c7d_edae28f8",
        "filename": "src/chromiumos/tast/common/policy/policy_blob.go",
        "patchSetId": 5
      },
      "lineNbr": 306,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-11-03T09:48:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c0826f6_c05cb2f9",
      "range": {
        "startLine": 306,
        "startChar": 7,
        "endLine": 306,
        "endChar": 19
      },
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c0cb20d_0faa2a4b",
        "filename": "src/chromiumos/tast/common/policy/policy_blob_test.go",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-11-03T08:39:26Z",
      "side": 1,
      "message": "Can you add a test where you marshall a blob, unmarshall it and compare the results. It should have multiple test cases that should be easier to write.",
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f353e1dc_9ec5e597",
        "filename": "src/chromiumos/tast/common/policy/policy_blob_test.go",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-11-03T09:48:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c0cb20d_0faa2a4b",
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6eec99a_1dc43b7b",
        "filename": "src/chromiumos/tast/common/policy/policy_blob_test.go",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2022-11-02T19:20:20Z",
      "side": 1,
      "message": "There is only one blob and one result json, do we really need to define this struct and run a loop over it? Why not just assign these to variables? Also not clear why you need `isErr`.\n\n```\nsrcBlob :\u003d Blob{\n  ...\n}\nexpectedJson :\u003d `...`\n\n// Test marshalling code.\nactualJson, err :\u003d srcBlob.MarshalJSON()\nif err !\u003d nil {\n  t.Errorf(\"Error marshalling the blob: %s\", err)\n}\nif string(b) !\u003d tc.result {\n  t.Errorf(\"unexpected comparison between %s and %v\", tc.result, string(b))\n}\n```\n\nFurthermore, you can test marshalling code compatibility with unmarshalling by continuing the test like so:\n\n```\n// Test unmarshalling code.\nvar pb Blob\nif err :\u003d pb.UnmarshalJSON([]byte(actualJson)); err !\u003d nil {\n  t.Errorf(\"Error unmarshalling the json into blob: %s\", err)\n}\nif diff :\u003d cmp.Diff(pb.PolicyUser, srcBlob.PolicyUser); diff !\u003d \"\" {\n  t.Errorf(\"unexpected PolicyUser difference:\\n%v\", diff)\n}\n...\n```\n\nThen you also don\u0027t need the test below.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 3
      },
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "220408f2_9ea2c6cc",
        "filename": "src/chromiumos/tast/common/policy/policy_blob_test.go",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-11-03T09:48:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a6eec99a_1dc43b7b",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 3
      },
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f18e8946_69d55c85",
        "filename": "src/chromiumos/tast/common/policy/policy_blob_test.go",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-11-03T08:39:26Z",
      "side": 1,
      "message": "I don\u0027t like this type of testing. Any change to the format of the Blob will break it. We don\u0027t need to maintain compatibility with an on-disk format so it\u0027s not really useful.",
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "235da5d9_5b229421",
        "filename": "src/chromiumos/tast/common/policy/policy_blob_test.go",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-11-03T09:48:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f18e8946_69d55c85",
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77ffb477_c5ef5038",
        "filename": "src/chromiumos/tast/common/policy/policy_blob_test.go",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1368736
      },
      "writtenOn": "2022-11-03T08:39:26Z",
      "side": 1,
      "message": "Same as above",
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6adff6c_70965df9",
        "filename": "src/chromiumos/tast/common/policy/policy_blob_test.go",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1447768
      },
      "writtenOn": "2022-11-03T09:48:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "77ffb477_c5ef5038",
      "revId": "25ea03d2f8c1be20911bbf534a8f634eaacc9cef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}