{
  "comments": [
    {
      "key": {
        "uuid": "41c5b588_136c5771",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/opt_in_after_interruption.go",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-05-14T01:20:59Z",
      "side": 1,
      "message": "Can you explicitly specify 7*time.Second to the delays?",
      "range": {
        "startLine": 50,
        "startChar": 32,
        "endLine": 50,
        "endChar": 33
      },
      "revId": "df4099b3fd7d5ed6004dc3235263b053d8fa3734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8745293_9f46bbe9",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/opt_in_after_interruption.go",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-05-14T01:20:59Z",
      "side": 1,
      "message": "Can you add more explanation on how the list is defined?",
      "range": {
        "startLine": 95,
        "startChar": 31,
        "endLine": 95,
        "endChar": 47
      },
      "revId": "df4099b3fd7d5ed6004dc3235263b053d8fa3734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95641dd5_8e300a1f",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/opt_in_after_interruption.go",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-05-14T01:20:59Z",
      "side": 1,
      "message": "You can inline this.\nfor _, delay :\u003d range param.delays {",
      "range": {
        "startLine": 103,
        "startChar": 1,
        "endLine": 104,
        "endChar": 29
      },
      "revId": "df4099b3fd7d5ed6004dc3235263b053d8fa3734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fff716b_22c2dcf5",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/opt_in_after_interruption.go",
        "patchSetId": 5
      },
      "lineNbr": 110,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-05-14T01:20:59Z",
      "side": 1,
      "message": "returning a handler function complicates the code flow. Instead of the current approach, can you return an error in attemptOptIn if test should exit.\n\n\nif continue, err :\u003d attemptOptIn(ctx, ...); !err {\n  // s.Fatal...\n} else if continue {\n  // should proceed after interuption. \n  // restarting chrome and etc.\n}",
      "range": {
        "startLine": 110,
        "startChar": 21,
        "endLine": 110,
        "endChar": 33
      },
      "revId": "df4099b3fd7d5ed6004dc3235263b053d8fa3734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b182632b_026f0c1f",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/opt_in_after_interruption.go",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2020-05-14T01:20:59Z",
      "side": 1,
      "message": "inline this.\n\nif continueTesting :\u003d attemptOptIn(ctx, s, \u0026param, delaySeconds); !continueTesting() {",
      "range": {
        "startLine": 110,
        "startChar": 2,
        "endLine": 111,
        "endChar": 22
      },
      "revId": "df4099b3fd7d5ed6004dc3235263b053d8fa3734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7e3d6b4_bdd50165",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/opt_in_after_interruption.go",
        "patchSetId": 5
      },
      "lineNbr": 191,
      "author": {
        "id": 1136699
      },
      "writtenOn": "2020-05-13T21:24:19Z",
      "side": 1,
      "message": "feel free to drop this, and GetPlayStoreState func. Our test account should be always configured to be allowed. And if not, this test would just fail",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 191,
        "endChar": 2
      },
      "revId": "df4099b3fd7d5ed6004dc3235263b053d8fa3734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}