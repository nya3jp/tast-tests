{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "88de0c60_5a166b47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2022-06-16T23:47:36Z",
      "side": 1,
      "message": "+2 for Tast Review % nits",
      "revId": "b344809db2239f9ace53876c206dbb1756ca62c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "670c462c_ecd2b14f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2022-06-16T23:54:46Z",
      "side": 1,
      "message": "A few more comments",
      "revId": "b344809db2239f9ace53876c206dbb1756ca62c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9b49935_c92356af",
        "filename": "src/chromiumos/tast/local/bundles/cros/typec/typecutils/display_helper.go",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2022-06-16T23:54:46Z",
      "side": 1,
      "message": "You always pass this a constant, do you need this parameter?\nIf so, see suggestion below about changing to []string or map[string]struct{} (basically a set)?",
      "range": {
        "startLine": 31,
        "startChar": 47,
        "endLine": 31,
        "endChar": 58
      },
      "revId": "b344809db2239f9ace53876c206dbb1756ca62c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb4cbf9d_aa3aaeaf",
        "filename": "src/chromiumos/tast/local/bundles/cros/typec/typecutils/display_helper.go",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2022-06-16T23:54:46Z",
      "side": 1,
      "message": "This construction is odd, it seems you just want to match one of a list of valid values. Maybe you should pass a []string or map[string]struct{} and just do a string prefix match over this set of options?\nThat would be easier to follow, rather than this string manipulation to create a regex to match \"HDMI\" or \"DP\".",
      "revId": "b344809db2239f9ace53876c206dbb1756ca62c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ebd805a_ffa0705f",
        "filename": "src/chromiumos/tast/local/bundles/cros/typec/typecutils/display_helper.go",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2022-06-16T23:47:36Z",
      "side": 1,
      "message": "nit: Extract out of method and use a lowercase variable name as this does not need to be public. Avoids regexp needing to be recompiled multiple times, and means any error in the regexp is detected at package load time rather than method runtime.\n\nIf leaving in method,  \ndisplayInfoPattern, err :\u003d regexp.Compile(...)\n\nwould be more conventional (drop the var, handle the error, use lowercase variable name)",
      "revId": "b344809db2239f9ace53876c206dbb1756ca62c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "518ef900_6f6798c1",
        "filename": "src/chromiumos/tast/local/bundles/cros/typec/usb4_gatex_card_display_functionalities.go",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2022-06-16T23:54:46Z",
      "side": 1,
      "message": "assign to variable before passing to improve readability (so know what this parameter means)",
      "range": {
        "startLine": 119,
        "startChar": 50,
        "endLine": 119,
        "endChar": 55
      },
      "revId": "b344809db2239f9ace53876c206dbb1756ca62c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a6b23b8_096f83e5",
        "filename": "src/chromiumos/tast/local/bundles/cros/typec/usb4_gatex_card_display_functionalities.go",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2022-06-16T23:54:46Z",
      "side": 1,
      "message": "assign to variable before passing to improve readability (so know what this parameter means)",
      "range": {
        "startLine": 124,
        "startChar": 57,
        "endLine": 124,
        "endChar": 61
      },
      "revId": "b344809db2239f9ace53876c206dbb1756ca62c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1bd377c_2f61f192",
        "filename": "src/chromiumos/tast/local/bundles/cros/typec/usb4_gatex_card_display_functionalities.go",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2022-06-16T23:47:36Z",
      "side": 1,
      "message": "nit: extra line between err and err !\u003d nil, delete?",
      "revId": "b344809db2239f9ace53876c206dbb1756ca62c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}