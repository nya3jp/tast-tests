{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8b66b6bd_270a5e35",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/accessibility_policies.go",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-02-19T12:35:14Z",
      "side": 1,
      "message": "please inline all these variables into params\n\nthese are global variables and in theory test can modify them.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "6bb19513061da4d88b720551a241925d4e431b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1aab90fd_69bd1619",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/accessibility_policies.go",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-02-19T12:47:16Z",
      "side": 1,
      "message": "I was suggested to put them here. But this is good point.",
      "parentUuid": "8b66b6bd_270a5e35",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "6bb19513061da4d88b720551a241925d4e431b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ea82d1f_f0d4446b",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/accessibility_policies.go",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-02-18T15:27:52Z",
      "side": 1,
      "message": "For one table the policyKey is unique, so the policyKey can be moved here, instead of repeating it 3-4 times in a table.",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 5
      },
      "revId": "6bb19513061da4d88b720551a241925d4e431b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f917961_34560c77",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/accessibility_policies.go",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-02-18T15:36:21Z",
      "side": 1,
      "message": "there is no custom field in Param data structure to do so. I wanted to do it that way.\n\n        Name string // Note -\u003e cannot have capital letters  Not suitable\n\n\t// ExtraAttr contains freeform text attributes describing the test,\n\t// in addition to Attr declared in the enclosing Test.\n\tExtraAttr []string // Maybe suitable, but it is a misuse IMHO\n\n\t// ExtraData contains paths of data files needed by the test case of this\n\t// param in addition to Data declared in the enclosing Test.\n\tExtraData []string //  Not suitable\n\n\t// ExtraSoftwareDeps lists software features that are required to run the test case for this param,\n\t// in addition to SoftwareDeps in the enclosing Test.\n\tExtraSoftwareDeps []string // Not suitable\n\n\t// ExtraHardwareDeps describes hardware features and setup that are required to run the test for this\n\t// param, in addition to HardwareDeps in the enclosing Test.\n\tExtraHardwareDeps hwdep.Deps // Not suitable\n\n\t// Pre contains a precondition that must be met before the test is run.\n\t// Can only be set if the enclosing test doesn\u0027t have one already set.\n\tPre Precondition // Not suitable\n\n\t// Fixture is the name of the fixture the test depends on.\n\t// Can only be set if the enclosing test doesn\u0027t have one already set.\n\tFixture string // Not suitable\n\n\t// Timeout contains the maximum duration for which Func may run before the test is aborted.\n\t// Can only be set if the enclosing test doesn\u0027t have one already set.\n\tTimeout time.Duration // Not suitable\n\n\t// Val is the value which can be retrieved from testing.State.Param() method.\n\tVal interface{} // Current solution.",
      "parentUuid": "2ea82d1f_f0d4446b",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 5
      },
      "revId": "6bb19513061da4d88b720551a241925d4e431b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91553c46_805f8583",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/accessibility_policies.go",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-02-18T16:33:48Z",
      "side": 1,
      "message": "I see, right. How about a lookup table screen_magnifier -\u003e screenMagnifier?",
      "parentUuid": "4f917961_34560c77",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 5
      },
      "revId": "6bb19513061da4d88b720551a241925d4e431b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8af17c8_573c5b86",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/accessibility_policies.go",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-02-19T10:40:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "91553c46_805f8583",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 5
      },
      "revId": "6bb19513061da4d88b720551a241925d4e431b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d752b68b_a4f141f0",
        "filename": "src/chromiumos/tast/local/bundles/cros/policy/accessibility_policies.go",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-02-19T12:28:06Z",
      "side": 1,
      "message": "s.TestName() returns whole test name with package, category and name e.g. policy.AccessibilityPolicies.virtual_keyboard\nIMHO it is not better to have it as it with conscious repetition rather than to build logic for parsing that as it will depend on string and if framework changes the way this name is concatenated those test will fail.\n\nWill keep it as is.",
      "parentUuid": "e8af17c8_573c5b86",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 5
      },
      "revId": "6bb19513061da4d88b720551a241925d4e431b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}