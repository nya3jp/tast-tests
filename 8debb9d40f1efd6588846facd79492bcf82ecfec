{
  "comments": [
    {
      "key": {
        "uuid": "ae1d6a3b_9d4353d1",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1108834
      },
      "writtenOn": "2020-02-20T22:54:23Z",
      "side": 1,
      "message": "My same comments as before about Go standards seem to be to prefer just using int.",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1396ad1_6201474c",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1202380
      },
      "writtenOn": "2020-02-21T00:03:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ae1d6a3b_9d4353d1",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b213040_f1f39a1d",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1108834
      },
      "writtenOn": "2020-02-20T22:54:23Z",
      "side": 1,
      "message": "My same comments before about this not really seeming a canonical way of determine your local IP address.",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a68710e4_bff0342f",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1202380
      },
      "writtenOn": "2020-02-21T00:03:39Z",
      "side": 1,
      "message": "We need outbound IP, the one is used for outbound connection. I wasn\u0027t able to find any other working approach. I agree - it looks bit weird. Anyway, I\u0027m going to implement it differently by initiating the connection by host to guest. In this case we won\u0027t need to make any iptables changes and magic with retrieving of outbound ip address. But it will require lot of changes and it\u0027s going to be a part of the next iteration.",
      "parentUuid": "0b213040_f1f39a1d",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be0a45ed_e3872e66",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1108834
      },
      "writtenOn": "2020-02-20T22:54:23Z",
      "side": 1,
      "message": "This all seems problematic still, especially with the open connections being made to the devserver potentially from non-Google code in the container.  I\u0027d get verification that this is valid.",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ed4c3ea_15c3556a",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-02-20T23:17:46Z",
      "side": 1,
      "message": "nya@ will take a look at this as he suggested the approach in conjunction with the infra team. Do you have anybody else in mind? I don\u0027t see this as much different as running apks in ARC++, but maybe I am missing something? Right now there is no-non-Google code, we are running the default crostini image provided by kokoro. Which non-Google code do we need to watch out for?",
      "parentUuid": "be0a45ed_e3872e66",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37ae2c70_25c1920d",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1202380
      },
      "writtenOn": "2020-02-21T00:03:39Z",
      "side": 1,
      "message": "There is no direct connection to devserver. But I agree, we\u0027d better to validate url, but we need to have some schema for validation first.",
      "parentUuid": "0ed4c3ea_15c3556a",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdc75847_719d483b",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1202380
      },
      "writtenOn": "2020-02-21T00:27:39Z",
      "side": 1,
      "message": "May be, it would be a good idea to formalize the least of allowed GC buckets and validate them in URL? Right now, we could make it even better because we have the list of artifacts here and we could just compare is requested resource listed in the list of artifacts, but our ultimate goal is to get rid of such information in tast, so, then we will need to find some other solution.",
      "parentUuid": "37ae2c70_25c1920d",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19b479fa_3474ed84",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-02-21T00:43:38Z",
      "side": 1,
      "message": "If we could validate accessing only the path to the GS bucket containing the traces we could protect all other assets?",
      "parentUuid": "fdc75847_719d483b",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "943a7f92_ec93ce02",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1202380
      },
      "writtenOn": "2020-02-21T00:59:07Z",
      "side": 1,
      "message": "In current approach I can just compare full url and let download only files from the list of artifacts.",
      "parentUuid": "19b479fa_3474ed84",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc16b94b_3ec65fdb",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1108834
      },
      "writtenOn": "2020-02-20T22:54:23Z",
      "side": 1,
      "message": "replay",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6d9bd45_d3df925b",
        "filename": "src/chromiumos/tast/local/graphics/trace/trace_replay.go",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1202380
      },
      "writtenOn": "2020-02-21T00:03:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc16b94b_3ec65fdb",
      "revId": "8debb9d40f1efd6588846facd79492bcf82ecfec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}