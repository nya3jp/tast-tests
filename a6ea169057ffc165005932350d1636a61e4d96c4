{
  "comments": [
    {
      "key": {
        "uuid": "4f0f1387_896fd4a8",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 26,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-05-05T23:41:27Z",
      "side": 1,
      "message": "I don\u0027t think we need \"Enum\" in the type name here.",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 13
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50f52587_21db6d58",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 26,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "It is necessary since there is already a Mode() in options.go.",
      "parentUuid": "4f0f1387_896fd4a8",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 13
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb9edd0f_033ef540",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 26,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-05-06T18:41:30Z",
      "side": 1,
      "message": "ah, that\u0027s annoying. Good catch.",
      "parentUuid": "50f52587_21db6d58",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 13
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2537a208_50261bdb",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 26,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-07T03:59:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb9edd0f_033ef540",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 13
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "406fcf4d_1c641098",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2020-05-05T23:41:27Z",
      "side": 1,
      "message": "ditto re: Enum in the type name",
      "range": {
        "startLine": 45,
        "startChar": 5,
        "endLine": 45,
        "endChar": 15
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b027e45_d0d96850",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "Same reason as above.",
      "parentUuid": "406fcf4d_1c641098",
      "range": {
        "startLine": 45,
        "startChar": 5,
        "endLine": 45,
        "endChar": 15
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "897b8abc_9286cf2f",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-07T03:59:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b027e45_d0d96850",
      "range": {
        "startLine": 45,
        "startChar": 5,
        "endLine": 45,
        "endChar": 15
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1e3d084_fa0bd4db",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-05T17:51:34Z",
      "side": 1,
      "message": "It is not clear to me what would be the right way to build a Config struct.\nIt seems that a config is assumed to be generated through ConfigFactory.Gen(), and if so, I don\u0027t think those fields can be exposed. If all of those field names start with lower cases, the user can\u0027t build their own Config by themself, enforcing to build through Gen() method.\n\nAlso, since ConfigFactory.Gen() return security.Config interface, I think you really don\u0027t have to expose Config type itself. Maybe just naming the type as \"config\" in lowercase would be fine.",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 64,
        "endChar": 26
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c260f4c_cc232c6d",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "The fields are changed to private.\n\nIn the future CLs, eap.Config will be derived by the Config of some other protocols. Since they will be placed in the different packages, at least eap.Config should be exposed so that it can be embedded to the other Config. Thus, currently I keep all Config public.",
      "parentUuid": "e1e3d084_fa0bd4db",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 64,
        "endChar": 26
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be9330be_531ca02d",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-05-06T18:55:58Z",
      "side": 1,
      "message": "FWIW, the only reason Dean gave for making new packages for each security type, is to make names shorter. I haven\u0027t seen the CLs for it yet, but I imagine the EAP types (where you plan to inherit from each other) make for a stronger case of \"put it all in one package.\" That way, EAP children can borrow from each others\u0027 internals without exposing everything to all users.",
      "parentUuid": "2c260f4c_cc232c6d",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 64,
        "endChar": 26
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "703226ff_b6504b5e",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-06T23:44:32Z",
      "side": 1,
      "message": "I see. Deriving would justify the public visibility for Config. If you put things into a single package, it would surely solve the visibility tricks, but the current structure seems fine to me (so far) -- but maybe I might be missing something.\n\nEither way, from coding style point of view, I think the latest patchset looks good.",
      "parentUuid": "be9330be_531ca02d",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 64,
        "endChar": 26
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0aae04_32502e7b",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 68,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-05T17:51:34Z",
      "side": 1,
      "message": "FYI: You can keep this if you want but this is not necessary: since ConfigFactory.Gen() has return type (security.Config, error) while it returns (*Config, error), the type check is done there.",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 38
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e2da82d_962dff88",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 68,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0aae04_32502e7b",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 38
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37918dc3_640cb375",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 105,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-05T17:51:34Z",
      "side": 1,
      "message": "Please move these lines at the end of the files or above -- I want the code to be organized like:\n  type Config ...\n  // Config methods and others\n  // ...\n  type ConfigFactory ...\n  // ConfigFactory methods and others\n  // ...\n\nThat would be a bit more readable.",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 105,
        "endChar": 0
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7ee7e58_01eb01dc",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 105,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37918dc3_640cb375",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 105,
        "endChar": 0
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f727abd8_07df2c80",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 112,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-05T17:51:34Z",
      "side": 1,
      "message": "It is not clear to me why a map is used for this method. Is this really a good choice?",
      "range": {
        "startLine": 112,
        "startChar": 34,
        "endLine": 112,
        "endChar": 52
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e6397ce_a262aef5",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 112,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "The next CLs will be about EAP network, which will be derived by other protocols such as Dynamic WEP and WPA EAP. They will call the HostapdConfig() of super and then add more config to the its result. AFAIK, though it might be ok to just return a string, I think keep the flexibility will be better.",
      "parentUuid": "f727abd8_07df2c80",
      "range": {
        "startLine": 112,
        "startChar": 34,
        "endLine": 112,
        "endChar": 52
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6feb45cb_232d2d7d",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 112,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-06T23:44:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1e6397ce_a262aef5",
      "range": {
        "startLine": 112,
        "startChar": 34,
        "endLine": 112,
        "endChar": 52
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edd181c7_468b9d4f",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 113,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-05T17:51:34Z",
      "side": 1,
      "message": "Does the user code accesses to the content of the returned map?  If so, maybe better to define constants, like wpa.WPA, wpa.WpaKeyMgmt, wpa.WpaPsk etc?",
      "range": {
        "startLine": 113,
        "startChar": 26,
        "endLine": 113,
        "endChar": 31
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7709aecc_4b208ffe",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 113,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "No, I think. Users do not need to access the content.",
      "parentUuid": "edd181c7_468b9d4f",
      "range": {
        "startLine": 113,
        "startChar": 26,
        "endLine": 113,
        "endChar": 31
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3804e98_f4af5aeb",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 126,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-05T17:51:34Z",
      "side": 1,
      "message": "Why validatePSK here?  Should it validate entirely, or omitting it assuming it is already validated?",
      "range": {
        "startLine": 126,
        "startChar": 13,
        "endLine": 126,
        "endChar": 24
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f22ab730_d67db07f",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 126,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "Since we are not exposing the fields of Config, I think it can be omitted here.",
      "parentUuid": "a3804e98_f4af5aeb",
      "range": {
        "startLine": 126,
        "startChar": 13,
        "endLine": 126,
        "endChar": 24
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60d2289d_46767e2a",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 174,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-05T17:51:34Z",
      "side": 1,
      "message": "This does not check c.Mode has other bits (i.e. c.Mode \u003d ModeEnum(11) is valid). Is that expected?",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 174,
        "endChar": 2
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76081a34_3468edf1",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config.go",
        "patchSetId": 12
      },
      "lineNbr": 174,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60d2289d_46767e2a",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 174,
        "endChar": 2
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6954311b_62829a61",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config_test.go",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-05-05T17:51:34Z",
      "side": 1,
      "message": "I don\u0027t think this is necessary as a function. Why not be a part of TestGet() function itself?",
      "range": {
        "startLine": 44,
        "startChar": 5,
        "endLine": 44,
        "endChar": 15
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4ea5175_7a344c10",
        "filename": "src/chromiumos/tast/common/wifi/security/wpa/config_test.go",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 1387481
      },
      "writtenOn": "2020-05-06T17:30:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6954311b_62829a61",
      "range": {
        "startLine": 44,
        "startChar": 5,
        "endLine": 44,
        "endChar": 15
      },
      "revId": "a6ea169057ffc165005932350d1636a61e4d96c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}