{
  "comments": [
    {
      "key": {
        "uuid": "d9709235_1da82356",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-16T16:05:31Z",
      "side": 1,
      "message": "base.webservd is skipped. Is it intentional?",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26bf8acf_5473bf16",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-16T16:16:48Z",
      "side": 1,
      "message": "yes, i\u0027m not sure that we still need it. we shouldn\u0027t be using it on \"normal\" chrome os devices, as far as i\u0027m aware. i\u0027ll add support if we have DUTs in the lab that use webservd.",
      "parentUuid": "d9709235_1da82356",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4056d7ba_c06eb26e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-19T13:34:02Z",
      "side": 1,
      "message": "Ack. Thank you for explanation.",
      "parentUuid": "26bf8acf_5473bf16",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26fa6927_c9e4054a",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/netlisten/netlisten.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-15T19:18:27Z",
      "side": 1,
      "message": "security_NetworkListeners also contains code that:\n\na) identifies sockets owned by autotest, or sockets on 127.0.0.1 owned by python\nb) does a second pass to ignore those sockets (apparently because they can also be inherited by autotest\u0027s child processes)\n\ni haven\u0027t seen any of these autotest sockets on the lab DUTs that i\u0027ve looked at, so i\u0027m inclined to leave this code out for now and only add it later if we see failures. does that seem reasonable?",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f957eeee_70a0ce8a",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/netlisten/netlisten.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-16T16:05:31Z",
      "side": 1,
      "message": "Ack. Thank you for explanation.",
      "parentUuid": "26fa6927_c9e4054a",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e3e1749_eb56f6e7",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/netlisten/netlisten.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-11-19T04:49:32Z",
      "side": 1,
      "message": "sgtm.",
      "parentUuid": "f957eeee_70a0ce8a",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df905496_f518e1b2",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/netlisten/netlisten.go",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-16T16:05:31Z",
      "side": 1,
      "message": "Because test is split into two cases by whether ARC is supported or not,\ncould you move the embedded expected data to callers (test main functions)?",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "555f0ad5_196be1a4",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/netlisten/netlisten.go",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-16T16:16:48Z",
      "side": 1,
      "message": "to make sure i understand, are you suggesting expecting just sshd in security.NetworkListeners and expecting both sshd and sslh in security.NetworkListenersARC? i think that that wouldn\u0027t work, since security.NetworkListeners also runs on devices that support ARC. that\u0027s why i think we need to check for this at runtime. checking for the sslh upstart config seemed like a reasonable proxy for this.",
      "parentUuid": "df905496_f518e1b2",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "064913b4_54a5b34c",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/netlisten/netlisten.go",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-19T13:34:02Z",
      "side": 1,
      "message": "Oh, I misunderstood.\n\nOptional: do you think it is an option to add \"non-android\"-ish SoftwareDeps?\nThen, you can embed the expectation.\nIt is also slightly better for performance, too. On ARC enabled board, both network_listners and network_listeners_arc run, which have dup.",
      "parentUuid": "555f0ad5_196be1a4",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c25bbad_ccd1a0cc",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/netlisten/netlisten.go",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-19T19:10:15Z",
      "side": 1,
      "message": "i like this idea and will add a \"no_android\" dep after https://crrev.com/c/1330207 goes in. thanks!",
      "parentUuid": "064913b4_54a5b34c",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c64194b_670fa8b6",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/netlisten/netlisten.go",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-20T02:12:15Z",
      "side": 1,
      "message": "i also considered adding a way to set negative dependencies, either through a new field on testing.Test or by automatically creating \"no_\"-prefixed versions of all dependencies that aren\u0027t present, but i think that that\u0027s probably premature until we have more uses for this.",
      "parentUuid": "9c25bbad_ccd1a0cc",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d70824b8_0b0b0fc1",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/network_listeners_arc.go",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-15T19:18:27Z",
      "side": 1,
      "message": "the security_NetworkListeners test dynamically chooses whether to enable ARC or not depending on the result of utils.is_arc_available (which appears to look for CHROMEOS_ARC_VERSION in /etc/lsb-release).\n\ni\u0027m somewhat tempted to do a similar runtime check in security.NetworkListeners and remove this test (and the netlisten package), since it seems wasteful to have (and run) an almost-identical ARC version of this test. however, i\u0027m worried that test authors will see that and add similar code to make their ARC-specific tests return early when ARC is unsupported instead of using SoftwareDeps to make the tests get skipped.\n\nthoughts?",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45db19cc_adca7b70",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/network_listeners_arc.go",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2018-11-16T16:05:31Z",
      "side": 1,
      "message": "IMO this dup is reasonable.\nI agreed with you that I also would tempted to merge them, but we encourage to split tests to control by SoftwareDeps: \"android\".\n\nThis looks a special case, because this test needs to run in Android PFQ and CQ regardless of whether the board supports ARC or not. I\u0027m not sure if there are other similar cases, but I think we can think about it, if so, when we find more.\nAt the moment, I\u0027d +1 to avoid introducing (say) arc.Available() to imply test authors to use SoftwareDeps.",
      "parentUuid": "d70824b8_0b0b0fc1",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dbae4c3_1cce1bf2",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/network_listeners_arc.go",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-16T16:16:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "45db19cc_adca7b70",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f0820d5_3ee8473f",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/network_listeners_arc.go",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-11-19T04:49:32Z",
      "side": 1,
      "message": "Please receive the ARC instance and call .Close :)",
      "range": {
        "startLine": 33,
        "startChar": 4,
        "endLine": 33,
        "endChar": 12
      },
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9afbb1f2_3f8080f6",
        "filename": "src/chromiumos/tast/local/bundles/cros/security/network_listeners_arc.go",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-19T05:24:36Z",
      "side": 1,
      "message": "ah, thanks. i think i actually looked at arc.go but missed the Close method due to only looking below New. :-(",
      "parentUuid": "1f0820d5_3ee8473f",
      "range": {
        "startLine": 33,
        "startChar": 4,
        "endLine": 33,
        "endChar": 12
      },
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38ae0333_a6bd73ca",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-11-19T04:49:32Z",
      "side": 1,
      "message": "BTW have you considered fixing the debug port? I think 9222 is sort of well-known port for Chrome debugging.",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 182,
        "endChar": 50
      },
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d8b3e0c_b1db09ef",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-19T05:24:36Z",
      "side": 1,
      "message": "hmm. i think i copied the port-reading technique from telemetry, so i figure it\u0027s safer to stick with it instead of hardcoding 9222.\n\nhttps://chromedevtools.github.io/devtools-protocol/ suggests passing --remote-debugging-port\u003d9222 to chrome. i guess we could do that and then export it as a constant...\n\nbut actually, looking more closely at the code, i think that it might be done this way to make sure that the cdp instance that we connect to is from the restarted chrome process and not the original one -- we remove the old port file and wait for chrome to write it again before trying to connect.\n\ni guess we could pass the port flag, but since we seemingly need to wait for the file in any case, it seems reasonable to me to read the port from it too.",
      "parentUuid": "38ae0333_a6bd73ca",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 182,
        "endChar": 50
      },
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f779a81_d0a22bc2",
        "filename": "src/chromiumos/tast/local/chrome/chrome.go",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2018-11-19T05:41:34Z",
      "side": 1,
      "message": "sure, sounds good to me.",
      "parentUuid": "2d8b3e0c_b1db09ef",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 182,
        "endChar": 50
      },
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e79dad4d_76705630",
        "filename": "src/chromiumos/tast/local/upstart/upstart.go",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-11-15T19:18:27Z",
      "side": 1,
      "message": "added this since JobStatus dumps info about the failed initctl command if the job doesn\u0027t exist",
      "revId": "19c24a63a0fa318f1def730b672cd7a2624d277b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}