{
  "comments": [
    {
      "key": {
        "uuid": "9579e61c_a2fdee53",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-11T21:49:28Z",
      "side": 1,
      "message": "can you change this to \"disabled\" until https://crrev.com/c/1275926 gets resolved?\n\n(it can still be run manually)",
      "range": {
        "startLine": 21,
        "startChar": 25,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2d27498_c28da052",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1002188
      },
      "writtenOn": "2018-10-12T01:24:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9579e61c_a2fdee53",
      "range": {
        "startLine": 21,
        "startChar": 25,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6972e43_0ab61f10",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 58,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-11T21:49:28Z",
      "side": 1,
      "message": "how about adding a defer statement to ensure this doesn\u0027t get leaked?\n\n  defer func() {\n      if vmInstance !\u003d nil {\n          vmInstance.Close(ctx)\n      }\n  }()\n\nthen set vmInstance to nil after L72",
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73f02e93_a4d9f673",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 58,
      "author": {
        "id": 1002188
      },
      "writtenOn": "2018-10-12T01:24:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6972e43_0ab61f10",
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fba75e1_1c89f2c6",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-10-11T21:12:38Z",
      "side": 1,
      "message": "Maybe rename this \u0027total_start_time\u0027...I just got confused thinking it would be VM startup + container startup + VM shutdown (since those are the other subsets of time).",
      "range": {
        "startLine": 79,
        "startChar": 63,
        "endLine": 79,
        "endChar": 74
      },
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e130750a_1883acb5",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-11T21:49:28Z",
      "side": 1,
      "message": "no underscores please :-)\n\nhttps://golang.org/doc/effective_go.html#mixed-caps\n\nalso consider putting \"Sec\" in all of these so the units are clear, or even just using []time.Duration instead and calling some method later to convert to float seconds:\n\n    toSec :\u003d func(ds []time.Duration) []float64 {\n         seconds :\u003d make([]float64, len(ds))\n         for _, d :\u003d range ds {\n             seconds \u003d append(seconds, d.Seconds())\n         }\n         return seconds\n    }\n\nor perhaps even better, maybe it\u0027d be useful for perf.Values to provide a way to pass time.Durations, like a SetDurations metric? i\u0027d imagine that this is a common case in performance testing...",
      "parentUuid": "1fba75e1_1c89f2c6",
      "range": {
        "startLine": 79,
        "startChar": 63,
        "endLine": 79,
        "endChar": 74
      },
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30e922c1_052d1204",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1002188
      },
      "writtenOn": "2018-10-12T01:24:53Z",
      "side": 1,
      "message": "Sorry, bad habit as a C/C++ programmer :p\nAdded \"Sec\" suffix. However with the \"toSec\"function, I still need to call it for each variable so I don\u0027t feel it differs much to using d.Seconds() as it was (OK, I can let toSec to take variadic parameters though ...)\nProviding a util function in perf.go sounds good. However the unit could be second, millisecond, or even minutes.\nI plan to add a \"SetDuration\" function and convert the unit depending on the \"Unit\" field of perf.Metric. But I prefer to add it in a separate CL. Could I leave a TODO here for now?",
      "parentUuid": "e130750a_1883acb5",
      "range": {
        "startLine": 79,
        "startChar": 63,
        "endLine": 79,
        "endChar": 74
      },
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db2b4a4e_37ee2ff1",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-12T01:45:17Z",
      "side": 1,
      "message": "i\u0027m okay with the TODO; i\u0027ll let nya@ comment on whether this makes sense for the perf package",
      "parentUuid": "30e922c1_052d1204",
      "range": {
        "startLine": 79,
        "startChar": 63,
        "endLine": 79,
        "endChar": 74
      },
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4519f596_e9e65da3",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-11T21:49:28Z",
      "side": 1,
      "message": "maybe pull a similar defer trick here?",
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caefacf2_8bb4728e",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 1002188
      },
      "writtenOn": "2018-10-12T01:24:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4519f596_e9e65da3",
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "226d5416_b88c44b7",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1298800
      },
      "writtenOn": "2018-10-11T21:12:38Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 144,
        "startChar": 14,
        "endLine": 144,
        "endChar": 24
      },
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "971fe6ef_df8006a0",
        "filename": "src/chromiumos/tast/local/bundles/cros/vm/crostini_start_time.go",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1002188
      },
      "writtenOn": "2018-10-12T01:24:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "226d5416_b88c44b7",
      "range": {
        "startLine": 144,
        "startChar": 14,
        "endLine": 144,
        "endChar": 24
      },
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b83314ab_c209b386",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-11T21:49:28Z",
      "side": 1,
      "message": "if the existing Start method doesn\u0027t wait for startup to complete, could you add a comment there to make it clearer? i would\u0027ve assumed that it already waits.",
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a6967a1_53bd8268",
        "filename": "src/chromiumos/tast/local/vm/container.go",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-11T21:49:28Z",
      "side": 1,
      "message": "check error",
      "revId": "a7e6ac3e8ac603ae08d1f93947d4ab84ba8b7dc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}