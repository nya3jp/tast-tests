{
  "comments": [
    {
      "key": {
        "uuid": "f99dd53f_7a598d5f",
        "filename": "src/chromiumos/tast/local/bundles/cros/crostini/restart/restart.go",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-23T05:23:21Z",
      "side": 1,
      "message": "In Go, \"get\", \"is\", \"has\" like prefixes are often dropped.\nHow about just startTime()?",
      "range": {
        "startLine": 52,
        "startChar": 5,
        "endLine": 52,
        "endChar": 17
      },
      "revId": "3b43d824297b73a96270a417eeb09ece420ee1a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "178e6b38_35312152",
        "filename": "src/chromiumos/tast/local/bundles/cros/crostini/restart/restart.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-23T05:23:21Z",
      "side": 1,
      "message": "This is a utility, so instead of taking *testing.State for error, could you return (time.Time, error) pair? Something like;\n\nout, err :\u003d cont.Command(...).Output(...)\nif err !\u003d nil {\n  return ..., errors.Wrap(err, \"...\")\n}\nt, err :\u003d time.Parse(...)\nif err !\u003d nil {\n  return ..., errors.Wrap(err, \"...\")\n}\nreturn t, nil\n\ncf) https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Support-packages\nhttps://github.com/golang/go/wiki/CodeReviewComments#indent-error-flow",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 63,
        "endChar": 1
      },
      "revId": "3b43d824297b73a96270a417eeb09ece420ee1a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}