{
  "comments": [
    {
      "key": {
        "uuid": "6152cfb5_0626e394",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/quick_stress.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "interesting use of parameterized testing. Would this be better as a single test that calls s.Run to have subtests.\n\nSo like QuickStress function would be:\n s.Run(ctx, \"setup\", func(ctx context.Context, s *testing.State) {\n   setup(ctx, s);\n }\n s.Run(ctx, \"stress 1\", func(ctx context.Context, s *testing.State) {\n   testBlock(ctx, s);\n }\n s.Run(ctx, \"stress 2\", func(ctx context.Context, s *testing.State) {\n   testBlock(ctx, s);\n }\n s.Run(ctx, \"teardown\", func(ctx context.Context, s *testing.State) {\n   teardown(ctx, s);\n }\n\nThat or you could do it as a table driven test instead of explicitly:\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Table_driven-tests",
      "range": {
        "startLine": 31,
        "startChar": 13,
        "endLine": 31,
        "endChar": 20
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e137eccb_5bb86783",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/quick_stress.go",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "If you keep this as a parameterized test, maybe instead of making val a string make val the function to run:\n\nVal: setup,\n\nthe type would be: type TestFunc func(ctx context.Context, s *testing.State)\n\nThen in QuickStress just call s.Param().(TestFunc)(ctx, s)",
      "range": {
        "startLine": 32,
        "startChar": 3,
        "endLine": 32,
        "endChar": 20
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7da3cf4f_a398bf77",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/quick_stress.go",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "nit: s.Log since you have access to s.",
      "range": {
        "startLine": 56,
        "startChar": 1,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46f6a79b_dcfae6e3",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/quick_stress.go",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "Please check the errors from this and at least log that sleeping failed",
      "range": {
        "startLine": 85,
        "startChar": 1,
        "endLine": 85,
        "endChar": 34
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "003d8d10_f9c0381b",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/quick_stress.go",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 87,
        "startChar": 1,
        "endLine": 87,
        "endChar": 34
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8bc30be_6368690d",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info.go",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "Remove Get from function name: https://golang.org/doc/effective_go.html#Getters",
      "range": {
        "startLine": 34,
        "startChar": 18,
        "endLine": 34,
        "endChar": 21
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c42aee3b_8f196c47",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info.go",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "Remove Get from function name: https://golang.org/doc/effective_go.html#Getters",
      "range": {
        "startLine": 74,
        "startChar": 5,
        "endLine": 74,
        "endChar": 8
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff5f7863_eee6a5ab",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info_test.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "can you use cmp.Equal and cmp.Diff instead from github.com/google/go-cmp/cmp:\n\nhttps://pkg.go.dev/github.com/google/go-cmp/cmp?tab\u003ddoc",
      "range": {
        "startLine": 33,
        "startChar": 1,
        "endLine": 33,
        "endChar": 51
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12bda74e_947c6f2e",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info_test.go",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 66,
        "endChar": 49
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "170fbe7d_3044a92c",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info_test.go",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "nit: add the err to this message",
      "range": {
        "startLine": 85,
        "startChar": 2,
        "endLine": 85,
        "endChar": 70
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "277e5959_46006658",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/disk_info_test.go",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "ditto, add error to this message.",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 62
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c103712_5effb0bb",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "this shouldn\u0027t be necessary to specify. booleans default to false.",
      "range": {
        "startLine": 241,
        "startChar": 3,
        "endLine": 241,
        "endChar": 21
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bbe8010_603922b4",
        "filename": "src/chromiumos/tast/local/bundles/cros/storage/stress/fio_stress.go",
        "patchSetId": 3
      },
      "lineNbr": 268,
      "author": {
        "id": 1358595
      },
      "writtenOn": "2020-09-01T17:05:43Z",
      "side": 1,
      "message": "nit: Since",
      "range": {
        "startLine": 268,
        "startChar": 38,
        "endLine": 268,
        "endChar": 47
      },
      "revId": "1a0534b08a41f328b51cfd886de2cdea4b6957ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}