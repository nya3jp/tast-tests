{
  "comments": [
    {
      "key": {
        "uuid": "cbc14e23_d538dfe9",
        "filename": "src/chromiumos/tast/local/bundles/cros/example/param.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2019-08-05T09:35:27Z",
      "side": 1,
      "message": "nit: Parameterized ?\nI found other frameworks call this parameterized test.\ngtest: https://github.com/google/googletest/blob/master/googletest/docs/advanced.md#value-parameterized-tests\njunit: https://github.com/junit-team/junit4/wiki/parameterized-tests\n\nLooks like \"parametric test\" is a term used in statistics.\nhttps://www.google.com/search?q\u003d%22parametric+tests%22\u0026rlz\u003d1CAVNXA_enJP846JP846\u0026oq\u003d%22parametric+tests%22\u0026aqs\u003dchrome..69i57j69i59j0l4.3192j1j7\u0026sourceid\u003dchrome\u0026ie\u003dUTF-8",
      "range": {
        "startLine": 21,
        "startChar": 13,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "d8367735db891f42bf6db9dbc999a2dd39f8cb3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96e24f70_5d501c9c",
        "filename": "src/chromiumos/tast/local/bundles/cros/example/param.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-05T12:55:30Z",
      "side": 1,
      "message": "Good catch! Fixed.",
      "parentUuid": "cbc14e23_d538dfe9",
      "range": {
        "startLine": 21,
        "startChar": 13,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "d8367735db891f42bf6db9dbc999a2dd39f8cb3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a79d6bd6_6af5eda0",
        "filename": "src/chromiumos/tast/local/bundles/cros/example/param.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2019-08-06T03:31:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "96e24f70_5d501c9c",
      "range": {
        "startLine": 21,
        "startChar": 13,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "d8367735db891f42bf6db9dbc999a2dd39f8cb3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22c8c903_7326f673",
        "filename": "src/chromiumos/tast/local/bundles/cros/example/param.go",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2019-08-05T10:04:26Z",
      "side": 1,
      "message": "How about adding ExtraData here?\nI think being able to use Extra* is the important feature in parameterized test.\nIf we are not using Extra*, we should use table driven test instead of parameterized test in my understanding. Not using Extra* here can pose wrong impression about when to use parameterized test to readers of this example.\n\nWhat I imagine is something like:\n\nexample.Param.dog.txt: `4 legs bow-wow`\nexmaple.Param.duck.txt: `2 legs quack`\n\nfunc Param(ctx context.Context, s *testing.State) {\n  a :\u003d s.Param().(animal)\n  b, err :\u003d ioutil.ReadFile(s.DataPath(...)) // animal may needs to have the data path.\n  if string(b) !\u003d fmt.Sprintf(\"%d legs %s\", a.numLegs, a.crying) {\n    // error\n  }\n}",
      "revId": "d8367735db891f42bf6db9dbc999a2dd39f8cb3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fefd3b2_0bb86f30",
        "filename": "src/chromiumos/tast/local/bundles/cros/example/param.go",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-05T12:55:30Z",
      "side": 1,
      "message": "\u003e If we are not using Extra*, we should use table driven test instead of parameterized test in my understanding. \n\nThis is case by case. In practice, I\u0027d expected most of param tests use Extra*. Though, it is not mandatory at the moment. For example, if a test has handreds of cases, and the test author may group by dozens.\n\n\u003e Not using Extra* here can pose wrong impression about when to use parameterized test to readers of this example.\n\nThis is a good point, I think. Then, maybe adding ExtraAttr or ExtraSoftwareDeps?\nActually, Data can be used as alternated of ExtraData, although it\u0027d be inefficient.\n\n\u003e What I imagine is something like: ...\n\nI\u0027d have different perspective; example shouldn\u0027t be golden test.\nSo, I\u0027d avoid it.",
      "parentUuid": "22c8c903_7326f673",
      "revId": "d8367735db891f42bf6db9dbc999a2dd39f8cb3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3a45622_994d2efb",
        "filename": "src/chromiumos/tast/local/bundles/cros/example/param.go",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2019-08-06T03:31:48Z",
      "side": 1,
      "message": "I see. Using ExtraAttr or ExtraSoftwareDeps sgtm. For example, we can keep informational only in one test, on promoting this.\nAlso, having link to the document about parameterized test in the comment of Param will be good, possibly saying this test itself doesn\u0027t necessarily represent the intended usage (if Extra* is not added now).",
      "parentUuid": "6fefd3b2_0bb86f30",
      "revId": "d8367735db891f42bf6db9dbc999a2dd39f8cb3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}