{
  "comments": [
    {
      "key": {
        "uuid": "36d7e635_6685be19",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 400,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-08-08T03:27:36Z",
      "side": 1,
      "message": "It reminds me if we can have a \"Pre\" for tests without Chrome running so they can run together to save Chrome stop/start time, which is a lot.",
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2eeec6d_77a70f11",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 400,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-09T01:04:53Z",
      "side": 1,
      "message": "A precondition for our binary tests that disables the UI job is not a bad idea! Feel free to create a bug!",
      "parentUuid": "36d7e635_6685be19",
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0884276e_ab54daa5",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 400,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-08-09T02:39:06Z",
      "side": 1,
      "message": "Issue: http://b/139162793",
      "parentUuid": "d2eeec6d_77a70f11",
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "862bce16_8fe63285",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 400,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-09T03:00:44Z",
      "side": 1,
      "message": "Great, thanks a lot!",
      "parentUuid": "0884276e_ab54daa5",
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe5ab9a4_bca98bae",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 410,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-28T11:05:03Z",
      "side": 1,
      "message": "It\u0027s up to you and/or your team if the failure of gtest process crash (not kernel crash) should be handled here or not. (Though, I\u0027d recommend to handle it in a proper way as I commented below). To move forward, TODO also works for me.\n\nIf you decide to ignore it in this CL, could you update this part of the comment?\n\"The test\" looks ambiguous (whether it refers gtest or it refers Tast\u0027s test case).\nMaybe;\n\n// Run the FlushAtEndOfStream test, but ignore its failure including the process crash.\n// This Tast test case would fail if the gtest causes kernel crash.",
      "range": {
        "startLine": 409,
        "startChar": 56,
        "endLine": 410,
        "endChar": 26
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbb3728d_443efd4b",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 411,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-10T15:20:09Z",
      "side": 1,
      "message": "style: You can just inline the args in gtest.ExtraArgs().",
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a646bb9a_634153fb",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 411,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-14T03:19:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbb3728d_443efd4b",
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "093608b2_eeccff30",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-10T15:20:09Z",
      "side": 1,
      "message": "This passes always.\nCould you not avoid errors? For example;\n\nif report, err :\u003d gtest.New(\n    filepath.Join(...),\n    ...\n    gtest.ExtraArgs(\n        s.DataPath(filename),\n        s.DataPath(filename + \".json\"),\n        \"--output_folder\u003d\"+s.OutDir(),\n        \"--disable_validator\"),\n    gtest.UID(...)\n).Run(ctx); err !\u003d nil {\n  if report !\u003d nil {\n    for _, name :\u003d range report.FailedTestNames() {\n      s.Error(name, \" failed\")\n    }\n  }\n  s.Fatal(\"Failed to run %s: %v\", exec, err)\n}",
      "range": {
        "startLine": 414,
        "startChar": 1,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66097568_2f59389b",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-14T03:19:30Z",
      "side": 1,
      "message": "The tests are supposed to fail, because they are run with invalid data. The decoder is configured for VP9 profile0, but we play a stream containing VP9 profile 1/2/3 features.\nThis test verifies whether the board doesn\u0027t crash if unsupported features are encountered in the stream.",
      "parentUuid": "093608b2_eeccff30",
      "range": {
        "startLine": 414,
        "startChar": 1,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83f1792f_ef964aa7",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-14T10:42:10Z",
      "side": 1,
      "message": "IIUC, this would not work as intended.\nThe crash of gtest run is also reported via err (the second return value of Run()).\nThus, you are ignoring the case, too, now.\n\nI couldn\u0027t find any flags etc to control the behavior on RUN_ALL_TESTS(),\nso probably you\u0027d need;\n- to add a flag to the gtest binary, such as --ignore_test_failure\n- change the main function, like;\n\n  auto result \u003d RUN_ALL_TESETS();\n  return FLAGS_ignore_test_failure ? 0 : result;\nhttps://cs.chromium.org/chromium/src/media/gpu/video_decode_accelerator_tests.cc?sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d434\n\n- add the flag to gtest.ExtraArgs here.\n- Then, you can just check err (the second return value of Run()) to capture the crash case.",
      "parentUuid": "66097568_2f59389b",
      "range": {
        "startLine": 414,
        "startChar": 1,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7c5966e_5c31bf9d",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-15T00:38:25Z",
      "side": 1,
      "message": "On the faulty devices the device\u0027s kernel crashes, which will definitely fail the test.\nBut I guess it makes sense to also check whether the executable does not crash.\nI would rather not pollute the test binary with a flag just to overwrite the return value. We should be able to look at the error returned by Run() and differentiate between a crash and the tests failing?",
      "parentUuid": "83f1792f_ef964aa7",
      "range": {
        "startLine": 414,
        "startChar": 1,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efc8070e_551ed15e",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-15T17:14:20Z",
      "side": 1,
      "message": "\u003eOn the faulty devices the device\u0027s kernel crashes, which will definitely fail the test.\n\nHmm, that sounds risky to me, because in case of crash, the following test wouldn\u0027t run at the moment. Please let me see if there is a good way here from Tast framework\u0027s point of view.\n\n\u003e I would rather not pollute the test binary with a flag just to overwrite the return value. We should be able to look at the error returned by Run() and differentiate between a crash and the tests failing?\n\nUnfortunately, AFAIK, there\u0027s no clean way to figure out whether the test runs and failed, or test is crashed, or something unknown happens so test didn\u0027t run or ... whatever.\n\nThat\u0027s why I recommended you to make a small modification in the gtest binary.",
      "parentUuid": "b7c5966e_5c31bf9d",
      "range": {
        "startLine": 414,
        "startChar": 1,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd4ab1f5_2edaf0ca",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-27T11:17:15Z",
      "side": 1,
      "message": "Kernel crashes should not happen under any circumstances. If a crash this serious happens I think it\u0027s OK that other tests won\u0027t be run. This is already the current behavior of the test, so if we really want to make changes here it should be done in a separate CL.\n\nWhen the test crashes no report is produced, so it\u0027s easy to differentiate between crash and test failure. I did have to create crrev.com/c/1772938 to prevent a crash on failure.",
      "parentUuid": "efc8070e_551ed15e",
      "range": {
        "startLine": 414,
        "startChar": 1,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc0c2173_48b771b4",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode/accel_video.go",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-28T11:05:03Z",
      "side": 1,
      "message": "\u003e Kernel crashes should not happen under any circumstances. If a crash this serious happens I think it\u0027s OK that other tests won\u0027t be run. This is already the current behavior of the test, so if we really want to make changes here it should be done in a separate CL.\n\nGot it. Thank you for explanation.\nFor this case, could you add a reference to crbug.com/998464 for test isolation?\n\n\u003e When the test crashes no report is produced, so it\u0027s easy to differentiate between crash and test failure. I did have to create crrev.com/c/1772938 to prevent a crash on failure.\n\nThat is not guaranteed, IIUC. Indeed it could be the current behavior, but actually, we probably would like to have more precise report. cf) crbug.com/989887.\nCould you avoid depending on the behavior?",
      "parentUuid": "fd4ab1f5_2edaf0ca",
      "range": {
        "startLine": 414,
        "startChar": 1,
        "endLine": 414,
        "endChar": 5
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "887c7382_d144929b",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp90_cts_show_existing_frame.go",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2019-08-10T15:20:09Z",
      "side": 1,
      "message": "Optional: you may be interested in parameterized test. E.g.\n\ntesting.AddTest(\u0026testing.Test{\n  Func: DecodeAccelSanity,\n  ...\n  Params: []testing.Param{{\n    Name: \"vp9_cts_show_existing_frame\",\n    ExtraData: []string{...},\n    Val: \"vda_sanity-vp90_2_17_show_existing_frame.vp9\",\n  }, {\n    Name: \"vp9_1\",\n    ExtraData: []string{...},\n    Val: \"vda_sanity-bear_profile1.vp9\",\n  }, {\n    Name: \"vp9_2\",\n    // ... comment ...\n    ExtraSoftwareDeps: []string{\"vp9_sanity\"},\n    ...\n  } ...\n  }},\n})",
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaef783d_456e052a",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp90_cts_show_existing_frame.go",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-14T03:19:30Z",
      "side": 1,
      "message": "Thanks for the info! I\u0027ll do that in a separate CL: b/139327919",
      "parentUuid": "887c7382_d144929b",
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ae8827b_5daa9e08",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp91.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-08-08T03:27:36Z",
      "side": 1,
      "message": "profile1",
      "range": {
        "startLine": 27,
        "startChar": 25,
        "endLine": 27,
        "endChar": 33
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9af3ba7c_0f3764c1",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp91.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-09T01:04:53Z",
      "side": 1,
      "message": "I based this on the way the sanity check currently works. If you check test_cases.go you can see that all the sanity check tests use \u0027VP9Prof\u0027.\n\nFrom video_type.go:\n// VP9Prof represents the value for VP9 profile 0 (\u003d VP9PROFILE_PROFILE0).\nVP9Prof CodecProfile \u003d 12\n\nI thought the purpose of this test was checking whether the kernel can handle unexpected features in the video stream? If we initialize using the correct profile the video decoder will just report failure on initialization if the codec it\u0027s not supported?",
      "parentUuid": "9ae8827b_5daa9e08",
      "range": {
        "startLine": 27,
        "startChar": 25,
        "endLine": 27,
        "endChar": 33
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e6a66b9_f19a2cec",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp91.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-08-09T02:39:06Z",
      "side": 1,
      "message": "Yes, you are right. Forgive me.",
      "parentUuid": "9af3ba7c_0f3764c1",
      "range": {
        "startLine": 27,
        "startChar": 25,
        "endLine": 27,
        "endChar": 33
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07859f97_1aee65ea",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp91.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-09T03:00:44Z",
      "side": 1,
      "message": "np, thanks for verifying!",
      "parentUuid": "0e6a66b9_f19a2cec",
      "range": {
        "startLine": 27,
        "startChar": 25,
        "endLine": 27,
        "endChar": 33
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39db8680_64bf3d93",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp92.go",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-08-08T03:27:36Z",
      "side": 1,
      "message": "profile2",
      "range": {
        "startLine": 31,
        "startChar": 25,
        "endLine": 31,
        "endChar": 33
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ac2568b_3e4fe518",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp92.go",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-09T03:02:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "39db8680_64bf3d93",
      "range": {
        "startLine": 31,
        "startChar": 25,
        "endLine": 31,
        "endChar": 33
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa4d36bd_49949566",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp93.go",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-08-08T03:27:36Z",
      "side": 1,
      "message": "profile3",
      "range": {
        "startLine": 31,
        "startChar": 25,
        "endLine": 31,
        "endChar": 33
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31575288_fe617648",
        "filename": "src/chromiumos/tast/local/bundles/cros/video/decode_accel_sanity_vp93.go",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2019-08-09T03:02:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "aa4d36bd_49949566",
      "range": {
        "startLine": 31,
        "startChar": 25,
        "endLine": 31,
        "endChar": 33
      },
      "revId": "f377da280adc834799da05966a87dd51b5cc7260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}