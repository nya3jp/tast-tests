{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af0056cc_c2ed213a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2022-11-09T05:57:15Z",
      "side": 1,
      "message": "Thank you for this big port!\n\nPo-Hsien, would it not make sense to use hardware_probe to identify different chipsets?",
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15c97a99_ccd9f4d1",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 34,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2022-11-09T05:57:15Z",
      "side": 1,
      "message": "You can delete all references to exynos.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 34,
        "endChar": 2
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3f354e2_a916f72e",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-11-09T21:47:34Z",
      "side": 1,
      "message": "What we care about are intel and amd. \n\nUse graphics.CPUFamily() to determine this.",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 12
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebb2faa6_e5e1c75e",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 41,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2022-11-09T05:57:15Z",
      "side": 1,
      "message": "You can delete all references to tegra.",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 2
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dce0b478_12f24736",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 52,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-11-09T21:47:34Z",
      "side": 1,
      "message": "Delete those nil entry. tast has HardwareDeps and test should utilize them.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3991a6d_b6bc5d16",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 138,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2022-11-09T05:57:15Z",
      "side": 1,
      "message": "Can we use Po-Hsiens hardware_probe binary to obtain these?",
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a93e70e1_f17b9be6",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 176,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2022-11-09T05:57:15Z",
      "side": 1,
      "message": "Also here, can we use hardware_probe?",
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dc19b87_50f6cd1f",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 190,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-11-09T21:47:34Z",
      "side": 1,
      "message": "No need for these functions.",
      "range": {
        "startLine": 129,
        "startChar": 1,
        "endLine": 190,
        "endChar": 1
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12e5d7ba_ade42c94",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 220,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-11-09T22:02:52Z",
      "side": 1,
      "message": "This is intel specific If I read the name correctly.\n\nCan we separate this function into multiple subfunction to increase readability?\n\n\nCan we either have pass soc to this function and call corresponding function accordingly or adjust archFields so that it remembers which function should be used to parse?\n\n```\nfunc parseSysfsMemory(...) (map[string]int, error){\n   result :\u003d ...\n   ...\n   output, err :\u003d os.ReadFile(file)\n   if err !\u003d nil {...}\n   soc, err :\u003d graphics.CPUFamily()\n   if err !\u003d nil {...}\n   if soc \u003d\u003d \"intel\" { return parseIntel(ctx, file) }\n   else if soc \u003d\u003d \"amd\" {return parseAmd(ctx, file) }\n   else if ...\n} \n```\nor \n```\nsocVal, parseFunc, ok :\u003d archFields[soc]\nif !ok {...}\n\nfor _, fieldName :\u003d range socVal {\n    ...\n    parsedResults, err :\u003d parseFunc(ctx, filePath)\n    if err !\u003d nil {...}\n    if byte, exists :\u003d ... {\n    }\n}\n```",
      "range": {
        "startLine": 207,
        "startChar": 1,
        "endLine": 220,
        "endChar": 2
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13445b3e_a19a9d72",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 245,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-11-09T21:47:34Z",
      "side": 1,
      "message": "reads the memory file",
      "range": {
        "startLine": 245,
        "startChar": 16,
        "endLine": 245,
        "endChar": 90
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15ef5b60_4fd3c8fa",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 245,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-11-09T22:02:52Z",
      "side": 1,
      "message": "Sorry, please ignore this.",
      "parentUuid": "13445b3e_a19a9d72",
      "range": {
        "startLine": 245,
        "startChar": 16,
        "endLine": 245,
        "endChar": 90
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e420c422_d3b5de70",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 251,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-11-09T21:47:34Z",
      "side": 1,
      "message": "Let\u0027s simply call graphics.CPUFamily() \n\n```\nsoc, err :\u003d graphics.CPUFamily()\nif err !\u003d nil {\n   ...\n} \n\nsocVal, ok :\u003d archFields[soc]\nif !ok {\n    return ..., errors.New(\".... not support\")\n}\nfor _, fieldName :\u003d range socVal {\n    ...\n}\n```",
      "range": {
        "startLine": 251,
        "startChar": 13,
        "endLine": 251,
        "endChar": 28
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386edd86_150fcae8",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 279,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-11-09T21:47:34Z",
      "side": 1,
      "message": "delete whole arch logic here.\n\nIt simply assign cirrus, virtio, and both of archFields[cirrus], archFields[virtio] is nil. \nI think we can fail them.",
      "range": {
        "startLine": 259,
        "startChar": 4,
        "endLine": 279,
        "endChar": 2
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c1f5df1_81ad97ab",
        "filename": "src/chromiumos/tast/local/kernel/kernel_utils.go",
        "patchSetId": 11
      },
      "lineNbr": 287,
      "author": {
        "id": 1197299
      },
      "writtenOn": "2022-11-09T21:47:34Z",
      "side": 1,
      "message": "Delete this check and remove nil from archFields. Let this function simply returns an error.",
      "range": {
        "startLine": 284,
        "startChar": 1,
        "endLine": 287,
        "endChar": 2
      },
      "revId": "0457942712a6b2198606a756c2541b62feea1f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}