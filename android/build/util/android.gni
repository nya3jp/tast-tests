# Copyright 2020 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Templates of building Android APKs.

import("//build/util/rules.gni")

# android_apk
# Defines configs for building an APK.

# Args:
#     compile_sdk_version: Which Android SDK version to use at compile time.
#     manifest: A path to a manifest file.
#     min_sdk_version: A default minimum sdk version.
#     resource_dirs: A list of directories which contain resources.
#     source_dirs: A list of directories which contain sources.
#     target_sdk_version: A default target sdk version.
template("android_apk") {
  group(target_name) {
    deps = [
      ":${target_name}__apk_sign"
    ]
  }

  apk_name = target_name

  target_apk = apk_name + ".apk"
  resource_apk = "${target_gen_dir}/${target_name}/${target_apk}"
  rjava_dir = "${target_gen_dir}/${target_name}/rjava"
  unsigned_apk = "${target_gen_dir}/${target_name}/${target_apk}.unsigned"
  signed_apk = "${root_build_dir}/apks/${target_apk}"

  process_resources("${apk_name}__process_resources") {
    forward_variables_from(invoker, [
      "compile_sdk_version",
      "manifest",
      "min_sdk_version",
      "rename_manifest_package",
      "resource_dirs",
      "target_sdk_version",
    ])
    resources_rel = exec_script(
      "//build/util/find.py",
      rebase_path(resource_dirs),
      "list lines"
    )
    resource_files = rebase_path(resources_rel, ".", root_build_dir)
    resource_apk = resource_apk
    rjava_dir = rjava_dir
  }

  compile_sources("${apk_name}__compile_sources") {
    forward_variables_from(invoker, [
      "compile_sdk_version",
      "source_dirs",
    ])
    sources_rel = exec_script(
      "//build/util/find.py",
      rebase_path(source_dirs),
      "list lines"
    )

    source_files = rebase_path(sources_rel, ".", root_build_dir)
    source_files += ["${rjava_dir}/R.java"]
    resource_apk = resource_apk
    unsigned_apk = unsigned_apk
    deps = [
      ":${apk_name}__process_resources"
    ]
  }

  apk_sign("${apk_name}__apk_sign") {
    key = "${android_cert}/${android_key_env}.pk8"
    cert = "${android_cert}/${android_key_env}.x509.pem"
    unsigned_apk = unsigned_apk
    signed_apk = signed_apk
    deps = [
      ":${apk_name}__compile_sources"
    ]
  }
}
