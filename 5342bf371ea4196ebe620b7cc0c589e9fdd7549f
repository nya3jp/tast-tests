{
  "comments": [
    {
      "key": {
        "uuid": "841af3df_6a2893ae",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "i don\u0027t see this being used anywhere: there are zero references to \"metrics_event_proto\" in the file. goimports is doing the right thing by dropping it.\n\nhowever, i do see references to \"metrics_event\" below. did you mean to rename the package to that in this import line?\n\nhttps://golang.org/ref/spec#Import_declarations",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7e18e20_61ef86ca",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "this doesn\u0027t seem like a particularly meaningful method: it\u0027s the same as calling:\n\n  ioutil.WriteFile(filename, []byte(strconv.Itoa(value)), 0644)\n\nand it\u0027s only called once, so i suspect the code would be more straightforward if you just inlined the expression instead.",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "656c9132_71fed73c",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "nit: emitTabDiscardSignal may be clearer",
      "range": {
        "startLine": 48,
        "startChar": 5,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c5509eb_63febfe8",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "this isn\u0027t a meaningful error message. please use something like \"failed marshaling tab discard proto\"",
      "range": {
        "startLine": 60,
        "startChar": 27,
        "endLine": 60,
        "endChar": 45
      },
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d910261f_c7bc0056",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "i\u0027m surprised that this works. usually we don\u0027t let clients emit signals that are intended to come from other services. i suspect that this may indicate that memd isn\u0027t validating d-bus messages to the extent that it should be. do the rust d-bus bindings perform any validation in this regard? i believe that chrome\u0027s c++ bindings do.\n\na safer (but harder) way to trigger this may be by adding a method to the autotestPrivate chrome API that the test can call to tell chrome to emit the signal.",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fca95525_6876c607",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "nit: emitOOMKillSignal: https://github.com/golang/go/wiki/CodeReviewComments#initialisms\n\nbut this isn\u0027t a signal; it\u0027s a log message. logOOMKill?",
      "range": {
        "startLine": 67,
        "startChar": 5,
        "endLine": 67,
        "endChar": 22
      },
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "380c2223_fa6aa273",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "this connection is leaked: https://golang.org/pkg/log/syslog/#Writer.Close\n\nit\u0027d probably be simpler to just run the logger command.",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74153d2f_9ab93e92",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "pulling forward earlier conversation: i\u0027m not worried about this being exploitable, but i\u0027m concerned that this is going to break if/when someone improves anomaly_collector\u0027s log-parsing code so that it doesn\u0027t permit this line.\n\ncan you tag the message different so that it\u0027s actually indistinguishable from one coming from the kernel?",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cc21918_b42e2887",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 75,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "errors are getting dropped here",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d860cac_dbfcb803",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 90,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "nit: lowMemDir",
      "range": {
        "startLine": 90,
        "startChar": 2,
        "endLine": 90,
        "endChar": 15
      },
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90ba6766_71bc1f19",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "nit: availablePath",
      "range": {
        "startLine": 91,
        "startChar": 2,
        "endLine": 91,
        "endChar": 15
      },
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f0671e0_3cc48a7a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "nit: marginPath",
      "range": {
        "startLine": 92,
        "startChar": 2,
        "endLine": 92,
        "endChar": 12
      },
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9082f0f9_22a3d55f",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "nit: PID",
      "range": {
        "startLine": 95,
        "startChar": 11,
        "endLine": 95,
        "endChar": 14
      },
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83b6384e_d13765a8",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 104,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "please put this in a constant since it\u0027s repeated later",
      "range": {
        "startLine": 104,
        "startChar": 29,
        "endLine": 104,
        "endChar": 59
      },
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bba6cb99_e812d4e9",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 106,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "please update all s.* log/error/fatal calls to follow the guidelines at http://go/tast-writing#Formatting",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb2a99d3_86447818",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 111,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "please use Fatalf when joining more than two values:\n\n  s.Fatalf(\"Cannot remove %v: %v\", file, err)",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eaec8ce_dc34296a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "please include the path in messages like these:\n\n  s.Fatalf(\"Failed to read %v: %v\", availableName, err)",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2f8c913_958ed0fb",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "same here",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "371206ed_3d95b7b0",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 128,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "nit: const (or just make this a literal in the next line)",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7f0f677_439d1ea1",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 142,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "please include units for numbers like this one",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4737e368_e3eec262",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "sorry if my earlier comment wasn\u0027t clear. i meant that you should pass a function that tests the condition that you actually care about to testing.Poll.\n\nsleeping is bad because it makes tests either flaky because they don\u0027t wait long enough or slow because they wait longer than they have to.",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b93c0677_6098a218",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 151,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "nit: optional shorter syntax:\n\n  if err \u003d fakeTabDiscardSignal(); err !\u003d nil {",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d36c7e28_ff685269",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 155,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "nit: same here",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45d6a843_d2ebbc4d",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 165,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "please check for error",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f48662d7_8a699670",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 173,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "simpler: var discrdFound, keroomFound bool",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a55c4e6_c61d8726",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memd.go",
        "patchSetId": 6
      },
      "lineNbr": 178,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-10-31T00:29:08Z",
      "side": 1,
      "message": "Fatalf\n\nbut consider Errorf instead if it makes sense to continue testing if the file has the wrong perms or disappears or whatever",
      "revId": "5342bf371ea4196ebe620b7cc0c589e9fdd7549f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}