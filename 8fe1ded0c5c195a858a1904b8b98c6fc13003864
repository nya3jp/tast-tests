{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "71de4d41_6203ecdb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2020-10-27T03:05:41Z",
      "side": 1,
      "message": "Is there some way to also grab the kernel kcrash log file?",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38437e3e_87e50739",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-28T02:21:21Z",
      "side": 1,
      "message": "Could you handle error (at least log error if there is?).",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89d4fe70_33c32999",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2020-10-28T03:09:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "38437e3e_87e50739",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a58d241_55a74ce1",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-28T05:28:05Z",
      "side": 1,
      "message": "Not addressed yet?",
      "parentUuid": "89d4fe70_33c32999",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d29973a_19637e14",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2020-10-28T22:48:34Z",
      "side": 1,
      "message": "Yes Ack !\u003d Done plus I haven\u0027t uploaded another CL yet. ðŸ˜‰",
      "parentUuid": "6a58d241_55a74ce1",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f31a87a_8bf985ba",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2020-10-30T02:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d29973a_19637e14",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceec216b_10f1c3e3",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-28T02:21:21Z",
      "side": 1,
      "message": "Should this need to iterate over Matches array?\nIf [0] has special meaning, could you clarify it in the comment?",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34702d04_b218ba47",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2020-10-28T03:09:05Z",
      "side": 1,
      "message": "Hmmm we only expect one match here because a bios_log is only dropped across a reboot. I can expand on this comment to say \"Also remove the (at most one) bios log if it was created.\"?",
      "parentUuid": "ceec216b_10f1c3e3",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "518bfee3_115d5b8f",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-28T05:28:05Z",
      "side": 1,
      "message": "If you expect only one match, could you verify it explicitly in advance, like at L144?\nIf that\u0027s the case, you shouldn\u0027t need the iteration at L144, either.",
      "parentUuid": "34702d04_b218ba47",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d47061e_8b4f9208",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2020-10-28T22:48:34Z",
      "side": 1,
      "message": "My golang foo is weak. It looks like Matches[0] is used because that corresponds to the single regex at L159. So yes we do expect to only see one bios_log file but if there are more files matching that single regex, we will remove them all. My understanding of this test is that all crash files are cleaned out before the test and then restored when the test is over so that we have a known working state. Is that right mutexlox@?\n\nSo to answer the initial question:\n\u003e Should this need to iterate over Matches array?\nNo. There is only one match because there is only one Regex. The regex could match multiple files and that\u0027s fine.",
      "parentUuid": "518bfee3_115d5b8f",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84b47437_cf0428b9",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-10-29T10:03:36Z",
      "side": 1,
      "message": "|res| is the response from the DUT corresponding to WaitForCrashFiles.\nSo either,\n1) If it is expected exact one match, could you verify it just before L144, and avoid iterator matches at line L144 and here.\n2) If it is expected to match multiple entries, this line also should iterate.\n\nBTW, stepping back i\u0027m a bit more confused.\nIIUC, the returned files are the ones matched the given pattern at L133, so bios_log may not be included?\nCould you share the details how you tested this CL? Could you double check if bios_log file removal request is sent out?",
      "parentUuid": "0d47061e_8b4f9208",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75d68b38_39282e91",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2020-10-30T02:27:55Z",
      "side": 1,
      "message": "\u003e |res| is the response from the DUT corresponding to WaitForCrashFiles\n\nYes but WaitForCrashFiles will return an error if a regex doesn\u0027t match. I added a \u0027notthere\u0027 file to the regex and it failed because the file doesn\u0027t exist:\n\n```\n2020/10/29 19:20:23 [19:20:23.863] Failed to wait for crash files: timed out while waiting for crash files: no file matched notthere (found /var/spool/crash/coreutils.20201030.021943.222.core, /var/spool/crash/coreutils.20201030.021943.222.dmp, /var/spool/crash/coreutils.20201030.021943.222.meta, /var/spool/crash/coreutils.20201030.021943.222.proclog, /var/spool/crash/kernel.20201029.192002.0.bios_log, /var/spool/crash/kernel.20201029.192002.0.kcrash, /var/spool/crash/kernel.20201029.192002.0.log, /var/spool/crash/kernel.20201029.192002.0.meta)\n2020/10/29 19:20:25 [19:20:25.064] Error at watchdog_crash.go:142: Failed to find crash files: rpc error: code \u003d Unknown desc \u003d failed to wait for crash files: timed out while waiting for crash files: no file matched notthere (found /var/spool/crash/coreutils.20201030.021943.222.core, /var/spool/crash/coreutils.20201030.021943.222.dmp, /var/spool/crash/coreutils.20201030.021943.222.meta, /var/spool/crash/coreutils.20201030.021943.222.proclog, /var/spool/crash/kernel.20201029.192002.0.bios_log, /var/spool/crash/kernel.20201029.192002.0.kcrash, /var/spool/crash/kernel.20201029.192002.0.log, /var/spool/crash/kernel.20201029.192002.0.meta)\n```\n\n\u003e Could you share the details how you tested this CL?\n\nI ran this test on Lazor in skylab and locally. The bios_log is made on this platform and after the test runs the bios_log is removed with this CL.\n\n\u003e So either,\n\nThe iteration is for Files, not Matches[0]. There could be multiple files matching the regex pattern. This line is iterating because we don\u0027t really care how many ${base}.bios_log files appear, we want to clear them all out so we regex match the bios log files and remove them if they\u0027re generated. This matches the logic at L144 to look for any number of kernel crash files and print an error if there are multiple of them at L146. Currently the code continues if there are multiple crashes (because we see multiple meta file matches) so we should also match the multiple possible bios log files here and clear them out.\n\nLong story short, I hope this convinces you that there isn\u0027t anything to do here. We should match multiple possible bios_log files and clean them out because we get to this point in the code regardless of how many kernel crashes there are and the error print message at L146.",
      "parentUuid": "84b47437_cf0428b9",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f20bd39_239c4199",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2020-10-30T22:30:11Z",
      "side": 1,
      "message": "Per our Chat conversation, this bios_log code is also in the kernel_crash test (see https://source.chromium.org/chromiumos/chromiumos/codesearch/+/master:src/platform/tast-tests/src/chromiumos/tast/remote/bundles/cros/crash/kernel_crash.go;l\u003d180;drc\u003d0ef1dc48d2cacd71629385c75a2f898839e955af)",
      "parentUuid": "75d68b38_39282e91",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bde07bfa_50fce955",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-11-09T13:43:01Z",
      "side": 1,
      "message": "I carefully re-read the code and I got your point and I found some of my misread.\n\nHere\u0027s recommendation:\n- Could you avoid using \"Matches[0]\" hardcoded? The order of returned array is not deterministic. To keep the consistency at maximum, could you select determined one? Same comment for kernel_crash.go (I\u0027m ok if you\u0027d like to address kernel_crash.go in another CL). L144-145 is what it does.\n\n- (Probably it is out of the scope of this CL, but...) the API RemoveAllFilesRequest looks not simple enough. It needs to pass Regex, but it is simply ignored. Probably, regex should be removed, or making it possible to pass regexp pattern to remove (so that Matches does not need to be used).",
      "parentUuid": "1f20bd39_239c4199",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efa969df_8e561b0e",
        "filename": "src/chromiumos/tast/remote/bundles/cros/crash/watchdog_crash.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2020-11-09T23:22:03Z",
      "side": 1,
      "message": "\u003e Could you avoid using \"Matches[0]\" hardcoded?\n\nAre you saying to iterate over the matches here similar to how we iterate over it in L144?",
      "parentUuid": "bde07bfa_50fce955",
      "revId": "8fe1ded0c5c195a858a1904b8b98c6fc13003864",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}