{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e39dfecc_660fa1ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1370589
      },
      "writtenOn": "2020-11-24T05:57:42Z",
      "side": 1,
      "message": "Tast owner PTAL, thanks.",
      "revId": "bb622fddeb6c823d952c7096e3742e583d22f915",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06cbaf01_a89048de",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/multi_display.go",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-11-24T16:32:33Z",
      "side": 1,
      "message": "Please reserve time for cleanup: https://chromium.googlesource.com/chromiumos/platform/tast/+/refs/heads/master/docs/writing_tests.md#Reserve-time-for-clean_up-task",
      "range": {
        "startLine": 510,
        "startChar": 23,
        "endLine": 510,
        "endChar": 26
      },
      "revId": "bb622fddeb6c823d952c7096e3742e583d22f915",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f4d9858_8f330eab",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/multi_display.go",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-11-24T16:32:33Z",
      "side": 1,
      "message": "Please capture an error that may be returned by setDisplayPower. To avoid overwriting any other returned error, you can use a named return value:\n\n    func removeAddDisplay(ctx context.Context, s *testing.State, cr *chrome.Chrome, a *arc.ARC) (retErr error) {\n        ...\n        defer func() {\n            if err :\u003d setDisplayPower(ctx, displayPowerAllOn); err !\u003d nil \u0026\u0026 retErr \u003d\u003d nil {\n                retErr \u003d errors.Wrap(err, \"during removeAddDisplay cleanup\")\n            }\n        }()\n        ...\n    }",
      "range": {
        "startLine": 510,
        "startChar": 1,
        "endLine": 510,
        "endChar": 6
      },
      "revId": "bb622fddeb6c823d952c7096e3742e583d22f915",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "983cbc5a_a7a75d32",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/multi_display.go",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1370589
      },
      "writtenOn": "2020-11-26T04:52:44Z",
      "side": 1,
      "message": "If test this defer on L528, it looks like redundant for later since setting all display power on is also a part of test, see L557. Defer here because once test failure, the display won\u0027t be set all power on. What do you think?",
      "parentUuid": "06cbaf01_a89048de",
      "range": {
        "startLine": 510,
        "startChar": 23,
        "endLine": 510,
        "endChar": 26
      },
      "revId": "bb622fddeb6c823d952c7096e3742e583d22f915",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f9c3b04_75d32008",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/multi_display.go",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1370589
      },
      "writtenOn": "2020-11-26T04:52:44Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "4f4d9858_8f330eab",
      "range": {
        "startLine": 510,
        "startChar": 1,
        "endLine": 510,
        "endChar": 6
      },
      "revId": "bb622fddeb6c823d952c7096e3742e583d22f915",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19dc7717_42cb234e",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/multi_display.go",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2020-11-30T16:43:07Z",
      "side": 1,
      "message": "We don\u0027t know whether L557 will actually be run. For example, if L532 returns an error, then the the runOrFatal function will return early, so L557 will never get the chance to reset the display power. So, it is still helpful to defer the cleanup function. Whether we should defer it here or at L528, I\u0027m not sure: Daichi, maybe you can help?\n\nWe can also prevent setting the display power when it is redundant. If we had a helper function to check the current display power, then we could change this deferred function to something like this:\n\n    defer func() {\n        if ok, err :\u003d checkDisplayPower(ctx, displayPowerAllOn); err !\u003d nil {\n            if retErr \u003d\u003d nil {\n                retErr \u003d\u003d err\n            }\n            return\n        } else if !ok {\n            // Display power is already displayPowerAllOn, so no need to reset.\n            return\n        }\n        if err \u003d setDisplayPower(ctx, displayPowerAllOn); err !\u003d nil \u0026\u0026 retErr \u003d\u003d nil {\n            retErr \u003d errors.Wrap(err, \"during removeAddDisplay cleanup\")\n        }\n    }\n\nEither way, we do still need to reserve time for the clean-up task, per https://chromium.googlesource.com/chromiumos/platform/tast/+/refs/heads/master/docs/writing_tests.md#Reserve-time-for-clean_up-task",
      "parentUuid": "983cbc5a_a7a75d32",
      "range": {
        "startLine": 510,
        "startChar": 23,
        "endLine": 510,
        "endChar": 26
      },
      "revId": "bb622fddeb6c823d952c7096e3742e583d22f915",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6083dceb_45248101",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/multi_display.go",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1002736
      },
      "writtenOn": "2020-12-01T07:09:55Z",
      "side": 1,
      "message": "To me it\u0027s natural to call defer after #528 where the test changes display states as it brings the display state back for the next sub-test.",
      "parentUuid": "19dc7717_42cb234e",
      "range": {
        "startLine": 510,
        "startChar": 23,
        "endLine": 510,
        "endChar": 26
      },
      "revId": "bb622fddeb6c823d952c7096e3742e583d22f915",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}