{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "74601e76_65ccd48c",
        "filename": "src/chromiumos/tast/services/cros/ui/audio_service.pb.go",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-09-13T17:29:19Z",
      "side": 1,
      "message": "nit: can we remove the pb.go other than the ones associated with the proto changes we have?",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "177ea378_bbc11d4f",
        "filename": "src/chromiumos/tast/services/cros/ui/audio_service.pb.go",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-09-13T18:37:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74601e76_65ccd48c",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d900284a_23070ab6",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-09-13T17:29:19Z",
      "side": 1,
      "message": "The proto eventually are going to exported to Google3, which has more stringent checks on proto file.  \nhttps://source.corp.google.com/piper///depot/google3/third_party/golang/tast_tests/src/chromiumos/tast/services/cros/ui/chrome_service.proto?q\u003dchrome_service.proto\u0026ct\u003dos\nCan we verify with a Google3 presubmit to see if it adheres to the google3 recommendation?",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5d2ae59_113be3b2",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-09-13T18:37:20Z",
      "side": 1,
      "message": "Curious, is there a handy way to see if it passes a google3 presubmit?",
      "parentUuid": "d900284a_23070ab6",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18dd8da7_961a43ae",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-09-13T21:51:58Z",
      "side": 1,
      "message": "I do not know of an automatic way to do that.\n\nThe migration cmd `go run third_party/golang/import.go -dir\u003dtast_tests -version\u003dsame` only applies to the main branch I think.\n\nI created cl/474129947 to test out the changes, and presubmit went through.",
      "parentUuid": "c5d2ae59_113be3b2",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c756c96_76b29da3",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-09-13T22:11:46Z",
      "side": 1,
      "message": "Thanks for letting me know how to check tast go proto in google3 presubmit. Marking as resolved since it passed with the current change.",
      "parentUuid": "18dd8da7_961a43ae",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f332954_c965e172",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-09-13T17:29:19Z",
      "side": 1,
      "message": "Prefix enum values (https://developers.google.com/protocol-buffers/docs/style#enums). If I remember correctly, certain language like C++ have problems with entries like \"UNSPECIFIED\" defined in 2 enums under the same level.",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93a3026b_c8d9917e",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-09-13T18:37:20Z",
      "side": 1,
      "message": "I see `UNSPECIFIED` defined once in this message. However, `MODE_UNSPECIFIED` seems to be clearer.\n\nFor a message-level enum like this, I found Golang generates `Lacros_MODE_SIDEBYSIDE` with the message name as a prefix. If it looks okay, I\u0027ll make a change in the next patchset.",
      "parentUuid": "3f332954_c965e172",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c264dd0c_1766603a",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-09-13T21:51:58Z",
      "side": 1,
      "message": "Thanks, i misread it. I was always under the impression that the first value of any enum is \"UNSPECIFIED\".\n\nGo does handle that generation gracefully. Go code gen even looks a  duplicated with the Prefix, which likely would end up like `Lacros_MODE_MODE_SIDEBYSIDE`.\nFor consistency and potential compatibility with C++, my preference is to include a prefix.",
      "parentUuid": "93a3026b_c8d9917e",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba7aa0c2_9079e9c9",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-09-13T22:11:46Z",
      "side": 1,
      "message": "Sounds good to me. will prefix it with `MODE_` then.",
      "parentUuid": "c264dd0c_1766603a",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9836f41_961683ed",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-09-13T17:29:19Z",
      "side": 1,
      "message": "Lacros.",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f32e299_aca21459",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-09-13T18:37:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9836f41_961683ed",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf00b82a_2d876487",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-09-13T21:51:58Z",
      "side": 1,
      "message": "How about using `UNSPECIFIED` for consistency? If `UNSELECTED` represents a separate use case, can be move that to `1`?",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75fb45c1_6d470aab",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1507611
      },
      "writtenOn": "2022-09-13T22:11:46Z",
      "side": 1,
      "message": "I\u0027m open to changing to `SELECTION_UNSPECIFIED`.\nBtw, I was just referring to the consts defined in Tast that are related to this.\nhttps://osscs.corp.google.com/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/chrome/lacros/config.go\n\nI\u0027ll be keeping it open just to see how others (+hidehiko) think.",
      "parentUuid": "bf00b82a_2d876487",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fc24fbe_8d8f1097",
        "filename": "src/chromiumos/tast/services/cros/ui/chrome_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2022-09-13T22:39:11Z",
      "side": 1,
      "message": "Sure, I think it makes perfect sense to be aligned with the underlying values.  I was debating whether adding `SELECTION_UNSPECIFIED` for consistency, but then the two values carry very similar meaning. We should go with what you have right now.",
      "parentUuid": "75fb45c1_6d470aab",
      "revId": "cec70efcadf4a34a8a8d7406fee23c5c1739b19a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}