{
  "comments": [
    {
      "key": {
        "uuid": "af35be12_3df745db",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/quiescence.js",
        "patchSetId": 30
      },
      "lineNbr": 6,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "could you describe the definition of \"quiescing\" in this file, possibly as inline comments in the function?",
      "range": {
        "startLine": 5,
        "startChar": 62,
        "endLine": 6,
        "endChar": 29
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "148fd0fb_81cbf278",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/quiescence.js",
        "patchSetId": 30
      },
      "lineNbr": 6,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af35be12_3df745db",
      "range": {
        "startLine": 5,
        "startChar": 62,
        "endLine": 6,
        "endChar": 29
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2af08a37_843596f3",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/quiescence.js",
        "patchSetId": 30
      },
      "lineNbr": 12,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "nit: Please replace all \"var\" with const or let.",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 12,
        "endChar": 5
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63099915_54a4fa2b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/quiescence.js",
        "patchSetId": 30
      },
      "lineNbr": 12,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "What\u0027s the purpose of real_performance? Can we inline window.performance below?\n\nalso nit: s/real_performance/realPerformance/ as per JS style.",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 22
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d472ed2_1a01327d",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/quiescence.js",
        "patchSetId": 30
      },
      "lineNbr": 12,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2af08a37_843596f3",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 12,
        "endChar": 5
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8832fca_10179f67",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/quiescence.js",
        "patchSetId": 30
      },
      "lineNbr": 12,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "I copied this code from telemetry, but I am guessing that there are several uses of realPerformance, so maybe it makes sense to avoid the dictionary lookup at every use, and it\u0027s also a little shorter.",
      "parentUuid": "63099915_54a4fa2b",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 22
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f9d1ea4_c9e7d65c",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/data/quiescence.js",
        "patchSetId": 30
      },
      "lineNbr": 12,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-09T06:06:20Z",
      "side": 1,
      "message": "I don\u0027t think avoiding dictionary lookups is meaningful for this case. Also, since window is the global object, you can refer window.performance as performance, so mentioning it as realPerformance makes the code a bit longer. And finally, if we keep this assignment, we should comment the reason why we chose to do so --- telemetry code you mentioned has explicit comments in fact.",
      "parentUuid": "e8832fca_10179f67",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 22
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e793c43_c9fa906d",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "Generally, please avoid passing around *testing.State. It contains everything, so passing it around makes it harder to reason about what input is needed for a function.\n\nUsually we can avoid using *testing.State by calling testing.Contextlog, returning error instead of calling s.Fatal, calling s.DataPath in the test body function, etc.\n\nBasically it should be only the test main function that have access to testing.State.",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b53fc31_0a468d1b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "This is the comment for ContextLog:\n\n// ContextLog formats its arguments using default formatting and logs them\n// via ctx, previously provided by State.Context. It is intended to be used for\n// informational logging by packages providing support for tests. Tests should\n// just call State.Log or State.Logf instead.\n\nShould I use State.Log(f) then instead?  By the way, that\u0027s what I meant when I asked tast-users if I could avoid passing \"s\" around.",
      "parentUuid": "0e793c43_c9fa906d",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0066178_97155c0c",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 0,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T01:27:33Z",
      "side": 1,
      "message": "hmm; i think the intent is more like \"if you already have both a Context and a State, use the State to log, but don\u0027t pass a State just for logging\".\n\nmaybe the documentation should be reworded to something like \"Code that already has a State object in-scope should call State.Log or State.Logf instead.\"",
      "parentUuid": "4b53fc31_0a468d1b",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49db3f69_86669273",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 0,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-09T06:06:20Z",
      "side": 1,
      "message": "Thanks Luigi for catching it! I believe the doc for ContextLog is stale --- it was written long before we started writing real tests and figured out passing around testing.State in test code is not great. Let me update the doc in a separate CL.",
      "parentUuid": "f0066178_97155c0c",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff6c0b84_23506106",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-10T02:21:59Z",
      "side": 1,
      "message": "Great, thanks, all set on this.  (I think.)",
      "parentUuid": "49db3f69_86669273",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d1eb486_d2c3a2a1",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 29,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "if this requires manually installing some data that isn\u0027t present by default on test images, please add a \"disabled\" attribute to prevent it from running automatically (since it\u0027ll presumably always fail).",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "826c5e22_3ea1729f",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 29,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Great, thanks.",
      "parentUuid": "1d1eb486_d2c3a2a1",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f85b66b9_1516e14a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 76,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "it looks like \"renderer\" and \"tab\" are used in the same meaning in this test. for example, \"var openedTabs []*renderer\". how about naming this \"tab\"?",
      "range": {
        "startLine": 76,
        "startChar": 5,
        "endLine": 76,
        "endChar": 13
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9bd293c_121d6400",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 76,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "It\u0027s more useful to think of these as renderers, each of whom happens to serve a single tab.  I am renaming variables to make it clearer.",
      "parentUuid": "f85b66b9_1516e14a",
      "range": {
        "startLine": 76,
        "startChar": 5,
        "endLine": 76,
        "endChar": 13
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7939dba_69eabd1f",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 76,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-09T06:06:20Z",
      "side": 1,
      "message": "It sounds also good, thanks!",
      "parentUuid": "f9bd293c_121d6400",
      "range": {
        "startLine": 76,
        "startChar": 5,
        "endLine": 76,
        "endChar": 13
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e4e2442_a90f7627",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 81,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "hmm, would you mind moving this and the related increment code into your test body instead of having a global here? then you can just pass the URL into addTabFromList.",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fb59270_e6e030c5",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 81,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e4e2442_a90f7627",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b73b936_b6951a31",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 86,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "nit: this can probably be:\n\n  nextURLIndex \u003d (nextURLIndex + 1) % len(tabURLs)",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "476f260e_c1ad15da",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 86,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b73b936_b6951a31",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e210e97_b3e6cf56",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 132,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "style: tlist[0].id",
      "range": {
        "startLine": 132,
        "startChar": 74,
        "endLine": 132,
        "endChar": 88
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a870e1d_1151194f",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 132,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "style: please remove single quotes",
      "range": {
        "startLine": 132,
        "startChar": 36,
        "endLine": 132,
        "endChar": 44
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89ca5031_153e68b4",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 132,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a870e1d_1151194f",
      "range": {
        "startLine": 132,
        "startChar": 36,
        "endLine": 132,
        "endChar": 44
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78b16387_2c0533be",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 132,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e210e97_b3e6cf56",
      "range": {
        "startLine": 132,
        "startChar": 74,
        "endLine": 132,
        "endChar": 88
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96f6a578_406c841a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 184,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "style: please remove quotes",
      "range": {
        "startLine": 184,
        "startChar": 46,
        "endLine": 184,
        "endChar": 54
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9aa137f_eef41f5a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 184,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96f6a578_406c841a",
      "range": {
        "startLine": 184,
        "startChar": 46,
        "endLine": 184,
        "endChar": 54
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8aa68876_633fa0fa",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 201,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "nit: please use let/const instead of var.",
      "range": {
        "startLine": 201,
        "startChar": 2,
        "endLine": 201,
        "endChar": 5
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9427a417_d41524dc",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 201,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "style: frameCount",
      "range": {
        "startLine": 201,
        "startChar": 6,
        "endLine": 201,
        "endChar": 17
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05d9ef17_1d8486bd",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 201,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Interesting---JS and Go use the same style for variables and functions?",
      "parentUuid": "9427a417_d41524dc",
      "range": {
        "startLine": 201,
        "startChar": 6,
        "endLine": 201,
        "endChar": 17
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e7aff42_160da273",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 201,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8aa68876_633fa0fa",
      "range": {
        "startLine": 201,
        "startChar": 2,
        "endLine": 201,
        "endChar": 5
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bd4b4b0_ff05e7a9",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 201,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-09T06:06:20Z",
      "side": 1,
      "message": "Yes, JS and Go use camelCase for variables, but there\u0027s still some difference (e.g. Go will name waitForRaf as waitForRAF).",
      "parentUuid": "05d9ef17_1d8486bd",
      "range": {
        "startLine": 201,
        "startChar": 6,
        "endLine": 201,
        "endChar": 17
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3f33186_fb04cd43",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 202,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "style: waitForRaf",
      "range": {
        "startLine": 202,
        "startChar": 6,
        "endLine": 202,
        "endChar": 18
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c4fe5b0_7dc922ee",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 202,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3f33186_fb04cd43",
      "range": {
        "startLine": 202,
        "startChar": 6,
        "endLine": 202,
        "endChar": 18
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "881ff9ae_859985c2",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 212,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "huge nit: please remove this extra blank line.",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb58684b_7f14b1aa",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 212,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "I completely agree with this nit!",
      "parentUuid": "881ff9ae_859985c2",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c987446_92b0d759",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 227,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "style: please remove quotes",
      "range": {
        "startLine": 227,
        "startChar": 19,
        "endLine": 227,
        "endChar": 30
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9f0cdcd_6224dca5",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 227,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "style: tabList",
      "range": {
        "startLine": 227,
        "startChar": 49,
        "endLine": 227,
        "endChar": 57
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37ec9865_fd6f1882",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 227,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c987446_92b0d759",
      "range": {
        "startLine": 227,
        "startChar": 19,
        "endLine": 227,
        "endChar": 30
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f69eb500_3f501ea0",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 227,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9f0cdcd_6224dca5",
      "range": {
        "startLine": 227,
        "startChar": 49,
        "endLine": 227,
        "endChar": 57
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce9520a6_129d1651",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 228,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "nit: please use single quotes for JS strings\n\nThat said, this can be written simply as \"(tab) \u003d\u003e tab.id\"",
      "range": {
        "startLine": 228,
        "startChar": 44,
        "endLine": 228,
        "endChar": 48
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "102458ff_91ba9e6f",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 228,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Indeed.  I was mostly copy-pasting this and other JS.",
      "parentUuid": "ce9520a6_129d1651",
      "range": {
        "startLine": 228,
        "startChar": 44,
        "endLine": 228,
        "endChar": 48
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2ed8ef3_e8defe57",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 255,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "can you just use something like this here?\n\n  conn.WaitForExpr(ctx, fmt.Sprintf(\"document.querySelector(%q)\", selector))",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c797b6a_a6a34b47",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 255,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "I chose to set my own timeout and poll interval here.  But if you have a strong preference, I can override the ctx timeout, and additionally just go with the default poll interval.",
      "parentUuid": "b2ed8ef3_e8defe57",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3480b93_a3afaa9b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 255,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T01:27:33Z",
      "side": 1,
      "message": "i\u0027d stick with the default poll interval unless you have a reason not to. if you want a shorter timeout, use context.WithTimeout:\n\n  ctx, cancel :\u003d context.WithTimeout(ctx)\n  defer cancel()\n  return conn.WaitForExpr(ctx, ...)",
      "parentUuid": "1c797b6a_a6a34b47",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d04a3444_a64ea1d4",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 255,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-09T03:07:50Z",
      "side": 1,
      "message": "OK.  The one other thing that doesn\u0027t work well with WaitForExpr is that it doesn\u0027t fail on errors, but keeps trying until the timeout expires. So if for instance I have a syntax error in the JS, I have to write a separate Eval to figure it out.",
      "parentUuid": "c3480b93_a3afaa9b",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c77212b_9674651a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 255,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-10T02:21:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d04a3444_a64ea1d4",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e0fb8a1_23afc184",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 281,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "this isn\u0027t async, is it? do you actually need a promise or can you just exec this code directly?",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "886bdac5_580929eb",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 281,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Yes I can exec.",
      "parentUuid": "6e0fb8a1_23afc184",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7eb1bae3_4cc21a61",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 288,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "if this doesn\u0027t work, can you delete it and just add it when it works?",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1988505_6faeb823",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 288,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Sure.  I\u0027ll do this in 2 patchsets, so I can fix focusOnElement (which will also go away) so next time I don\u0027t make the same mistake.",
      "parentUuid": "7eb1bae3_4cc21a61",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d007342_e25ee071",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 378,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "mind getting rid of these globals and just passing state around as needed instead?",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6962a2ba_9e08bdca",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 378,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "I need more guidance for using globals vs. passing state around.  Under what circumstances is the use of globals advisable?  In this case globals seem more convenient, and the likelihood of needing to encapsulate the state seems extremely low.",
      "parentUuid": "4d007342_e25ee071",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ffdf829_69433b33",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 378,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T01:27:33Z",
      "side": 1,
      "message": "the main reason why i\u0027d like to avoid using globals when possible is that they\u0027re shared across all tests in the \u0027platform\u0027 package: https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Scoping-and-shared-code\n\nthis is just how things work in go. nya@\u0027s tried to reduce the potential for problems by adding a pre-upload hook that verifies that a test in one file doesn\u0027t depend on globals from another file, but i think it\u0027s still better to avoid globals when possible.\n\ncurious to hear others\u0027 thoughts here, but i wonder if it\u0027d be a reasonable compromise to at least put these in a struct:\n\n  var memPressureState struct {\n      renderers ...\n      perfValues ...\n  }",
      "parentUuid": "6962a2ba_9e08bdca",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7498856_1912a380",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 378,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-09T03:07:50Z",
      "side": 1,
      "message": "Using a struct seems fine.\n\nMaybe the docs could say \"avoid using globals, but if some globals are super-useful, put them in a struct with such-and-such name convention\u0027.  I am not sure that\u0027s good enough though, because the interpretation of super-useful is subjective.\n\nI am fine with either a global struct, or passing stuff around (probably a local instance of such struct).",
      "parentUuid": "8ffdf829_69433b33",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd8c714d_2242bcf1",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 378,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-09T06:06:20Z",
      "side": 1,
      "message": "Generally I strongly recommend avoiding *mutable* global variables. They make a program error-prone in many aspects (e.g. data races, unit testability, reentrantness, etc).\n\nIn this case I recommend defining a struct holding the state of renders (like memPressureState Dan mentioned), but not making it a global variables. Instead we can pass it around, or define methods on the struct (just like classes in other languages).",
      "parentUuid": "f7498856_1912a380",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "684baee3_a3ef590b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 378,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-10T02:21:59Z",
      "side": 1,
      "message": "OK!",
      "parentUuid": "bd8c714d_2242bcf1",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a75aee_7b2b53ed",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 388,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "since this is trivial, mind just inlining it",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69489587_f93d1837",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 388,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11a75aee_7b2b53ed",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eeea5a83_2eccf21d",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 439,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "nit:\n\n  if err :\u003d wpr.Start(); err !\u003d nil {",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38d6f512_95ac4e8a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 439,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done, although it\u0027s not quite the same since it redeclares err.",
      "parentUuid": "eeea5a83_2eccf21d",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "835e50e7_30f71259",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 444,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "no port you can poll? sleep statements like this make me nervous since they\u0027re always either too long or too short.",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bf90cee_b2120c51",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 444,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Yes good idea.  I am now waiting until I ca connect() to the http and https ports.",
      "parentUuid": "835e50e7_30f71259",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85497612_2d7f1047",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 458,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "nit: getFaultCount? getPageFaultCount?\n\nif you want to use an ancronym, this should be getPFCount, but i think that that\u0027s harder to interpret.\n\nhttps://github.com/golang/go/wiki/CodeReviewComments#initialisms",
      "range": {
        "startLine": 458,
        "startChar": 5,
        "endLine": 458,
        "endChar": 15
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d84def83_032b4115",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 458,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85497612_2d7f1047",
      "range": {
        "startLine": 458,
        "startChar": 5,
        "endLine": 458,
        "endChar": 15
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7272c75_30858e81",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 481,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "There are fairly many consts/vars/funcs starting with \"pfMeter\" prefix. How about introducing a subpackage named like \"pagefault\" and moving them there?",
      "range": {
        "startLine": 481,
        "startChar": 0,
        "endLine": 481,
        "endChar": 43
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9c54c08_a6490892",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 481,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Do you have an example of a subpackage in tast?  Thanks.",
      "parentUuid": "f7272c75_30858e81",
      "range": {
        "startLine": 481,
        "startChar": 0,
        "endLine": 481,
        "endChar": 43
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2f2e923_6b7caabc",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 481,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T01:27:33Z",
      "side": 1,
      "message": "yes, see e.g. \"selinux\" or \"filesetup\" or \"filecheck\" under the \"security\" test package, iirc",
      "parentUuid": "a9c54c08_a6490892",
      "range": {
        "startLine": 481,
        "startChar": 0,
        "endLine": 481,
        "endChar": 43
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a3b8670_38b864ad",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 481,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-09T03:07:50Z",
      "side": 1,
      "message": "Perfect, thanks!",
      "parentUuid": "f2f2e923_6b7caabc",
      "range": {
        "startLine": 481,
        "startChar": 0,
        "endLine": 481,
        "endChar": 43
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1ce0846_db11735c",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 481,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-10T02:21:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a3b8670_38b864ad",
      "range": {
        "startLine": 481,
        "startChar": 0,
        "endLine": 481,
        "endChar": 43
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22f886d3_1435ec8b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 506,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "please make sure that this exits when your test is done (e.g. by watching ctx.Err())",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eef02cc_92e3f0f0",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 506,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "I don\u0027t understand.  I have no explicit exit condition for that goroutine.  Should I?  I thought the system terminates all running goroutines when exiting the main thread.",
      "parentUuid": "22f886d3_1435ec8b",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a81cea7_5bbc799e",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 506,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T01:27:33Z",
      "side": 1,
      "message": "your understanding is correct, but the main thread doesn\u0027t exit until all tests have run, not just yours. all tests run in the same process.\n\nso yes, goroutines need to explicitly exit or they\u0027ll waste CPU cycles during later tests.\n\nsee also https://crbug.com/902380. i have an in-progress change that i\u0027ll hopefully be able to finish at some point that will log goroutine leaks.",
      "parentUuid": "7eef02cc_92e3f0f0",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "413416ac_7892c1eb",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 506,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-09T03:07:50Z",
      "side": 1,
      "message": "Got it, thanks.",
      "parentUuid": "5a81cea7_5bbc799e",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe10138d_2f238128",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 506,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-10T02:21:59Z",
      "side": 1,
      "message": "So---when ctx.Done() fires, the test is done, yes?  Otherwise I can use a channel to send a \"kill yourself\" message.",
      "parentUuid": "413416ac_7892c1eb",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ca9a1d3_38298656",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 506,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-11T02:07:34Z",
      "side": 1,
      "message": "yes, ctx will expire when the test\u0027s timeout is reached. it\u0027s probably better to explicitly signal to goroutines to exit when you\u0027re done instead of depending on context expiration, though -- see my suggestion on the subpackage",
      "parentUuid": "fe10138d_2f238128",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b44259c_c6944709",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 510,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "high-level comment: instead of using a mutex, can you make this goroutine pass data via a channel?\n\nsee e.g. https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#concurrency",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78dcb864_b5446c7a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 510,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "I considered that, but it seems harder.  The main thread periodically wants to get stats from the PF meter thread.  Should it do it with a request/reply, i.e. one channel in each direction?  Then the PF meter thread needs to check for pending requests in a non-blocking manner.  It seems a lot more complicated than this.",
      "parentUuid": "1b44259c_c6944709",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cd34159_f96e62e5",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 510,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T01:27:33Z",
      "side": 1,
      "message": "for {\n      select {\n      case \u003c-in: // read from req channel\n          // handle request\n      case \u003c-ctx.Done():\n          return\n      }\n  }\n\nsee also time.After if you need to sleep in the loop",
      "parentUuid": "78dcb864_b5446c7a",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2be48ebb_4c406b6b",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 510,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-09T03:07:50Z",
      "side": 1,
      "message": "Thank you for the code, but it doesn\u0027t address my objection that this seems more complicated.  Is a mutex bad for this case?  Should we not use mutexes at all?  Note that this mutex isn\u0027t locked very often (once a second).",
      "parentUuid": "8cd34159_f96e62e5",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35089fcf_2256cbe6",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 510,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T04:54:39Z",
      "side": 1,
      "message": "sorry, i misunderstood that you\u0027d only need to send requests if you were using channels. a mutex seems like the correct approach for the current case where (i think) you have a goroutine that\u0027s continuously collecting data, and you want to be able to periodically get its state from the main test goroutine.",
      "parentUuid": "2be48ebb_4c406b6b",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "536f840c_a94e6552",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 510,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-10T02:21:59Z",
      "side": 1,
      "message": "Please take a look at the new code.",
      "parentUuid": "35089fcf_2256cbe6",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116d9c4e_8f9883f6",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 525,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T04:54:39Z",
      "side": 1,
      "message": "nit: please document that this blocks until (i think) you have at least a second\u0027s worth of data",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de22dd89_2da0ccb5",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 525,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-10T02:21:59Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s the case.  Should it be?",
      "parentUuid": "116d9c4e_8f9883f6",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d540f28_51a20f40",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 525,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-11T02:07:34Z",
      "side": 1,
      "message": "i might\u0027ve misunderstood, but isn\u0027t that what the lightSleep call on L533 was trying to do?",
      "parentUuid": "de22dd89_2da0ccb5",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb86fdcf_7ec8db2a",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 526,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "nit: please name these values, e.g.\n\n  (numFaults int64, avgRate, maxRate float64)",
      "range": {
        "startLine": 526,
        "startChar": 61,
        "endLine": 526,
        "endChar": 84
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2b8a014_80c55baf",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 526,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb86fdcf_7ec8db2a",
      "range": {
        "startLine": 526,
        "startChar": 61,
        "endLine": 526,
        "endChar": 84
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3bc64a9_8e851a8d",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 531,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T04:54:39Z",
      "side": 1,
      "message": "recursion doesn\u0027t seem necessary here, and i think you can simplify this:\n\n  pfMeterMutex.Lock()\n  defer pfMeterMutex.Unlock()\n\n  elapsed :\u003d time.Now().Sub(pfMeterStartTime)\n  if elapsed \u003c time.Second {\n    pfMeterMutex.Unlock()\n    lightSleep(ctx, time.Second - elapsed)\n    pfMeterMutex.Lock()\n    elapsed \u003d time.Now().Sub(pfMeterStartTime)\n  }\n  countDelta :\u003d ...",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0b9416b_6b39d5a6",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 531,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-10T02:21:59Z",
      "side": 1,
      "message": "Oh I see.  Sure.",
      "parentUuid": "a3bc64a9_8e851a8d",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3d691d9_8cb64402",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 547,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "what\u0027s the reason for having comments here? are you planning to change these later?",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad2a7139_eac17685",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 547,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "You mean constants?  These are useful during development, for experimenting with variations.  Should I somehow pass them as test parameters?",
      "parentUuid": "f3d691d9_8cb64402",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94bdb547_b1ab27dd",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 547,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T01:27:33Z",
      "side": 1,
      "message": "sorry; yes, meant constants. are you planning to delete them when this is ready to be committed? or are you going to split this into multiple tests later?",
      "parentUuid": "ad2a7139_eac17685",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efc7b12f_5ce92ef8",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 547,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-09T03:07:50Z",
      "side": 1,
      "message": "Yes, I the plan is to share this code in a number of tests.\n\nAdditionally, I use this code to record page sets (useLogIn \u003d true).",
      "parentUuid": "94bdb547_b1ab27dd",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26ce4de7_404e1c0c",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 547,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T04:54:39Z",
      "side": 1,
      "message": "ah, okay. if you\u0027re going to share it across multiple tests later, then you\u0027ll need to move it into a subpackage in any case. that\u0027s probably also an argument for moving most/all of the globals into structs that can be owned by and passed in from the individual tests (since you likely want to share the same global state among all of your tests).",
      "parentUuid": "efc7b12f_5ce92ef8",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61db18c1_f10ee5cb",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 549,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "if you don\u0027t sleep, can you just delete this?",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f44672a_3ff80d7c",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 549,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Same as above.  If I delete it, it will be harder to figure out where to put it when we want to experiment with a non-zero value.",
      "parentUuid": "61db18c1_f10ee5cb",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dab119f_1ec314c4",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 552,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "nit: delete this",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca80b550_363d5b7d",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 552,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Sure, but the resulting code is harder to maintain, because only the first definition of err wants a :\u003d, and successive ones want \u003d (not to mention the complication from other variables to the left of :\u003d).  By declaring it upfront, I can add and remove code with fewer changes.",
      "parentUuid": "0dab119f_1ec314c4",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1847b0e_38816e47",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 552,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T01:27:33Z",
      "side": 1,
      "message": "if you want to keep it, please declare it right before you first use it instead of up here",
      "parentUuid": "ca80b550_363d5b7d",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d43f5201_d7dc1ed4",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 560,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "nit: bytes, err :\u003d ...",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "240e4135_8a92664c",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 560,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d43f5201_d7dc1ed4",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea22a67e_34da12b9",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 577,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "Usually, constructor functions are supposed to delete objects by itself when encountering errors. That is, if err !\u003d nil, it should hold cr \u003d\u003d nil \u0026\u0026 wpr \u003d\u003d nil.\n\nCould you try to update initBrowser to follow the way, and change the code around here to more idiomatic way to call constructors, that is:\n\n cr, wpr, err :\u003d ...\n if err !\u003d nil { ... }\n defer cr.Close(ctx)\n defer func() { ... }()\n\n(Note: I don\u0027t have strong opinion about the order of closing cr and wpr, but I just followed the order of returned values from initBrowser.)",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 577,
        "endChar": 2
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cceee1b_637c8816",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 577,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done.  I was hoping to clean up WPR in just one place.",
      "parentUuid": "ea22a67e_34da12b9",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 577,
        "endChar": 2
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41cc3d75_b8c0f520",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 581,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "huge nit: \"HTTP\" or \"browser\"",
      "range": {
        "startLine": 581,
        "startChar": 17,
        "endLine": 581,
        "endChar": 21
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebfe735c_a78415e0",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 581,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41cc3d75_b8c0f520",
      "range": {
        "startLine": 581,
        "startChar": 17,
        "endLine": 581,
        "endChar": 21
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e6f9281_f6f47bc4",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 582,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "is this safe to do while chrome is running?",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fe7654d_ef97805c",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 582,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "It seems to work.  Ideally it should happen inside chrome.New().  Maybe an option to that?  In any case I moved it to before chrome.New() so it won\u0027t affect the later instance of Chrome.",
      "parentUuid": "7e6f9281_f6f47bc4",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db52cb06_e75b9575",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 582,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-09T01:27:33Z",
      "side": 1,
      "message": "iirc chrome.New wipes the user\u0027s cryptohome. are you sure you need this?",
      "parentUuid": "1fe7654d_ef97805c",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5aecdc2_13adf871",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 582,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-09T03:07:50Z",
      "side": 1,
      "message": "No---I didn\u0027t realize that the cryptohome is rebuilt.  That\u0027s certainly enough.  Thanks!",
      "parentUuid": "db52cb06_e75b9575",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48c82b30_39aa3049",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 603,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2019-01-07T07:20:26Z",
      "side": 1,
      "message": "nit:\n\n for _, r :\u003d range openedTabs {\n   r.conn.Close()\n }",
      "range": {
        "startLine": 601,
        "startChar": 2,
        "endLine": 603,
        "endChar": 3
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "153748f3_f32290f7",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 603,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48c82b30_39aa3049",
      "range": {
        "startLine": 601,
        "startChar": 2,
        "endLine": 603,
        "endChar": 3
      },
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "549a1472_f555d913",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 612,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-05T06:48:40Z",
      "side": 1,
      "message": "plesae make sure that there are deferred statements to call Close on all of the chrome.Conns that are created here. otherwise, i\u0027m concerned that resources may be leaked.",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "674c08bb_e617c394",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/memory_pressure.go",
        "patchSetId": 30
      },
      "lineNbr": 612,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2019-01-08T18:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "549a1472_f555d913",
      "revId": "5b8363a54bcdc0327bbc1d3c85a15d527d4f2514",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}