{
  "comments": [
    {
      "key": {
        "uuid": "b61631d4_5abc107c",
        "filename": "src/chromiumos/tast/local/graphics/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-24T22:32:55Z",
      "side": 1,
      "message": "nit: please group constants into a single block when you have more than one:\n\n  const (\n      deqpBaseDir \u003d ...\n      ...\n  )",
      "revId": "71dff976c9024e8ea9f25a7ed441311c25ddb169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d5fc2d9_0ce792f9",
        "filename": "src/chromiumos/tast/local/graphics/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 248,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-24T22:32:55Z",
      "side": 1,
      "message": "in general, favor passing time intervals as time.Duration to avoid confusion about units. i\u0027d recommend making this method take a time.Duration and the next function return one (and maybe also renaming them to SetDirtyWritebackDuration and GetDirtyWritebackDuration, or ...Interval, or ...Time)",
      "range": {
        "startLine": 248,
        "startChar": 53,
        "endLine": 248,
        "endChar": 66
      },
      "revId": "71dff976c9024e8ea9f25a7ed441311c25ddb169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b536bce1_90e2489b",
        "filename": "src/chromiumos/tast/local/graphics/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 250,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-24T22:32:55Z",
      "side": 1,
      "message": "is there a specific file that you need to flush? if so, please pass it here. otherwise, sync can block on e.g. flushing data to slow external USB devices. this could make your test much slower if a previous test wrote a bunch of data that hasn\u0027t been flushed yet",
      "revId": "71dff976c9024e8ea9f25a7ed441311c25ddb169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "370062ed_5df4493d",
        "filename": "src/chromiumos/tast/local/graphics/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-24T22:32:55Z",
      "side": 1,
      "message": "nit: just \"sync failed: %v\"?",
      "range": {
        "startLine": 254,
        "startChar": 21,
        "endLine": 254,
        "endChar": 52
      },
      "revId": "71dff976c9024e8ea9f25a7ed441311c25ddb169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d90a839c_0c704799",
        "filename": "src/chromiumos/tast/local/graphics/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2018-09-24T22:32:55Z",
      "side": 1,
      "message": "you\u0027re leaking the file if this fails. either close it explicitly in the block here, or add a \"defer f.Close()\" immediately before this line (can closing a /proc file ever fail?)",
      "revId": "71dff976c9024e8ea9f25a7ed441311c25ddb169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}