{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "023f3b95_ea24ee4e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1559454
      },
      "writtenOn": "2022-11-08T03:28:43Z",
      "side": 1,
      "message": "Hello, could you please review my code for google workspace demo? thanks",
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1907749_e056409f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "I will continue to review after rebase and diff base fixed.",
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bcee421_51a50260",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/util/util.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "This is not required I believe.",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 21
      },
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c48f2419_41646c3f",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/util/util.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "It would be better to make the validation a function instead of hardcoded string, it allows flexibility in validation.",
      "range": {
        "startLine": 62,
        "startChar": 1,
        "endLine": 62,
        "endChar": 13
      },
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2082b22_41d0e597",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/util/util.go",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "This is a redundant implementation.",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 235,
        "endChar": 1
      },
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f6586ca_196ef7f8",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/util/util.go",
        "patchSetId": 1
      },
      "lineNbr": 249,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "1. This function is doing a PK key press, not VK. The description is wrong.\n2. I do not think it is required either.",
      "range": {
        "startLine": 237,
        "startChar": 0,
        "endLine": 249,
        "endChar": 1
      },
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4952d85_806f9445",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/util/util.go",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "nit: Comment should finish with full stop.",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 251,
        "endChar": 126
      },
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c775a656_e36b0026",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/util/util.go",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "Regarding accent key input, I would suggest to create a function in vkb.go\n\nvkbCtx.InputAccentKey(baseKey, accentKey string) action.Action\n\nThen you can input \"hèllo\" as below:\n\nuiauto.Combine(\"input hèllo\",\n    vkbCtx.TapKey(\"h\"),\n    vkbCtx.InputAccentKey(\"e\",\"è\"),\n    vkbCtx.TapKeys(strings.Split(\"llo\", \"\")),\n)",
      "range": {
        "startLine": 252,
        "startChar": 5,
        "endLine": 252,
        "endChar": 43
      },
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4229166_3a68bca8",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/util/util.go",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "This function should not be used in user behavior. You\u0027d better completely simulate a user behavior to trigger VK such as clicking an input field.",
      "range": {
        "startLine": 259,
        "startChar": 9,
        "endLine": 259,
        "endChar": 28
      },
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33e1d38b_173b6cd2",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/util/util.go",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "I do not think glide typing has anything special across IMEs. It should just be used directly in test.",
      "range": {
        "startLine": 285,
        "startChar": 5,
        "endLine": 285,
        "endChar": 39
      },
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "692640c5_1f5dd601",
        "filename": "src/chromiumos/tast/local/bundles/cros/inputs/util/util.go",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-11-08T05:23:42Z",
      "side": 1,
      "message": "Such kind of methods should not be duplicated.",
      "range": {
        "startLine": 300,
        "startChar": 0,
        "endLine": 309,
        "endChar": 0
      },
      "revId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "de05ce217a47ad137cd6f36711ad024917b71216",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}