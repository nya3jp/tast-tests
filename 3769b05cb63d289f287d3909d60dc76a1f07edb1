{
  "comments": [
    {
      "key": {
        "uuid": "000bf98c_d90a0e78",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "nit: specified",
      "range": {
        "startLine": 108,
        "startChar": 61,
        "endLine": 108,
        "endChar": 70
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c06e523_4a73ae64",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2019-01-18T17:00:13Z",
      "side": 1,
      "message": "I\u0027d much rather we don\u0027t poll if not needed. \n\nYou can install a listener\ne.g.\nchrome.automation.getDesktop((desktop) \u003d\u003e {\n  desktop.addEventListener(chrome.automation.EventType.FOCUS, (evt) \u003d\u003e {\n...\n  });\n});\n\nThis is much more in the spirit of how ChromeVox works anyway.",
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14bd83c0_c1818ff9",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 129,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "optional: Maybe it\u0027s nice to log that this error is caused by timeout.\n\ne.g. \"Timeout: failed to check...\"",
      "range": {
        "startLine": 129,
        "startChar": 27,
        "endLine": 129,
        "endChar": 68
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "572f4749_148b604f",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 159,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "I think this can be an optional arg (additional check) from method name.",
      "range": {
        "startLine": 159,
        "startChar": 70,
        "endLine": 159,
        "endChar": 82
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ffad8f4_bebf0992",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 172,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "This is very similar to waitForValueFocused. How about to structure them in the following way?\n\ngetValueForFocusedElement(ctx, chromeVoxConn, elementClass) -\u003e same with what we are doing with getSeekBarValue.\nwaitValueForFocusedElement(ctx, chromeVoxConn, value, elementClass) -\u003e use getValueForFocusedElement inside with testing.pool.",
      "range": {
        "startLine": 160,
        "startChar": 1,
        "endLine": 172,
        "endChar": 25
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e9ef558_d615e35e",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 184,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "This might have been already discussed in the previous CLs code review. Why do we write this out to a file instead of simply logging out to stdout?",
      "range": {
        "startLine": 184,
        "startChar": 29,
        "endLine": 184,
        "endChar": 43
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3f3019a_5be6f1b0",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 212,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "It\u0027s better to write a comment about why you do it (intention) instead of what the code is doing.\n\ne.g. Make sure that slider is focused with an expected initial value.",
      "range": {
        "startLine": 212,
        "startChar": 4,
        "endLine": 212,
        "endChar": 66
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96a09fb2_d8291df0",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 225,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "Wouldn\u0027t this be done with the above waitForValueFocused?",
      "range": {
        "startLine": 217,
        "startChar": 1,
        "endLine": 225,
        "endChar": 2
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "844dddbd_c2d4de65",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 227,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "nit: maybe worth to say that this is done by ChromeVox.\n\ne.g. Increment value of seekbar by ChromeVox key combo.",
      "range": {
        "startLine": 227,
        "startChar": 4,
        "endLine": 227,
        "endChar": 30
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0ba442e_78d608b3",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 281,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "We can remove this now.",
      "range": {
        "startLine": 277,
        "startChar": 1,
        "endLine": 281,
        "endChar": 2
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be111552_37d74915",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/accessibility_event.go",
        "patchSetId": 8
      },
      "lineNbr": 452,
      "author": {
        "id": 1121230
      },
      "writtenOn": "2019-01-18T01:13:45Z",
      "side": 1,
      "message": "question: don\u0027t we get an event for seekbar value update, e.g. valueChanged event?\n\nI think what we want to test in focusAndIncrementElement would be\n\n- Value is correctly updated in the a11y tree (this will be checked via chrome.automation.getFocus call)\n- Event is correctly dispatched for the update (this will be checked via event log output)",
      "range": {
        "startLine": 447,
        "startChar": 1,
        "endLine": 452,
        "endChar": 2
      },
      "revId": "3769b05cb63d289f287d3909d60dc76a1f07edb1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}