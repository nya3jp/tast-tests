{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "00b4a174_35da1fe8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1130680
      },
      "writtenOn": "2022-08-24T06:32:49Z",
      "side": 1,
      "message": "Switching reviewers to shengjun@ who is based in Sydney. PTAL thanks!",
      "revId": "3f1ccf73102fde83e851803baac0a4b688706ead",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ca83d10_349ce59d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-08-25T00:13:23Z",
      "side": 1,
      "message": "Overall the test is not well structured. Verifying default behavior and settings are independent tests. You can use subtest to run each verification.\n\nRefer to https://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#table_driven-tests\n\nExample test: \nhttps://crsrc.org/o/src/platform/tast-tests/src/chromiumos/tast/local/bundles/cros/inputs/virtual_keyboard_glide_typing.go",
      "revId": "3f1ccf73102fde83e851803baac0a4b688706ead",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35026afd_a6a9c2ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1130680
      },
      "writtenOn": "2022-08-25T01:01:16Z",
      "side": 1,
      "message": "The example test that you linked doesn\u0027t use s.Run from the linked doc, it uses different Params to create multiple cases. Is there a preference between the two? I assume that s.Run has lower overhead.\n\nTo confirm, the structure I\u0027m imagining is something like,\n\n```\n{\n  name: \"default_setting_click_in_browser_opens_in_tab\",\n  setting: OpenInDefault,\n  link: ClickLinkInBrowser,\n  opensIn: OpensInTab\n},\n{\n  name: \"app_setting_click_in_browser_opens_in_app\",\n  setting: OpenInApp,\n  link: ClickLinkInBrowser\n  opensIn: OpensInApp\n}\n```\n\nand then the test playback reads the values and performs the steps of (1) enable setting, (2) click link, (3) verify behavior. Does that make sense? Just wanted to check before I change everything.",
      "parentUuid": "9ca83d10_349ce59d",
      "revId": "3f1ccf73102fde83e851803baac0a4b688706ead",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bbac0f0_88cdd7a9",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/link_capturing.go",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-08-25T00:13:23Z",
      "side": 1,
      "message": "Making this type as uiauto.Action, should make the code much simpler. For example:\n\nclickBrowserLinkAndVerify(ctx, tconn, br, ui.WaitUntilExists(heading))",
      "range": {
        "startLine": 210,
        "startChar": 97,
        "endLine": 210,
        "endChar": 118
      },
      "revId": "3f1ccf73102fde83e851803baac0a4b688706ead",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7734aa7_864f73b2",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/link_capturing.go",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-08-25T00:13:23Z",
      "side": 1,
      "message": "if you are happy to change the signature, this can be simplified to \n\nreturn uiauto.Combine(\"click link and verify result\",\n    ui.LeftClick(link),\n    verifier,\n)(ctx)",
      "range": {
        "startLine": 223,
        "startChar": 1,
        "endLine": 231,
        "endChar": 11
      },
      "revId": "3f1ccf73102fde83e851803baac0a4b688706ead",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81ccb5dc_29c27324",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/link_capturing.go",
        "patchSetId": 4
      },
      "lineNbr": 293,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-08-25T00:16:36Z",
      "side": 1,
      "message": "optional nit:\n\nsettingRadioButton \u003d nodewith.Name(linkCapturingOpenInBrowser).Role(role.RadioButton)\nif openInApp{\n    settingRadioButton \u003d nodewith.Name(linkCapturingOpenInApp).Role(role.RadioButton)\n}",
      "range": {
        "startLine": 288,
        "startChar": 1,
        "endLine": 293,
        "endChar": 2
      },
      "revId": "3f1ccf73102fde83e851803baac0a4b688706ead",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87e49415_337fd6ed",
        "filename": "src/chromiumos/tast/local/bundles/cros/arc/link_capturing.go",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 1395692
      },
      "writtenOn": "2022-08-25T00:16:36Z",
      "side": 1,
      "message": "nit: the wrap is not necessary.\n\nreturn ui.LeftClick(settingRadioButton)(ctx)",
      "range": {
        "startLine": 295,
        "startChar": 1,
        "endLine": 299,
        "endChar": 11
      },
      "revId": "3f1ccf73102fde83e851803baac0a4b688706ead",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}