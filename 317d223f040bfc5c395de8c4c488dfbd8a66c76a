{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "958d44fc_0ab5255a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-22T16:39:00Z",
      "side": 1,
      "message": "This could be taken literally. Is it backed up by UMA data?",
      "range": {
        "startLine": 10,
        "startChar": 38,
        "endLine": 11,
        "endChar": 5
      },
      "revId": "317d223f040bfc5c395de8c4c488dfbd8a66c76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "296d55bc_e9deb5cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1540282
      },
      "writtenOn": "2022-09-22T15:00:29Z",
      "side": 1,
      "message": "Please review, thank you!",
      "revId": "317d223f040bfc5c395de8c4c488dfbd8a66c76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7fd9372_8f47d2a3",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-22T16:39:00Z",
      "side": 1,
      "message": "nit: `Display` because as you can move the mouse from one display to another and you can drag a window from one display to another, we use the word screen to refer to the combined area of all displays, or at least that is definitely the terminology in the chromium code base. See:\nhttps://source.chromium.org/chromium/chromium/src/+/main:ui/display/screen.h;drc\u003d3e1a26c44c024d97dc9a4c09bbc6a2365398ca2c;l\u003d40",
      "range": {
        "startLine": 105,
        "startChar": 14,
        "endLine": 105,
        "endChar": 20
      },
      "revId": "317d223f040bfc5c395de8c4c488dfbd8a66c76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2651402b_9afeeaad",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/deskscuj/desks.go",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2022-09-22T16:39:00Z",
      "side": 1,
      "message": "`mouse.Click` returns an `action.Action` so you don\u0027t have to use `func` here. I would just write:\n`clickCenterOfDisplay :\u003d mouse.Click(tconn, info.Bounds.CenterPoint(), mouse.LeftButton)`\nThen I would use `errors.Wrap` directly in the `onVisitAction` functions. It is a little bit of code repetition but it is more consistent with error reporting in Tast tests in general.\n\nFor example, among all the calls to `display.GetPrimaryInfo` that are already in the code base, how common is it to see a string literal similar to `\"failed to get the primary display info\"`? That description could just as easily be added inside `display.GetPrimaryInfo` instead of at every call site individually. Based on the precedent, I think if the whole purpose of `clickCenterOfScreen` is to click in the center of the display, then it shouldn\u0027t wrap an `error` just to mention clicking in the center of the display.\n\nI will admit this might be a bad design decision. From what you can observe at https://play.golang.com/p/sDgief8YgWP, it seems that some people who worked on the Go language made the opposite decision. The `error` returned by `strconv.Atoi` even includes the name of the function! But I think that the most important consideration here is just consistency across the code base.",
      "range": {
        "startLine": 105,
        "startChar": 24,
        "endLine": 110,
        "endChar": 2
      },
      "revId": "317d223f040bfc5c395de8c4c488dfbd8a66c76a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}