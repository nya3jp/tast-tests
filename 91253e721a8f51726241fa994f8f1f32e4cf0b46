{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "78cafedc_86888247",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-12-05T02:52:03Z",
      "side": 1,
      "message": "you probably want longer than a second, no? the rekey period is 5+ seconds",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 57
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d28825f6_9fa2eef3",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-12-05T03:04:16Z",
      "side": 1,
      "message": "Yeah, I was playing around with the timeout and accidentally left it at 1 second. I updated it to 20 seconds, but the duration of this test is closer to 5+20+20\u003d45 seconds I think. I\u0027ll update it again.",
      "parentUuid": "78cafedc_86888247",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 57
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f10a178c_3c9e06d2",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-12-05T02:52:03Z",
      "side": 1,
      "message": "it feels a bit odd to treat all errors as passing; is there some better way of determining that it was definitely a timeout error? and can we guarantee that we\u0027ve flushed out any buffered property changes? It\u0027d also be nice if this could be checked after all the network tests (so down at line 115?), except then it\u0027d be nicer to have better answers to the previous two questions, so we can guarantee that if we see a timeout error, that means we\u0027ve really checked the property stream, and not just that the gRPC stream was too slow.\n\nSorry if those are too open-ended of questions; I genuinely don\u0027t have great solutions right now. Maybe those who\u0027ve developed the ExpectShillProperty() service would have better hints.",
      "range": {
        "startLine": 104,
        "startChar": 30,
        "endLine": 104,
        "endChar": 40
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c5469ab_bedf58af",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-12-05T03:04:16Z",
      "side": 1,
      "message": "Yeah that\u0027s a good point. We could probably parse the error, but that seems too hacky. +Yenlin, do you have any ideas here?",
      "parentUuid": "f10a178c_3c9e06d2",
      "range": {
        "startLine": 104,
        "startChar": 30,
        "endLine": 104,
        "endChar": 40
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f81ae773_e13fd72c",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-07T02:26:48Z",
      "side": 1,
      "message": "Detecting specific errors from gRPC is difficult as the error will lose their type and the \"wrap\" structure after marshaling. i.e. caller cannot use errors.Is. I don\u0027t have a better solution than strings.Contains for the ExpectShillProperty usage here.\n\nOne alternative here is to create another watcher gRPC with a stop function (so it\u0027ll be a bi-directional streaming gRPC). This has a few benefits:\n  1. Caller can actively stop the watcher instead of waiting for the timeout. Also, we might be able to separate the \"no signal\" from other errors. e.g. return empty array + no error.\n  2. dbus signal and gRPC stream are both async, it is possible that ExpectShillProperty might miss a signal due to racing. With stop function, we can send out a dummy dbus signal and wait for that as boundary. (possible solution to Brian\u0027s \"check buffer flushed\" question)\n\nHowever, this might be quite much work, so I\u0027m not sure if it worth the effort/complexity.\n\n+Arowa as I remember we discussed a similar gRPC idea before. Maybe he had some old PoC that can be used here.",
      "parentUuid": "9c5469ab_bedf58af",
      "range": {
        "startLine": 104,
        "startChar": 30,
        "endLine": 104,
        "endChar": 40
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5882944c_40b0fbc5",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-12-08T19:47:18Z",
      "side": 1,
      "message": "The implementaion of the bi-directional watcher (MonitorShillProperties) is in patchset8 in the CL:2417395\n\nhttps://chromium-review.googlesource.com/c/chromiumos/platform/tast-tests/+/2417395/8",
      "parentUuid": "f81ae773_e13fd72c",
      "range": {
        "startLine": 104,
        "startChar": 30,
        "endLine": 104,
        "endChar": 40
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35d27fcf_1e2dc9f9",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1243287
      },
      "writtenOn": "2020-12-09T05:46:27Z",
      "side": 1,
      "message": "Hmm, I think it\u0027s probably a bit excessive to create this watcher just because we can\u0027t check an error type. I may just do strings.Contains(err.Error(), context.DeadlineExceeded.Error()). Re the property buffering issue, I\u0027m thinking that after resolving b/171086223 by exposing the is_{roaming,rekey}_in_progress_ flags via D-Bus, I can just check that the rekey flag is toggling back and forth and use the monitor properties returned by ExpectShillProperty to make sure that IsConnected is never false. LMKWYT",
      "parentUuid": "5882944c_40b0fbc5",
      "range": {
        "startLine": 104,
        "startChar": 30,
        "endLine": 104,
        "endChar": 40
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df1f43cc_117318fe",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-10T01:58:18Z",
      "side": 1,
      "message": "Sorry for late reply. If we\u0027ll have some other signals to wait, then I think the error part can also be solved as the gRPC can wait the new signals and watch IsConnected. That being said, I guess checking timeout error from ExpectShillProperty is OK as a temporary solution.",
      "parentUuid": "35d27fcf_1e2dc9f9",
      "range": {
        "startLine": 104,
        "startChar": 30,
        "endLine": 104,
        "endChar": 40
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "700e1cd7_bd7a029e",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-12-10T02:04:48Z",
      "side": 1,
      "message": "I think I\u0027m with Yen-lin too (timeout check can be OK for now), and I\u0027ll scale back the other buffering concerns, but one thing:\n\nwhat happens if line 100 eats most of our deadline? do we still grab any queued stream events and handle them, or will we get a meaningless timeout without actually checking anything?",
      "parentUuid": "df1f43cc_117318fe",
      "range": {
        "startLine": 104,
        "startChar": 30,
        "endLine": 104,
        "endChar": 40
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60523247_6261ada1",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-12-10T02:33:16Z",
      "side": 1,
      "message": "A rough idea to restrict the time used by PingFromDUT and to secure time for processing reply:\n\n  pingBuffer :\u003d 5 * time.Second\n  waitBuffer :\u003d 5 * time.Second\n  waitCtx, cancel :\u003d context.WithTimeout(ctx, arpingCount*time.Second + pingBuffer + waitBuffer)\n  defer cancel()\n  waitForProps, err :\u003d tf.ExpectShillProperty(waitCtx, servicePath, props, []string{})\n\n  pingCtx, cancel :\u003d ctxutil.Shorten(waitCtx, waitBuffer)\n  defer cancel()\n  if err :\u003d tf.PingFromDUT(pingCtx, ap.ServerIP().String()); err !\u003d nil {\n    s.Fatal(\"Failed to ping from the DUT: \", err)\n  }\n\n  if _, err :\u003d waitForProps(); err \u003d\u003d nil || !isTimeout(err) {\n    s.Fatal(\"Failed to stay connected during rekeying process\")\n  }\n\nIf ping somehow takes much more time than expected, it should fail due to context timeout, then we can have more confidence that waitForProps can really get ~waitBuffer time to process the reply, if available.\n\nWDYT?",
      "parentUuid": "700e1cd7_bd7a029e",
      "range": {
        "startLine": 104,
        "startChar": 30,
        "endLine": 104,
        "endChar": 40
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b460a3c_e296d3b8",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/gtk.go",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1132414
      },
      "writtenOn": "2020-12-14T18:28:40Z",
      "side": 1,
      "message": "That seems approximately reasonable to me. Not completely ideal, but good enough.",
      "parentUuid": "60523247_6261ada1",
      "range": {
        "startLine": 104,
        "startChar": 30,
        "endLine": 104,
        "endChar": 40
      },
      "revId": "91253e721a8f51726241fa994f8f1f32e4cf0b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}