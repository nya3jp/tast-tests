{
  "comments": [
    {
      "key": {
        "uuid": "6cbc9240_b3dac57c",
        "filename": "src/chromiumos/tast/local/audio/cras.go",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-30T21:58:25Z",
      "side": 1,
      "message": "nit: don\u0027t need this comment",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73975569_698b6ea1",
        "filename": "src/chromiumos/tast/local/audio/cras.go",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1325210
      },
      "writtenOn": "2019-01-31T05:56:01Z",
      "side": 1,
      "message": "Remove the comment will trigger an \"exported const OutputStream should have comment (or a comment on this block) or be unexported\" Lint error. I move and simplify the comments for InputStream to the whole block instead.",
      "parentUuid": "6cbc9240_b3dac57c",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29331aa9_2499eedc",
        "filename": "src/chromiumos/tast/local/audio/cras.go",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-30T21:58:25Z",
      "side": 1,
      "message": "please don\u0027t use a string for this. since you want to be able to specify \"all streams\" below, making these represented by different bits makes sense to me:\n\n  type StreamType int\n\n  const (\n      InputStream  StreamType \u003d 1 \u003c\u003c iota\n      OutputStream\n  )\n\nplease see https://github.com/golang/go/wiki/Iota for more details",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b38cd6e5_28b1819a",
        "filename": "src/chromiumos/tast/local/audio/cras.go",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1325210
      },
      "writtenOn": "2019-01-31T05:53:48Z",
      "side": 1,
      "message": "This is definitely a nice way to make the Type be able to represent \"All streams\". However, I think this might potentially introduce a wrong concept that a stream could be regarded as both input and output and it\u0027s a little odd to me to have something like stream :\u003d InputStream | OutputStrea.\n\nHow do you think if we make it a normal enum but with an extra NotSpecify (or Unknown, Default) type:\n\ntype StreamType int\n  const (\n      NotSpecify      StreamType \u003d iota\n      InputStream\n      OutputStream\n  )",
      "parentUuid": "29331aa9_2499eedc",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81bd7cea_7cfd916a",
        "filename": "src/chromiumos/tast/local/audio/cras.go",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-31T06:07:44Z",
      "side": 1,
      "message": "NotSpecify/Unknown/Default doesn\u0027t make sense to me either, in that case, as a particular node wouldn\u0027t be regarded as having any of those types.\n\nre the earlier suggestion (self-nit: i meant uint, not int), i don\u0027t feel like assigning those values suggests that a stream can be both input and output.\n\ndoes it help if you specifically document WaitForDevice as taking a bitmap of StreamType values?",
      "parentUuid": "b38cd6e5_28b1819a",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00cc238d_deeeb725",
        "filename": "src/chromiumos/tast/local/audio/cras.go",
        "patchSetId": 7
      },
      "lineNbr": 129,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-30T21:58:25Z",
      "side": 1,
      "message": "per above enum suggestion, this loop can probably change:\n\n  var active streamType\n  for ... {\n       if n.Active \u0026\u0026 n.IsInput {\n           active |\u003d InputStream\n       }\n       if n.Active \u0026\u0026 n.IsOutput {  // can a node be both input and output?\n           active |\u003d OutputStream\n       }\n       if streamType \u0026 active \u003d\u003d streamType {\n           return nil\n       }\n  }\n\nthis is untested and i\u0027m jet-lagged, so please double-check my logic :-)",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08feff96_d0a2b0ef",
        "filename": "src/chromiumos/tast/local/audio/cras.go",
        "patchSetId": 7
      },
      "lineNbr": 137,
      "author": {
        "id": 1000042
      },
      "writtenOn": "2019-01-30T21:58:25Z",
      "side": 1,
      "message": "nit: how about something like this?\n\n  return errors.Errorf(\"node(s) %+v not in requested state\", crasNodes)\n\nthe caller already knows the state that it\u0027s asking for, so including it in the error seems unnecessary.",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34a73452_1fce07c3",
        "filename": "src/chromiumos/tast/local/audio/cras.go",
        "patchSetId": 7
      },
      "lineNbr": 137,
      "author": {
        "id": 1325210
      },
      "writtenOn": "2019-01-31T05:53:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08feff96_d0a2b0ef",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0765320_80cd4a51",
        "filename": "src/chromiumos/tast/local/bundles/cros/audio/alsa_conformance.go",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1269379
      },
      "writtenOn": "2019-01-30T15:41:49Z",
      "side": 1,
      "message": "Also wait device at the beginning of this test, right?",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cc50739_3d64500e",
        "filename": "src/chromiumos/tast/local/bundles/cros/audio/alsa_conformance.go",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1325210
      },
      "writtenOn": "2019-01-31T05:53:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0765320_80cd4a51",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbb5e8ac_f1726f02",
        "filename": "src/chromiumos/tast/local/bundles/cros/audio/microphone.go",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1269379
      },
      "writtenOn": "2019-01-30T15:41:49Z",
      "side": 1,
      "message": "s.Fatal",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d46529fe_072833bc",
        "filename": "src/chromiumos/tast/local/bundles/cros/audio/microphone.go",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1325210
      },
      "writtenOn": "2019-01-31T05:53:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fbb5e8ac_f1726f02",
      "revId": "94f42231fc330f5052201d770c43cdfda6af9dc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}