{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a239af9f_31b73425",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1349355
      },
      "writtenOn": "2022-09-20T06:46:35Z",
      "side": 1,
      "message": "LGTM. Thanks!",
      "revId": "72fb6febb6961a25c2237845a9551bc3d1a53b80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "316b2a08_b40fe321",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/perfetto_battery_data_source.go",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2022-09-20T19:46:04Z",
      "side": 1,
      "message": "Since we\u0027re only using `append` here, it seems like the three arrays can be out of sync with each other if not every suffix is present on every battery (except I guess the last one). For example, in the example output given on L55-L58, we would end up with the `hid-0018:27C6:0E52.0001-battery` percentage in the zero index, but in the other two slices there would be values for the `sbs-12-000b` battery.\n\nIs that OK? I guess it might be fine since we\u0027re just collecting them in these slices to do consistent bounds checks on each?",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 85,
        "endChar": 31
      },
      "revId": "72fb6febb6961a25c2237845a9551bc3d1a53b80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e747b21_543dc811",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/perfetto_battery_data_source.go",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 1294890
      },
      "writtenOn": "2022-09-21T01:48:38Z",
      "side": 1,
      "message": "Yes, we just want to perform simple validation that if the power daemon says that the device has a battery, the tracing service can also collect battery counters. I am OK with that the counters of the same battery may have different indexes in the slices.",
      "parentUuid": "316b2a08_b40fe321",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 85,
        "endChar": 31
      },
      "revId": "72fb6febb6961a25c2237845a9551bc3d1a53b80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e0f7bc9_86481c76",
        "filename": "src/chromiumos/tast/local/bundles/cros/platform/perfetto_battery_data_source.go",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 1117055
      },
      "writtenOn": "2022-09-21T21:41:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6e747b21_543dc811",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 85,
        "endChar": 31
      },
      "revId": "72fb6febb6961a25c2237845a9551bc3d1a53b80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "72fb6febb6961a25c2237845a9551bc3d1a53b80",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "72fb6febb6961a25c2237845a9551bc3d1a53b80",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "72fb6febb6961a25c2237845a9551bc3d1a53b80",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "72fb6febb6961a25c2237845a9551bc3d1a53b80",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}