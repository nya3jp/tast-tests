{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2b420ac7_3f9f67e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1494105
      },
      "writtenOn": "2021-07-19T05:10:55Z",
      "side": 1,
      "message": "In addition to Patch Set 1, a few relevant methods were implemented to load SigninProfileExtension, and to check for the existence of power menu at the sign-in screen.",
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ed2180c_ef5cc8ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "Nice work Arthur, this is a significant CL. In the future, changes like this would be easier for us to review if you can upload them in smaller increments. See go/small-cls for more info.",
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb73be24_35b38899",
        "filename": "src/chromiumos/tast/local/bundles/cros/wilco/power_menu_service.go",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "This service is not wilco specific, and should be moved out of this package, perhaps in a different cl.",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 13
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbded05f_b451d900",
        "filename": "src/chromiumos/tast/local/bundles/cros/wilco/power_menu_service.go",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "Maybe instead of having 2 functions for IsPowerMenuPresent, just store the login state in NewChrome/NewChromeNoLogIn and then check that state in IsPowerMenuPresent.",
      "range": {
        "startLine": 103,
        "startChar": 1,
        "endLine": 106,
        "endChar": 2
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3048bd7d_c94e0043",
        "filename": "src/chromiumos/tast/local/screenshot/capture.go",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "Stdout and stderr can be intermixed, so doing anything with the combined output other than logging it can be dangerous. Find out if the error you want it on stderr or stdout, and only capture that output.",
      "range": {
        "startLine": 34,
        "startChar": 45,
        "endLine": 34,
        "endChar": 77
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "881a30bc_5f789b1f",
        "filename": "src/chromiumos/tast/local/screenshot/capture.go",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "It looks to me like this function doesn\u0027t actually report the stdout+stderr, unless the function fails.",
      "range": {
        "startLine": 34,
        "startChar": 25,
        "endLine": 34,
        "endChar": 32
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3718ed74_f6966c10",
        "filename": "src/chromiumos/tast/local/screenshot/capture.go",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "nit: \"cmd\" normally refers to the command itself (such as \"screenshot $path\"). But in this case, \"cmd\" contains the stdout+stderr. I recommend changing this var name to something like \"out\".",
      "range": {
        "startLine": 37,
        "startChar": 1,
        "endLine": 37,
        "endChar": 4
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcb290f4_c68bf900",
        "filename": "src/chromiumos/tast/local/screenshot/capture.go",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "If the only reason you would want the output is to log it if the command fails, the common way to do that is:\n\n    err :\u003d testexec.CommandContext(ctx, \"screenshot\", path).Run(testexec.DumpLogOnError)",
      "range": {
        "startLine": 37,
        "startChar": 62,
        "endLine": 37,
        "endChar": 76
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0652fee6_76c57700",
        "filename": "src/chromiumos/tast/local/screenshot/capture.go",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "Please include err in the message:\n\n    return errors.Wrapf(err, \"failed running %q\", cmd)",
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2117862_84bada20",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "servo is not actually required, so I would pass that in Vars: instead.",
      "range": {
        "startLine": 32,
        "startChar": 26,
        "endLine": 32,
        "endChar": 31
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bf5033b_83d94178",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "I would use the name ui.signinProfileTestExtensionManifestKey to be consistent with other tests.",
      "range": {
        "startLine": 32,
        "startChar": 35,
        "endLine": 32,
        "endChar": 94
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e5646ec_33366283",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-20T15:20:39Z",
      "side": 1,
      "message": "After asking some experts, using the name ui.signinProfileTestExtensionManifestKey will allow this value to be auto-populated from the secrets yaml files.",
      "parentUuid": "3bf5033b_83d94178",
      "range": {
        "startLine": 32,
        "startChar": 35,
        "endLine": 32,
        "endChar": 94
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b961938f_2aee4d89",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "Replace L42-48 with the existing reporter.BootID\n\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/remote/firmware/reporters/utils.go;drc\u003d77264664a5ef89d9f4cc1a57e7ce49c3cad43459;l\u003d40",
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90f67493_ac2291e5",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "Use s.Var instead of RequiredVar. If the servo var is blank, servo.NewProxy will default to localhost:9999",
      "range": {
        "startLine": 50,
        "startChar": 35,
        "endLine": 50,
        "endChar": 46
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c536793_75171e5b",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "Can you use the pre.NormalMode and the Helper class as described in https://chromium.googlesource.com/chromiumos/platform/tast-tests/+/refs/heads/main/src/chromiumos/tast/remote/firmware/codelab/README.md#Control-start_end-state-with-firmware_Pre",
      "range": {
        "startLine": 50,
        "startChar": 1,
        "endLine": 54,
        "endChar": 21
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4940037_1a223e83",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "Operate directly on the []byte, no need to cast to string:\n\n    initLidAngle :\u003d re.FindSubmatch(out)",
      "range": {
        "startLine": 62,
        "startChar": 17,
        "endLine": 62,
        "endChar": 51
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b47387db_140fcadc",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "Log some info about initLidAngle so we can debug this failure:\n\n    s.Fatalf(\"Failed to get initial tablet_mode_angle settings: got submatches %+v\", initLidAngle)",
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b567875_a6094a82",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "If you\u0027re not using the output, use Run() instead of Output()",
      "range": {
        "startLine": 70,
        "startChar": 1,
        "endLine": 70,
        "endChar": 2
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "584d7213_73f12a74",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "Instead of hard coding this to 9, I think you want chromiumos/tast/remote/firmware/Config.HoldPwrButtonPowerOff, and please use servo.KeypressWithDuration instead of SetString.",
      "range": {
        "startLine": 76,
        "startChar": 49,
        "endLine": 76,
        "endChar": 54
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f1a5512_2fe21b5e",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "This will wait for the full timeout of the test, please set a deadline on the context before calling.",
      "range": {
        "startLine": 81,
        "startChar": 10,
        "endLine": 81,
        "endChar": 32
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd74558b_acfd8276",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "This might not actually press the power key. If you don\u0027t care how the machine turns on and off, perhaps just use servo.SetPowerState(ctx, servo.PowerStateWarmReset) or servo.SetPowerState(ctx, servo.PowerStateReset) instead of power_key:9 and power_state:on.",
      "range": {
        "startLine": 85,
        "startChar": 1,
        "endLine": 88,
        "endChar": 2
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66de40f6_fa483e5f",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "This also needs a context deadline.",
      "range": {
        "startLine": 91,
        "startChar": 1,
        "endLine": 93,
        "endChar": 2
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b00adb6_524db5de",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "No need to give errRPC a special name, more idiomatic to just use err. This special name led to a bug at L105, where you log err instead of errRPC.",
      "range": {
        "startLine": 103,
        "startChar": 5,
        "endLine": 103,
        "endChar": 11
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66cacc87_1f053a09",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "The Helper class makes this easier also.",
      "range": {
        "startLine": 103,
        "startChar": 1,
        "endLine": 107,
        "endChar": 20
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b251b4e6_bcc9a762",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "As elsewhere, no need for a special error name; it is more consistent to just use err.",
      "range": {
        "startLine": 119,
        "startChar": 16,
        "endLine": 119,
        "endChar": 28
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1259ca23_65170a30",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "optional/style: More concise:\n\n    if !resPowerMenu.IsMenuPresent {",
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3b2a20b_66358217",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "As elsewhere, no need for a special error name; it is more consistent to just use err.",
      "range": {
        "startLine": 129,
        "startChar": 14,
        "endLine": 129,
        "endChar": 24
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bc01c8b_9ca52b4c",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "Please use DurTab for consistency, unless there is some reason it actually needs to be 0.5s. Looks like tab defaults to 0.1s, but can be changed per board in the servo overlay files.",
      "range": {
        "startLine": 152,
        "startChar": 52,
        "endLine": 152,
        "endChar": 57
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "449b8e7b_8132bbbb",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "nit/style: Since actions[i] is the only value being checked, please use that for the switch statement:\n\n    switch actions[i] {\n    case \"OFF\":\n        ...\n    case \"ON\":\n        ...\n    }\n\nSimilarly, at L177:\n\n    switch testCase {\n    case \"atSignin\":\n        ...\n    case \"afterSignin\":\n        ...\n    case \"atLockScreen\":\n        ...\n\nAnd at L227:\n\n    switch testCase {\n    case \"atSignin\":\n        ...\n    case \"afterSignin\", \"atLockScreen\":\n        ...\n    }",
      "range": {
        "startLine": 161,
        "startChar": 3,
        "endLine": 161,
        "endChar": 9
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7510d8ae_93c2af25",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "As elsewhere, please use \"err\" to avoid bugs like L165 using the wrong error name",
      "range": {
        "startLine": 163,
        "startChar": 4,
        "endLine": 163,
        "endChar": 17
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa7157c_a6fd8026",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 218,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "This should be DurTab or DurPress.",
      "range": {
        "startLine": 218,
        "startChar": 51,
        "endLine": 218,
        "endChar": 54
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62695c5d_cbf63b2a",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "Maybe this should be Config.HoldPwdButtonPowerOff / 2, or we should add a new config for it.",
      "range": {
        "startLine": 246,
        "startChar": 51,
        "endLine": 246,
        "endChar": 56
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea25421b_af4616e8",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "As elsewhere, please use \"err\"",
      "range": {
        "startLine": 257,
        "startChar": 5,
        "endLine": 257,
        "endChar": 14
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c1d6029_78ff2ccf",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "Since you\u0027re using these strings a lot, I think it would be safer to assign them constant values. That would protect us against typos in the switch-cases.\n\n    const (\n        atSignin     \u003d \"atSignin\"\n        afterSignin  \u003d \"afterSignin\"\n        atLockScreen \u003d \"atLockScreen\"\n    )\n\n    switch testCase {\n    case atSignin:\n        ...\n    etc\n    }\n    \n    var testCases \u003d []string{atSignin, afterSignin, atLockScreen}",
      "range": {
        "startLine": 266,
        "startChar": 26,
        "endLine": 266,
        "endChar": 67
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "638d5371_8b7b4199",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 271,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "As elsewhere, if you\u0027re not using the output, please use Run() instead of Output().",
      "range": {
        "startLine": 271,
        "startChar": 100,
        "endLine": 271,
        "endChar": 106
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc13de38_0bc55cfb",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 271,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "This slice was defined 200 lines ago. For readability, could you please assign initLidAngle[1] and initLidAngle[2] to variables?\n\n    \t// Line 62\n    \tm :\u003d re.FindStringSubmatch(string(out)) // I\u0027ve changed the var name here to \"m\" for \"match\"\n\tif len(m) !\u003d 3 {\n\t\ts.Fatal(\"Failed to get initial tablet_mode_angle settings\")\n\t}\n\tinitLidAngle :\u003d m[1] // New lines to capture the matched values\n\tinitHys :\u003d m[2]\n\ts.Logf(\"Initial settings: lid_angle\u003d%s hys\u003d%s\", initLidAngle, initHys)\n\t\n\t// Line 271\n\terr \u003d d.Command(\"ectool\", \"motionsense\", \"tablet_mode_angle\", initLidAngle, initHys).Run(ctx)",
      "range": {
        "startLine": 271,
        "startChar": 66,
        "endLine": 271,
        "endChar": 81
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06a288bb_99eec1ab",
        "filename": "src/chromiumos/tast/remote/bundles/cros/firmware/ec_tablet_mode.go",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 1483403
      },
      "writtenOn": "2021-07-19T15:12:27Z",
      "side": 1,
      "message": "Put this into a defer call right after line 66",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 276,
        "endChar": 0
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52cdf6de_d23ee2fd",
        "filename": "src/chromiumos/tast/services/cros/graphics/screenshot_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "From the name of the RPC, I would expect the screenshot to be retained. But in the implementation, I see that we always delete the screenshot immediately. Can you please update the RPC name, and docstring, to clarify that the screenshot is temporary? How about CaptureScreenAndDelete, or CaptureScreenEphemeral?",
      "range": {
        "startLine": 15,
        "startChar": 6,
        "endLine": 15,
        "endChar": 19
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27ff20b3_3c8a2d66",
        "filename": "src/chromiumos/tast/services/cros/wilco/power_menu_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "optional: As a way to reduce duplicated logic, we could instead add a new field to the NewChrome request:\n\n    rpc NewChrome (NewChromeRequest) returns (google.protobuf.Empty) {}\n    \n    message NewChromeRequest {\n        bool login \u003d 1; // If false, start the session without logging in.\n        string signin_key \u003d 2; // If non-empty, use this key to load sign-in profile extension\n    }\n\nBut this change might not be appropriate if you move these RPCs outside of the wilco service as Jeremy suggested.",
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16387127_317be36d",
        "filename": "src/chromiumos/tast/services/cros/wilco/power_menu_service.proto",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-07-21T16:17:23Z",
      "side": 1,
      "message": "nit/style: I think NewChromeNoLogInRequest would be more idiomatic. And, please document the \"key\" field.",
      "range": {
        "startLine": 34,
        "startChar": 8,
        "endLine": 34,
        "endChar": 21
      },
      "revId": "b56a9ac0644afd3167b30e171569e8e81a54b1fe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}