{
  "comments": [
    {
      "key": {
        "uuid": "527c2896_b00a48e0",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-11-14T00:37:38Z",
      "side": 1,
      "message": "How about using \"chromiumos/tast/lsbrelease\" to get board info and only skip 802.11ac check on monroe?",
      "revId": "dd27fb4aec4f504a59e8132d2ef28ee0c7755176",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "936feb67_d7b382b5",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2019-11-14T00:49:15Z",
      "side": 1,
      "message": "Doesn\u0027t our testing explicitly forbid calling out specific boards to include or exclude? \nAlso, TODO(crbug.com/12345) is better than TODO(ldap).",
      "parentUuid": "527c2896_b00a48e0",
      "revId": "dd27fb4aec4f504a59e8132d2ef28ee0c7755176",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a344177b_dfef0c20",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2019-11-14T02:09:19Z",
      "side": 1,
      "message": "Done using bug link instead of ldap.\n\nI think adding dependency is the preferred way to do this? The header of lsbrelease also says:\n// Usually Tast tests are not supposed to use information in /etc/lsb-release to\n// change their behavior, so access to functions in this package is restricted\n// unless explicitly permitted.\n\nFor hw dependency, we have a feature: crbug.com/950346. For current need, we may do something like adding Params in test:\n\nParams: []testing.Param{{\n  Name: \"Base\",\n  Val: WifiCapParam {\n    Base: true,\n    Check80211ac: false,\n  },\n}, {\n  Name: \"80211ac\",\n  Val: WifiCapParam {\n    Base: false,\n    Check80211ac: true,\n  },\n  ExtraHardwareDeps: []string{\"80211ac\"},\n}},\n\nAnd do branching according to Val in test body.\n\nThis still has drawback that iw command is run twice on the devices with 80211ac support. It would be much simpler if we further have a function to check sw/hw dependencies inside test body to do some branching.\n\nMaybe include tast-owners to ask if they have some thoughts?",
      "parentUuid": "936feb67_d7b382b5",
      "revId": "dd27fb4aec4f504a59e8132d2ef28ee0c7755176",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ee2504a_8e24e50a",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1150179
      },
      "writtenOn": "2019-11-14T08:21:52Z",
      "side": 1,
      "message": "Could you post it on email or a bug? I think that\u0027s easier to discuss.\nThis change itself is LGTM.",
      "parentUuid": "a344177b_dfef0c20",
      "revId": "dd27fb4aec4f504a59e8132d2ef28ee0c7755176",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf05d673_3d991e8a",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1158909
      },
      "writtenOn": "2019-11-14T08:33:27Z",
      "side": 1,
      "message": "go/crosnames (goldeneye) page shows over 250 different Chrome OS models. (source: Ctrl-F for Chromebook on that page and divide by 2 for two columns mentioning the term per row)\nAll of them support 802.11ac except  with ar9k chip.\nAdding a dependency label penalizes the large majority of DUTs/models because of an issue with a small number of devices. \nI am not sure that is a pattern we want to propagate. I am hoping the folks who debated aspects of End-Of-Life / AUE / extensions would have a more informed opinion, wifi is probably not the only subsystem facing this issue where the entire fleet has to use sub-optimal testing (test for \"lowest common denominator\") or add overhead (dependency/labels) to account for these devices.\nAgreed with Keigo that we want to move this to a bug.",
      "parentUuid": "4ee2504a_8e24e50a",
      "revId": "dd27fb4aec4f504a59e8132d2ef28ee0c7755176",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4fe5369_d82d6f04",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-11-14T14:39:22Z",
      "side": 1,
      "message": "I think the motivation of disallowing board/hw/sw dependency logic in test is to avoid N/A test results which wastes time running it.\nhttps://chromium.googlesource.com/chromiumos/platform/tast/+/HEAD/docs/writing_tests.md#Device-dependencies\n\nHowever, like this test, we need to check if 80211ac dependency presents to enable specific cap check. Checking dependency in the test body does not generate N/A test results. So I think it does not violate the guidance.\n\nIf we still want to decide what to test before test run, we may have param test like:\n\nParams: []testing.Param{{\n  Name: \"no_80211ac\",\n  Val: WifiCapParam {\n    Check80211ac: false,\n  },\n  ExtraHardwareDeps: []string{\"no_80211ac\"},\n}, {\n  Name: \"80211ac\",\n  Val: WifiCapParam {\n    Check80211ac: true,\n  },\n  ExtraHardwareDeps: []string{\"80211ac\"},\n}},",
      "parentUuid": "bf05d673_3d991e8a",
      "revId": "dd27fb4aec4f504a59e8132d2ef28ee0c7755176",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d70ce99_ba0f8465",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2019-11-14T18:04:32Z",
      "side": 1,
      "message": "I just noticed that pre-condition may be able to reduce the duplicate parsing, so I guess the remaining concern is: if we want to add sw/hw dependency of something like 802.11ac that is only for a small set of devices which reach EOL soon.\n\nI guess I\u0027ll summarize our discussion to the test failure bug, and maybe create a new bug when it goes beyond the scope.",
      "parentUuid": "d4fe5369_d82d6f04",
      "revId": "dd27fb4aec4f504a59e8132d2ef28ee0c7755176",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d80829e_d66498a7",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2019-11-15T05:30:56Z",
      "side": 1,
      "message": "You mean using \"Pre:\"? It might not be suitable for saving a \"iw\" command.\n\nBTW, you may start merging the CL while updating the discussion to the issue.",
      "parentUuid": "7d70ce99_ba0f8465",
      "revId": "dd27fb4aec4f504a59e8132d2ef28ee0c7755176",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b630176_50d4ef27",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_caps.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2019-11-15T17:10:48Z",
      "side": 1,
      "message": "Yeah, I mean if sw/hw dependency is the only choice to branch devices/boards, maybe we can use pre-condition to avoid duplicated parsing. But it may not be the best solution for the whole problem.",
      "parentUuid": "8d80829e_d66498a7",
      "revId": "dd27fb4aec4f504a59e8132d2ef28ee0c7755176",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}