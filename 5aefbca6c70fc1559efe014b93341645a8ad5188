{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1fb2a8d1_045eea3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-10-11T17:59:01Z",
      "side": 1,
      "message": "Mhh, nice. The bisector found this change! ;-)\nhttps://crosperf.googleplex.com/b/57d8f2ea-90dc-41f7-baff-5c3d153c63f3\n\nSigh.",
      "revId": "5aefbca6c70fc1559efe014b93341645a8ad5188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b52dd044_d6c3f5a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2020-10-12T22:49:22Z",
      "side": 1,
      "message": "sigh, this CL has caused on multiple places -- you are not only the one.\nHowever, I\u0027m not sure what would be the correct thing.  Previously it was broken and didn\u0027t report errors, now it reports timeout error when the CPU load isn\u0027t low enough.\n\nTwo suggestions:\n- power.WaitUntilCPUCoolDown might be a good alternative. Typically it waits shorter and this would be good enough to stabilize the results\n- or ignore the error for cpu.WaitUntilIdle if that\u0027s acceptable",
      "parentUuid": "1fb2a8d1_045eea3a",
      "revId": "5aefbca6c70fc1559efe014b93341645a8ad5188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7872161_a01241c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-10-26T06:38:51Z",
      "side": 1,
      "message": "Ignoring the error in cpu.WaitUntilIdle is probably acceptable. The only downside of this is that the performance results will be a bit more noisy, but this is definitely better than having flaky tests. This will probably only affect lower spec platforms anyway. Even if the CPU usage can\u0027t be brought down to less than 20%, any waiting we do should at least stabilize the performance results a bit more.",
      "parentUuid": "b52dd044_d6c3f5a0",
      "revId": "5aefbca6c70fc1559efe014b93341645a8ad5188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89eb8355_4d810e86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1363051
      },
      "writtenOn": "2020-10-26T08:22:24Z",
      "side": 1,
      "message": "If you\u0027re looking at performance tests, noisy tests are equivalent to flaky tests. IMO, noisy tests actually worse, since inaccurate performance numbers are obvious with flaky tests, but not necessarily obvious with noisy data. More likely than not, failures here are going to be due to improper cleanup/incomplete initialization. If there\u0027s a board that\u0027s actually incapable of hitting 20% utilization while idle, then perhaps we could parameterize WaitUntilIdle to deal with that. But I don\u0027t think ignoring the error within cpu.WaitUntilIdle is the correct course of action.",
      "parentUuid": "b7872161_a01241c6",
      "revId": "5aefbca6c70fc1559efe014b93341645a8ad5188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0dd8df3b_93ca2fb5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-10-26T20:21:38Z",
      "side": 1,
      "message": "Notice that the CPU can get throttled by power. So 20% is not always 20%. One really should scale this number by CPU frequency or pin the CPU.\n\nFailing IMO is correct. But one should still run the test and report the numbers before failing. Otherwise one becomes blind on the performance dashboards and needs to switch to stainless, which is inconvenient (and blinding to performance).",
      "parentUuid": "89eb8355_4d810e86",
      "revId": "5aefbca6c70fc1559efe014b93341645a8ad5188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c03791e5_af9fe1fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1288602
      },
      "writtenOn": "2020-10-28T02:42:08Z",
      "side": 1,
      "message": "The performance tests enable benchmarking mode which disables CPU frequency scaling before waiting for the CPU to become idle.",
      "parentUuid": "0dd8df3b_93ca2fb5",
      "revId": "5aefbca6c70fc1559efe014b93341645a8ad5188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "685bcbd1_bbdead24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-10-28T04:22:41Z",
      "side": 1,
      "message": "I don\u0027t think what it does is correct. But we can discuss this offline if you care.",
      "parentUuid": "c03791e5_af9fe1fc",
      "revId": "5aefbca6c70fc1559efe014b93341645a8ad5188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "669cb9f4_ca003298",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000221
      },
      "writtenOn": "2020-10-28T04:35:02Z",
      "side": 1,
      "message": "I filed b/171846657",
      "parentUuid": "685bcbd1_bbdead24",
      "revId": "5aefbca6c70fc1559efe014b93341645a8ad5188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}