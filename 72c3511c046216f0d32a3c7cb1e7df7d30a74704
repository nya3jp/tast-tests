{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6e974119_9e6722d3",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/chrome_pip_rounded_corners_underlay.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-14T09:56:08Z",
      "side": 0,
      "message": "Don\u0027t need it anymore? or you just used sleep as a replacement?",
      "range": {
        "startLine": 94,
        "startChar": 14,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "72c3511c046216f0d32a3c7cb1e7df7d30a74704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c0d7b27_0db419e5",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/chrome_pip_rounded_corners_underlay.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2021-06-16T23:19:55Z",
      "side": 0,
      "message": "I am not even sure whether this was working in the first place. If we do not wait long enough, it probably will not cause the test to fail; it just might prevent the test from testing what it is supposed to test.",
      "parentUuid": "6e974119_9e6722d3",
      "range": {
        "startLine": 94,
        "startChar": 14,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "72c3511c046216f0d32a3c7cb1e7df7d30a74704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79ba323f_736a558f",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/chrome_pip_rounded_corners_underlay.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-06-17T17:02:53Z",
      "side": 0,
      "message": "I am a bit concerned here, because basically now you sleep for 5 seconds instead of 30. Check WaitForLocationChangeCompleted implementation:\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/chromiumos/tast/local/chrome/ui/watcher.go;l\u003d188?q\u003dWaitForLocationChangeCompleted\n\nIs there a way to understand when exactly you can continue your test, i.e. stop waiting? If there is a way, we should use it to make this test much more stable and faster compare to the sleep approach.",
      "parentUuid": "5c0d7b27_0db419e5",
      "range": {
        "startLine": 94,
        "startChar": 14,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "72c3511c046216f0d32a3c7cb1e7df7d30a74704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c93328b7_4579cd28",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/chrome_pip_rounded_corners_underlay.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2021-06-18T00:00:48Z",
      "side": 0,
      "message": "Oshima, please read the code comment in the latest patchset and tell me if you have any ideas.",
      "parentUuid": "79ba323f_736a558f",
      "range": {
        "startLine": 94,
        "startChar": 14,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "72c3511c046216f0d32a3c7cb1e7df7d30a74704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00a402fe_48653c4b",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/chrome_pip_rounded_corners_underlay.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1001380
      },
      "writtenOn": "2021-06-18T19:10:51Z",
      "side": 0,
      "message": "Is it possible to do busy loop?",
      "parentUuid": "c93328b7_4579cd28",
      "range": {
        "startLine": 94,
        "startChar": 14,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "72c3511c046216f0d32a3c7cb1e7df7d30a74704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4edb5ff_7dac8168",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/chrome_pip_rounded_corners_underlay.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-06-18T22:13:45Z",
      "side": 0,
      "message": "The question would be, what is the option to quit the busy loop?\n\n* if it\u0027s just waiting for the location change to finish, uiauto.Context.WaitForLocation might be an option.\n* if there\u0027s some accessibility event, we could use uiauto.Context.WaitForEvent.\n* if it\u0027s about the UMA histogram value (Viz.DisplayCompositor.OverlayStrategy),I believe it could be integrated with the logic below (metrics.Run).\n\nMy gut feeling is to use the third one.  If so, I guess it would be like:\n  // creating this earlier -- before creating the PIP window.\n  r :\u003d metrics.StartRecorder(ctx, tconn, \"Viz.DisplayCompositor.OverlayStrategy\")\n  ...\n  // the flow of creating the PIP window etc.\n  ...\n  if err :\u003d testing.Poll(ctx, func(ctx context.Context) error {\n    hists, err :\u003d r.WaitAll(ctx, tconn, time.Second)\n    if err !\u003d nil {\n      return testing.PollBreak(err)\n    }\n    // check if it is in overlay\n    if hasOverlayHist(hists) {\n      return nil\n    } else {\n      return errors.New(\"not yet overlay\")\n    }\n  }, \u0026testing.PollOptions{Timeout: 10*time.Second}); err !\u003d nil {\n    s.Fatal(\"Failed to verify the overlay strategy of the PiP window: \", err)\n  }",
      "parentUuid": "00a402fe_48653c4b",
      "range": {
        "startLine": 94,
        "startChar": 14,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "72c3511c046216f0d32a3c7cb1e7df7d30a74704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "defd42fb_80afc13f",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/chrome_pip_rounded_corners_underlay.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1001380
      },
      "writtenOn": "2021-06-18T23:40:28Z",
      "side": 0,
      "message": "3rd one sgtm, with some timeout. that\u0027ll also make the execution time short but more reliable?",
      "parentUuid": "c4edb5ff_7dac8168",
      "range": {
        "startLine": 94,
        "startChar": 14,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "72c3511c046216f0d32a3c7cb1e7df7d30a74704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "411c60b3_ce3571d4",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/chrome_pip_rounded_corners_underlay.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-06-18T23:56:16Z",
      "side": 0,
      "message": "It could be shorter than my code snippet. Please adjust the timeout, but that should be slightly longer than it is necessary, for the test stability.",
      "parentUuid": "defd42fb_80afc13f",
      "range": {
        "startLine": 94,
        "startChar": 14,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "72c3511c046216f0d32a3c7cb1e7df7d30a74704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2142a918_95942ebd",
        "filename": "src/chromiumos/tast/local/bundles/cros/ui/chrome_pip_rounded_corners_underlay.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1319142
      },
      "writtenOn": "2021-06-21T17:15:56Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "411c60b3_ce3571d4",
      "range": {
        "startLine": 94,
        "startChar": 14,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "72c3511c046216f0d32a3c7cb1e7df7d30a74704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}