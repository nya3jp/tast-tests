{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3f00cc12_e1ec088f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-12-28T05:13:24Z",
      "side": 1,
      "message": "Please make sure camera.CCA* passes before/after applying crrev.com/c/2596588. Thanks.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 42
      },
      "revId": "76d67a9025beec3981576bb52056391559eaa65d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "668abb5b_520b2343",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1290370
      },
      "writtenOn": "2020-12-28T05:13:24Z",
      "side": 1,
      "message": "defer +2 to Tast owners.",
      "revId": "76d67a9025beec3981576bb52056391559eaa65d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9556479_c543440b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-01-06T08:09:47Z",
      "side": 1,
      "message": "Defer to Shik with comments.",
      "revId": "76d67a9025beec3981576bb52056391559eaa65d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "410d5e9a_c7ae36db",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 5
      },
      "lineNbr": 604,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-12-29T16:30:00Z",
      "side": 1,
      "message": "Hmm... IIUC, the fallback needs to be triggered when getState at L601 fails?\nWhat will be returned if new state is not available?",
      "revId": "76d67a9025beec3981576bb52056391559eaa65d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a65010d3_e53d7c62",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 5
      },
      "lineNbr": 604,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-12-30T00:22:30Z",
      "side": 1,
      "message": "In CCA\u0027s codebase the |getState| value of non-existing state will always be false.\nSo, to adapt both new and old state in the test, we will need to judge if one of the new or old state are flagged",
      "parentUuid": "410d5e9a_c7ae36db",
      "revId": "76d67a9025beec3981576bb52056391559eaa65d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0d62081_43bd330d",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 5
      },
      "lineNbr": 609,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2020-12-29T16:30:00Z",
      "side": 1,
      "message": "nit/optional: If both new state name and old state name are available, old one would win.\nI think new one is expected to be used?",
      "revId": "76d67a9025beec3981576bb52056391559eaa65d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac865f36_c0ecb705",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 5
      },
      "lineNbr": 609,
      "author": {
        "id": 1271173
      },
      "writtenOn": "2020-12-30T00:22:30Z",
      "side": 1,
      "message": "More specifically:\nBefore migration - Only old state name will be available, all new state will always be false.\nAfter migration - Only new state name will be available, all old state will always be false.",
      "parentUuid": "d0d62081_43bd330d",
      "revId": "76d67a9025beec3981576bb52056391559eaa65d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c01d225b_877ae290",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 5
      },
      "lineNbr": 609,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-01-06T08:09:47Z",
      "side": 1,
      "message": "Ok, thanks for explanation. Could you clarify in the comment? E.g.\n\nDuring the migration, it is necessary to check both old and new state names. If old state name is available, all new state are always false. If new state name is available, all old state are always false. Thus, combining obtained two values with || is what we need here.",
      "parentUuid": "ac865f36_c0ecb705",
      "revId": "76d67a9025beec3981576bb52056391559eaa65d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48e3b6d0_315dde59",
        "filename": "src/chromiumos/tast/local/bundles/cros/camera/cca/cca.go",
        "patchSetId": 5
      },
      "lineNbr": 1153,
      "author": {
        "id": 1115919
      },
      "writtenOn": "2021-01-06T08:09:47Z",
      "side": 1,
      "message": "optional: I\u0027d recommend to align this with the logic in GetState().\n\nvar getState string\nif lState, hasLegacy :\u003d ...; hasLegacy {\n  getState \u003d fmt.Sprintf(\"Tast.getState(%q) || Tast.getState(%q)\", state, lState)\n} else {\n  getState \u003d fmt.Sprintf(\"Tast.getState(%q)\", state)\n}\ncode :\u003d fmt.Sprintf(\"%s \u003d\u003d\u003d %t\", getState, active)\n...",
      "range": {
        "startLine": 1145,
        "startChar": 1,
        "endLine": 1153,
        "endChar": 2
      },
      "revId": "76d67a9025beec3981576bb52056391559eaa65d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}