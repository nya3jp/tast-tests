{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c87044bd_cc173d16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-08-26T15:02:15Z",
      "side": 1,
      "message": "There is one failure on the test related to VM \npolicy.VirtualMachinesAllowed  [ FAIL ] unset: Crostini is installing and it should not be: node appeared when it should not\n\nbut I also see it on Tastboard.",
      "revId": "265874de7f77ec7a9eddefb014a24968b5fb5a21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e79345c_a6b5f197",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 405,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-08-27T08:28:00Z",
      "side": 1,
      "message": "nit: We don\u0027t have logs for the function in this package.\nI think it should be all or none.",
      "range": {
        "startLine": 405,
        "startChar": 2,
        "endLine": 405,
        "endChar": 82
      },
      "revId": "265874de7f77ec7a9eddefb014a24968b5fb5a21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d19db495_a0e23571",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-08-27T08:28:00Z",
      "side": 1,
      "message": "As you are using a PollBreak(), and you expect to Poll until the end of the duration, you have a race condition.\nPlease check the example code in the first answer at https://groups.google.com/a/google.com/g/tast-reviewers/c/sGxqggEGVAg/\nand use that approach instead.",
      "range": {
        "startLine": 406,
        "startChar": 23,
        "endLine": 406,
        "endChar": 27
      },
      "revId": "265874de7f77ec7a9eddefb014a24968b5fb5a21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2150b377_a4fc875a",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1398801
      },
      "writtenOn": "2021-08-26T23:15:29Z",
      "side": 1,
      "message": "I think this might cause flakiness because it sometime takes time for an item to disappear. E.g, it takes an item 1 second to disappear, then the first round of poll would fail because it is still there.\nWe may have two ways to address this:\n1. Still use the current code for EnsureGoneFor, but document and ask the callers to call WaitUntilGone first.\n2. Change implementation for EnsureGoneFor to call WaitUntilGone first then make sure no item found in the rest of time. Then we might need to change the name from EnsureGoneFor to WaitAndEnsureGoneFor. It would be a bit tricky how to split the time for WaitUntilGone and the rest.\n\nWDYT?",
      "range": {
        "startLine": 409,
        "startChar": 5,
        "endLine": 409,
        "endChar": 61
      },
      "revId": "265874de7f77ec7a9eddefb014a24968b5fb5a21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b156a45_6a4cdb71",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1496803
      },
      "writtenOn": "2021-08-27T01:43:28Z",
      "side": 1,
      "message": "Thanks, I personally like option 1 better. It is more aligned with this API semantics, in that it does not imply it is watching for initial state transition. With `combine` chaining, I feel that this option provides more granular control without much implementation overhead.",
      "parentUuid": "2150b377_a4fc875a",
      "range": {
        "startLine": 409,
        "startChar": 5,
        "endLine": 409,
        "endChar": 61
      },
      "revId": "265874de7f77ec7a9eddefb014a24968b5fb5a21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "333f9b0a_f8889875",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1398801
      },
      "writtenOn": "2021-08-27T02:03:09Z",
      "side": 1,
      "message": "sgtm.",
      "parentUuid": "8b156a45_6a4cdb71",
      "range": {
        "startLine": 409,
        "startChar": 5,
        "endLine": 409,
        "endChar": 61
      },
      "revId": "265874de7f77ec7a9eddefb014a24968b5fb5a21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3876f524_1cac8fee",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1401350
      },
      "writtenOn": "2021-08-27T08:28:00Z",
      "side": 1,
      "message": "+1 for option 1.",
      "parentUuid": "333f9b0a_f8889875",
      "range": {
        "startLine": 409,
        "startChar": 5,
        "endLine": 409,
        "endChar": 61
      },
      "revId": "265874de7f77ec7a9eddefb014a24968b5fb5a21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50ffdcec_19e3fcc0",
        "filename": "src/chromiumos/tast/local/chrome/uiauto/automation.go",
        "patchSetId": 3
      },
      "lineNbr": 420,
      "author": {
        "id": 1459973
      },
      "writtenOn": "2021-08-26T15:34:06Z",
      "side": 1,
      "message": "WDYT if nil would be returned only under condition errors.Is(pollError, ErrNodeNotFound) ?",
      "revId": "265874de7f77ec7a9eddefb014a24968b5fb5a21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}