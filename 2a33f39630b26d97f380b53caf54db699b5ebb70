{
  "comments": [
    {
      "key": {
        "uuid": "de6ea7d0_4667c1e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-23T03:19:28Z",
      "side": 1,
      "message": "mostly LGTM, but still some discussion in the gRPC part.",
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a59c97bd_f2227895",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_service.go",
        "patchSetId": 5
      },
      "lineNbr": 164,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-23T01:33:42Z",
      "side": 1,
      "message": "How about passing start time from the caller side? So for s.connectService() we can mark start time just before service.Connect() is called. And for s.WaitForConnection(), we can mark start time when calling waitForConnection().",
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9310792_e1b6f6e9",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_service.go",
        "patchSetId": 5
      },
      "lineNbr": 164,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-07-23T05:23:10Z",
      "side": 1,
      "message": "changed it back to the original implementation. look at the comment below.",
      "parentUuid": "a59c97bd_f2227895",
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdc97ae1_f4d184f0",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_service.go",
        "patchSetId": 5
      },
      "lineNbr": 166,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-23T03:19:28Z",
      "side": 1,
      "message": "Oops..., I forgot that PropertyWatcher is created before Connect...\n\nWe\u0027ll have to get the current state and skip the two ExpectIn accordingly. But it might not be a good practice for the Connect case. (which should just start Watcher before the state change trigger)\n\nGiven the situation, I wonder if the original one might be better/simpler as WaitForConnection only needs IsConnected\u003dtrue. Dean@, WDYT?\n\nAlso, in parallel, I think chharry@ is looking at gRPC stream API which might make waiting signals in remote tests easier. (e.g. start PropertyWatch in testbody instead of in gRPC)",
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "696f532e_915e6239",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_service.go",
        "patchSetId": 5
      },
      "lineNbr": 166,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-23T03:55:29Z",
      "side": 1,
      "message": "I think we can still share the logic. How about:\n\n// waitForConnection optionally connects to a WiFi service and wait until the service is connected.\nwaitForConnection(ctx, service, service, needConn) {\n  pw, err :\u003d ...\n  start :\u003d time.Now()\n  if needConn {\n    service.Connect(ctx)\n  }\n  // wait for connected state...\n}",
      "parentUuid": "fdc97ae1_f4d184f0",
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6450fbc3_12deee82",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_service.go",
        "patchSetId": 5
      },
      "lineNbr": 166,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-23T04:14:13Z",
      "side": 1,
      "message": "For the usage in WaitForConnection, we\u0027ll still have to check the initial state as the trigger is in testbody (deconfig the first AP). But it is not needed for Connect case if we spawn watcher before Connect.",
      "parentUuid": "696f532e_915e6239",
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cbc73f2_d5eb6e66",
        "filename": "src/chromiumos/tast/local/bundles/cros/network/wifi_service.go",
        "patchSetId": 5
      },
      "lineNbr": 166,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-07-23T05:23:10Z",
      "side": 1,
      "message": "I think for now the original implementation is better, Because the WaitForConnection will always have the trigger in testbody and in that case we should check the current state before pw.Expect.",
      "parentUuid": "6450fbc3_12deee82",
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc5bad2b_a5abe617",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam.go",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-23T01:33:42Z",
      "side": 1,
      "message": "We may name it \"ssid\" as both ap1 and ap2 uses the same SSID.",
      "range": {
        "startLine": 89,
        "startChar": 1,
        "endLine": 89,
        "endChar": 8
      },
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8067bc1_e9ea8c0b",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam.go",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-07-23T05:23:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc5bad2b_a5abe617",
      "range": {
        "startLine": 89,
        "startChar": 1,
        "endLine": 89,
        "endChar": 8
      },
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7eea8047_2094ae65",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam.go",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1371981
      },
      "writtenOn": "2020-07-23T03:19:28Z",
      "side": 1,
      "message": "nit: it\u0027s not a problem now as we only use param.apOpts2 once. But it might be safer to allocate a new slice like:\n\n  ops :\u003d append([]hostapd.Option{hostapd.SSID(ssid)}, param.apOpts2...)\n\nor\n\n  ops :\u003d append([]hostapd.Option(nil), param.apOpts2...)\n  ops \u003d append(ops, hostapd.SSID(ap1SSID))\n\nin case apOpts2 somehow overwrites SSID setting.",
      "range": {
        "startLine": 122,
        "startChar": 15,
        "endLine": 122,
        "endChar": 51
      },
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beb95f0b_b80aa317",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam.go",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2020-07-23T03:55:29Z",
      "side": 1,
      "message": "Golang is tricy... Let\u0027s use the first approach.",
      "parentUuid": "7eea8047_2094ae65",
      "range": {
        "startLine": 122,
        "startChar": 15,
        "endLine": 122,
        "endChar": 51
      },
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c25b3530_c35994d3",
        "filename": "src/chromiumos/tast/remote/bundles/cros/wifi/roam.go",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1373754
      },
      "writtenOn": "2020-07-23T05:23:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "beb95f0b_b80aa317",
      "range": {
        "startLine": 122,
        "startChar": 15,
        "endLine": 122,
        "endChar": 51
      },
      "revId": "2a33f39630b26d97f380b53caf54db699b5ebb70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}