{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6ce977c5_aee0707a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-03-09T12:13:20Z",
      "side": 1,
      "message": "nit: from",
      "range": {
        "startLine": 9,
        "startChar": 46,
        "endLine": 9,
        "endChar": 50
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d55527af_f88e283c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1293547
      },
      "writtenOn": "2021-03-09T13:12:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ce977c5_aee0707a",
      "range": {
        "startLine": 9,
        "startChar": 46,
        "endLine": 9,
        "endChar": 50
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6fd3393_1f40027b",
        "filename": "src/chromiumos/tast/common/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-03-09T12:13:20Z",
      "side": 1,
      "message": "nit: maybe rename to CmdExitError to be more precise",
      "range": {
        "startLine": 23,
        "startChar": 5,
        "endLine": 23,
        "endChar": 14
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9055c128_ca8e57cf",
        "filename": "src/chromiumos/tast/common/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1293547
      },
      "writtenOn": "2021-03-09T13:12:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6fd3393_1f40027b",
      "range": {
        "startLine": 23,
        "startChar": 5,
        "endLine": 23,
        "endChar": 14
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f14b42d_82e67122",
        "filename": "src/chromiumos/tast/local/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-03-09T12:13:20Z",
      "side": 1,
      "message": "there is no need to return error here\n\nsame in other 3 New* functions",
      "range": {
        "startLine": 28,
        "startChar": 37,
        "endLine": 28,
        "endChar": 43
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7af95076_3a9ad186",
        "filename": "src/chromiumos/tast/local/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1293547
      },
      "writtenOn": "2021-03-09T13:12:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f14b42d_82e67122",
      "range": {
        "startLine": 28,
        "startChar": 37,
        "endLine": 28,
        "endChar": 43
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4380cce_bd03bde2",
        "filename": "src/chromiumos/tast/local/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-03-09T12:13:20Z",
      "side": 1,
      "message": "Nya, do you think we should check whether err is nil first? Don\u0027t have strong opinion here.\n\n\nI think that it\u0027s better to be on the safe side and check it, because \"err\" might have type *exec.ExitError, but still be nil. Check playground:\nhttps://play.golang.org/p/5dmxwcnCQkn\n\n\nSo maybe we can just extend condition, i.e.:\nok \u0026\u0026 e !\u003d nil \u0026\u0026 e.Exited()",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba90754f_b47dcbf3",
        "filename": "src/chromiumos/tast/local/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-03-10T10:25:59Z",
      "side": 1,
      "message": "As long as the interface value has *exec.ExitError type, we don\u0027t need to (or rather we should not) check if it is nil. Go allows calling methods with a nil receiver, so authors may intentionally return a typed nil value.",
      "parentUuid": "e4380cce_bd03bde2",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc433f7_69b8b601",
        "filename": "src/chromiumos/tast/local/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-03-10T11:06:45Z",
      "side": 1,
      "message": "ack.\n\nBut in case if err has type *exec.ExitError and is nil, won\u0027t e.Exited() panic because e is also nil?\n\nExited() uses receiver fields:\nhttps://golang.org/src/os/exec.go?s\u003d4945:4981#L139",
      "parentUuid": "ba90754f_b47dcbf3",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e003865_a6100f6f",
        "filename": "src/chromiumos/tast/local/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2021-03-10T12:13:14Z",
      "side": 1,
      "message": "Right, but it\u0027s an undocumented internal detail of exec.ExitError, which might change in the future.",
      "parentUuid": "5dc433f7_69b8b601",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c61c5c7d_f80fb1be",
        "filename": "src/chromiumos/tast/local/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1306673
      },
      "writtenOn": "2021-03-09T12:13:20Z",
      "side": 1,
      "message": "Maybe it makes sense to add exit code to the error message:\n\n\"failed %q command with error code %d\", cmd, e.ExitCode()",
      "range": {
        "startLine": 45,
        "startChar": 22,
        "endLine": 45,
        "endChar": 33
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f8fc956_016a7f7f",
        "filename": "src/chromiumos/tast/local/hwsec/cmd_runner.go",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1293547
      },
      "writtenOn": "2021-03-09T13:12:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c61c5c7d_f80fb1be",
      "range": {
        "startLine": 45,
        "startChar": 22,
        "endLine": 45,
        "endChar": 33
      },
      "revId": "83cf075d1bcff8f4e4654f25d4bc466a02947965",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}